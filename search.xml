<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/07/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Aria2使用(实现百度网盘满速下载)</title>
    <url>/2020/03/03/%E5%B7%A5%E5%85%B7/Aria2%20%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p>引用于官网(仅作于推广,如有侵权,请联系本人以删除)</p>
</blockquote>
<p>aria2是一个<strong>轻量级的</strong>多协议和多源命令行 <strong>下载实用程序</strong>。它支持<strong>HTTP / HTTPS</strong>，<strong>FTP</strong>，<strong>SFTP</strong>， <strong>BitTorrent</strong>和<strong>Metalink</strong>。aria2可以通过内置的 <strong>JSON-RPC</strong>和<strong>XML-RPC</strong>接口进行操作。</p>
<span id="more"></span>

<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ol>
<li>首先使用在线解析获取直链下载链接</li>
<li>然后下载Aria2 ,使用Aria2下载直链链接内容</li>
</ol>
<h1 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h1><h2 id="1-KinhDown"><a href="#1-KinhDown" class="headerlink" title="1. KinhDown"></a>1. KinhDown</h2><h3 id="KinhDown（加速！永无止境）"><a href="#KinhDown（加速！永无止境）" class="headerlink" title="KinhDown（加速！永无止境）"></a>KinhDown（加速！永无止境）</h3><p>官网地址:<a href="https://kinhdown.kinh.cc/">https://kinhdown.kinh.cc/</a></p>
<h3 id="在线解析"><a href="#在线解析" class="headerlink" title="在线解析"></a>在线解析</h3><p>KD官方：<a href="https://pan.kdbaidu.com/">https://pan.kdbaidu.com</a></p>
<p>KD官方：<a href="https://yun.kdbaidu.com/">https://yun.kdbaidu.com</a></p>
<p>KD官方：<a href="https://www.kdbaidu.com/">https://www.kdbaidu.com</a></p>
<h2 id="2-Aria2"><a href="#2-Aria2" class="headerlink" title="2. Aria2"></a>2. Aria2</h2><p>下载<a href="https://github.com/aria2/aria2/releases/tag/release-1.35.0">版本1.35.0</a>。您可以在此处下载OS X，Windows和Android的源代码发行版和二进制文件。</p>
<p><a href="http://sourceforge.net/projects/aria2/files/stable/">此处</a>提供低于1.19.1的旧版本 。</p>
<h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><ul>
<li><strong>多连接下载</strong>。aria2可以从多个来源/协议下载文件，并尝试利用最大下载带宽。真正加快了您的下载体验。</li>
<li><strong>轻巧</strong>。aria2不需要太多的内存和CPU时间。关闭磁盘缓存后，物理内存使用量通常为4MiB（正常HTTP / FTP下载）到9MiB（BitTorrent下载）。下载速度为2.8MiB / sec的BitTorrent中的CPU使用率约为6％。</li>
<li><strong>功能齐全的BitTorrent客户端</strong>。您需要在BitTorrent客户端中使用的所有功能均可用：DHT，PEX，加密，磁铁URI，播种，选择性下载，本地对等发现和UDP跟踪器。</li>
<li><strong>Metalink已启用</strong>。aria2支持<a href="http://tools.ietf.org/html/rfc5854">Metalink下载描述格式</a> （又名Metalink v4），Metalink版本3和 <a href="http://tools.ietf.org/html/rfc6249">Metalink / HTTP</a>。Metalink提供文件验证，HTTP / FTP / SFTP / BitTorrent集成以及语言，位置，操作系统等的各种配置。</li>
<li><strong>远程控制</strong>。aria2支持RPC接口来控制aria2进程。支持的接口是JSON-RPC（通过HTTP和WebSocket）和XML-RPC。</li>
</ul>
<h3 id="使用范例"><a href="#使用范例" class="headerlink" title="使用范例"></a>使用范例</h3><p>命令行会吓到你吗？不，aria2真的很容易使用！</p>
<p>从WEB下载：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`$ aria2c http://example.org/mylinux.iso`</span><br></pre></td></tr></table></figure>

<p>从2个来源下载：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`$ aria2c http://a/f.iso ftp://b/f.iso`</span><br></pre></td></tr></table></figure>

<p>每个主机使用2个连接下载：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`$ aria2c -x2 http://a/f.iso`</span><br></pre></td></tr></table></figure>

<p>BitTorrent：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`$ aria2c http://example.org/mylinux.torrent`</span><br></pre></td></tr></table></figure>

<p>BitTorrent磁铁URI：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`$ aria2c &#x27;magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C&#x27;`</span><br></pre></td></tr></table></figure>

<p>Metalink：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`$ aria2c http://example.org/mylinux.metalink`</span><br></pre></td></tr></table></figure>

<p>下载在文本文件中找到的URI：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`$ aria2c -i uris.txt`</span><br></pre></td></tr></table></figure>

<h3 id="相关项目"><a href="#相关项目" class="headerlink" title="相关项目"></a>相关项目</h3><ul>
<li><a href="https://github.com/tatsuhiro-t/apt-metalink"><strong>apt-metalink</strong></a>：Debian / Ubuntu的更快软件包下载</li>
<li><a href="http://xyne.archlinux.ca/projects/powerpill/"><strong>powerpill</strong></a>：Pacman包装器，用于并行和分段下载。</li>
<li><a href="http://xyne.archlinux.ca/projects/python3-aria2jsonrpc/"><strong>python3-aria2jsonrpc</strong></a>：围绕Aria2的JSON RPC接口的包装器类。</li>
<li><a href="https://github.com/sonnyp/aria2.js"><strong>aria2.js</strong></a>：用于aria2 RPC的JavaScript库（浏览器和Node.js）和cli</li>
</ul>
<h3 id="UI前端"><a href="#UI前端" class="headerlink" title="UI前端"></a>UI前端</h3><ul>
<li><a href="https://github.com/ziahamza/webui-aria2"><strong>webui-aria2</strong></a>：用于aria2的Web浏览器界面（2012 GSOC项目）</li>
<li><a href="http://uget.visuex.com/"><strong>uGet</strong></a>：Linux下载管理器</li>
</ul>
<h3 id="执照"><a href="#执照" class="headerlink" title="执照"></a>执照</h3><p>该程序是免费软件；您可以根据自由软件基金会发布的GNU通用公共许可证的条款重新分发和/或修改它；许可的版本2，或（由您选择）任何更高的版本。</p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>流媒体服务器搭建</title>
    <url>/2020/12/05/%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/nfinx-remp%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="流媒体服务器搭建"><a href="#流媒体服务器搭建" class="headerlink" title="流媒体服务器搭建"></a>流媒体服务器搭建</h1><span id="more"></span>

<h3 id="一、准备需要的模块及工具（nginx-rtmp-module，openssl和git）"><a href="#一、准备需要的模块及工具（nginx-rtmp-module，openssl和git）" class="headerlink" title="一、准备需要的模块及工具（nginx-rtmp-module，openssl和git）"></a>一、准备需要的模块及工具（nginx-rtmp-module，openssl和git）</h3><p>1.使用yum安装git</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install git</span><br></pre></td></tr></table></figure>

<p>2.下载nginx-rtmp-module</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 通过git clone 的方式下载到服务器上</span><br><span class="line">cd /usr/local/src</span><br><span class="line">git clone https://github.com/arut/nginx-rtmp-module.git</span><br></pre></td></tr></table></figure>

<p>3.yum 安装 openssl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install openssl openssl-devel</span><br></pre></td></tr></table></figure>

<p>4.yum 安装 gcc环境</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install gcc glibc glibc-devel make nasm pkgconfig lib-devel openssl-devel expat-devel gettext-devel libtool mhash.x86_64 perl-Digest-SHA1.x86_64</span><br></pre></td></tr></table></figure>

<h3 id="二、安装Nginx服务器"><a href="#二、安装Nginx服务器" class="headerlink" title="二、安装Nginx服务器"></a>二、安装Nginx服务器</h3><p>1.下载Nginx解压，并添加rtmp和openssl支持</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//这里我安装的是 nginx-1.10.3 版本</span><br><span class="line">[root~]# wget http://nginx.org/download/nginx-1.10.3.tar.gz </span><br><span class="line">[root~]# tar -zxvf nginx-1.10.3.tar.gz </span><br><span class="line">[root~]# cd nginx-1.10.3</span><br><span class="line">//添加rtmp和openssl支持</span><br><span class="line">[root~]# ./configure --add-module=/usr/local/src/nginx-rtmp-module-master --with-http_ssl_module</span><br><span class="line">[root~]# make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<p>2.如果已经安装过Nginx，只需要找到Nginx源码目录添加rtmp的支持即可。（如果执行第1项，此项可忽略）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.查看当前安装的Nginx版本</span><br><span class="line">/usr/local/nginx/sbin/nginx -v</span><br><span class="line">查询结果：nginx version: nginx/1.10.3</span><br><span class="line"></span><br><span class="line">2.再使用find命令查找其位置</span><br><span class="line">find / -name nginx-1.10.3</span><br><span class="line">查询结果：/root/nginx-1.10.3</span><br><span class="line"></span><br><span class="line">3.cd到查询到的源目录</span><br><span class="line">cd  /root/nginx-1.10.3</span><br><span class="line"></span><br><span class="line">4.添加rtmp的支持(如果看到一个绿色的 configure 文件就说明查找对了)</span><br><span class="line">./configure --add-module=/替换为自己的安装路径(path/to)/nginx-rtmp-module</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>

<p>3.启动nignx</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>

<p>这样nginx和rtmp模块就安装完成了，此时在浏览器中打开服务器80端口,正常访问则安装成功</p>
<p>如果终端上出现了：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nginx: [emerg] bind() to 0.0.0.0:8080 failed (48: Address already in use)</span><br><span class="line">nginx: [emerg] bind() to 0.0.0.0:8080 failed (48: Address already in use)</span><br><span class="line">nginx: [emerg] bind() to 0.0.0.0:8080 failed (48: Address already in use)</span><br><span class="line">nginx: [emerg] bind() to 0.0.0.0:8080 failed (48: Address already in use)</span><br><span class="line">nginx: [emerg] bind() to 0.0.0.0:8080 failed (48: Address already in use)</span><br><span class="line">nginx: [emerg] still could not bind()</span><br></pre></td></tr></table></figure>

<p>则表示8080端口被占用了，查看端口PID</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsof -i tcp:8080</span><br></pre></td></tr></table></figure>

<p>根据端口PID, kill掉(这儿的9603换成你自己8080端口的PID)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kill 9603</span><br></pre></td></tr></table></figure>

<p>然后重新执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>

<h3 id="三、修改Nginx的配置文件nginx-conf"><a href="#三、修改Nginx的配置文件nginx-conf" class="headerlink" title="三、修改Nginx的配置文件nginx.conf"></a>三、修改Nginx的配置文件nginx.conf</h3><p>使用vi命令打开 nginx.conf，输入 i 进入编辑状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>

<p>直接滚到最后一行, 在最后一个}(即最后的空白处, 没有任何{})后面添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rtmp &#123;</span><br><span class="line">　　server &#123;</span><br><span class="line">　　listen 1935;</span><br><span class="line">　　chunk_size 4000;</span><br><span class="line">　　application mylive &#123;</span><br><span class="line">　　　　live on;</span><br><span class="line">　　　　record all;</span><br><span class="line">　　　　record_path /home/live_record;</span><br><span class="line">　　　　record_max_size 200M;</span><br><span class="line">　　　　hls on;</span><br><span class="line">　　　　hls_path /home/hls;</span><br><span class="line">　　　　hls_fragment 1s;</span><br><span class="line">　　　　hls_playlist_length 5;</span><br><span class="line">　　　　allow play all;</span><br><span class="line">　　&#125;</span><br><span class="line">　　application live&#123;</span><br><span class="line">　　　　live on;</span><br><span class="line">　　&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>rtmp参数详解:<a href="https://www.cnblogs.com/lidabo/p/7099501.html">https://www.cnblogs.com/lidabo/p/7099501.html</a></p>
<p>最后一步保存退出，并重启nginx</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure>

<h3 id="四、安装FFmpeg"><a href="#四、安装FFmpeg" class="headerlink" title="四、安装FFmpeg"></a>四、安装FFmpeg</h3><p>0.下载yasm</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install yasm</span><br></pre></td></tr></table></figure>



<p>1.下载FFmpeg—-下载4版本以前,否则不支持x264</p>
<p>2.解压源码包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /usr/local/ffmpeg&lt;br&gt;tar xvJf ffmpeg-4.1.tar.xz</span><br></pre></td></tr></table></figure>

<p>3.切换到ffmpeg目录、安装gcc编译器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`cd ffmpeg`</span><br></pre></td></tr></table></figure>

<p>4.输入如下命令/usr/local/ffmpeg为自己指定的安装目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`./configure --enable-shared --prefix=/usr/local/ffmpeg  --enable-gpl --enable-libx264 </span><br></pre></td></tr></table></figure>

<p>6.执行make（非常非常久…….）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`make`</span><br></pre></td></tr></table></figure>

<p>7.执行make install（安装）</p>
<p>8.修改文件/etc/ld.so.conf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`vim /etc/ld.so.conf`</span><br></pre></td></tr></table></figure>

<p>使修改生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入   ldconfig</span><br></pre></td></tr></table></figure>

<p>9.查看版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`/usr/local/ffmpeg/ffmpeg-4.1/ffmpeg -version`</span><br></pre></td></tr></table></figure>

<p>10.配置环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`# vim /etc/profile`</span><br></pre></td></tr></table></figure>

<p>在最后PATH添加环境变量：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`#set ffmpeg environment``PATH=$PATH:/usr/local/ffmpeg/bin``export PATH`</span><br></pre></td></tr></table></figure>

<p>使配置生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile #使配置生效</span><br></pre></td></tr></table></figure>

<p>11.查看环境变量是否配置成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`ffmpeg -version`</span><br></pre></td></tr></table></figure>

<p>至此安装成功</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>流媒体</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle - 简单查询</title>
    <url>/2021/01/09/%E6%95%B0%E6%8D%AE%E5%BA%93/Oracle%20-%20%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<p>docker使用教程</p>
<span id="more"></span>

<ol>
<li>简单查询</li>
<li>1 (书写顺序)<br>  -2○○SELECT [DISTINCT]  *|列名称[别名]，………数学计算  DISTINCT:消除重复数据行的显示<br>  -1○○FROM 数据表 [别名];<br>  常量的查询<pre><code>  ---如果是字符串，字符串一定要使用  ’  (单引号 )
  ---如果是数字，则可以直接编写
      ---常量与列内容的组合,可以使用”||”进行连接
</code></pre>
限定查询<br>  -4○○SELECT [DISTINCT]  *|列名称[别名]，………数学计算<br>  —4.1○FROM 数据表 [别名]<br>  —4.2○WHILE [限定条件(s)]<br>（关系运算、AND、OR、NOT、BETWEEN（最小值）AND（最大值）、IN、NOT IN、LIKE(模糊查询 _、%)、IS NULL、IS NOT NULL）<br>  -3○○GROUP BY 分组字段，分组字段，<br>  -5○○ORDER BY 排序字段[ASC | DESC], 排序字段[ASC | DESC]，……        </li>
</ol>
<ol start="2">
<li><p>单行函数<br> -返回值 函数名称（参数）</p>
</li>
<li><p>1 字符串函数 </p>
<pre><code>      字符串 UPPER(列|字符串)：    将传入的字符串变为大学字母形式
      字符串 LOWER(列|字符串)：    将传入的字符串变为小写字母形式
      字符串 INITCAP(列|字符串)：   开头首字母大写，其他字母全部变为小写
      数字   LENGTH(列|字符串)：   取得制定字符串长度
      数字   COUNT(列)：           取得此列数据个数
      字符串 SUBSTR(开始索引,[长度])：进行字符串的截取
      字符串 REPLACE(列|字符串，旧内容，新内容)：将指定字符串的数据以新数据替换旧数据
  2.2 数值函数
      数字 ROUND(列|数字[,小数位])：实现数据的四舍五入，如果要保留指定位数，可以设置小数位
      数字 TRUNC(列|数字[，小数位])：实现数据的截取，即不进位
      数字 MOD(列|数字，列|数字)：求模，计算余数
  2.3 日期函数
      SYSDATE（SYSTIMESTAMP）：日期时间（时间戳）
      日期 + 数字 = 日期（若干天后的日期）
      日期 - 数字 = 日期（若干天前的日期）
      日期 - 日期 = 数字（天数）
      日期 ADD_MONTHS(列|日期，月数)：在指定日期上增加月数后的日期
      数字 MONTHS_BETWEEN(列|日期，列|日期)：返回两个日期之间的月数
      日期 LAST_DAY(列|日期)：取得指定日期所在月的最后一天
      日期 NEXT_DAY(列|日期，星期X)：返回下一个指定的一周时间数对应的日期
  2.4 转换函数
      字符串 TO_CHAR(列|数字，转换格式)：将日期或数字格式转化为指定结构得而字符串
      日期 TO_DATE(列|字符串，转换格式)：按照指定格式编写字符串后将其变为日期型数据
      数字 TO_NUMBER(列|字符串)：将字符串变为数字
      日期：年（yy）、月（mm）、日（dd）
      时间：时（hh、hh24）、分（mi）、秒（ss）
      数字：任意数字（9）、本地货币符号（L）
</code></pre>
</li>
<li><p>多表查询<br> SELECT * FROM EMP,DEPT WHERE EMP.DE    PTNO=DEPT.DEPTNO;<br> 表的连接</p>
<pre><code> 内连接（等值连接）所有满足连见的数据都会被显示出来
 外连接（左外连接、右外连接、全外连接）控制左表与右表的数据是否全部显示
 （+）
</code></pre>
<p>数据集合操作<br> UNION、UNION ALL、INTERSECT、MINUS  实现查询语句的连接</p>
</li>
<li><p>统计函数<br> 统计个数 COUNT(* | [DISTINCT]字段)<br> MAX(字段)<br> MIN(字段)<br> SUM(数字字段)<br> AVG(数字字段)</p>
</li>
<li><p>分组统计查询<br>  GROUP BY<br> 限制一：在没有编写GROUP BY子句的时候（全表为一组），那么SELECT函数中只允许出现统计函数，不允许出现其他的任何字段<br> 限制二：在使用GROUP BY子句分组时候，SELECT子句中只允许出现分组字段与统计函数    ，其他字段不允许出现    </p>
<pre><code> 限制三：统计函数允许嵌套，但是嵌套后的统计查询中，SELECT子句里面不允许再出现任何的字段·，包括分组字段，只能够使用嵌套的统计函数  
</code></pre>
</li>
</ol>
]]></content>
      <categories>
        <category>oracle</category>
      </categories>
      <tags>
        <tag>oracle</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>mycat使用</title>
    <url>/2021/01/01/%E6%95%B0%E6%8D%AE%E5%BA%93/mycat/</url>
    <content><![CDATA[<p>mycat使用教程</p>
<span id="more"></span>

<h2 id="安装mycat"><a href="#安装mycat" class="headerlink" title="安装mycat"></a>安装mycat</h2><p>解压及运行</p>
<h2 id="配置mycat"><a href="#配置mycat" class="headerlink" title="配置mycat"></a>配置mycat</h2><p>①schema.xml 定义逻辑库，表、分片节点等内容<br>②rule.xml：定义 分片 规则<br>③server.xml 定义用户以及系统相关变量，如端口等</p>
<h4 id="修改server-xml"><a href="#修改server-xml" class="headerlink" title="修改server.xml"></a>修改server.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">name</span>=<span class="string">&quot;mycat&quot;</span> <span class="attr">defaultAccount</span>=<span class="string">&quot;true&quot;</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span>123456<span class="tag">&lt;/<span class="name">property</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;schemas&quot;</span>&gt;</span>TESTDB<span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h4 id="修改schema-xml"><a href="#修改schema-xml" class="headerlink" title="修改schema.xml"></a>修改schema.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mycat</span>:schema <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;schema.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:schema</span> <span class="attr">xmlns:mycat</span>=<span class="string">&quot;http://io.mycat/&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">&quot;TESTDB&quot;</span> <span class="attr">checkSQLschema</span>=<span class="string">&quot;false&quot;</span> <span class="attr">sqlMaxLimit</span>=<span class="string">&quot;100&quot;</span> <span class="attr">dataNode</span>=<span class="string">&quot;dn1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">schema</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">&quot;dn1&quot;</span> <span class="attr">dataHost</span>=<span class="string">&quot;host1&quot;</span> <span class="attr">database</span>=<span class="string">&quot;testdb&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host1&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">                          <span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span>  <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- can have multi write hosts --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM1&quot;</span> <span class="attr">url</span>=<span class="string">&quot;localhost:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                                   <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!-- can have multi read hosts --&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">readHost</span> <span class="attr">host</span>=<span class="string">&quot;hostS2&quot;</span> <span class="attr">url</span>=<span class="string">&quot;localhost:3316&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;123456&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:schema</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="启动程序"><a href="#启动程序" class="headerlink" title="启动程序"></a>启动程序</h4><p>①控制台启动 去 mycat/bin 目录下 执行 mycat console<br>②后台启动 ：去 mycat/bin 目录下 mycat start<br>为了能第一时间看 到启动日志 ，方便定位问题 ，我们选择 ① 控制台启动 。</p>
<h2 id="docker创建多个mysql容器"><a href="#docker创建多个mysql容器" class="headerlink" title="docker创建多个mysql容器"></a>docker创建多个mysql容器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -itd --name mysql-0 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -itd --name mysql-1 -p 3316:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -itd --name mysql-2 -p 3316:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -itd --name mysql-3 -p 3316:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br></pre></td></tr></table></figure>

<p><strong>命令</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -p 3306:3306 --name mysql -v /opt/docker_v/mysql/conf:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=123456 -d imageID</span><br></pre></td></tr></table></figure>

<p>命令说明：</p>
<ul>
<li><strong>-p 3306:3306：</strong>将容器的3306端口映射到主机的3306端口</li>
<li><strong>-v /opt/docker_v/mysql/conf:/etc/mysql/conf.d：</strong>将主机/opt/docker_v/mysql/conf目录挂载到容器的/etc/mysql/conf.d</li>
<li><strong>-e MYSQL_ROOT_PASSWORD=123456：</strong>初始化root用户的密码</li>
<li><strong>-d:</strong> 后台运行容器，并返回容器ID</li>
<li><strong>imageID:</strong> mysql镜像ID</li>
</ul>
<p> <strong>查看容器运行情况</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>

<h2 id="搭建一主一从"><a href="#搭建一主一从" class="headerlink" title="搭建一主一从"></a>搭建一主一从</h2><h4 id="1搭建-MySQL-数据库主从复制"><a href="#1搭建-MySQL-数据库主从复制" class="headerlink" title="1搭建 MySQL 数据库主从复制"></a>1搭建 MySQL 数据库主从复制</h4><p>1、 主机配置</p>
<p>修改mysql主机配置文件</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件：</span></span><br><span class="line"><span class="attr">vim</span> <span class="string">/etc/my.cnf</span></span><br><span class="line"><span class="comment"># 主服务器唯一 ID</span></span><br><span class="line"><span class="meta">server-id</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"># 启用二进制日志</span></span><br><span class="line"><span class="meta">log-bin</span>=<span class="string">mysql-bin</span></span><br><span class="line"><span class="comment"># 设置不要复制的数据库 可设置多个</span></span><br><span class="line"><span class="meta">binlog-ignore-db</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">binlog-ignore-db</span>=<span class="string">information_schema</span></span><br><span class="line"><span class="comment"># 设置需要复制的数据库</span></span><br><span class="line"><span class="meta">binlog-do-db</span>= <span class="string">需要复制的主数据库名字</span></span><br><span class="line"><span class="comment"># 设置 logbin 格式</span></span><br><span class="line"><span class="attr">binlog_format</span>=<span class="string">STATEMENT</span></span><br></pre></td></tr></table></figure>

<p>2、配置从机</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件：</span></span><br><span class="line"><span class="attr">vim</span> <span class="string">/etc/my.cnf</span></span><br><span class="line"><span class="comment"># 从服务器唯一 ID</span></span><br><span class="line"><span class="meta">server-id</span>=<span class="string">2</span></span><br><span class="line"><span class="comment"># 启用中继日志</span></span><br><span class="line"><span class="meta">relay-log</span>=<span class="string">mysql-relay</span></span><br></pre></td></tr></table></figure>

<p>3、主机、从机、都重启Mysql服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker restart XXXXXXXXX</span><br></pre></td></tr></table></figure>

<p>4、主机、从机、都关闭防火墙</p>
<p>5、在主机上建立账户并授权slave</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span><span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> REPLICATION SLAVE   <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><strong>扩展</strong></p>
<p>删除用户的话使用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop user &#x27;用户名&#x27;@&#x27;IP地址&#x27;;</span><br></pre></td></tr></table></figure>

<p>修改用户：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rename user &#x27;用户名&#x27;@&#x27;IP地址&#x27; to &#x27;新用户名&#x27;@&#x27;IP地址&#x27;;</span><br></pre></td></tr></table></figure>

<p>修改密码：</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set password for &#x27;用户名&#x27;@&#x27;IP地址&#x27; = Password(&#x27;新密码&#x27;);</span><br></pre></td></tr></table></figure>

<p>查看权限</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> grants <span class="keyword">for</span> <span class="string">&#x27;用户&#x27;</span>@<span class="string">&#x27;IP地址&#x27;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grant  权限 on 数据库.表 to   &#x27;用户&#x27;@&#x27;IP地址&#x27;;</span><br><span class="line"> </span><br><span class="line">//all privileges  除grant外的所有权限</span><br><span class="line">            select          仅查权限</span><br><span class="line">            select,insert   查和插入权限</span><br><span class="line">            ...</span><br><span class="line">            usage                   无访问权限</span><br><span class="line">            alter                   使用alter table</span><br><span class="line">            alter routine           使用alter procedure和drop procedure</span><br><span class="line">            create                  使用create table</span><br><span class="line">            create routine          使用create procedure</span><br><span class="line">            create temporary tables 使用create temporary tables</span><br><span class="line">            create user             使用create user、drop user、rename user和revoke  all privileges</span><br><span class="line">            create view             使用create view</span><br><span class="line">            delete                  使用delete</span><br><span class="line">            drop                    使用drop table</span><br><span class="line">            execute                 使用call和存储过程</span><br><span class="line">            file                    使用select into outfile 和 load data infile</span><br><span class="line">            grant option            使用grant 和 revoke</span><br><span class="line">            index                   使用index</span><br><span class="line">            insert                  使用insert</span><br><span class="line">            lock tables             使用lock table</span><br><span class="line">            process                 使用show full processlist</span><br><span class="line">            select                  使用select</span><br><span class="line">            show databases          使用show databases</span><br><span class="line">            show view               使用show view</span><br><span class="line">            update                  使用update</span><br><span class="line">            reload                  使用flush</span><br><span class="line">            shutdown                使用mysqladmin shutdown(关闭MySQL)</span><br><span class="line">            super                   ??使用change master、kill、logs、purge、master和set global。还允许mysqladmin????调试登陆</span><br><span class="line">            replication client      服务器位置的访问</span><br><span class="line">            replication slave       由复制从属使用</span><br><span class="line"> </span><br><span class="line">// 数据库名.*           数据库中的所有</span><br><span class="line">            数据库名.表          指定数据库中的某张表</span><br><span class="line">            数据库名.存储过程     指定数据库中的存储过程</span><br><span class="line">            *.*                所有数据库</span><br></pre></td></tr></table></figure>

<p>删除权限：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">revoke</span> 权限 <span class="keyword">on</span> 数据库.表 <span class="keyword">from</span> <span class="string">&#x27;用户&#x27;</span>@<span class="string">&#x27;IP地址&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>6、查询master的状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show master status;</span><br></pre></td></tr></table></figure>

<p>#记录下 File 和 Position 的值<br>#执行完此步骤后不要 再操作主服务器 M y SQL ，防止主服务器状态值变化</p>
<p>7、在从机上配置需要复制的主机</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">CHANGE MASTER <span class="keyword">TO</span> MASTER_HOST<span class="operator">=</span><span class="string">&#x27;192.168.127.100&#x27;</span>, </span><br><span class="line">MASTER_USER<span class="operator">=</span><span class="string">&#x27;slave&#x27;</span>, </span><br><span class="line">master_port <span class="operator">=</span> <span class="number">3306</span>,</span><br><span class="line">MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span>, </span><br><span class="line">MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;mysql-bin.000004&#x27;</span>,</span><br><span class="line">MASTER_LOG_POS<span class="operator">=</span><span class="number">154</span>;</span><br></pre></td></tr></table></figure>

<p>8、启动从服务器复制功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start slave;</span><br></pre></td></tr></table></figure>

<p>#查看从服务器状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show slave status\G;</span><br></pre></td></tr></table></figure>

<p>#下面两个参 数都是 Yes ，则说明主从配置成功<br>#Slave_IO_Running: Yes<br>#Slave_SQL_Running: Yes</p>
<p>9、如何停止从服务复制功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stop slave;</span><br></pre></td></tr></table></figure>

<p>如何重新配置主从</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stop slave;</span><br><span class="line">reset master;</span><br></pre></td></tr></table></figure>

<p><strong>2、修改 Mycat 的配置文件 schema.xml</strong> </p>
<p>修改<br>dataHost 的 balance属性，通过此属性配置读写分离的类型</p>
<p>负载均衡类型，目前的取值有4 种：</p>
<ul>
<li>balance=”0”, 不开启读写分离机制，所有读操作都发送到当前可用的 writeHost </li>
<li>balance=”1”，全部的 readHost 与 stand by writeHost 参与 select 语句的负载均衡，简单的说，当双主双从模式(M1-&gt;S1，M2-&gt;S2，并且 M1 与 M2 互为主备)，正常情况下，M2,S1,S2 都参与 select 语句的负载均衡。</li>
<li>balance=”2”，所有读操作都随机的在 writeHost、readhost 上分发。</li>
<li>balance=”3”，所有读请求随机的分发到 readhost 执行，writerHost 不负担读压力</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host1&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;2&quot;</span> <span class="attr">writeType</span>=<span class="string">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>3、启动mycat</strong></p>
<p><strong>4、验证读写分离</strong></p>
<h2 id="搭建双主双从"><a href="#搭建双主双从" class="headerlink" title="搭建双主双从"></a>搭建双主双从</h2><p><strong>1、 搭建 MySQL 数据库主从复制 （双主双从）</strong></p>
<p>双主机配置-Master1配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">修改配置文件：</span></span><br><span class="line"><span class="attr">vim</span> <span class="string">/etc/my.cnf</span></span><br><span class="line"><span class="comment">#主服务器唯一 ID</span></span><br><span class="line"><span class="meta">server-id</span>=<span class="string">1</span></span><br><span class="line"><span class="attr">启用二进制日志</span></span><br><span class="line"><span class="meta">log-bin</span>=<span class="string">mysql-bin</span></span><br><span class="line"><span class="comment">#设置不要复制的数据库 可设置多个</span></span><br><span class="line"><span class="meta">binlog-ignore-db</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">binlog-ignore-db</span>=<span class="string">information_schema</span></span><br><span class="line"><span class="comment">#设置需要复制的数据库/需要复制的主数据库名字</span></span><br><span class="line"><span class="meta">binlog-do-db</span>= <span class="string">testdb</span></span><br><span class="line"><span class="comment">#设置 logbin 格式</span></span><br><span class="line"><span class="attr">binlog_format</span>=<span class="string">STATEMENT</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#在作为从数据库的时候， 有写入操作 也要更新二进制日志文件</span></span><br><span class="line"><span class="attr">log-slave-updates</span></span><br><span class="line"><span class="comment">#表示自增长字段每次递增的量，指自增字段的起始值，其默认值是 1 取值范围是 1 .. 65535</span></span><br><span class="line"><span class="meta">auto-increment-increment</span>=<span class="string">2</span></span><br><span class="line"><span class="comment">#表示自增长字段从哪个数开始，指字段一次递增多少，他的取值范围是 1 .. 65535</span></span><br><span class="line"><span class="meta">auto-increment-offset</span>=<span class="string">1</span></span><br></pre></td></tr></table></figure>

<p>双主机配置-Master2配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件：</span></span><br><span class="line"><span class="attr">vim</span> <span class="string">/etc/my.cnf</span></span><br><span class="line"><span class="comment"># 主服务器唯一 ID</span></span><br><span class="line"><span class="meta">server-id</span>= <span class="string">2</span></span><br><span class="line"><span class="comment"># 启用二进制日志</span></span><br><span class="line"><span class="meta">log-bin</span> =<span class="string">mysql-bin</span></span><br><span class="line"><span class="comment"># 设置不要复制的数据库 可设置多个</span></span><br><span class="line"><span class="meta">binlog-ignore-db</span>=<span class="string">mysql</span></span><br><span class="line"><span class="meta">binlog-ignore-db</span>=<span class="string">information_schema</span></span><br><span class="line"><span class="comment"># 设置需要复制的数据库/需要复制的主数据库名字</span></span><br><span class="line"><span class="meta">binlog-do-db</span>= <span class="string">testdb</span></span><br><span class="line"><span class="comment"># 设置 logbin 格式</span></span><br><span class="line"><span class="attr">binlog_format</span>=<span class="string">STATEMENT</span></span><br><span class="line"><span class="comment"># 在作为从数据库的时候，有写入操作也要更新二进制日志文件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">log-slave-updates</span></span><br><span class="line"><span class="comment"># 表示自增长字段每次递增的量，指自增字段的起始值，其默认值是 1 ，取值范围是 1 .. 65 535</span></span><br><span class="line"><span class="meta">auto-increment-increment</span>=<span class="string">2</span></span><br><span class="line"><span class="comment">#表示自增长字段从哪个数开始，指字段一次递增多少，他的取值范围是 1 . .. 65535</span></span><br><span class="line"><span class="meta">auto-increment-offset</span>= <span class="string">2</span></span><br></pre></td></tr></table></figure>

<p>双从机配置-Slave1 配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件：</span></span><br><span class="line"><span class="attr">vim</span> <span class="string">/etc/my.cnf</span></span><br><span class="line"><span class="comment">#从服务器唯一 ID</span></span><br><span class="line"><span class="meta">server-id</span>=<span class="string">3</span></span><br><span class="line"><span class="comment"># 启用中继日志</span></span><br><span class="line"><span class="meta">relay-log</span>=<span class="string">mysql-relay</span></span><br></pre></td></tr></table></figure>

<p>双从机配置-Slave2 配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改配置文件：</span></span><br><span class="line"><span class="attr">vim</span> <span class="string">/etc/my.cnf</span></span><br><span class="line"><span class="comment">#从服务器唯一 ID</span></span><br><span class="line"><span class="meta">server-id</span>= <span class="string">4</span></span><br><span class="line"><span class="comment"># 启用中继日 志</span></span><br><span class="line"><span class="meta">relay-log</span>=<span class="string">mysql-relay</span></span><br></pre></td></tr></table></figure>

<p>双 主机、 双 从机重启 m ysql 服务</p>
<p>主机从机都关闭防火墙</p>
<p>在 两台 主机上建立帐户并授权 slave</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span><span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> REPLICATION SLAVE   <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询Master1的状态</span></span><br><span class="line"><span class="keyword">show</span> master status;</span><br><span class="line"><span class="comment">-- 查询Master2的状态</span></span><br><span class="line"><span class="keyword">show</span> master status;</span><br></pre></td></tr></table></figure>

<p>#分 别 记录下 File 和 Position 的值<br>#执行完此 步骤后不 要再操作主服务器 MYSQL ，防止主服务器状态值变化</p>
<p>在从机上配置需要复制的主机</p>
<p>Slava1 复制 Master1、Slava2 复制 Master2</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- slave1 命令</span></span><br><span class="line">CHANGE MASTER <span class="keyword">TO</span> MASTER_HOST<span class="operator">=</span><span class="string">&#x27;192.168.127.100&#x27;</span>, </span><br><span class="line">MASTER_USER<span class="operator">=</span><span class="string">&#x27;slave&#x27;</span>, </span><br><span class="line">master_port <span class="operator">=</span> <span class="number">3306</span>,</span><br><span class="line">MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span>, </span><br><span class="line">MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;mysql-bin.000004&#x27;</span>,</span><br><span class="line">MASTER_LOG_POS<span class="operator">=</span><span class="number">154</span>;</span><br><span class="line"><span class="comment">-- slave2 命令</span></span><br><span class="line">CHANGE MASTER <span class="keyword">TO</span> MASTER_HOST<span class="operator">=</span><span class="string">&#x27;192.168.127.100&#x27;</span>, </span><br><span class="line">MASTER_USER<span class="operator">=</span><span class="string">&#x27;slave&#x27;</span>, </span><br><span class="line">master_port <span class="operator">=</span> <span class="number">3326</span>,</span><br><span class="line">MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span>, </span><br><span class="line">MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;mysql-bin.000004&#x27;</span>,</span><br><span class="line">MASTER_LOG_POS<span class="operator">=</span><span class="number">154</span>;</span><br><span class="line"><span class="comment">-- (注意地址与端口的不同)</span></span><br></pre></td></tr></table></figure>

<p>启动 两台 从服务器复制功能</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">start</span> slave;</span><br></pre></td></tr></table></figure>

<p>查 看 从服务器状态</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> slave status\G;</span><br></pre></td></tr></table></figure>

<p>#下面两个参数都是 Yes ，则说明主从配置成功</p>
<ul>
<li>Slave_IO_Running: Yes</li>
<li>Slave_SQL_Running: Yes</li>
</ul>
<p>两个主机互相复制</p>
<p>Maste r2 复制 M aster1 、Master1 复制 M aste r2</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- master1 命令</span></span><br><span class="line">CHANGE MASTER <span class="keyword">TO</span> MASTER_HOST<span class="operator">=</span><span class="string">&#x27;192.168.127.100&#x27;</span>, </span><br><span class="line">MASTER_USER<span class="operator">=</span><span class="string">&#x27;slave&#x27;</span>, </span><br><span class="line">master_port <span class="operator">=</span> <span class="number">3316</span>,</span><br><span class="line">MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span>, </span><br><span class="line">MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;mysql-bin.000004&#x27;</span>,</span><br><span class="line">MASTER_LOG_POS<span class="operator">=</span><span class="number">154</span>;</span><br><span class="line"><span class="comment">-- master2 命令</span></span><br><span class="line">CHANGE MASTER <span class="keyword">TO</span> MASTER_HOST<span class="operator">=</span><span class="string">&#x27;192.168.127.100&#x27;</span>, </span><br><span class="line">MASTER_USER<span class="operator">=</span><span class="string">&#x27;slave&#x27;</span>, </span><br><span class="line">master_port <span class="operator">=</span> <span class="number">3306</span>,</span><br><span class="line">MASTER_PASSWORD<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span>, </span><br><span class="line">MASTER_LOG_FILE<span class="operator">=</span><span class="string">&#x27;mysql-bin.000004&#x27;</span>,</span><br><span class="line">MASTER_LOG_POS<span class="operator">=</span><span class="number">154</span>;</span><br><span class="line"><span class="comment">-- (注意地址与端口的不同)</span></span><br></pre></td></tr></table></figure>

<p>启动 两台 主 服务器复制功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start slave;</span><br></pre></td></tr></table></figure>

<p>分别查看两个主服务器状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show slave status\G;</span><br></pre></td></tr></table></figure>

<p>#下面两个参数都是 Yes ，则说明主从配置成功</p>
<ul>
<li>Slave_IO_Running: Yes</li>
<li>Slave_SQL_Running: Yes</li>
</ul>
<p><strong>2、修改 Mycat 的配置文件 schema.xml</strong></p>
<p>为了双主双从读写分离balance设置为1</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">…</span><br><span class="line"><span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">&quot;host1&quot;</span> <span class="attr">maxCon</span>=<span class="string">&quot;1000&quot;</span> <span class="attr">minCon</span>=<span class="string">&quot;10&quot;</span> <span class="attr">balance</span>=<span class="string">&quot;1&quot;</span> <span class="attr">writeType</span>=<span class="string">&quot;0&quot;</span> <span class="attr">dbType</span>=<span class="string">&quot;mysql&quot;</span> <span class="attr">dbDriver</span>=<span class="string">&quot;native&quot;</span> <span class="attr">switchType</span>=<span class="string">&quot;1&quot;</span> <span class="attr">slaveThreshold</span>=<span class="string">&quot;100&quot;</span> &gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>select user()<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot;hostM1&quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.16 8.140.128:3 306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;123123&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">readHost</span> <span class="attr">hos</span> <span class="attr">t</span>=<span class="string">&quot; hostS1 &quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.140.127:33 06&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;123123 &quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">&quot; hostM2 &quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.140.126:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;123123&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">read</span> <span class="attr">Host</span> <span class="attr">host</span>=<span class="string">&quot; hostS2 &quot;</span> <span class="attr">url</span>=<span class="string">&quot;192.168.140.125:3306&quot;</span> <span class="attr">user</span>=<span class="string">&quot;root&quot;</span> <span class="attr">password</span>=<span class="string">&quot;123123&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span></span><br><span class="line">…</span><br></pre></td></tr></table></figure>

<ul>
<li>balance=”1”  : 全部的 readHost 与 stand by writeHost 参与 select 语句的负载均衡。</li>
<li>writeType=”0” : 所有写操作发送到配置的第一个 wri teHost ，第一个挂了切到还生存的第二个</li>
<li>writeType=”1” :所有写操作都随机的发送到配置的 writeHost 1.5 以后废弃不推荐</li>
<li>writeHost ，重新启动后以切换后的为准，切换记录在配置文件中 :dnindex.properties 。</li>
<li>switchType=”1”: 1 默认值，自动切换。<ul>
<li>1 表示不自动切换</li>
<li>2 基于 MySQL 主从同步的状态决定是否切换。</li>
</ul>
</li>
</ul>
<p><strong>3、 启动 Mycat</strong><br><strong>4、 验证读写分离</strong></p>
<p><strong>5、 抗风险能力</strong></p>
<p>Master1 、 Master 2 互 做备机 ，负责写的主机宕机 ，备机切换负责写操作 ，保证数据库读写分离高<br>可用性</p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>数据库</tag>
        <tag>mycat</tag>
      </tags>
  </entry>
  <entry>
    <title>ElasticSearch 使用</title>
    <url>/2021/01/04/%E6%95%B0%E6%8D%AE%E5%BA%93/ElasticSearch%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<p>ElasticSearch入门篇</p>
<span id="more"></span>

<h1 id="第一章-ElasticSearch入门篇"><a href="#第一章-ElasticSearch入门篇" class="headerlink" title="第一章 ElasticSearch入门篇"></a>第一章 ElasticSearch入门篇</h1><h2 id="第一节-ElasticSearch概述"><a href="#第一节-ElasticSearch概述" class="headerlink" title="第一节 ElasticSearch概述"></a>第一节 ElasticSearch概述</h2><h3 id="1-1-ElasticSearch-简介"><a href="#1-1-ElasticSearch-简介" class="headerlink" title="1.1 ElasticSearch 简介"></a>1.1 ElasticSearch 简介</h3><p>​    是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTfulweb接口。ElasticSearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。构建在全文检索开源软件Lucene之上的Elasticsearch，不仅能对海量规模的数据完成分布式索引与检索，还能提供数据聚合分析。据国际权威的数据库产品评测机构DBEngines的统计，在2016年1月，Elasticsearch已超过Solr等，成为排名第一的搜索引擎类应用</p>
<p>概括：基于Restful标准的高扩展高可用的实时数据分析的全文搜索工具</p>
<h3 id="1-2ElasticSearch的基本概念"><a href="#1-2ElasticSearch的基本概念" class="headerlink" title="1.2ElasticSearch的基本概念"></a>1.2ElasticSearch的基本概念</h3><p>**Index:**索引–类似于mysql数据库中的database</p>
<p>**Type:**类型–类似于mysql数据库中的table表，es中可以在Index中建立type（table），通过mapping进行映射。　　</p>
<p>**Document:**文档–由于es存储的数据是文档型的，一条数据对应一篇文档即相当于mysql数据库中的一行数据row，一个文档中可以有多个字段也就是mysql数据库一行可以有多列。<br>**Field:**es中一个文档中对应的多个列与mysql数据库中每一列对应</p>
<p>**Mapping:**可以理解为mysql或者solr中对应的schema，只不过有些时候es中的mapping增加了动态识别功能，感觉很强大的样子，其实实际生产环境上不建议使用，最好还是开始制定好了对应的schema为主。
　　</p>
<p>indexed</p>
<p>　　就是名义上的建立索引。mysql中一般会对经常使用的列增加相应的索引用于提高查询速度，而在es中默认都是会加上索引的，除非你特殊制定不建立索引只是进行存储用于展示，这个需要看你具体的需求和业务进行设定了。</p>
<p>Query DSL</p>
<p>　　类似于mysql的sql语句，只不过在es中是使用的json格式的查询语句，专业术语就叫：QueryDSL</p>
<p>GET/PUT/POST/DELETE</p>
<p>　　分别类似与mysql中的select/update/delete……
　　
　　</p>
<h3 id="1-3Elasticsearch的架构"><a href="#1-3Elasticsearch的架构" class="headerlink" title="1.3Elasticsearch的架构"></a>1.3Elasticsearch的架构</h3><p><img src="https://images2015.cnblogs.com/blog/980882/201702/980882-20170208171207963-1711795457.png" alt="image"></p>
<p>Gateway层</p>
<p>es用来存储索引文件的一个文件系统且它支持很多类型，例如：本地磁盘、共享存储（做snapshot的时候需要用到）、hadoop的hdfs分布式存储、亚马逊的S3。它的主要职责是用来对数据进行长持久化以及整个集群重启之后可以通过gateway重新恢复数据。</p>
<p>Distributed Lucene Directory</p>
<p>Gateway上层就是一个lucene的分布式框架，lucene是做检索的，但是它是一个单机的搜索引擎，像这种es分布式搜索引擎系统，虽然底层用lucene，但是需要在每个节点上都运行lucene进行相应的索引、查询以及更新，所以需要做成一个分布式的运行框架来满足业务的需要。</p>
<p>四大模块组件</p>
<p>districted lucene directory之上就是一些es的模块，Index Module是索引模块，就是对数据建立索引也就是通常所说的建立一些倒排索引等；Search Module是搜索模块，就是对数据进行查询搜索；Mapping模块是数据映射与解析模块，就是你的数据的每个字段可以根据你建立的表结构通过mapping进行映射解析，如果你没有建立表结构，es就会根据你的数据类型推测你的数据结构之后自己生成一个mapping，然后都是根据这个mapping进行解析你的数据；River模块在es2.0之后应该是被取消了，它的意思表示是第三方插件，例如可以通过一些自定义的脚本将传统的数据库（mysql）等数据源通过格式化转换后直接同步到es集群里，这个river大部分是自己写的，写出来的东西质量参差不齐，将这些东西集成到es中会引发很多内部bug，严重影响了es的正常应用，所以在es2.0之后考虑将其去掉。</p>
<p>Discovery、Script</p>
<p>es4大模块组件之上有 Discovery模块：es是一个集群包含很多节点，很多节点需要互相发现对方，然后组成一个集群包括选主的，这些es都是用的discovery模块，默认使用的是 Zen，也可是使用EC2；es查询还可以支撑多种script即脚本语言，包括mvel、js、python等等。</p>
<p> Transport协议层</p>
<p>再上一层就是es的通讯接口Transport，支持的也比较多：Thrift、Memcached以及Http，默认的是http，JMX就是java的一个远程监控管理框架，因为es是通过java实现的。</p>
<p>RESTful接口层</p>
<p>最上层就是es暴露给我们的访问接口，官方推荐的方案就是这种Restful接口，直接发送http请求，方便后续使用nginx做代理、分发包括可能后续会做权限的管理，通过http很容易做这方面的管理。如果使用java客户端它是直接调用api，在做负载均衡以及权限管理还是不太好做。</p>
<h3 id="1-4RESTfull-API"><a href="#1-4RESTfull-API" class="headerlink" title="1.4RESTfull API"></a>1.4RESTfull API</h3><p>一种软件架构风格、设计风格，而不是标准，只是提供了一组设计原则和约束条件。它主要用于客户端和服务器交互类的软件。基于这个风格设计的软件可以更简洁，更有层次，更易于实现缓存等机制。在目前主流的三种Web服务交互方案中，REST相比于SOAP（Simple Object Access protocol，简单对象访问协议）以及XML-RPC更加简单明了</p>
<p>(Representational State Transfer</p>
<p>意思是：表述性状态传递)</p>
<p>它使用典型的HTTP方法，诸如GET,POST.DELETE,PUT来实现资源的获取，添加，修改，删除等操作。即通过HTTP动词来实现资源的状态扭转<br>复制代码</p>
<p>GET 用来获取资源</p>
<p>POST 用来新建资源（也可以用于更新资源）</p>
<p>PUT 用来更新资源</p>
<p>DELETE 用来删除资源</p>
<h3 id="1-5CRUL命令"><a href="#1-5CRUL命令" class="headerlink" title="1.5CRUL命令"></a>1.5CRUL命令</h3><p>以命令的方式执行HTTP协议的请求<br>GET/POST/PUT/DELETE</p>
<p>示例：<br>访问一个网页</p>
<p>curl <a href="http://www.baidu.com/">www.baidu.com</a></p>
<p>curl -o tt.html <a href="http://www.baidu.com/">www.baidu.com</a></p>
<p>显示响应的头信息</p>
<p>curl -i <a href="http://www.baidu.com/">www.baidu.com</a></p>
<p>显示一次HTTP请求的通信过程</p>
<p>curl -v <a href="http://www.baidu.com/">www.baidu.com</a></p>
<p>执行GET/POST/PUT/DELETE操作</p>
<p>curl -X GET/POST/PUT/DELETE url</p>
<h3 id="1-6CentOS7下安装ElasticSearch6-2-4"><a href="#1-6CentOS7下安装ElasticSearch6-2-4" class="headerlink" title="1.6CentOS7下安装ElasticSearch6.2.4"></a>1.6CentOS7下安装ElasticSearch6.2.4</h3><p>(1)配置JDK环境</p>
<p> 配置环境变量</p>
<p>export JAVA_HOME=”/opt/jdk1.8.0_144”</p>
<p>export PATH=”$JAVA_HOME/bin:$PATH”</p>
<p>export CLASSPATH=”.:$JAVA_HOME/lib”</p>
<p>(2)安装ElasticSearch6.2.4</p>
<p>下载地址：<a href="https://www.elastic.co/cn/downloads/elasticsearch">https://www.elastic.co/cn/downloads/elasticsearch</a></p>
<p>启动报错：<br><img src="https://note.youdao.com/yws/api/personal/file/F967846635974B32A8D490508E781F00?method=download&shareKey=2ad37f2dc1cc016e1afe3a0849046cef" alt="image"></p>
<p>解决方式：<br>bin/elasticsearch -Des.insecure.allow.root=true</p>
<p>或者修改bin/elasticsearch，加上ES_JAVA_OPTS属性：<br>ES_JAVA_OPTS=”-Des.insecure.allow.root=true”</p>
<p>再次启动：<br><img src="https://note.youdao.com/yws/api/personal/file/F432E6405D5C4D5599A80F3F2F0FEB83?method=download&shareKey=242de0ee6034de7f0e46c6c120d88e68" alt="image"></p>
<p>这是出于系统安全考虑设置的条件。由于ElasticSearch可以接收用户输入的脚本并且执行，为了系统安全考   虑，建议创建一个单独的用户用来运行ElasticSearch。</p>
<p>创建用户组和用户：</p>
<p>groupadd esgroup</p>
<p>useradd esuser -g esgroup -p espassword</p>
<p>更改elasticsearch文件夹及内部文件的所属用户及组：</p>
<p>cd /opt</p>
<p>chown -R esuser:esgroup elasticsearch-6.2.4</p>
<p>切换用户并运行：</p>
<p>su esuser</p>
<p>./bin/elasticsearch</p>
<p>再次启动显示已杀死：<br><img src="https://note.youdao.com/yws/api/personal/file/A03FC0640DD043EBBAFF66A34CB4B225?method=download&shareKey=073d77cddf7efa2810059f5b591b3548" alt="image"></p>
<p>需要调整JVM的内存大小：</p>
<p>vi bin/elasticsearch</p>
<p>ES_JAVA_OPTS=”-Xms512m -Xmx512m”</p>
<p>再次启动：启动成功</p>
<p>如果显示如下类似信息：</p>
<p>[INFO ][o.e.c.r.a.DiskThresholdMonitor] [ZAds5FP] low disk watermark [85%] exceeded on     [ZAds5FPeTY-ZUKjXd7HJKA][ZAds5FP][/opt/elasticsearch-6.2.4/data/nodes/0] free: 1.2gb[14.2%],     replicas will not be assigned to this node</p>
<p>需要清理磁盘空间。</p>
<p>后台运行：./bin/elasticsearch -d</p>
<p>测试连接：curl 127.0.0.1:9200</p>
<p>会看到一下JSON数据：<br> [root@localhost ~]# curl 127.0.0.1:9200<br>  {<br>  “name” : “rBrMTNx”,<br>  “cluster_name” : “elasticsearch”,<br>  “cluster_uuid” : “-noR5DxFRsyvAFvAzxl07g”,<br>  “version” : {<br>    “number” : “5.1.1”,<br>    “build_hash” : “5395e21”,<br>    “build_date” : “2016-12-06T12:36:15.409Z”,<br>    “build_snapshot” : false,<br>    “lucene_version” : “6.3.0”<br>  },<br>  “tagline” : “You Know, for Search”<br> }</p>
<p>实现远程访问：<br>需要对config/elasticsearch.yml进行   配置：<br>    network.host: 192.168.25.131</p>
<p>再次启动报错：<br><img src="https://note.youdao.com/yws/api/personal/file/EA3ED55EB0ED40C683112AC6ED8716AE?method=download&shareKey=7517e79986e6585de886c59966057d9c" alt="image"></p>
<p>处理第一个错误：</p>
<p>vim /etc/security/limits.conf       //文件最后加入</p>
<p>esuser soft nofile 65536</p>
<p>esuser hard nofile 65536</p>
<p>esuser soft nproc 4096</p>
<p>esuser hard nproc 4096</p>
<p>处理第二个错误：</p>
<p>进入limits.d目录下修改配置文件。</p>
<p>vim /etc/security/limits.d/20-nproc.conf<br>修改为 esuser soft nproc 4096</p>
<p>处理第三个错误：</p>
<p>vim /etc/sysctl.conf</p>
<p>vm.max_map_count=655360</p>
<p>执行以下命令生效：<br>sysctl -p</p>
<p>关闭防火墙：systemctl stop firewalld.service</p>
<p>再次启动成功！</p>
<h3 id="1-7安装Head插件"><a href="#1-7安装Head插件" class="headerlink" title="1.7安装Head插件"></a>1.7安装Head插件</h3><p>Head是elasticsearch的集群管理工具，可以用于数据的浏览和查询</p>
<p>(1)elasticsearch-head是一款开源软件，被托管在github上面，所以如果我们要使用它，必须先安装git，通过git获取elasticsearch-head</p>
<p>(2)运行elasticsearch-head会用到grunt，而grunt需要npm包管理器，所以nodejs是必须要安装的</p>
<p>(3)elasticsearch5.0之后，elasticsearch-head不做为插件放在其plugins目录下了。<br>使用git拷贝elasticsearch-head到本地</p>
<p>cd /usr/local/</p>
<p> git clone git://github.com/mobz/elasticsearch-head.git</p>
<p>(4)安装elasticsearch-head依赖包</p>
<p>[root@localhost local]# npm install -g grunt-cli</p>
<p>[root@localhost _site]# cd /usr/local/elasticsearch-head/</p>
<p>[root@localhost elasticsearch-head]# cnpm install</p>
<p>(5)修改Gruntfile.js</p>
<p>[root@localhost _site]# cd /usr/local/elasticsearch-head/</p>
<p>[root@localhost elasticsearch-head]# vi Gruntfile.js</p>
<p>在connect–&gt;server–&gt;options下面添加：hostname:’*’，允许所有IP可以访问</p>
<p>(6)修改elasticsearch-head默认连接地址<br>[root@localhost elasticsearch-head]# cd /usr/local/elasticsearch-head/_site/</p>
<p>[root@localhost _site]# vi app.js</p>
<p>将this.base_uri = this.config.base_uri || this.prefs.get(“app-base_uri”) || “<a href="http://localhost:9200&quot;;中的localhost修改成你es的服务器地址">http://localhost:9200&quot;;中的localhost修改成你es的服务器地址</a></p>
<p>(7)配置elasticsearch允许跨域访问</p>
<p>打开elasticsearch的配置文件elasticsearch.yml，在文件末尾追加下面两行代码即可：</p>
<p>http.cors.enabled: true</p>
<p>http.cors.allow-origin: “*”</p>
<p>(8)打开9100端口</p>
<p>[root@localhost elasticsearch-head]# firewall-cmd –zone=public –add-port=9100/tcp –permanent</p>
<p>重启防火墙</p>
<p>[root@localhost elasticsearch-head]# firewall-cmd –reload</p>
<p>(9)启动elasticsearch</p>
<p>(10)启动elasticsearch-head</p>
<p>[root@localhost _site]# cd /usr/local/elasticsearch-head/</p>
<p>[root@localhost elasticsearch-head]# node_modules/grunt/bin/grunt server</p>
<p>(11)访问elasticsearch-head</p>
<p>关闭防火墙：systemctl stop firewalld.service</p>
<p>浏览器输入网址：<a href="http://192.168.25.131:9100/">http://192.168.25.131:9100/</a></p>
<h3 id="1-8安装Kibana"><a href="#1-8安装Kibana" class="headerlink" title="1.8安装Kibana"></a>1.8安装Kibana</h3><p>Kibana是一个针对Elasticsearch的开源分析及可视化平台，使用Kibana可以查询、查看并与存储在ES索引的数据进行交互操作，使用Kibana能执行高级的数据分析，并能以图表、表格和地图的形式查看数据</p>
<p>(1)下载Kibana<br><a href="https://www.elastic.co/downloads/kibana">https://www.elastic.co/downloads/kibana</a></p>
<p>(2)把下载好的压缩包拷贝到/soft目录下</p>
<p>(3)解压缩，并把解压后的目录移动到/user/local/kibana</p>
<p>(4)编辑kibana配置文件</p>
<p>[root@localhost /]# vi /usr/local/kibana/config/kibana.yml</p>
<p><img src="https://images2017.cnblogs.com/blog/210978/201708/210978-20170805113725272-708617928.png" alt="image"></p>
<p>将server.host,elasticsearch.url修改成所在服务器的ip地址</p>
<p>(5)开启5601端口</p>
<p>Kibana的默认端口是5601</p>
<p>开启防火墙:systemctl start firewalld.service</p>
<p>开启5601端口:firewall-cmd –permanent –zone=public –add-port=5601/tcp</p>
<p>重启防火墙：firewall-cmd –reload</p>
<p>(6)启动Kibana</p>
<p>[root@localhost /]# /usr/local/kibana/bin/kibana</p>
<p>浏览器访问：<a href="http://192.168.25.131:5601/">http://192.168.25.131:5601</a></p>
<h3 id="1-9安装中文分词器"><a href="#1-9安装中文分词器" class="headerlink" title="1.9安装中文分词器"></a>1.9安装中文分词器</h3><p>(1)下载中文分词器<br><a href="https://github.com/medcl/elasticsearch-analysis-ik">https://github.com/medcl/elasticsearch-analysis-ik</a></p>
<pre><code>下载elasticsearch-analysis-ik-master.zip
</code></pre>
<p>(2)解压elasticsearch-analysis-ik-master.zip</p>
<p>   unzip elasticsearch-analysis-ik-master.zip</p>
<p>(3)进入elasticsearch-analysis-ik-master，编译源码</p>
<p>mvn clean install -Dmaven.test.skip=true </p>
<p>(4)在es的plugins文件夹下创建目录ik</p>
<p>(5)将编译后生成的elasticsearch-analysis-ik-版本.zip移动到ik下，并解压</p>
<p>(6)解压后的内容移动到ik目录下</p>
<h2 id="第二节-ElasticSearch基本操作"><a href="#第二节-ElasticSearch基本操作" class="headerlink" title="第二节 ElasticSearch基本操作"></a>第二节 ElasticSearch基本操作</h2><h3 id="2-1倒排索引"><a href="#2-1倒排索引" class="headerlink" title="2.1倒排索引"></a>2.1倒排索引</h3><p>Elasticsearch 使用一种称为 倒排索引 的结构，它适用于快速的全文搜索。一个倒排索引由文档中所有不重复词的列表构成，对于其中每个词，有一个包含它的文档列表。</p>
<p>示例：</p>
<p>(1)：假设文档集合包含五个文档，每个文档内容如图所示，在图中最左端一栏是每个文档对应的文档编号。我们的任务就是对这个文档集合建立倒排索引。<br><img src="http://img.my.csdn.net/uploads/201209/10/1347267642_4728.jpg" alt="image"></p>
<p>(2):中文和英文等语言不同，单词之间没有明确分隔符号，所以首先要用分词系统将文档自动切分成单词序列。这样每个文档就转换为由单词序列构成的数据流，为了系统后续处理方便，需要对每个不同的单词赋予唯一的单词编号，同时记录下哪些文档包含这个单词，在如此处理结束后，我们可以得到最简单的倒排索引<br><img src="http://img.my.csdn.net/uploads/201202/13/0_1329141580k34Q.gif" alt="image"><br>“单词ID”一栏记录了每个单词的单词编号，第二栏是对应的单词，第三栏即每个单词对应的倒排列表</p>
<p>(3):索引系统还可以记录除此之外的更多信息,下图还记载了单词频率信息（TF）即这个单词在某个文档中的出现次数，之所以要记录这个信息，是因为词频信息在搜索结果排序时，计算查询和文档相似度是很重要的一个计算因子，所以将其记录在倒排列表中，以方便后续排序时进行分值计算。</p>
<p><img src="http://img.my.csdn.net/uploads/201209/10/1347267682_4417.jpg" alt="image"></p>
<p>(4):倒排列表中还可以记录单词在某个文档出现的位置信息</p>
<p>(1,&lt;11&gt;,1),(2,&lt;7&gt;,1),(3,&lt;3,9&gt;,2)</p>
<p>有了这个索引系统，搜索引擎可以很方便地响应用户的查询，比如用户输入查询词“Facebook”，搜索系统查找倒排索引，从中可以读出包含这个单词的文档，这些文档就是提供给用户的搜索结果，而利用单词频率信息、文档频率信息即可以对这些候选搜索结果进行排序，计算文档和查询的相似性，按照相似性得分由高到低排序输出，此即为搜索系统的部分内部流程。</p>
<h4 id="2-1-2-倒排索引原理"><a href="#2-1-2-倒排索引原理" class="headerlink" title="2.1.2 倒排索引原理"></a>2.1.2 倒排索引原理</h4><p>1.The quick brown fox jumped over the lazy dog</p>
<p>2.Quick brown foxes leap over lazy dogs in summer</p>
<p>倒排索引：</p>
<p><strong>Term      Doc_1  Doc_2</strong></p>
<p>Quick   |       |  X<br>The     |   X   |<br>brown   |   X   |  X<br>dog     |   X   |<br>dogs    |       |  X<br>fox     |   X   |<br>foxes   |       |  X<br>in      |       |  X<br>jumped  |   X   |<br>lazy    |   X   |  X<br>leap    |       |  X<br>over    |   X   |  X<br>quick   |   X   |<br>summer  |       |  X<br>the     |   X   |</p>
<p>搜索quick brown ：</p>
<p><strong>Term      Doc_1  Doc_2</strong></p>
<p>brown   |   X   |  X</p>
<p><strong>quick   |   X   |</strong></p>
<p>Total   |   2   |  1</p>
<p>计算相关度分数时，文档1的匹配度高，分数会比文档2高</p>
<p>问题：</p>
<p>Quick 和 quick 以独立的词条出现，然而用户可能认为它们是相同的词。</p>
<p>fox 和 foxes 非常相似, 就像 dog 和 dogs ；他们有相同的词根。</p>
<p>jumped 和 leap, 尽管没有相同的词根，但他们的意思很相近。他们是同义词。</p>
<p>搜索含有 Quick fox的文档是搜索不到的</p>
<p>使用标准化规则(normalization)：<br>建立倒排索引的时候，会对拆分出的各个单词进行相应的处理，以提升后面搜索的时候能够搜索到相关联的文档的概率</p>
<p><strong>Term      Doc_1  Doc_2</strong></p>
<p>brown   |   X   |  X<br>dog     |   X   |  X<br>fox     |   X   |  X<br>in      |       |  X<br>jump    |   X   |  X<br>lazy    |   X   |  X<br>over    |   X   |  X<br>quick   |   X   |  X<br>summer  |       |  X<br>the     |   X   |  X</p>
<h4 id="2-1-3-分词器介绍及内置分词器"><a href="#2-1-3-分词器介绍及内置分词器" class="headerlink" title="2.1.3 分词器介绍及内置分词器"></a>2.1.3 分词器介绍及内置分词器</h4><p>分词器：从一串文本中切分出一个一个的词条，并对每个词条进行标准化</p>
<p>包括三部分：</p>
<p>character filter：分词之前的预处理，过滤掉HTML标签，特殊符号转换等</p>
<p>tokenizer：分词</p>
<p>token filter：标准化</p>
<p>内置分词器：</p>
<p>standard 分词器：(默认的)他会将词汇单元转换成小写形式，并去除停用词和标点符号，支持中文采用的方法为单字切分</p>
<p>simple 分词器：首先会通过非字母字符来分割文本信息，然后将词汇单元统一为小写形式。该分析器会去掉数字类型的字符。</p>
<p>Whitespace 分词器：仅仅是去除空格，对字符没有lowcase化,不支持中文；<br>并且不对生成的词汇单元进行其他的标准化处理。</p>
<p>language 分词器：特定语言的分词器，不支持中文</p>
<h3 id="2-2使用ElasticSearch-API-实现CRUD"><a href="#2-2使用ElasticSearch-API-实现CRUD" class="headerlink" title="2.2使用ElasticSearch API 实现CRUD"></a>2.2使用ElasticSearch API 实现CRUD</h3><p>添加索引：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT /lib/</span><br><span class="line">&#123;</span><br><span class="line">	<span class="attr">&quot;settings&quot;</span>:&#123;</span><br><span class="line">		<span class="attr">&quot;index&quot;</span>:&#123;</span><br><span class="line">        	<span class="attr">&quot;number_of_shards&quot;</span>: <span class="number">5</span>,</span><br><span class="line">        	<span class="attr">&quot;number_of_replicas&quot;</span>: <span class="number">1</span></span><br><span class="line">     	&#125;</span><br><span class="line">   	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看索引信息:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /lib/_settings</span><br><span class="line">GET _all/_settings</span><br></pre></td></tr></table></figure>

<p>添加文档:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT /lib/user/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;first_name&quot;</span> :  <span class="string">&quot;Jane&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;last_name&quot;</span> :   <span class="string">&quot;Smith&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span> :         <span class="number">32</span>,</span><br><span class="line">    <span class="attr">&quot;about&quot;</span> :       <span class="string">&quot;I like to collect rock albums&quot;</span>,    </span><br><span class="line">    <span class="attr">&quot;interests&quot;</span>:  [ <span class="string">&quot;music&quot;</span> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST /lib/user/</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;first_name&quot;</span> :  <span class="string">&quot;Douglas&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;last_name&quot;</span> :   <span class="string">&quot;Fir&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span> :         <span class="number">23</span>,</span><br><span class="line">    <span class="attr">&quot;about&quot;</span>:        <span class="string">&quot;I like to build cabinets&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;interests&quot;</span>:  [ <span class="string">&quot;forestry&quot;</span> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看文档:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /lib/user/<span class="number">1</span></span><br><span class="line">GET /lib/user/</span><br><span class="line">GET /lib/user/<span class="number">1</span>?_source=age,interests</span><br></pre></td></tr></table></figure>


<p>更新文档:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT /lib/user/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;first_name&quot;</span> :  <span class="string">&quot;Jane&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;last_name&quot;</span> :   <span class="string">&quot;Smith&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span> :         <span class="number">36</span>, </span><br><span class="line">    <span class="attr">&quot;about&quot;</span> :       <span class="string">&quot;I like to collect rock albums&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;interests&quot;</span>:  [ <span class="string">&quot;music&quot;</span> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST /lib/user/<span class="number">1</span>/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;doc&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>:<span class="number">33</span></span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>删除一个文档</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">DELETE /lib/user/<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>删除一个索引</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">DELETE /lib</span><br></pre></td></tr></table></figure>
<h3 id="2-3批量获取文档"><a href="#2-3批量获取文档" class="headerlink" title="2.3批量获取文档"></a>2.3批量获取文档</h3><p>使用es提供的Multi Get API：</p>
<p>使用Multi Get API可以通过索引名、类型名、文档id一次得到一个文档集合，文档可以来自同一个索引库，也可以来自不同索引库</p>
<p>使用curl命令：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">curl &#x27;http:<span class="comment">//192.168.25.131:9200/_mget&#x27; -d &#x27;&#123;</span></span><br><span class="line"><span class="string">&quot;docs&quot;</span>：[</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;lib&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;_id&quot;</span>: <span class="number">1</span></span><br><span class="line">   &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;lib&quot;</span>, </span><br><span class="line">     <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">     <span class="attr">&quot;_id&quot;</span>: <span class="number">2</span></span><br><span class="line">   &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;&#x27;</span><br></pre></td></tr></table></figure>
<p>在客户端工具中：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /_mget</span><br><span class="line">&#123;</span><br><span class="line">	 <span class="attr">&quot;docs&quot;</span>:[</span><br><span class="line">	 	&#123;</span><br><span class="line">           <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;lib&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_id&quot;</span>: <span class="number">1</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;lib&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_id&quot;</span>: <span class="number">2</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;lib&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_id&quot;</span>: <span class="number">3</span></span><br><span class="line">       &#125;</span><br><span class="line">     ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以指定具体的字段：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /_mget</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;docs&quot;</span>:[      </span><br><span class="line">       &#123;</span><br><span class="line">           <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;lib&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">           <span class="attr">&quot;_source&quot;</span>: <span class="string">&quot;interests&quot;</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="attr">&quot;_index&quot;</span>: <span class="string">&quot;lib&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">           <span class="attr">&quot;_source&quot;</span>: [<span class="string">&quot;age&quot;</span>,<span class="string">&quot;interests&quot;</span>]</span><br><span class="line">       &#125; </span><br><span class="line">     ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>获取同索引同类型下的不同文档：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /lib/user/_mget</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;docs&quot;</span>:[</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="attr">&quot;_id&quot;</span>: <span class="number">1</span></span><br><span class="line">       &#125;,</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="attr">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;_id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">       &#125;</span><br><span class="line">     ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /lib/user/_mget</span><br><span class="line">&#123;</span><br><span class="line">   <span class="attr">&quot;ids&quot;</span>: [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-4使用Bulk-API-实现批量操作"><a href="#2-4使用Bulk-API-实现批量操作" class="headerlink" title="2.4使用Bulk API 实现批量操作"></a>2.4使用Bulk API 实现批量操作</h3><p>bulk的格式：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;action:&#123;metadata&#125;&#125;</span><br><span class="line">&#123;requstbody&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">action:(行为)</span><br><span class="line">  create：文档不存在时创建</span><br><span class="line">  update:更新文档</span><br><span class="line">  index:创建新文档或替换已有文档</span><br><span class="line">  delete:删除一个文档</span><br><span class="line">metadata：_index,_type,_id</span><br></pre></td></tr></table></figure>

<p>create 和index的区别</p>
<p>如果数据存在，使用create操作失败，会提示文档已经存在，使用index则可以成功执行。</p>
<p>示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /lib2</span><br><span class="line">&#123;</span><br><span class="line">	&quot;delete&quot;:&#123;</span><br><span class="line">		&quot;_index&quot;:&quot;lib&quot;,</span><br><span class="line">		&quot;_type&quot;:&quot;user&quot;,</span><br><span class="line">		&quot;_id&quot;:&quot;1&quot;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>批量添加:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST /lib2/books/_bulk</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_id&quot;</span>:<span class="number">1</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;Java&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">55</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_id&quot;</span>:<span class="number">2</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;Html5&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">45</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_id&quot;</span>:<span class="number">3</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;Php&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">35</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_id&quot;</span>:<span class="number">4</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;title&quot;</span>:<span class="string">&quot;Python&quot;</span>,<span class="attr">&quot;price&quot;</span>:<span class="number">50</span>&#125;</span><br></pre></td></tr></table></figure>

<p>批量获取:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /lib2/books/_mget</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;ids&quot;</span>: [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>删除：没有请求体</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">POST /lib2/books/_bulk</span><br><span class="line">&#123;<span class="attr">&quot;delete&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;lib2&quot;</span>,<span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;books&quot;</span>,<span class="attr">&quot;_id&quot;</span>:<span class="number">4</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;create&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;tt&quot;</span>,<span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;ttt&quot;</span>,<span class="attr">&quot;_id&quot;</span>:<span class="string">&quot;100&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;lisi&quot;</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;index&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;tt&quot;</span>,<span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;ttt&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;zhaosi&quot;</span>&#125;</span><br><span class="line">&#123;<span class="attr">&quot;update&quot;</span>:&#123;<span class="attr">&quot;_index&quot;</span>:<span class="string">&quot;lib2&quot;</span>,<span class="attr">&quot;_type&quot;</span>:<span class="string">&quot;books&quot;</span>,<span class="attr">&quot;_id&quot;</span>:<span class="string">&quot;4&quot;</span>&#125;&#125;</span><br><span class="line">&#123;<span class="attr">&quot;doc&quot;</span>:&#123;<span class="attr">&quot;price&quot;</span>:<span class="number">58</span>&#125;&#125;</span><br></pre></td></tr></table></figure>



<p>bulk一次最大处理多少数据量:</p>
<p>　　bulk会把将要处理的数据载入内存中，所以数据量是有限制的，最佳的数据量不是一个确定的数值，它取决于你的硬件，你的文档大小以及复杂性，你的索引以及搜索的负载。</p>
<p>　　一般建议是1000-5000个文档，大小建议是5-15MB，默认不能超过100M，可以在es的配置文件（即$ES_HOME下的config下的elasticsearch.yml）中。
　　</p>
<h3 id="2-5版本控制"><a href="#2-5版本控制" class="headerlink" title="2.5版本控制"></a>2.5版本控制</h3><p>ElasticSearch采用了乐观锁来保证数据的一致性，也就是说，当用户对document进行操作时，并不需要对该document作加锁和解锁的操作，只需要指定要操作的版本即可。当版本号一致时，ElasticSearch会允许该操作顺利执行，而当版本号存在冲突时，ElasticSearch会提示冲突并抛出异常（VersionConflictEngineException异常）。</p>
<p>ElasticSearch的版本号的取值范围为1到2^63-1。</p>
<p>内部版本控制：使用的是_version</p>
<p>外部版本控制：elasticsearch在处理外部版本号时会与对内部版本号的处理有些不同。它不再是检查_version是否与请求中指定的数值_相同_,而是检查当前的_version是否比指定的数值小。如果请求成功，那么外部的版本号就会被存储到文档中的_version中。</p>
<p>为了保持_version与外部版本控制的数据一致<br>使用version_type=external</p>
<h3 id="2-6-什么是Mapping"><a href="#2-6-什么是Mapping" class="headerlink" title="2.6 什么是Mapping"></a>2.6 什么是Mapping</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">PUT /myindex/article/<span class="number">1</span> </span><br><span class="line">&#123; </span><br><span class="line">  <span class="attr">&quot;post_date&quot;</span>: <span class="string">&quot;2018-05-10&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;Java&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;java is the best language&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;author_id&quot;</span>: <span class="number">119</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /myindex/article/<span class="number">2</span></span><br><span class="line">&#123; </span><br><span class="line">  <span class="attr">&quot;post_date&quot;</span>: <span class="string">&quot;2018-05-12&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;html&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;I like html&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;author_id&quot;</span>: <span class="number">120</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT /myindex/article/<span class="number">3</span></span><br><span class="line">&#123; </span><br><span class="line">  <span class="attr">&quot;post_date&quot;</span>: <span class="string">&quot;2018-05-16&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;es&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;content&quot;</span>: <span class="string">&quot;Es is distributed document store&quot;</span>, </span><br><span class="line">  <span class="attr">&quot;author_id&quot;</span>: <span class="number">110</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">GET /myindex/article/_search?q=<span class="number">2018</span><span class="number">-05</span></span><br><span class="line">GET /myindex/article/_search?q=<span class="number">2018</span><span class="number">-05</span><span class="number">-10</span></span><br><span class="line">GET /myindex/article/_search?q=html</span><br><span class="line">GET /myindex/article/_search?q=java</span><br></pre></td></tr></table></figure>



<p>#查看es自动创建的mapping</p>
<p>GET /myindex/article/_mapping</p>
<p>es自动创建了index，type，以及type对应的mapping(dynamic mapping)</p>
<p>什么是映射：mapping定义了type中的每个字段的数据类型以及这些字段如何分词等相关属性</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;myindex&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;article&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;properties&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;author_id&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;long&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;content&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">              <span class="attr">&quot;keyword&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;ignore_above&quot;</span>: <span class="number">256</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;post_date&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;date&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;title&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">              <span class="attr">&quot;keyword&quot;</span>: &#123;</span><br><span class="line">                <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;ignore_above&quot;</span>: <span class="number">256</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>创建索引的时候,可以预先定义字段的类型以及相关属性，这样就能够把日期字段处理成日期，把数字字段处理成数字，把字符串字段处理字符串值等</p>
<p>支持的数据类型：</p>
<p>(1)核心数据类型（Core datatypes）</p>
<pre><code>字符型：string，string类型包括
text 和 keyword

text类型被用来索引长文本，在建立索引前会将这些文本进行分词，转化为词的组合，建立索引。允许es来检索这些词语。text类型不能用来排序和聚合。

Keyword类型不需要进行分词，可以被用来检索过滤、排序和聚合。keyword 类型字段只能用本身来进行检索

数字型：long, integer, short, byte, double, float
日期型：date
布尔型：boolean
二进制型：binary
</code></pre>
<p>​<br>​<br>​    </p>
<p>(2)复杂数据类型（Complex datatypes）</p>
<pre><code>数组类型（Array datatype）：数组类型不需要专门指定数组元素的type，例如：
    字符型数组: [ &quot;one&quot;, &quot;two&quot; ]
    整型数组：[ 1, 2 ]
    数组型数组：[ 1, [ 2, 3 ]] 等价于[ 1, 2, 3 ]
    对象数组：[ &#123; &quot;name&quot;: &quot;Mary&quot;, &quot;age&quot;: 12 &#125;, &#123; &quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 10 &#125;]
对象类型（Object datatype）：_ object _ 用于单个JSON对象；
嵌套类型（Nested datatype）：_ nested _ 用于JSON数组；
</code></pre>
<p>(3)地理位置类型（Geo datatypes）</p>
<pre><code>地理坐标类型（Geo-point datatype）：_ geo_point _ 用于经纬度坐标；
地理形状类型（Geo-Shape datatype）：_ geo_shape _ 用于类似于多边形的复杂形状；
</code></pre>
<p>(4)特定类型（Specialised datatypes）</p>
<pre><code>IPv4 类型（IPv4 datatype）：_ ip _ 用于IPv4 地址；
Completion 类型（Completion datatype）：_ completion _提供自动补全建议；
Token count 类型（Token count datatype）：_ token_count _ 用于统计做了标记的字段的index数目，该值会一直增加，不会因为过滤条件而减少。
mapper-murmur3
类型：通过插件，可以通过 _ murmur3 _ 来计算 index 的 hash 值；
附加类型（Attachment datatype）：采用 mapper-attachments
插件，可支持_ attachments _ 索引，例如 Microsoft Office 格式，Open Document 格式，ePub, HTML 等。
</code></pre>
<p>支持的属性：</p>
<p>“store”:false//是否单独设置此字段的是否存储而从_source字段中分离，默认是false，只能搜索，不能获取值</p>
<p>“index”: true//分词，不分词是：false<br>   ，设置成false，字段将不会被索引</p>
<p>“analyzer”:”ik”//指定分词器,默认分词器为standard analyzer</p>
<p>“boost”:1.23//字段级别的分数加权，默认值是1.0</p>
<p>“doc_values”:false//对not_analyzed字段，默认都是开启，分词字段不能使用，对排序和聚合能提升较大性能，节约内存</p>
<p>“fielddata”:{“format”:”disabled”}//针对分词字段，参与排序或聚合时能提高性能，不分词字段统一建议使用doc_value</p>
<p>“fields”:{“raw”:{“type”:”string”,”index”:”not_analyzed”}} //可以对一个字段提供多种索引模式，同一个字段的值，一个分词，一个不分词</p>
<p>“ignore_above”:100 //超过100个字符的文本，将会被忽略，不被索引</p>
<p>“include_in_all”:ture//设置是否此字段包含在_all字段中，默认是true，除非index设置成no选项</p>
<p>“index_options”:”docs”//4个可选参数docs（索引文档号） ,freqs（文档号+词频），positions（文档号+词频+位置，通常用来距离查询），offsets（文档号+词频+位置+偏移量，通常被使用在高亮字段）分词字段默认是position，其他的默认是docs</p>
<p>“norms”:{“enable”:true,”loading”:”lazy”}//分词字段默认配置，不分词字段：默认{“enable”:false}，存储长度因子和索引时boost，建议对需要参与评分字段使用 ，会额外增加内存消耗量</p>
<p>“null_value”:”NULL”//设置一些缺失字段的初始化值，只有string可以使用，分词字段的null值也会被分词</p>
<p>“position_increament_gap”:0//影响距离查询或近似查询，可以设置在多值字段的数据上火分词字段上，查询时可指定slop间隔，默认值是100</p>
<p>“search_analyzer”:”ik”//设置搜索时的分词器，默认跟ananlyzer是一致的，比如index时用standard+ngram，搜索时用standard用来完成自动提示功能</p>
<p>“similarity”:”BM25”//默认是TF/IDF算法，指定一个字段评分策略，仅仅对字符串型和分词类型有效</p>
<p>“term_vector”:”no”//默认不存储向量信息，支持参数yes（term存储），with_positions（term+位置）,with_offsets（term+偏移量），with_positions_offsets(term+位置+偏移量) 对快速高亮fast vector highlighter能提升性能，但开启又会加大索引体积，不适合大数据量用</p>
<p>映射的分类：</p>
<p>(1)动态映射：</p>
<p>当ES在文档中碰到一个以前没见过的字段时，它会利用动态映射来决定该字段的类型，并自动地对该字段添加映射。</p>
<p>可以通过dynamic设置来控制这一行为，它能够接受以下的选项：</p>
<pre><code>true：默认值。动态添加字段
false：忽略新字段
strict：如果碰到陌生字段，抛出异常
</code></pre>
<p>dynamic设置可以适用在根对象上或者object类型的任意字段上。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib2</span><br><span class="line"># 给索引lib2创建映射类型</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;settings&quot;</span>:&#123;</span><br><span class="line"><span class="string">&quot;number_of_shards&quot;</span> : <span class="number">3</span>,</span><br><span class="line"><span class="string">&quot;number_of_replicas&quot;</span> : <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line"> <span class="string">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">  <span class="string">&quot;books&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;title&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;index&quot;</span>:<span class="keyword">false</span>&#125;,</span><br><span class="line">        <span class="string">&quot;publish_date&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span>,<span class="string">&quot;index&quot;</span>:<span class="keyword">false</span>&#125;,</span><br><span class="line">        <span class="string">&quot;price&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;double&quot;</span>&#125;,</span><br><span class="line">        <span class="string">&quot;number&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;integer&quot;</span>&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib2</span><br><span class="line"># 给索引lib2创建映射类型</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;settings&quot;</span>:&#123;</span><br><span class="line"><span class="string">&quot;number_of_shards&quot;</span> : <span class="number">3</span>,</span><br><span class="line"><span class="string">&quot;number_of_replicas&quot;</span> : <span class="number">0</span></span><br><span class="line">&#125;,</span><br><span class="line"> <span class="string">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">  <span class="string">&quot;books&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;title&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">        <span class="string">&quot;name&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,<span class="string">&quot;index&quot;</span>:<span class="keyword">false</span>&#125;,</span><br><span class="line">        <span class="string">&quot;publish_date&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span>,<span class="string">&quot;index&quot;</span>:<span class="keyword">false</span>&#125;,</span><br><span class="line">        <span class="string">&quot;price&quot;</span>:&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;double&quot;</span>&#125;,</span><br><span class="line">        <span class="string">&quot;number&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;type&quot;</span>:<span class="string">&quot;object&quot;</span>,</span><br><span class="line">            <span class="string">&quot;dynamic&quot;</span>:<span class="keyword">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="2-7基本查询-Query查询"><a href="#2-7基本查询-Query查询" class="headerlink" title="2.7基本查询(Query查询)"></a>2.7基本查询(Query查询)</h3><h4 id="2-7-1数据准备"><a href="#2-7-1数据准备" class="headerlink" title="2.7.1数据准备"></a>2.7.1数据准备</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /lib3</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;settings&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;number_of_shards&quot;</span> : <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;number_of_replicas&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">     <span class="string">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;user&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;address&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;age&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;integer&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;birthday&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search?q=name:lisi</span><br><span class="line">GET /lib3/user/_search?q=name:zhaoliu&amp;sort=age:desc</span><br></pre></td></tr></table></figure>



<h4 id="2-7-2-term查询和terms查询"><a href="#2-7-2-term查询和terms查询" class="headerlink" title="2.7.2 term查询和terms查询"></a>2.7.2 term查询和terms查询</h4><p>term query会去倒排索引中寻找确切的term，它并不知道分词器的存在。这种查询适合keyword 、numeric、date。</p>
<p>term:查询某个字段里含有某个关键词的文档</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search/</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;term&quot;</span>: &#123;<span class="string">&quot;interests&quot;</span>: <span class="string">&quot;changge&quot;</span>&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>terms:查询某个字段里含有多个关键词的文档</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;terms&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: [<span class="string">&quot;hejiu&quot;</span>,<span class="string">&quot;changge&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-7-3-控制查询返回的数量"><a href="#2-7-3-控制查询返回的数量" class="headerlink" title="2.7.3 控制查询返回的数量"></a>2.7.3 控制查询返回的数量</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">from：从哪一个文档开始</span><br><span class="line">size：需要的个数</span><br><span class="line"></span><br><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;from&quot;</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>:<span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;terms&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: [<span class="string">&quot;hejiu&quot;</span>,<span class="string">&quot;changge&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="2-7-4-返回版本号"><a href="#2-7-4-返回版本号" class="headerlink" title="2.7.4 返回版本号"></a>2.7.4 返回版本号</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>:<span class="keyword">true</span>,</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;terms&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: [<span class="string">&quot;hejiu&quot;</span>,<span class="string">&quot;changge&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-7-5-match查询"><a href="#2-7-5-match查询" class="headerlink" title="2.7.5 match查询"></a>2.7.5 match查询</h4><p>match query知道<strong>分词器</strong>的存在，会对filed进行分词操作，然后再查询</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;match&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;zhaoliu&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;match&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;age&quot;</span>: <span class="number">20</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>match_all:查询所有文档</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>multi_match:可以指定多个字段</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;multi_match&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;query&quot;</span>: <span class="string">&quot;lvyou&quot;</span>,</span><br><span class="line">            <span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;interests&quot;</span>,<span class="string">&quot;name&quot;</span>]</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>match_phrase:短语匹配查询</p>
<p>ElasticSearch引擎首先分析（analyze）查询字符串，从分析后的文本中构建短语查询，这意味着必须匹配短语中的所有分词，并且保证各个分词的相对位置不变：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>:&#123;  </span><br><span class="line">      <span class="string">&quot;match_phrase&quot;</span>:&#123;  </span><br><span class="line">         <span class="string">&quot;interests&quot;</span>: <span class="string">&quot;duanlian，shuoxiangsheng&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<h4 id="2-7-6-指定返回的字段"><a href="#2-7-6-指定返回的字段" class="headerlink" title="2.7.6 指定返回的字段"></a>2.7.6 指定返回的字段</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">0GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_source&quot;</span>: [<span class="string">&quot;address&quot;</span>,<span class="string">&quot;name&quot;</span>],</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: <span class="string">&quot;changge&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<h4 id="2-7-7控制加载的字段"><a href="#2-7-7控制加载的字段" class="headerlink" title="2.7.7控制加载的字段"></a>2.7.7控制加载的字段</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;includes&quot;</span>: [<span class="string">&quot;name&quot;</span>,<span class="string">&quot;address&quot;</span>],</span><br><span class="line">          <span class="string">&quot;excludes&quot;</span>: [<span class="string">&quot;age&quot;</span>,<span class="string">&quot;birthday&quot;</span>]</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用通配符*</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;includes&quot;</span>: <span class="string">&quot;addr*&quot;</span>,</span><br><span class="line">          <span class="string">&quot;excludes&quot;</span>: [<span class="string">&quot;name&quot;</span>,<span class="string">&quot;bir*&quot;</span>]</span><br><span class="line">		&#125;,</span><br><span class="line">	<span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    	<span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="2-7-8-排序"><a href="#2-7-8-排序" class="headerlink" title="2.7.8 排序"></a>2.7.8 排序</h4><p>使用sort实现排序：<br>desc:降序，asc升序</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;sort&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">           <span class="string">&quot;age&quot;</span>: &#123;</span><br><span class="line">               <span class="string">&quot;order&quot;</span>:<span class="string">&quot;asc&quot;</span></span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;match_all&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;sort&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">           &quot;age&quot;: &#123;</span><br><span class="line">               &quot;order&quot;:&quot;desc&quot;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="2-7-9-前缀匹配查询"><a href="#2-7-9-前缀匹配查询" class="headerlink" title="2.7.9 前缀匹配查询"></a>2.7.9 前缀匹配查询</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_phrase_prefix&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;query&quot;</span>: <span class="string">&quot;zhao&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-7-10-范围查询"><a href="#2-7-10-范围查询" class="headerlink" title="2.7.10 范围查询"></a>2.7.10 范围查询</h4><p>range:实现范围查询</p>
<p>参数：from,to,include_lower,include_upper,boost</p>
<p>include_lower:是否包含范围的左边界，默认是true</p>
<p>include_upper:是否包含范围的右边界，默认是true</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;range&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;birthday&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;from&quot;</span>: <span class="string">&quot;1990-10-10&quot;</span>,</span><br><span class="line">                <span class="string">&quot;to&quot;</span>: <span class="string">&quot;2018-05-01&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;range&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;age&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;from&quot;</span>: <span class="number">20</span>,</span><br><span class="line">                <span class="string">&quot;to&quot;</span>: <span class="number">25</span>,</span><br><span class="line">                <span class="string">&quot;include_lower&quot;</span>: <span class="keyword">true</span>,</span><br><span class="line">                <span class="string">&quot;include_upper&quot;</span>: <span class="keyword">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="2-7-11-wildcard查询"><a href="#2-7-11-wildcard查询" class="headerlink" title="2.7.11 wildcard查询"></a>2.7.11 wildcard查询</h4><p>允许使用通配符* 和 ?来进行查询</p>
<ul>
<li><p>*代表0个或多个字符</p>
</li>
<li><p>？代表任意一个字符</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;wildcard&quot;</span>: &#123;</span><br><span class="line">             <span class="string">&quot;name&quot;</span>: <span class="string">&quot;zhao*&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;wildcard&quot;</span>: &#123;</span><br><span class="line">             <span class="string">&quot;name&quot;</span>: <span class="string">&quot;li?i&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="2-7-12-fuzzy实现模糊查询"><a href="#2-7-12-fuzzy实现模糊查询" class="headerlink" title="2.7.12 fuzzy实现模糊查询"></a>2.7.12 fuzzy实现模糊查询</h4><ul>
<li><p>value：查询的关键字</p>
</li>
<li><p>boost：查询的权值，默认值是1.0</p>
</li>
<li><p>min_similarity:设置匹配的最小相似度，默认值为0.5，对于字符串，取值为0-1(包括0和1);对于数值，取值可能大于1;对于日期型取值为1d,1m等，1d就代表1天</p>
</li>
<li><p>prefix_length:指明区分词项的共同前缀长度，默认是0</p>
</li>
<li><p>max_expansions:查询中的词项可以扩展的数目，默认可以无限大</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;fuzzy&quot;</span>: &#123;</span><br><span class="line">             <span class="string">&quot;interests&quot;</span>: <span class="string">&quot;chagge&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">        &quot;fuzzy&quot;: &#123;</span><br><span class="line">             &quot;interests&quot;: &#123;</span><br><span class="line">                 &quot;value&quot;: &quot;chagge&quot;</span><br><span class="line">             &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-7-13-高亮搜索结果"><a href="#2-7-13-高亮搜索结果" class="headerlink" title="2.7.13 高亮搜索结果"></a>2.7.13 高亮搜索结果</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;match&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: <span class="string">&quot;changge&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;fields&quot;</span>: &#123;</span><br><span class="line">             <span class="string">&quot;interests&quot;</span>: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="2-8-Filter查询"><a href="#2-8-Filter查询" class="headerlink" title="2.8 Filter查询"></a>2.8 Filter查询</h3><p>filter是<strong>不计算相关性</strong>的，同时可以cache。因此，<em>filter速度要快于query</em>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib4/items/_bulk</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>: &#123;<span class="string">&quot;_id&quot;</span>: <span class="number">1</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>: <span class="number">40</span>,<span class="string">&quot;itemID&quot;</span>: <span class="string">&quot;ID100123&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>: &#123;<span class="string">&quot;_id&quot;</span>: <span class="number">2</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>: <span class="number">50</span>,<span class="string">&quot;itemID&quot;</span>: <span class="string">&quot;ID100124&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>: &#123;<span class="string">&quot;_id&quot;</span>: <span class="number">3</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>: <span class="number">25</span>,<span class="string">&quot;itemID&quot;</span>: <span class="string">&quot;ID100124&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>: &#123;<span class="string">&quot;_id&quot;</span>: <span class="number">4</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>: <span class="number">30</span>,<span class="string">&quot;itemID&quot;</span>: <span class="string">&quot;ID100125&quot;</span>&#125;</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>: &#123;<span class="string">&quot;_id&quot;</span>: <span class="number">5</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;price&quot;</span>: <span class="keyword">null</span>,<span class="string">&quot;itemID&quot;</span>: <span class="string">&quot;ID100127&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-8-1-简单的过滤查询"><a href="#2-8-1-简单的过滤查询" class="headerlink" title="2.8.1 简单的过滤查询"></a>2.8.1 简单的过滤查询</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123; </span><br><span class="line">       <span class="string">&quot;post_filter&quot;</span>: &#123;</span><br><span class="line">             <span class="string">&quot;term&quot;</span>: &#123;</span><br><span class="line">                 <span class="string">&quot;price&quot;</span>: <span class="number">40</span></span><br><span class="line">             &#125;</span><br><span class="line">       &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;post_filter&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;terms&quot;</span>: &#123;</span><br><span class="line">                 <span class="string">&quot;price&quot;</span>: [<span class="number">25</span>,<span class="number">40</span>]</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;post_filter&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;term&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;itemID&quot;</span>: <span class="string">&quot;ID100123&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看分词器分析的结果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/_mapping</span><br></pre></td></tr></table></figure>


<p>不希望商品id字段被分词，则重新创建映射</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DELETE lib4</span><br><span class="line"></span><br><span class="line">PUT /lib4</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;items&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;itemID&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;index&quot;</span>: <span class="keyword">false</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="2-8-2-bool过滤查询"><a href="#2-8-2-bool过滤查询" class="headerlink" title="2.8.2 bool过滤查询"></a>2.8.2 bool过滤查询</h4><p>可以实现组合过滤查询</p>
<p>格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">        &quot;must&quot;: [],</span><br><span class="line">        &quot;should&quot;: [],</span><br><span class="line">        &quot;must_not&quot;: []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>must:必须满足的条件—and</p>
</li>
<li><p>should：可以满足也可以不满足的条件–or</p>
</li>
<li><p>must_not:不需要满足的条件–not</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">    &quot;post_filter&quot;: &#123;</span><br><span class="line">          &quot;bool&quot;: &#123;</span><br><span class="line">               &quot;should&quot;: [</span><br><span class="line">                    &#123;&quot;term&quot;: &#123;&quot;price&quot;:25&#125;&#125;,</span><br><span class="line">                    &#123;&quot;term&quot;: &#123;&quot;itemID&quot;: &quot;id100123&quot;&#125;&#125;</span><br><span class="line">              ],</span><br><span class="line">            &quot;must_not&quot;: &#123;</span><br><span class="line">                &quot;term&quot;:&#123;&quot;price&quot;: 30&#125;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>嵌套使用bool：    </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;post_filter&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;should&quot;</span>: [</span><br><span class="line">                    &#123;<span class="string">&quot;term&quot;</span>: &#123;<span class="string">&quot;itemID&quot;</span>: <span class="string">&quot;id100123&quot;</span>&#125;&#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">                          <span class="string">&quot;must&quot;</span>: [</span><br><span class="line">                              &#123;<span class="string">&quot;term&quot;</span>: &#123;<span class="string">&quot;itemID&quot;</span>: <span class="string">&quot;id100124&quot;</span>&#125;&#125;,</span><br><span class="line">                              &#123;<span class="string">&quot;term&quot;</span>: &#123;<span class="string">&quot;price&quot;</span>: <span class="number">40</span>&#125;&#125;</span><br><span class="line">                            ]</span><br><span class="line">                          &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                  ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-8-3-范围过滤"><a href="#2-8-3-范围过滤" class="headerlink" title="2.8.3 范围过滤"></a>2.8.3 范围过滤</h4><p>使用range:</p>
<ul>
<li><p>gt:  &gt;</p>
</li>
<li><p>lt:  &lt;</p>
</li>
<li><p>gte:  &gt;=</p>
</li>
<li><p>lte:   &lt;=</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">     <span class="string">&quot;post_filter&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;range&quot;</span>: &#123;</span><br><span class="line">              <span class="string">&quot;price&quot;</span>: &#123;</span><br><span class="line">                   <span class="string">&quot;gt&quot;</span>: <span class="number">25</span>,</span><br><span class="line">                   <span class="string">&quot;lt&quot;</span>: <span class="number">50</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="2-8-5-过滤非空"><a href="#2-8-5-过滤非空" class="headerlink" title="2.8.5 过滤非空"></a>2.8.5 过滤非空</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;exists&quot;</span>:&#123;</span><br><span class="line">             <span class="string">&quot;field&quot;</span>:<span class="string">&quot;price&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;constant_score&quot;</span> : &#123;</span><br><span class="line">            <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;exists&quot;</span> : &#123; <span class="string">&quot;field&quot;</span> : <span class="string">&quot;price&quot;</span> &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="2-8-6-过滤器缓存"><a href="#2-8-6-过滤器缓存" class="headerlink" title="2.8.6 过滤器缓存"></a>2.8.6 过滤器缓存</h4><p>ElasticSearch提供了一种特殊的缓存，即过滤器缓存（filter cache），用来存储过滤器的结果，被缓存的过滤器并不需要消耗过多的内存（因为它们只存储了哪些文档能与过滤器相匹配的相关信息），而且可供后续所有与之相关的查询重复使用，从而极大地提高了查询性能。</p>
<p>注意：ElasticSearch并不是默认缓存所有过滤器，<br>以下过滤器默认不缓存：</p>
<pre><code>numeric_range
script
geo_bbox
geo_distance
geo_distance_range
geo_polygon
geo_shape
and
or
not
</code></pre>
<p>exists,missing,range,term,terms默认是开启缓存的</p>
<p>开启方式：在filter查询语句后边加上<br><em>“_catch”:true</em></p>
<h3 id="2-9-聚合查询"><a href="#2-9-聚合查询" class="headerlink" title="2.9 聚合查询"></a>2.9 聚合查询</h3><p>(1)sum</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;price_of_sum&quot;</span>: &#123;</span><br><span class="line">         <span class="string">&quot;sum&quot;</span>: &#123;</span><br><span class="line">           <span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>(2)min</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">0</span>, </span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;price_of_min&quot;</span>: &#123;</span><br><span class="line">         <span class="string">&quot;min&quot;</span>: &#123;</span><br><span class="line">           <span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>(3)max</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">0</span>, </span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;price_of_max&quot;</span>: &#123;</span><br><span class="line">         <span class="string">&quot;max&quot;</span>: &#123;</span><br><span class="line">           <span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>(4)avg</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;price_of_avg&quot;</span>: &#123;</span><br><span class="line">         <span class="string">&quot;avg&quot;</span>: &#123;</span><br><span class="line">           <span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>(5)cardinality:求基数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;price_of_cardi&quot;</span>: &#123;</span><br><span class="line">         <span class="string">&quot;cardinality&quot;</span>: &#123;</span><br><span class="line">           <span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>(6)terms:分组</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib4/items/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;price_group_by&quot;</span>: &#123;</span><br><span class="line">         <span class="string">&quot;terms&quot;</span>: &#123;</span><br><span class="line">           <span class="string">&quot;field&quot;</span>: <span class="string">&quot;price&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>对那些有唱歌兴趣的用户按年龄分组</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;interests&quot;</span>: <span class="string">&quot;changge&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="string">&quot;size&quot;</span>: <span class="number">0</span>, </span><br><span class="line">   <span class="string">&quot;aggs&quot;</span>:&#123;</span><br><span class="line">       <span class="string">&quot;age_group_by&quot;</span>:&#123;</span><br><span class="line">           <span class="string">&quot;terms&quot;</span>: &#123;</span><br><span class="line">             <span class="string">&quot;field&quot;</span>: <span class="string">&quot;age&quot;</span>,</span><br><span class="line">             <span class="string">&quot;order&quot;</span>: &#123;</span><br><span class="line">               <span class="string">&quot;avg_of_age&quot;</span>: <span class="string">&quot;desc&quot;</span></span><br><span class="line">             &#125;</span><br><span class="line">           &#125;,</span><br><span class="line">           <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">             <span class="string">&quot;avg_of_age&quot;</span>: &#123;</span><br><span class="line">               <span class="string">&quot;avg&quot;</span>: &#123;</span><br><span class="line">                 <span class="string">&quot;field&quot;</span>: <span class="string">&quot;age&quot;</span></span><br><span class="line">               &#125;</span><br><span class="line">             &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="2-10-复合查询"><a href="#2-10-复合查询" class="headerlink" title="2.10 复合查询"></a>2.10 复合查询</h3><p>将多个基本查询组合成单一查询的查询</p>
<h4 id="2-10-1-使用bool查询"><a href="#2-10-1-使用bool查询" class="headerlink" title="2.10.1 使用bool查询"></a>2.10.1 使用bool查询</h4><p>接收以下参数：</p>
<ul>
<li>must：文档 必须匹配这些条件才能被包含进来。 </li>
<li>must_not： 文档 必须不匹配这些条件才能被包含进来。 </li>
<li>should：如果满足这些语句中的任意语句，将增加 _score，否则，无任何影响。它们主要用于修正每个文档的相关性得分。   </li>
<li>filter：必须 匹配，但它以不评分、过滤模式来进行。这些语句对评分没有贡献，只是根据过滤标准来排除或包含文档。</li>
</ul>
<p>相关性得分是如何组合的。每一个子查询都独自地计算文档的相关性得分。一旦他们的得分被计算出来， bool 查询就将这些得分进行合并并且返回一个代表整个布尔操作的得分。</p>
<p>下面的查询用于查找 title 字段匹配 how to make millions 并且不被标识为 spam 的文档。那些被标识为 starred 或在2014之后的文档，将比另外那些文档拥有更高的排名。如果 <em>两者</em> 都满足，那么它排名将更高：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">        &quot;must&quot;: &#123; &quot;match&quot;: &#123; &quot;title&quot;: &quot;how to make millions&quot; &#125;&#125;,</span><br><span class="line">        &quot;must_not&quot;: &#123; &quot;match&quot;: &#123; &quot;tag&quot;:   &quot;spam&quot; &#125;&#125;,</span><br><span class="line">        &quot;should&quot;: [</span><br><span class="line">            &#123; &quot;match&quot;: &#123; &quot;tag&quot;: &quot;starred&quot; &#125;&#125;,</span><br><span class="line">            &#123; &quot;range&quot;: &#123; &quot;date&quot;: &#123; &quot;gte&quot;: &quot;2014-01-01&quot; &#125;&#125;&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>如果没有 must 语句，那么至少需要能够匹配其中的一条 should 语句。但，如果存在至少一条 must 语句，则对 should 语句的匹配没有要求。<br>如果我们不想因为文档的时间而影响得分，可以用 filter 语句来重写前面的例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;must&quot;</span>: &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;title&quot;</span>: <span class="string">&quot;how to make millions&quot;</span> &#125;&#125;,</span><br><span class="line">        <span class="string">&quot;must_not&quot;</span>: &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;tag&quot;</span>:   <span class="string">&quot;spam&quot;</span> &#125;&#125;,</span><br><span class="line">        <span class="string">&quot;should&quot;</span>: [</span><br><span class="line">            &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;starred&quot;</span> &#125;&#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;range&quot;</span>: &#123; <span class="string">&quot;date&quot;</span>: &#123; <span class="string">&quot;gte&quot;</span>: <span class="string">&quot;2014-01-01&quot;</span> &#125;&#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>通过将 range 查询移到 filter 语句中，我们将它转成不评分的查询，将不再影响文档的相关性排名。由于它现在是一个不评分的查询，可以使用各种对 filter 查询有效的优化手段来提升性能。</p>
<p>bool 查询本身也可以被用做不评分的查询。简单地将它放置到 filter 语句中并在内部构建布尔逻辑：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;must&quot;</span>: &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;title&quot;</span>: <span class="string">&quot;how to make millions&quot;</span> &#125;&#125;,</span><br><span class="line">        <span class="string">&quot;must_not&quot;</span>: &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;tag&quot;</span>:   <span class="string">&quot;spam&quot;</span> &#125;&#125;,</span><br><span class="line">        <span class="string">&quot;should&quot;</span>: [</span><br><span class="line">            &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;starred&quot;</span> &#125;&#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;bool&quot;</span>: &#123; </span><br><span class="line">              <span class="string">&quot;must&quot;</span>: [</span><br><span class="line">                  &#123; <span class="string">&quot;range&quot;</span>: &#123; <span class="string">&quot;date&quot;</span>: &#123; <span class="string">&quot;gte&quot;</span>: <span class="string">&quot;2014-01-01&quot;</span> &#125;&#125;&#125;,</span><br><span class="line">                  &#123; <span class="string">&quot;range&quot;</span>: &#123; <span class="string">&quot;price&quot;</span>: &#123; <span class="string">&quot;lte&quot;</span>: <span class="number">29.99</span> &#125;&#125;&#125;</span><br><span class="line">              ],</span><br><span class="line">              <span class="string">&quot;must_not&quot;</span>: [</span><br><span class="line">                  &#123; <span class="string">&quot;term&quot;</span>: &#123; <span class="string">&quot;category&quot;</span>: <span class="string">&quot;ebooks&quot;</span> &#125;&#125;</span><br><span class="line">              ]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="2-10-2-constant-score查询"><a href="#2-10-2-constant-score查询" class="headerlink" title="2.10.2 constant_score查询"></a>2.10.2 constant_score查询</h4><p>它将一个不变的常量评分应用于所有匹配的文档。它被经常用于你只需要执行一个 filter 而没有其它查询（例如，评分查询）的情况下。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;constant_score&quot;</span>:   &#123;</span><br><span class="line">        <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;term&quot;</span>: &#123; <span class="string">&quot;category&quot;</span>: <span class="string">&quot;ebooks&quot;</span> &#125; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>term 查询被放置在 constant_score 中，转成不评分的filter。这种方式可以用来取代只有 filter 语句的 bool 查询。 </p>
<h2 id="第三节-ElasticSearch原理"><a href="#第三节-ElasticSearch原理" class="headerlink" title="第三节 ElasticSearch原理"></a>第三节 ElasticSearch原理</h2><h3 id="3-1-解析es的分布式架构"><a href="#3-1-解析es的分布式架构" class="headerlink" title="3.1 解析es的分布式架构"></a>3.1 解析es的分布式架构</h3><h4 id="3-1-1-分布式架构的透明隐藏特性"><a href="#3-1-1-分布式架构的透明隐藏特性" class="headerlink" title="3.1.1 分布式架构的透明隐藏特性"></a>3.1.1 分布式架构的透明隐藏特性</h4><p>ElasticSearch是一个分布式系统，隐藏了复杂的处理机制</p>
<ul>
<li><p>分片机制：我们不用关心数据是按照什么机制分片的、最后放入到哪个分片中</p>
</li>
<li><p>分片的副本：</p>
</li>
<li><p>集群发现机制(cluster discovery)：比如当前我们启动了一个es进程，当启动了第二个es进程时，这个进程作为一个node自动就发现了集群，并且加入了进去</p>
</li>
<li><p>shard负载均衡：比如现在有10shard，集群中有3个节点，es会进行均衡的进行分配，以保持每个节点均衡的负载请求 </p>
</li>
<li><p>请求路由</p>
</li>
</ul>
<h4 id="3-1-2-扩容机制"><a href="#3-1-2-扩容机制" class="headerlink" title="3.1.2 扩容机制"></a>3.1.2 扩容机制</h4><ul>
<li><p>垂直扩容：购置新的机器，替换已有的机器</p>
</li>
<li><p>水平扩容：直接增加机器</p>
</li>
</ul>
<h4 id="3-1-3-rebalance-自动均衡"><a href="#3-1-3-rebalance-自动均衡" class="headerlink" title="3.1.3 rebalance(自动均衡)"></a>3.1.3 rebalance(自动均衡)</h4><p>增加或减少节点时会自动均衡</p>
<h4 id="3-1-4-master节点"><a href="#3-1-4-master节点" class="headerlink" title="3.1.4 master节点"></a>3.1.4 master节点</h4><p>主节点的主要职责是和集群操作相关的内容，如创建或删除索引，跟踪哪些节点是群集的一部分，并决定哪些分片分配给相关的节点。稳定的主节点对集群的健康是非常重要的。</p>
<h4 id="3-1-5-节点对等"><a href="#3-1-5-节点对等" class="headerlink" title="3.1.5 节点对等"></a>3.1.5 节点对等</h4><p>每个节点都能接收请求<br>每个节点接收到请求后都能把该请求路由到有相关数据的其它节点上<br>接收原始请求的节点负责采集数据并返回给客户端</p>
<h3 id="3-2-分片和副本机制"><a href="#3-2-分片和副本机制" class="headerlink" title="3.2 分片和副本机制"></a>3.2 分片和副本机制</h3><ol>
<li><p>index包含多个shard</p>
</li>
<li><p>每个shard都是一个最小工作单元，承载部分数据；每个shard都是一个lucene实例，有完整的建立索引和处理请求的能力</p>
</li>
<li><p>增减节点时，shard会自动在nodes中负载均衡</p>
</li>
<li><p>primary shard和replica shard，每个document肯定只存在于某一个primary shard以及其对应的replica shard中，不可能存在于多个primary shard</p>
</li>
<li><p>replica shard是primary shard的副本，负责容错，以及承担读请求负载</p>
</li>
<li><p>primary shard的数量在创建索引的时候就固定了，replica shard的数量可以随时修改</p>
</li>
<li><p>primary shard的默认数量是5，replica默认是1，默认有10个shard，5个primary shard，5个replica shard</p>
</li>
<li><p>primary shard不能和自己的replica shard放在同一个节点上（否则节点宕机，primary shard和副本都丢失，起不到容错的作用），但是可以和其他primary shard的replica shard放在同一个节点上</p>
</li>
</ol>
<h3 id="3-3-单节点环境下创建索引分析"><a href="#3-3-单节点环境下创建索引分析" class="headerlink" title="3.3 单节点环境下创建索引分析"></a>3.3 单节点环境下创建索引分析</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /myindex</span><br><span class="line">&#123;</span><br><span class="line">   <span class="string">&quot;settings&quot;</span> : &#123;</span><br><span class="line">      <span class="string">&quot;number_of_shards&quot;</span> : <span class="number">3</span>,</span><br><span class="line">      <span class="string">&quot;number_of_replicas&quot;</span> : <span class="number">1</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>这个时候，只会将3个primary shard分配到仅有的一个node上去，另外3个replica shard是无法分配的（一个shard的副本replica，他们两个是不能在同一个节点的）。集群可以正常工作，但是一旦出现节点宕机，数据全部丢失，而且集群不可用，无法接收任何请求。</p>
<h3 id="3-4-两个节点环境下创建索引分析"><a href="#3-4-两个节点环境下创建索引分析" class="headerlink" title="3.4 两个节点环境下创建索引分析"></a>3.4 两个节点环境下创建索引分析</h3><p>将3个primary shard分配到一个node上去，另外3个replica shard分配到另一个节点上</p>
<p>primary shard 和replica shard 保持同步</p>
<p>primary shard 和replica shard 都可以处理客户端的读请求</p>
<h3 id="3-5-水平扩容的过程"><a href="#3-5-水平扩容的过程" class="headerlink" title="3.5 水平扩容的过程"></a>3.5 水平扩容的过程</h3><ol>
<li><p>扩容后primary shard和replica shard会自动的负载均衡</p>
</li>
<li><p>扩容后每个节点上的shard会减少，那么分配给每个shard的CPU，内存，IO资源会更多，性能提高</p>
</li>
<li><p>扩容的极限，如果有6个shard，扩容的极限就是6个节点，每个节点上一个shard，如果想超出扩容的极限，比如说扩容到9个节点，那么可以增加replica shard的个数</p>
</li>
<li><p>6个shard，3个节点，最多能承受几个节点所在的服务器宕机？(容错性)<br>任何一台服务器宕机都会丢失部分数据</p>
</li>
</ol>
<p>为了提高容错性，增加shard的个数：<br>9个shard，(3个primary shard，6个replicashard)，这样就能容忍最多两台服务器宕机了</p>
<p><strong>总结：</strong>扩容是为了提高系统的吞吐量，同时也要考虑容错性，也就是让尽可能多的服务器宕机还能保证数据不丢失</p>
<h3 id="3-6ElasticSearch的容错机制"><a href="#3-6ElasticSearch的容错机制" class="headerlink" title="3.6ElasticSearch的容错机制"></a>3.6ElasticSearch的容错机制</h3><p>以9个shard，3个节点为例：</p>
<p>1.如果master node 宕机，此时不是所有的primary shard都是Active status，所以此时的集群状态是red。</p>
<p>容错处理的第一步:是选举一台服务器作为master<br>容错处理的第二步:新选举出的master会把挂掉的primary shard的某个replica shard 提升为primary shard,此时集群的状态为yellow，因为少了一个replica shard，并不是所有的replica shard都是active status</p>
<p>容错处理的第三步：重启故障机，新master会把所有的副本都复制一份到该节点上，（同步一下宕机后发生的修改），此时集群的状态为green，因为所有的primary shard和replica shard都是Active status</p>
<h3 id="3-7文档的核心元数据"><a href="#3-7文档的核心元数据" class="headerlink" title="3.7文档的核心元数据"></a>3.7文档的核心元数据</h3><p>1._index:</p>
<p>说明了一个文档存储在哪个索引中</p>
<p>同一个索引下存放的是相似的文档(文档的field多数是相同的)</p>
<p>索引名必须是小写的，不能以下划线开头，不能包括逗号</p>
<p>2._type:</p>
<p>表示文档属于索引中的哪个类型</p>
<p>一个索引下只能有一个type</p>
<p>类型名可以是大写也可以是小写的，不能以下划线开头，不能包括逗号</p>
<p>3._id:</p>
<p>文档的唯一标识，和索引，类型组合在一起唯一标识了一个文档</p>
<p>可以手动指定值，也可以由es来生成这个值</p>
<h3 id="3-8-文档id生成方式"><a href="#3-8-文档id生成方式" class="headerlink" title="3.8 文档id生成方式"></a>3.8 文档id生成方式</h3><p>1.手动指定</p>
<p>  put /index/type/66</p>
<p>  通常是把其它系统的已有数据导入到es时</p>
<p>2.由es生成id值</p>
<p>  post /index/type</p>
<p> es生成的id长度为20个字符，使用的是base64编码，URL安全，使用的是GUID算法，分布式下并发生成id值时不会冲突</p>
<h3 id="3-9-source元数据分析"><a href="#3-9-source元数据分析" class="headerlink" title="3.9 _source元数据分析"></a>3.9 _source元数据分析</h3><p>其实就是我们在添加文档时request body中的内容</p>
<p>指定返回的结果中含有哪些字段：</p>
<p>get /index/type/1?_source=name</p>
<h3 id="3-10-改变文档内容原理解析"><a href="#3-10-改变文档内容原理解析" class="headerlink" title="3.10 改变文档内容原理解析"></a>3.10 改变文档内容原理解析</h3><p>替换方式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /lib/user/<span class="number">4</span></span><br><span class="line">&#123; <span class="string">&quot;first_name&quot;</span> : <span class="string">&quot;Jane&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;last_name&quot;</span> :   <span class="string">&quot;Lucy&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;age&quot;</span> :         <span class="number">24</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;about&quot;</span> :       <span class="string">&quot;I like to collect rock albums&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;interests&quot;</span>:  [ <span class="string">&quot;music&quot;</span> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>修改方式(partial update)：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib/user/<span class="number">2</span>/_update</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;doc&quot;</span>:&#123;</span><br><span class="line">       <span class="string">&quot;age&quot;</span>:<span class="number">26</span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>删除文档：标记为deleted，随着数据量的增加，es会选择合适的时间删除掉</p>
<h3 id="3-11-基于groovy脚本执行partial-update"><a href="#3-11-基于groovy脚本执行partial-update" class="headerlink" title="3.11 基于groovy脚本执行partial update"></a>3.11 基于groovy脚本执行partial update</h3><p>es有内置的脚本支持，可以基于groovy脚本实现复杂的操作</p>
<p>1.修改年龄</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib/user/<span class="number">4</span>/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;script&quot;</span>: <span class="string">&quot;ctx._source.age+=1&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>2.修改名字</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib/user/<span class="number">4</span>/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;script&quot;</span>: <span class="string">&quot;ctx._source.last_name+=&#x27;hehe&#x27;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>3.添加爱好</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib/user/<span class="number">4</span>/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;script&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source&quot;</span>: <span class="string">&quot;ctx._source.interests.add(params.tag)&quot;</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;tag&quot;</span>:<span class="string">&quot;picture&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>4.删除爱好</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib/user/<span class="number">4</span>/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;script&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source&quot;</span>: <span class="string">&quot;ctx._source.interests.remove(ctx._source.interests.indexOf(params.tag))&quot;</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;tag&quot;</span>:<span class="string">&quot;picture&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>5.删除文档</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib/user/<span class="number">4</span>/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;script&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;source&quot;</span>: <span class="string">&quot;ctx.op=ctx._source.age==params.count?&#x27;delete&#x27;:&#x27;none&#x27;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;count&quot;</span>:<span class="number">29</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>6.upsert</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib/user/<span class="number">4</span>/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;script&quot;</span>: <span class="string">&quot;ctx._source.age += 1&quot;</span>,</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;upsert&quot;</span>: &#123;</span><br><span class="line">     <span class="string">&quot;first_name&quot;</span> : <span class="string">&quot;Jane&quot;</span>,</span><br><span class="line">     <span class="string">&quot;last_name&quot;</span> :   <span class="string">&quot;Lucy&quot;</span>,</span><br><span class="line">     <span class="string">&quot;age&quot;</span> :  <span class="number">20</span>,</span><br><span class="line">     <span class="string">&quot;about&quot;</span> :       <span class="string">&quot;I like to collect rock albums&quot;</span>,</span><br><span class="line">     <span class="string">&quot;interests&quot;</span>:  [ <span class="string">&quot;music&quot;</span> ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="3-12-partial-update-处理并发冲突"><a href="#3-12-partial-update-处理并发冲突" class="headerlink" title="3.12 partial update 处理并发冲突"></a>3.12 partial update 处理并发冲突</h3><p>使用的是乐观锁:_version</p>
<p>retry_on_conflict:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /lib/user/<span class="number">4</span>/_update?retry_on_conflict=<span class="number">3</span></span><br></pre></td></tr></table></figure>



<p>重新获取文档数据和版本信息进行更新，不断的操作，最多操作的次数就是retry_on_conflict的值</p>
<h3 id="3-13-文档数据路由原理解析"><a href="#3-13-文档数据路由原理解析" class="headerlink" title="3.13 文档数据路由原理解析"></a>3.13 文档数据路由原理解析</h3><p>1.文档路由到分片上：</p>
<p> 一个索引由多个分片构成，当添加(删除，修改)一个文档时，es就需要决定这个文档存储在哪个分片上，这个过程就称为数据路由(routing)</p>
<p>2.路由算法：</p>
<pre><code> shard=hash(routing) % number_of_pirmary_shards
</code></pre>
<p>示例：一个索引，3个primary shard</p>
<p>(1)每次增删改查时，都有一个routing值，默认是文档的_id的值</p>
<p>(2)对这个routing值使用哈希函数进行计算</p>
<p>(3)计算出的值再和主分片个数取余数</p>
<p>余数肯定在0—（number_of_pirmary_shards-1）之间，文档就在对应的shard上</p>
<p>routing值默认是文档的_id的值，也可以手动指定一个值，手动指定对于负载均衡以及提高批量读取的性能都有帮助</p>
<p>3.primary shard个数一旦确定就不能修改了</p>
<h3 id="3-14-文档增删改内部原理"><a href="#3-14-文档增删改内部原理" class="headerlink" title="3.14 文档增删改内部原理"></a>3.14 文档增删改内部原理</h3><p>1:发送增删改请求时，可以选择任意一个节点，该节点就成了协调节点(coordinating node)</p>
<p>2.协调节点使用路由算法进行路由，然后将请求转到primary shard所在节点，该节点处理请求，并把数据同步到它的replica shard</p>
<p>3.协调节点对客户端做出响应</p>
<h3 id="3-15-写一致性原理和quorum机制"><a href="#3-15-写一致性原理和quorum机制" class="headerlink" title="3.15 写一致性原理和quorum机制"></a>3.15 写一致性原理和quorum机制</h3><p>1.任何一个增删改操作都可以跟上一个参数<br>consistency</p>
<p>可以给该参数指定的值：</p>
<p>one: (primary shard)只要有一个primary shard是活跃的就可以执行</p>
<p>all: (all shard)所有的primary shard和replica shard都是活跃的才能执行</p>
<p>quorum: (default) 默认值，大部分shard是活跃的才能执行 （例如共有6个shard，至少有3个shard是活跃的才能执行写操作）</p>
<p>2.quorum机制：多数shard都是可用的，</p>
<p>int((primary+number_of_replica)/2)+1</p>
<p>例如：3个primary shard，1个replica</p>
<p>int((3+1)/2)+1=3</p>
<p>至少3个shard是活跃的</p>
<p>注意：可能出现shard不能分配齐全的情况</p>
<p>比如：1个primary shard,1个replica<br>int((1+1)/2)+1=2<br>但是如果只有一个节点，因为primary shard和replica shard不能在同一个节点上，所以仍然不能执行写操作</p>
<p>再举例：1个primary shard,3个replica,2个节点</p>
<p>int((1+3)/2)+1=3</p>
<p>最后:当活跃的shard的个数没有达到要求时，<br>es默认会等待一分钟，如果在等待的期间活跃的shard的个数没有增加，则显示timeout</p>
<p>put /index/type/id?timeout=60s</p>
<h3 id="3-16-文档查询内部原理"><a href="#3-16-文档查询内部原理" class="headerlink" title="3.16 文档查询内部原理"></a>3.16 文档查询内部原理</h3><p>第一步：查询请求发给任意一个节点，该节点就成了coordinating node，该节点使用路由算法算出文档所在的primary shard</p>
<p>第二步：协调节点把请求转发给primary shard也可以转发给replica shard(使用轮询调度算法(Round-Robin Scheduling，把请求平均分配至primary shard 和replica shard)</p>
<p>第三步：处理请求的节点把结果返回给协调节点，协调节点再返回给应用程序</p>
<p>特殊情况：请求的文档还在建立索引的过程中，primary shard上存在，但replica shar上不存在，但是请求被转发到了replica shard上，这时就会提示找不到文档</p>
<h3 id="3-17-bulk批量操作的json格式解析"><a href="#3-17-bulk批量操作的json格式解析" class="headerlink" title="3.17 bulk批量操作的json格式解析"></a>3.17 bulk批量操作的json格式解析</h3><p>bulk的格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;action:&#123;metadata&#125;&#125;\n</span><br><span class="line"></span><br><span class="line">&#123;requstbody&#125;\n</span><br></pre></td></tr></table></figure>



<p>为什么不使用如下格式：</p>
<p>[{</p>
<p>“action”: {</p>
<p>},</p>
<p>“data”: {</p>
<p>}</p>
<p>}]</p>
<p>这种方式可读性好，但是内部处理就麻烦了：</p>
<p>1.将json数组解析为JSONArray对象，在内存中就需要有一份json文本的拷贝，另外还有一个JSONArray对象。</p>
<p>2.解析json数组里的每个json，对每个请求中的document进行路由</p>
<p>3.为路由到同一个shard上的多个请求，创建一个请求数组</p>
<p>4.将这个请求数组序列化</p>
<p>5.将序列化后的请求数组发送到对应的节点上去</p>
<p>耗费更多内存，增加java虚拟机开销</p>
<p>1.不用将其转换为json对象，直接按照换行符切割json，内存中不需要json文本的拷贝</p>
<p>2.对每两个一组的json，读取meta，进行document路由</p>
<p>3.直接将对应的json发送到node上去</p>
<h3 id="3-18-查询结果分析"><a href="#3-18-查询结果分析" class="headerlink" title="3.18 查询结果分析"></a>3.18 查询结果分析</h3> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;took&quot;</span>: <span class="number">419</span>,</span><br><span class="line">  <span class="string">&quot;timed_out&quot;</span>: <span class="keyword">false</span>,</span><br><span class="line">  <span class="string">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;total&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;successful&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;skipped&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;failed&quot;</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;hits&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;total&quot;</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;max_score&quot;</span>: <span class="number">0.6931472</span>,</span><br><span class="line">    <span class="string">&quot;hits&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;lib3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">        <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;_score&quot;</span>: <span class="number">0.6931472</span>,</span><br><span class="line">        <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;address&quot;</span>: <span class="string">&quot;bei jing hai dian qu qing he zhen&quot;</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;lisi&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;lib3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">        <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;_score&quot;</span>: <span class="number">0.47000363</span>,</span><br><span class="line">        <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;address&quot;</span>: <span class="string">&quot;bei jing hai dian qu qing he zhen&quot;</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;zhaoming&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>



<p>took：查询耗费的时间，单位是毫秒</p>
<p>_shards：共请求了多少个shard</p>
<p>total：查询出的文档总个数</p>
<p>max_score： 本次查询中，相关度分数的最大值，文档和此次查询的匹配度越高，_score的值越大，排位越靠前</p>
<p>hits：默认查询前10个文档</p>
<p>timed_out：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search?timeout=10ms</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_source&quot;</span>: [<span class="string">&quot;address&quot;</span>,<span class="string">&quot;name&quot;</span>],</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: <span class="string">&quot;changge&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<h3 id="3-19-多index，多type查询模式"><a href="#3-19-多index，多type查询模式" class="headerlink" title="3.19 多index，多type查询模式"></a>3.19 多index，多type查询模式</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET _search</span><br><span class="line"></span><br><span class="line">GET /lib/_search</span><br><span class="line"></span><br><span class="line">GET /lib,lib3/_search</span><br><span class="line"></span><br><span class="line">GET <span class="comment">/*3,*4/_search</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">GET /lib/user/_search</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">GET /lib,lib4/user,items/_search</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">GET /_all/_search</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">GET /_all/user,items/_search</span></span><br></pre></td></tr></table></figure>



<h3 id="3-20-分页查询中的deep-paging问题"><a href="#3-20-分页查询中的deep-paging问题" class="headerlink" title="3.20 分页查询中的deep paging问题"></a>3.20 分页查询中的deep paging问题</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;from&quot;</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>:<span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;terms&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: [<span class="string">&quot;hejiu&quot;</span>,<span class="string">&quot;changge&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>GET /_search?from=0&amp;size=3</p>
<p>deep paging:查询的很深，比如一个索引有三个primary shard，分别存储了6000条数据，我们要得到第100页的数据(每页10条)，类似这种情况就叫deep paging</p>
<p>如何得到第100页的10条数据？</p>
<p>在每个shard中搜索990到999这10条数据，然后用这30条数据排序，排序之后取10条数据就是要搜索的数据，这种做法是错的，因为3个shard中的数据的_score分数不一样，可能这某一个shard中第一条数据的_score分数比另一个shard中第1000条都要高，所以在每个shard中搜索990到999这10条数据然后排序的做法是不正确的。</p>
<p>正确的做法是每个shard把0到999条数据全部搜索出来（按排序顺序），然后全部返回给coordinate node，由coordinate node按_score分数排序后，取出第100页的10条数据，然后返回给客户端。</p>
<p>deep paging性能问题</p>
<p>1.耗费网络带宽，因为搜索过深的话，各shard要把数据传送给coordinate node，这个过程是有大量数据传递的，消耗网络，</p>
<p>2.消耗内存，各shard要把数据传送给coordinate node，这个传递回来的数据，是被coordinate node保存在内存中的，这样会大量消耗内存。</p>
<p>3.消耗cpu coordinate node要把传回来的数据进行排序，这个排序过程很消耗cpu.</p>
<p>鉴于deep paging的性能问题，所以应尽量减少使用。</p>
<h3 id="3-21-query-string查询及copy-to解析"><a href="#3-21-query-string查询及copy-to解析" class="headerlink" title="3.21 query string查询及copy_to解析"></a>3.21 query string查询及copy_to解析</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search?q=interests:changge</span><br><span class="line"></span><br><span class="line">GET /lib3/user/_search?q=+interests:changge</span><br><span class="line"></span><br><span class="line">GET /lib3/user/_search?q=-interests:changge</span><br></pre></td></tr></table></figure>



<p>copy_to字段是把其它字段中的值，以空格为分隔符组成一个大字符串，然后被分析和索引，但是不存储，也就是说它能被查询，但不能被取回显示。</p>
<p>注意:copy_to指向的字段字段类型要为：text</p>
<p>当没有指定field时，就会从copy_to字段中查询<br>GET /lib3/user/_search?q=changge</p>
<h3 id="3-22字符串排序问题"><a href="#3-22字符串排序问题" class="headerlink" title="3.22字符串排序问题"></a>3.22字符串排序问题</h3><p>对一个字符串类型的字段进行排序通常不准确，因为已经被分词成多个词条了</p>
<p>解决方式：对字段索引两次，一次索引分词（用于搜索），一次索引不分词(用于排序)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/_search</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;sort&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;interests&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;order&quot;</span>: <span class="string">&quot;desc&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;sort&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;interests.raw&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;order&quot;</span>: <span class="string">&quot;asc&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DELETE lib3</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /lib3</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;settings&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;number_of_shards&quot;</span> : <span class="number">3</span>,</span><br><span class="line">        <span class="string">&quot;number_of_replicas&quot;</span> : <span class="number">0</span></span><br><span class="line">      &#125;,</span><br><span class="line">     <span class="string">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;user&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;address&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;age&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;integer&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;birthday&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,</span><br><span class="line">                <span class="string">&quot;fields&quot;</span>: &#123;</span><br><span class="line">                  <span class="string">&quot;raw&quot;</span>:&#123;</span><br><span class="line">                     <span class="string">&quot;type&quot;</span>: <span class="string">&quot;keyword&quot;</span></span><br><span class="line">                   &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;fielddata&quot;</span>: <span class="keyword">true</span></span><br><span class="line">             &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<h3 id="3-23-如何计算相关度分数"><a href="#3-23-如何计算相关度分数" class="headerlink" title="3.23 如何计算相关度分数"></a>3.23 如何计算相关度分数</h3><p>使用的是TF/IDF算法(Term Frequency&amp;Inverse Document Frequency)</p>
<p>1.Term Frequency:我们查询的文本中的词条在document本中出现了多少次，出现次数越多，相关度越高</p>
<p>搜索内容： hello world</p>
<p>Hello，I love china.</p>
<p>Hello world,how are you!</p>
<p>2.Inverse Document Frequency：我们查询的文本中的词条在索引的所有文档中出现了多少次，出现的次数越多，相关度越低</p>
<p>搜索内容：hello world</p>
<p>hello，what are you doing?</p>
<p>I like the world.</p>
<p>hello 在索引的所有文档中出现了500次，world出现了100次</p>
<p>3.Field-length(字段长度归约) norm:field越长，相关度越低</p>
<p>搜索内容：hello world</p>
<p>{“title”:”hello,what’s your name?”,”content”:{“owieurowieuolsdjflk”}}</p>
<p>{“title”:”hi,good morning”,”content”:{“lkjkljkj…….world”}}</p>
<p>查看分数是如何计算的：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search?explain=<span class="keyword">true</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;match&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: <span class="string">&quot;duanlian,changge&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>查看一个文档能否匹配上某个查询：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/<span class="number">2</span>/_explain</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;match&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: <span class="string">&quot;duanlian,changge&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<h3 id="3-24-Doc-Values-解析"><a href="#3-24-Doc-Values-解析" class="headerlink" title="3.24 Doc Values 解析"></a>3.24 Doc Values 解析</h3><p>DocValues其实是Lucene在构建倒排索引时，会额外建立一个有序的正排索引(基于document =&gt; field value的映射列表)</p>
<p>{“birthday”:”1985-11-11”,age:23}</p>
<p>{“birthday”:”1989-11-11”,age:29}</p>
<p>document     age       birthday</p>
<p>doc1         23         1985-11-11</p>
<p>doc2         29         1989-11-11</p>
<p>存储在磁盘上，节省内存 </p>
<p>对排序，分组和一些聚合操作能够大大提升性能 </p>
<p>注意：默认对不分词的字段是开启的，对分词字段无效（需要把fielddata设置为true）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /lib3</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;settings&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;number_of_shards&quot;</span> : <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;number_of_replicas&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">     <span class="string">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;user&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;address&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;age&quot;</span>: &#123;</span><br><span class="line">              <span class="string">&quot;type&quot;</span>:<span class="string">&quot;integer&quot;</span>,</span><br><span class="line">              <span class="string">&quot;doc_values&quot;</span>:<span class="keyword">false</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;interests&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;birthday&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span>&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<h3 id="3-25-基于scroll技术滚动搜索大量数据"><a href="#3-25-基于scroll技术滚动搜索大量数据" class="headerlink" title="3.25 基于scroll技术滚动搜索大量数据"></a>3.25 基于scroll技术滚动搜索大量数据</h3><p>如果一次性要查出来比如10万条数据，那么性能会很差，此时一般会采取用scoll滚动查询，一批一批的查，直到所有数据都查询完为止。</p>
<p>1.scoll搜索会在第一次搜索的时候，保存一个当时的视图快照，之后只会基于该旧的视图快照提供数据搜索，如果这个期间数据变更，是不会让用户看到的</p>
<p>2.采用基于_doc(不使用_score)进行排序的方式，性能较高</p>
<p>3.每次发送scroll请求，我们还需要指定一个scoll参数，指定一个时间窗口，每次搜索请求只要在这个时间窗口内能完成就可以了</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /lib3/user/_search?scroll=1m</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;sort&quot;</span>:[<span class="string">&quot;_doc&quot;</span>],</span><br><span class="line">  <span class="string">&quot;size&quot;</span>:<span class="number">3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /_search/scroll</span><br><span class="line">&#123;</span><br><span class="line">   <span class="string">&quot;scroll&quot;</span>: <span class="string">&quot;1m&quot;</span>,</span><br><span class="line">   <span class="string">&quot;scroll_id&quot;</span>: <span class="string">&quot;DnF1ZXJ5VGhlbkZldGNoAwAAAAAAAAAdFkEwRENOVTdnUUJPWVZUd1p2WE5hV2cAAAAAAAAAHhZBMERDTlU3Z1FCT1lWVHdadlhOYVdnAAAAAAAAAB8WQTBEQ05VN2dRQk9ZVlR3WnZYTmFXZw==&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="3-26-dynamic-mapping策略"><a href="#3-26-dynamic-mapping策略" class="headerlink" title="3.26 dynamic mapping策略"></a>3.26 dynamic mapping策略</h3><p><strong>dynamic</strong>:</p>
<p>1.true:遇到陌生字段就 dynamic mapping</p>
<p>2.false:遇到陌生字段就忽略</p>
<p>3.strict:约到陌生字段就报错</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /lib8</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;settings&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;number_of_shards&quot;</span> : <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;number_of_replicas&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">     <span class="string">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;user&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;dynamic&quot;</span>:strict,</span><br><span class="line">        <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: &#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>&#125;,</span><br><span class="line">            <span class="string">&quot;address&quot;</span>:&#123;</span><br><span class="line">                <span class="string">&quot;type&quot;</span>:<span class="string">&quot;object&quot;</span>,</span><br><span class="line">                <span class="string">&quot;dynamic&quot;</span>:<span class="keyword">true</span></span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>#会报错</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT  /lib8/user/<span class="number">1</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>:<span class="string">&quot;lisi&quot;</span>,</span><br><span class="line">  <span class="string">&quot;age&quot;</span>:<span class="number">20</span>,</span><br><span class="line">  <span class="string">&quot;address&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;province&quot;</span>:<span class="string">&quot;beijing&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city&quot;</span>:<span class="string">&quot;beijing&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<p><strong>date_detection</strong>:默认会按照一定格式识别date，比如yyyy-MM-dd</p>
<p>可以手动关闭某个type的date_detection</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /lib8</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;settings&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;number_of_shards&quot;</span> : <span class="number">3</span>,</span><br><span class="line">    <span class="string">&quot;number_of_replicas&quot;</span> : <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">     <span class="string">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;user&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;date_detection&quot;</span>: <span class="keyword">false</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<p><strong>定制 dynamic mapping template(type)</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /my_index</span><br><span class="line">&#123; </span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123; </span><br><span class="line">    <span class="string">&quot;my_type&quot;</span>: &#123; </span><br><span class="line">      <span class="string">&quot;dynamic_templates&quot;</span>: [ </span><br><span class="line">        &#123; </span><br><span class="line">          <span class="string">&quot;en&quot;</span>: &#123; </span><br><span class="line">            <span class="string">&quot;match&quot;</span>: <span class="string">&quot;*_en&quot;</span>, </span><br><span class="line">            <span class="string">&quot;match_mapping_type&quot;</span>: <span class="string">&quot;string&quot;</span>, </span><br><span class="line">            <span class="string">&quot;mapping&quot;</span>: &#123; </span><br><span class="line">              <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span>, </span><br><span class="line">              <span class="string">&quot;analyzer&quot;</span>: <span class="string">&quot;english&quot;</span> </span><br><span class="line">            &#125; </span><br><span class="line">          &#125; </span><br><span class="line">        &#125; </span><br><span class="line">      ] </span><br><span class="line">     &#125; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>#使用了模板</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /my_index/my_type/<span class="number">3</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;title_en&quot;</span>: <span class="string">&quot;this is my dog&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>#没有使用模板</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /my_index/my_type/<span class="number">5</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;title&quot;</span>: <span class="string">&quot;this is my cat&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET my_index/my_type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;title&quot;</span>: <span class="string">&quot;is&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="3-27重建索引"><a href="#3-27重建索引" class="headerlink" title="3.27重建索引"></a>3.27重建索引</h3><p>一个field的设置是不能修改的，如果要修改一个field，那么应该重新按照新的mapping，建立一个index，然后将数据批量查询出来，重新用bulk api写入到index中。</p>
<p>批量查询的时候，建议采用scroll api，并且采用多线程并发的方式来reindex数据，每次scroll就查询指定日期的一段数据，交给一个线程即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /index1/type1/<span class="number">4</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="string">&quot;content&quot;</span>:<span class="string">&quot;1990-12-12&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET /index1/type1/_search</span><br><span class="line"></span><br><span class="line">GET /index1/type1/_mapping</span><br></pre></td></tr></table></figure>





<p>#报错</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /index1/type1/<span class="number">4</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="string">&quot;content&quot;</span>:<span class="string">&quot;I am very happy.&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




<p>#修改content的类型为string类型,报错，不允许修改</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /index1/_mapping/type1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;content&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>#创建一个新的索引，把index1索引中的数据查询出来导入到新的索引中<br>#但是应用程序使用的是之前的索引，为了不用重启应用程序，给index1这个索引起个#别名</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /index1/_alias/index2</span><br></pre></td></tr></table></figure>



<p>#创建新的索引，把content的类型改为字符串</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /newindex</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;type1&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;properties&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;content&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>#使用scroll批量查询</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">GET /index1/type1/_search?scroll=1m</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;sort&quot;</span>: [<span class="string">&quot;_doc&quot;</span>],</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>#使用bulk批量写入新的索引</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /_bulk</span><br><span class="line">&#123;<span class="string">&quot;index&quot;</span>:&#123;<span class="string">&quot;_index&quot;</span>:<span class="string">&quot;newindex&quot;</span>,<span class="string">&quot;_type&quot;</span>:<span class="string">&quot;type1&quot;</span>,<span class="string">&quot;_id&quot;</span>:<span class="number">1</span>&#125;&#125;</span><br><span class="line">&#123;<span class="string">&quot;content&quot;</span>:<span class="string">&quot;1982-12-12&quot;</span>&#125;</span><br></pre></td></tr></table></figure>



<p>#将别名index2和新的索引关联，应用程序不用重启</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">POST /_aliases</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;actions&quot;</span>: [</span><br><span class="line">    &#123;<span class="string">&quot;remove&quot;</span>: &#123;<span class="string">&quot;index&quot;</span>:<span class="string">&quot;index1&quot;</span>,<span class="string">&quot;alias&quot;</span>:<span class="string">&quot;index2&quot;</span>&#125;&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;add&quot;</span>: &#123;<span class="string">&quot;index&quot;</span>: <span class="string">&quot;newindex&quot;</span>,<span class="string">&quot;alias&quot;</span>: <span class="string">&quot;index2&quot;</span>&#125;&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">GET index2/type1/_search</span><br></pre></td></tr></table></figure>




<h3 id="3-28-索引不可变的原因"><a href="#3-28-索引不可变的原因" class="headerlink" title="3.28 索引不可变的原因"></a>3.28 索引不可变的原因</h3><p>倒排索引包括：</p>
<p>   文档的列表，文档的数量，词条在每个文档中出现的次数，出现的位置，每个文档的长度，所有文档的平均长度</p>
<p>索引不变的原因：</p>
<p>不需要锁，提升了并发性能</p>
<p>可以一直保存在缓存中（filter）</p>
<p>节省cpu和io开销</p>
<h2 id="第四节-在Java应用中访问ElasticSearch"><a href="#第四节-在Java应用中访问ElasticSearch" class="headerlink" title="第四节 在Java应用中访问ElasticSearch"></a>第四节 在Java应用中访问ElasticSearch</h2><h3 id="4-1在Java应用中实现查询文档"><a href="#4-1在Java应用中实现查询文档" class="headerlink" title="4.1在Java应用中实现查询文档"></a>4.1在Java应用中实现查询文档</h3><p>pom中加入ElasticSearch6.2.4的依赖：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">    	&lt;groupId&gt;org.elasticsearch.client&lt;/groupId&gt;</span><br><span class="line">    	&lt;artifactId&gt;transport&lt;/artifactId&gt;</span><br><span class="line">     	&lt;version&gt;6.2.4&lt;/version&gt;</span><br><span class="line">    &lt;/dependency&gt;    </span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">  		&lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">  		&lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">  		&lt;version&gt;4.12&lt;/version&gt;</span><br><span class="line">  		&lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">	&lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt; </span><br><span class="line">&lt;build&gt;</span><br><span class="line">      &lt;plugins&gt;</span><br><span class="line">			&lt;!-- java编译插件 --&gt;</span><br><span class="line">			&lt;plugin&gt;</span><br><span class="line">				&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">				&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class="line">				&lt;version&gt;3.2&lt;/version&gt;</span><br><span class="line">				&lt;configuration&gt;</span><br><span class="line">					&lt;source&gt;1.8&lt;/source&gt;</span><br><span class="line">					&lt;target&gt;1.8&lt;/target&gt;</span><br><span class="line">					&lt;encoding&gt;UTF-8&lt;/encoding&gt;</span><br><span class="line">				&lt;/configuration&gt;</span><br><span class="line">			&lt;/plugin&gt;</span><br><span class="line">		&lt;/plugins&gt;</span><br><span class="line">  &lt;/build&gt;  </span><br></pre></td></tr></table></figure>

<p>创建ESClient工具类，生产Client</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EsClient</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>   TransportClient <span class="title">getClient</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//指定ES集群</span></span><br><span class="line">        Settings settings = Settings.builder()</span><br><span class="line">                .put(<span class="string">&quot;cluster.name&quot;</span>,<span class="string">&quot;my-application&quot;</span>)</span><br><span class="line">                .put(<span class="string">&quot;client.transport.sniff&quot;</span>, <span class="keyword">true</span>)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            client = <span class="keyword">new</span> PreBuiltTransportClient(settings)</span><br><span class="line">                    .addTransportAddress(<span class="keyword">new</span> TransportAddress(InetAddress.getByName(<span class="string">&quot;192.168.127.131&quot;</span>), <span class="number">9300</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>数据查询方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title">selectEs</span><span class="params">()</span> <span class="keyword">throws</span> UnknownHostException </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client  = EsClient.getClient();</span><br><span class="line">        <span class="comment">//实现数据查询</span></span><br><span class="line">        GetResponse response = client.prepareGet(<span class="string">&quot;lib&quot;</span>,<span class="string">&quot;user&quot;</span>,<span class="string">&quot;1&quot;</span>).execute().actionGet();</span><br><span class="line">        String sourceAsString = response.getSourceAsString();</span><br><span class="line">        System.out.println(sourceAsString);</span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-2-在Java应用中实现添加文档"><a href="#4-2-在Java应用中实现添加文档" class="headerlink" title="4.2 在Java应用中实现添加文档"></a>4.2 在Java应用中实现添加文档</h3><p>在es中添加下面字段</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> <span class="string">&quot;&#123;&quot;</span> +</span><br><span class="line">   <span class="string">&quot;\&quot;id\&quot;:\&quot;1\&quot;,&quot;</span> +</span><br><span class="line">   <span class="string">&quot;\&quot;title\&quot;:\&quot; \&quot;,&quot;</span> +</span><br><span class="line">   <span class="string">&quot;\&quot;content\&quot;:\&quot;在不必改变原类文件和使用继承的情况下，动态地扩展一个对象的功能。\&quot;,&quot;</span> +</span><br><span class="line">   <span class="string">&quot;\&quot;postdate\&quot;:\&quot;2018-05-20 14:38:00\&quot;,&quot;</span> +</span><br><span class="line">   <span class="string">&quot;\&quot;url\&quot;:\&quot;csdn.net/79239072\&quot;&quot;</span> +</span><br><span class="line"><span class="string">&quot;&#125;&quot;</span></span><br></pre></td></tr></table></figure>
<p>经分析，需要创建索引类型属性，首先需要执行添加</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">PUT /index1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;settings&quot;</span>:&#123;</span><br><span class="line">     <span class="string">&quot;number_of_shards&quot;</span>:<span class="number">3</span>,</span><br><span class="line">     <span class="string">&quot;number_of_replicas&quot;</span>:<span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;blog&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;id&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;title&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,</span><br><span class="line">          <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;content&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,</span><br><span class="line">          <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;postdate&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>: <span class="string">&quot;date&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;url&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>: <span class="string">&quot;text&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span>  <span class="title">insertEs</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client  = EsClient.getClient();</span><br><span class="line">        XContentBuilder doc = XContentFactory</span><br><span class="line">                .jsonBuilder()</span><br><span class="line">                .startObject()</span><br><span class="line">                .field(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;1&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;Java设计模式之装饰模式&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;content&quot;</span>,<span class="string">&quot;在不必改变原类文件和使用继承的情况下，动态地扩展一个对象的功能。&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;postdate&quot;</span>,<span class="string">&quot;2018-05-20&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;url&quot;</span>,<span class="string">&quot;csdn.net/79239072&quot;</span>)</span><br><span class="line">                .endObject();</span><br><span class="line">        <span class="comment">//添加文档</span></span><br><span class="line">        IndexResponse indexResponse = client.prepareIndex(<span class="string">&quot;index1&quot;</span>, <span class="string">&quot;blog&quot;</span>, <span class="string">&quot;10 &quot;</span>)</span><br><span class="line">                .setSource(doc).get();</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">		System.out.println(indexResponse.status());</span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h3 id="4-3在Java应用中实现删除文档"><a href="#4-3在Java应用中实现删除文档" class="headerlink" title="4.3在Java应用中实现删除文档"></a>4.3在Java应用中实现删除文档</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DeleteResponse response = client.prepareDelete(<span class="string">&quot;index1&quot;</span>,<span class="string">&quot;blog&quot;</span>,<span class="string">&quot;SzYJjWMBjSAutsuLRP_P&quot;</span>).get();</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除成功返回OK，否则返回NOT_FOUND</span></span><br><span class="line">System.out.println(response.status());</span><br></pre></td></tr></table></figure>





<h3 id="4-4在Java应用中实现更新文档"><a href="#4-4在Java应用中实现更新文档" class="headerlink" title="4.4在Java应用中实现更新文档"></a>4.4在Java应用中实现更新文档</h3> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line">UpdateRequest request=<span class="keyword">new</span> UpdateRequest();</span><br><span class="line">        request.index(<span class="string">&quot;index1&quot;</span>)</span><br><span class="line">                .type(<span class="string">&quot;blog&quot;</span>)</span><br><span class="line">                .id(<span class="string">&quot;2&quot;</span>)</span><br><span class="line">                .doc(</span><br><span class="line">                		XContentFactory.jsonBuilder().startObject()</span><br><span class="line">                        .field(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;单例模式解读&quot;</span>)</span><br><span class="line">                        .endObject()</span><br><span class="line">                );</span><br><span class="line">UpdateResponse response=client.update(request).get();</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新成功返回OK，否则返回NOT_FOUND</span></span><br><span class="line"></span><br><span class="line">System.out.println(response.status());</span><br></pre></td></tr></table></figure>

<p>upsert方式：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">IndexRequest request1 =<span class="keyword">new</span> IndexRequest(<span class="string">&quot;index1&quot;</span>,<span class="string">&quot;blog&quot;</span>,<span class="string">&quot;3&quot;</span>)</span><br><span class="line">                .source(</span><br><span class="line">                		XContentFactory.jsonBuilder().startObject()</span><br><span class="line">                                .field(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;3&quot;</span>)</span><br><span class="line">                                .field(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;装饰模式&quot;</span>)</span><br><span class="line">                                .field(<span class="string">&quot;content&quot;</span>,<span class="string">&quot;动态地扩展一个对象的功能&quot;</span>)</span><br><span class="line">                                .field(<span class="string">&quot;postdate&quot;</span>,<span class="string">&quot;2018-05-23&quot;</span>)</span><br><span class="line">                                .field(<span class="string">&quot;url&quot;</span>,<span class="string">&quot;csdn.net/79239072&quot;</span>)</span><br><span class="line">                                .endObject()</span><br><span class="line">                );</span><br><span class="line">        UpdateRequest request2=<span class="keyword">new</span> UpdateRequest(<span class="string">&quot;index1&quot;</span>,<span class="string">&quot;blog&quot;</span>,<span class="string">&quot;3&quot;</span>)</span><br><span class="line">                .doc(</span><br><span class="line">                		XContentFactory.jsonBuilder().startObject()</span><br><span class="line">                        .field(<span class="string">&quot;title&quot;</span>,<span class="string">&quot;装饰模式解读&quot;</span>)</span><br><span class="line">                        .endObject()</span><br><span class="line">                ).upsert(request1);</span><br><span class="line">        </span><br><span class="line">UpdateResponse response=client.update(request2).get();</span><br><span class="line">        </span><br><span class="line"><span class="comment">//upsert操作成功返回OK，否则返回NOT_FOUND</span></span><br><span class="line">System.out.println(response.status());</span><br></pre></td></tr></table></figure>




<h3 id="4-5在Java应用中实现批量操作"><a href="#4-5在Java应用中实现批量操作" class="headerlink" title="4.5在Java应用中实现批量操作"></a>4.5在Java应用中实现批量操作</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">MultiGetResponse mgResponse = client.prepareMultiGet()</span><br><span class="line">	                .add(<span class="string">&quot;index1&quot;</span>,<span class="string">&quot;blog&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;2&quot;</span>)</span><br><span class="line">	                .add(<span class="string">&quot;lib3&quot;</span>,<span class="string">&quot;user&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>)</span><br><span class="line">	                .get();</span><br><span class="line">		    </span><br><span class="line"><span class="keyword">for</span>(MultiGetItemResponse response:mgResponse)&#123;</span><br><span class="line">	            GetResponse rp=response.getResponse();</span><br><span class="line">	            <span class="keyword">if</span>(rp!=<span class="keyword">null</span> &amp;&amp; rp.isExists())&#123;</span><br><span class="line">	                System.out.println(rp.getSourceAsString());</span><br><span class="line">	            &#125;</span><br><span class="line">	        &#125;</span><br></pre></td></tr></table></figure>

<p>bulk：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">BulkRequestBuilder bulkRequest = client.prepareBulk();</span><br><span class="line">bulkRequest.add(client.prepareIndex(<span class="string">&quot;lib2&quot;</span>, <span class="string">&quot;books&quot;</span>, <span class="string">&quot;4&quot;</span>)</span><br><span class="line">                .setSource(XContentFactory.jsonBuilder()</span><br><span class="line">                        .startObject()</span><br><span class="line">                        .field(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;python&quot;</span>)</span><br><span class="line">                        .field(<span class="string">&quot;price&quot;</span>, <span class="number">68</span>)</span><br><span class="line">                        .endObject()</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">bulkRequest.add(client.prepareIndex(<span class="string">&quot;lib2&quot;</span>, <span class="string">&quot;books&quot;</span>, <span class="string">&quot;5&quot;</span>)</span><br><span class="line">                .setSource(XContentFactory.jsonBuilder()</span><br><span class="line">                        .startObject()</span><br><span class="line">                        .field(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;VR&quot;</span>)</span><br><span class="line">                        .field(<span class="string">&quot;price&quot;</span>, <span class="number">38</span>)</span><br><span class="line">                        .endObject()</span><br><span class="line">                )</span><br><span class="line">        );</span><br><span class="line">        <span class="comment">//批量执行</span></span><br><span class="line">BulkResponse bulkResponse = bulkRequest.get();</span><br><span class="line">        </span><br><span class="line">System.out.println(bulkResponse.status());</span><br><span class="line"><span class="keyword">if</span> (bulkResponse.hasFailures()) &#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;存在失败操作&quot;</span>);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-6-查询删除"><a href="#4-6-查询删除" class="headerlink" title="4.6 查询删除"></a>4.6 查询删除</h2><p>首先进行查询，然后进行删除</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span>  <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">selectAndeDelete</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">       TransportClient client  = EsClient.getClient();</span><br><span class="line"></span><br><span class="line">       BulkByScrollResponse bulkByScrollResponse = DeleteByQueryAction.INSTANCE</span><br><span class="line">               .newRequestBuilder(client)</span><br><span class="line">               .filter(QueryBuilders.matchQuery(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;工厂&quot;</span>))</span><br><span class="line">               .source(<span class="string">&quot;index1&quot;</span>)</span><br><span class="line">               .get();</span><br><span class="line">       <span class="keyword">long</span> deleted = bulkByScrollResponse.getDeleted();</span><br><span class="line">       System.out.println(deleted);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-7-查询所有"><a href="#4-7-查询所有" class="headerlink" title="4.7 查询所有"></a>4.7 查询所有</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectAll</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client  = EsClient.getClient();</span><br><span class="line">        MatchAllQueryBuilder matchAllQueryBuilder = QueryBuilders.matchAllQuery();</span><br><span class="line">        SearchResponse lib1 = client.prepareSearch(<span class="string">&quot;lib1&quot;</span>)</span><br><span class="line">                .setQuery(matchAllQueryBuilder)</span><br><span class="line">                .setSize(<span class="number">3</span>)</span><br><span class="line">                .get();</span><br><span class="line">        SearchHits hits= lib1.getHits();</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit:hits)&#123;</span><br><span class="line">            System.out.println(hit.getSourceAsString());</span><br><span class="line"></span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">            <span class="keyword">for</span> (String key: sourceAsMap.keySet())&#123;</span><br><span class="line">                System.out.println(key+<span class="string">&quot;=&quot;</span>+sourceAsMap.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-8-match-query-查询"><a href="#4-8-match-query-查询" class="headerlink" title="4.8 match query 查询"></a>4.8 match query 查询</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">matchQuery</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client  = EsClient.getClient();</span><br><span class="line">        MatchQueryBuilder matchQueryBuilder = QueryBuilders.matchQuery(<span class="string">&quot;insterests&quot;</span>, <span class="string">&quot;changer&quot;</span>);</span><br><span class="line">        SearchResponse lib1 = client.prepareSearch(<span class="string">&quot;lib12&quot;</span>)</span><br><span class="line">                .setQuery(matchQueryBuilder)</span><br><span class="line">                .setSize(<span class="number">3</span>)</span><br><span class="line">                .get();</span><br><span class="line">        SearchHits hits= lib1.getHits();</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit:hits)&#123;</span><br><span class="line">            System.out.println(hit.getSourceAsString());</span><br><span class="line"></span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">            <span class="keyword">for</span> (String key: sourceAsMap.keySet())&#123;</span><br><span class="line">                System.out.println(key+<span class="string">&quot;=&quot;</span>+sourceAsMap.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-9-multiMachQuery查询"><a href="#4-9-multiMachQuery查询" class="headerlink" title="4.9  multiMachQuery查询"></a>4.9  multiMachQuery查询</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">multiMachQuery</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client  = EsClient.getClient();</span><br><span class="line">        </span><br><span class="line">        MultiMatchQueryBuilder multiMatchQueryBuilder = QueryBuilders.multiMatchQuery(<span class="string">&quot;changge&quot;</span>, <span class="string">&quot;address&quot;</span>, <span class="string">&quot;insterests&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        SearchResponse lib1 = client.prepareSearch(<span class="string">&quot;lib12&quot;</span>)</span><br><span class="line">                .setQuery(multiMatchQueryBuilder)</span><br><span class="line">                .setSize(<span class="number">3</span>)</span><br><span class="line">                .get();</span><br><span class="line">        </span><br><span class="line">        SearchHits hits= lib1.getHits();</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit:hits)&#123;</span><br><span class="line">            System.out.println(hit.getSourceAsString());</span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">            <span class="keyword">for</span> (String key: sourceAsMap.keySet())&#123;</span><br><span class="line">                System.out.println(key+<span class="string">&quot;=&quot;</span>+sourceAsMap.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-10-term查询"><a href="#4-10-term查询" class="headerlink" title="4.10 term查询"></a>4.10 term查询</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">termQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">     TransportClient client = EsClient.getClient();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     TermQueryBuilder termQueryBuilder = QueryBuilders.termQuery(<span class="string">&quot;insterests&quot;</span>, <span class="string">&quot;changge&quot;</span>);</span><br><span class="line"></span><br><span class="line">     SearchResponse lib3 = client.prepareSearch(<span class="string">&quot;lib3&quot;</span>)</span><br><span class="line">             .setQuery(termQueryBuilder)</span><br><span class="line">             .setSize(<span class="number">3</span>)</span><br><span class="line">             .get();</span><br><span class="line">     SearchHits hits = lib3.getHits();</span><br><span class="line">     <span class="keyword">for</span> (SearchHit hit : hits) &#123;</span><br><span class="line">         System.out.println(hit.getSourceAsString());</span><br><span class="line">         Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">         <span class="keyword">for</span> (String key : sourceAsMap.keySet()) &#123;</span><br><span class="line">             System.out.println(key + <span class="string">&quot;=&quot;</span> + sourceAsMap.get(key));</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     client.close();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-11-terms查询"><a href="#4-11-terms查询" class="headerlink" title="4.11 terms查询"></a>4.11 terms查询</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">termsQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client = EsClient.getClient();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        TermsQueryBuilder termsQueryBuilder = QueryBuilders.termsQuery(<span class="string">&quot;insterests&quot;</span>, <span class="string">&quot;changge&quot;</span>,<span class="string">&quot;lvyou&quot;</span>);</span><br><span class="line"></span><br><span class="line">        SearchResponse lib3 = client.prepareSearch(<span class="string">&quot;lib3&quot;</span>)</span><br><span class="line">                .setQuery(termsQueryBuilder)</span><br><span class="line">                .setSize(<span class="number">3</span>)</span><br><span class="line">                .get();</span><br><span class="line">        SearchHits hits = lib3.getHits();</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : hits) &#123;</span><br><span class="line">            System.out.println(hit.getSourceAsString());</span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">            <span class="keyword">for</span> (String key : sourceAsMap.keySet()) &#123;</span><br><span class="line">                System.out.println(key + <span class="string">&quot;=&quot;</span> + sourceAsMap.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-12-其他查询"><a href="#4-12-其他查询" class="headerlink" title="4.12 其他查询"></a>4.12 其他查询</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//限定查询</span></span><br><span class="line">       RangeQueryBuilder birthday = QueryBuilders.rangeQuery(<span class="string">&quot;birthday&quot;</span>).from(<span class="string">&quot;1990-1-1&quot;</span>).to(<span class="string">&quot;2000-12-30&quot;</span>).format(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">       <span class="comment">//前缀查询</span></span><br><span class="line">       PrefixQueryBuilder prefixQueryBuilder = QueryBuilders.prefixQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;zhao&quot;</span>);</span><br><span class="line">       <span class="comment">//模糊查询</span></span><br><span class="line">       WildcardQueryBuilder name = QueryBuilders.wildcardQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;zhao*&quot;</span>);</span><br><span class="line">       <span class="comment">//模糊查询</span></span><br><span class="line">       FuzzyQueryBuilder fuzzyQueryBuilder = QueryBuilders.fuzzyQuery(<span class="string">&quot;interests&quot;</span>, <span class="string">&quot;changge&quot;</span>);</span><br><span class="line">       <span class="comment">//类型查询</span></span><br><span class="line">       TypeQueryBuilder blog = QueryBuilders.typeQuery(<span class="string">&quot;blog&quot;</span>);</span><br><span class="line">       <span class="comment">//id查询</span></span><br><span class="line">       IdsQueryBuilder idsQueryBuilder = QueryBuilders.idsQuery().addIds(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;3&quot;</span>);</span><br></pre></td></tr></table></figure>



<h2 id="4-13-聚合查询"><a href="#4-13-聚合查询" class="headerlink" title="4.13 聚合查询"></a>4.13 聚合查询</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static  void  agg()&#123;</span><br><span class="line">        // 创建访问es服务器的客户端</span><br><span class="line">        TransportClient client = EsClient.getClient();</span><br><span class="line">        MaxAggregationBuilder max = AggregationBuilders.max(&quot;aggMax&quot;).field(&quot;age&quot;);</span><br><span class="line">        MinAggregationBuilder min = AggregationBuilders.min(&quot;aggMin&quot;).field(&quot;age&quot;);</span><br><span class="line">        AvgAggregationBuilder avg = AggregationBuilders.avg(&quot;aggAvg&quot;).field(&quot;age&quot;);</span><br><span class="line">        SumAggregationBuilder sum = AggregationBuilders.sum(&quot;aggSum&quot;).field(&quot;age&quot;);</span><br><span class="line">        CardinalityAggregationBuilder cardinality = AggregationBuilders.cardinality(&quot;aggCardinality&quot;).field(&quot;age&quot;);</span><br><span class="line">        SearchResponse lib3 = client.prepareSearch(&quot;lib3&quot;).addAggregation(max).get();</span><br><span class="line">        Max aggMax = lib3.getAggregations().get(&quot;aggMax&quot;);</span><br><span class="line">        double value = aggMax.getValue();</span><br><span class="line">        System.out.println(value);</span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-14-QueryString-查询"><a href="#4-14-QueryString-查询" class="headerlink" title="4.14 QueryString 查询"></a>4.14 QueryString 查询</h2> <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">stringQuery</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client = EsClient.getClient();</span><br><span class="line">        CommonTermsQueryBuilder commonTermsQueryBuilder = QueryBuilders.commonTermsQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;zhaoliu1&quot;</span>);</span><br><span class="line">        QueryStringQueryBuilder queryStringQueryBuilder = QueryBuilders.queryStringQuery(<span class="string">&quot;+changge  -hejiu&quot;</span>);</span><br><span class="line">        SimpleQueryStringBuilder simpleQueryStringBuilder = QueryBuilders.simpleQueryStringQuery(<span class="string">&quot;+changge  -hejiu&quot;</span>);</span><br><span class="line">        SearchResponse lib = client.prepareSearch(<span class="string">&quot;lib&quot;</span>)</span><br><span class="line">                .setQuery(commonTermsQueryBuilder)</span><br><span class="line">                .get();</span><br><span class="line">        SearchHits hits = lib.getHits();</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : hits) &#123;</span><br><span class="line">            System.out.println(hit.getSourceAsString());</span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">            <span class="keyword">for</span> (String key : sourceAsMap.keySet()) &#123;</span><br><span class="line">                System.out.println(key + <span class="string">&quot;=&quot;</span> + sourceAsMap.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>





<h2 id="4-15-组合查询"><a href="#4-15-组合查询" class="headerlink" title="4.15 组合查询"></a>4.15 组合查询</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">boolQuery</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client = EsClient.getClient();</span><br><span class="line">        BoolQueryBuilder filter = QueryBuilders.boolQuery()</span><br><span class="line">                .must(QueryBuilders.matchQuery(<span class="string">&quot;instart&quot;</span>, <span class="string">&quot;change&quot;</span>))</span><br><span class="line">                .mustNot(QueryBuilders.matchQuery(<span class="string">&quot;instert&quot;</span>, <span class="string">&quot;lvyou&quot;</span>))</span><br><span class="line">                .should(QueryBuilders.matchQuery(<span class="string">&quot;address&quot;</span>, <span class="string">&quot;beijing&quot;</span>))</span><br><span class="line">                .filter(QueryBuilders.rangeQuery(<span class="string">&quot;birthday&quot;</span>).gte(<span class="string">&quot;1992-1-1&quot;</span>).lte(<span class="string">&quot;1993-12-1&quot;</span>).format(<span class="string">&quot;yyyy-MM-dd&quot;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        SearchResponse lib = client.prepareSearch(<span class="string">&quot;lib&quot;</span>)</span><br><span class="line">                .setQuery(filter)</span><br><span class="line">                .get();</span><br><span class="line">        SearchHits hits = lib.getHits();</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : hits) &#123;</span><br><span class="line">            System.out.println(hit.getSourceAsString());</span><br><span class="line">            Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">            <span class="keyword">for</span> (String key : sourceAsMap.keySet()) &#123;</span><br><span class="line">                System.out.println(key + <span class="string">&quot;=&quot;</span> + sourceAsMap.get(key));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>不计算相关度分数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不计算相关度分数</span></span><br><span class="line">        ConstantScoreQueryBuilder constantScoreQueryBuilder = QueryBuilders.constantScoreQuery(QueryBuilders.termQuery(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;zhaoliu&quot;</span>));</span><br></pre></td></tr></table></figure>



<h2 id="4-16-分组聚合（统计）"><a href="#4-16-分组聚合（统计）" class="headerlink" title="4.16 分组聚合（统计）"></a>4.16 分组聚合（统计）</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">te</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">     TransportClient client = EsClient.getClient();</span><br><span class="line"></span><br><span class="line">     TermsAggregationBuilder field = AggregationBuilders.terms(<span class="string">&quot;terms&quot;</span>).field(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">     SearchResponse lib = client.prepareSearch(<span class="string">&quot;lib&quot;</span>).addAggregation(field).execute().actionGet();</span><br><span class="line">     Aggregation filter1 = lib.getAggregations().get(<span class="string">&quot;terms&quot;</span>);</span><br><span class="line">     System.out.println(filter1);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>



<h2 id="4-17-过滤聚合"><a href="#4-17-过滤聚合" class="headerlink" title="4.17 过滤聚合"></a>4.17 过滤聚合</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">te</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client = EsClient.getClient();</span><br><span class="line">        TermQueryBuilder age = QueryBuilders.termQuery(<span class="string">&quot;age&quot;</span>, <span class="number">20</span>);</span><br><span class="line">        FilterAggregationBuilder filter = AggregationBuilders.filter(<span class="string">&quot;Filter&quot;</span>, age);</span><br><span class="line">        SearchResponse lib = client.prepareSearch(<span class="string">&quot;lib&quot;</span>).addAggregation(filter).execute().actionGet();</span><br><span class="line">        Aggregation filter1 = lib.getAggregations().get(<span class="string">&quot;filter&quot;</span>);</span><br><span class="line">        System.out.println(filter1);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h2 id="4-18-range过滤"><a href="#4-18-range过滤" class="headerlink" title="4.18 range过滤"></a>4.18 range过滤</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">te</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client = EsClient.getClient();</span><br><span class="line">        RangeAggregationBuilder rangeAggregationBuilder = AggregationBuilders</span><br><span class="line">                .range(<span class="string">&quot;range&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;age&quot;</span>)</span><br><span class="line">                .addUnboundedTo(<span class="number">50</span>)    <span class="comment">//(  .to)</span></span><br><span class="line">                .addRange(<span class="number">20</span>, <span class="number">50</span>)      <span class="comment">//[from,to)</span></span><br><span class="line">                .addUnboundedFrom(<span class="number">25</span>); <span class="comment">//[from,  ）</span></span><br><span class="line">        SearchResponse lib = client.prepareSearch(<span class="string">&quot;lib&quot;</span>)</span><br><span class="line">                .addAggregation(rangeAggregationBuilder).execute().actionGet();</span><br><span class="line">        Range range = lib.getAggregations().get(<span class="string">&quot;range&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Range.Bucket entry:range.getBuckets())&#123;</span><br><span class="line">            System.out.println(entry.getKey()+<span class="string">&quot;:&quot;</span>+entry.getDocCount());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>统计为空</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">te</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client = EsClient.getClient();</span><br><span class="line">        MissingAggregationBuilder field = AggregationBuilders</span><br><span class="line">                .missing(<span class="string">&quot;missing&quot;</span>).field(<span class="string">&quot;price&quot;</span>);</span><br><span class="line">        SearchResponse lib = client.prepareSearch(<span class="string">&quot;lib&quot;</span>)</span><br><span class="line">                .addAggregation(field).execute().actionGet();</span><br><span class="line">        Aggregation missing = lib.getAggregations().get(<span class="string">&quot;missing&quot;</span>);</span><br><span class="line">        System.out.println(missing.toString());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h2 id="ES管理"><a href="#ES管理" class="headerlink" title="ES管理"></a>ES管理</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setting</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 创建访问es服务器的客户端</span></span><br><span class="line">        TransportClient client = EsClient.getClient();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取集群信息</span></span><br><span class="line">        ClusterHealthResponse clusterHealthResponse = client.admin().cluster().prepareHealth().get();</span><br><span class="line">        <span class="comment">//获取集群名称</span></span><br><span class="line">        String clusterName = clusterHealthResponse.getClusterName();</span><br><span class="line">        <span class="comment">//获取集群节点数量</span></span><br><span class="line">        <span class="keyword">int</span> numberOfDataNodes = clusterHealthResponse.getNumberOfDataNodes();</span><br><span class="line">        <span class="comment">//获取索引</span></span><br><span class="line">        Collection&lt;ClusterIndexHealth&gt; values = clusterHealthResponse.getIndices().values();</span><br><span class="line">        <span class="keyword">for</span> (ClusterIndexHealth health :values)&#123;</span><br><span class="line">            <span class="comment">//当前索引的名称</span></span><br><span class="line">            String index = health.getIndex();</span><br><span class="line">            <span class="comment">//此索引有多少个主分片</span></span><br><span class="line">            <span class="keyword">int</span> numberOfShards = health.getNumberOfShards();</span><br><span class="line">            <span class="comment">//此索引有多少个副本</span></span><br><span class="line">            <span class="keyword">int</span> numberOfReplicas = health.getNumberOfReplicas();</span><br><span class="line">            <span class="comment">//索引的健康状况 ，颜色区分</span></span><br><span class="line">            ClusterHealthStatus status = health.getStatus();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>ES</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>数据库</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>docker导入导出镜像</title>
    <url>/2021/01/09/docker/docker%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<h2 id="导入导出容器"><a href="#导入导出容器" class="headerlink" title="导入导出容器"></a>导入导出容器</h2><p> docker 提供把镜像导出export（保存save）为文件的机制，这样就可以把镜像copy到任意地方了。</p>
<ol>
<li>导出 export </li>
<li>导入 import</li>
</ol>
<p>格式：docker export CONTAINER(容器)</p>
<p>使用 docker ps -a 查看本机已有的容器，</p>
<p>我们使用容器 furious_bell，现在要将这个容器保存为一个文件 myunbuntu-export-1204.tar</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker export furious_bell &gt; /home/myubuntu-export-1204.tar</span><br></pre></td></tr></table></figure>

<p>导出完成后，就可以使用 import 导入了</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker import /home/myubuntu-export-1204.tar</span><br></pre></td></tr></table></figure>

<h2 id="导入导出镜像"><a href="#导入导出镜像" class="headerlink" title="导入导出镜像"></a>导入导出镜像</h2><p>保存save - 加载 load</p>
<p>格式：docker save IMAGE(镜像)</p>
<p>使用 docker images 查看本机已有的镜像（也可以使用 docker commit <CONTAIN-ID> <IMAGE-NAME>命令把一个正在运行的容器保存为镜像）</p>
<p>这里有个基础镜像：ubuntu:12.04，现在要将这个镜像保存为一个文件myubuntu-save-1204.tar</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker save 9610cfc68e8d &gt; /home/myubuntu-save-1204.tar</span><br></pre></td></tr></table></figure>


<p>有点慢，稍微等待一下，没有任何warn信息就表示保存OK。9610cfc68e8d 是镜像ID</p>
<p>现在就可以在任何装 docker 的地方加载 刚保存的镜像了</p>
<p>docker load &lt; /home/myubuntu-save-1204.tar</span></p>
<p>使用docker tag <strong>eb40dcf64078</strong> django:latest 修改为原来的镜像名称和标签名称，其中eb40dcf64078 为images id</p>
<p>3.导出 export 与 保存 save 的区别</p>
<p> (1).export导出的镜像文件大小  小于 save保存的镜像</p>
<p> (2).export 导出（import导入）是根据容器拿到的镜像，再导入时会丢失镜像所有的历史，所以无法进行回滚操作（docker tag <LAYER ID> <IMAGE NAME>）；而save保存（load加载）的镜像，没有丢失镜像的历史，可以回滚到之前的层（layer）。（查看方式：docker images –tree）</p>
<p>注：导入加载进来觉得不合适可以使用 docker rm 容器ID 、 docker rmi 镜像ID 来删掉。</p>
<p>   移除所有的容器和镜像（大扫除）：</p>
<pre><code>docker kill $(docker ps -q) ; docker rm $(docker ps -a -q) ; docker rmi $(docker images -q -a) 
</code></pre>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>在docker中部署nextcloud</title>
    <url>/2021/01/09/docker/%E5%9C%A8docker%E4%B8%AD%E9%83%A8%E7%BD%B2nextcloud/</url>
    <content><![CDATA[<p><a href="https://link.zhihu.com/?target=https://nextcloud.com/">Nextcloud</a>是一款开源免费的私有云存储网盘项目，可以让你快速便捷地搭建一套属于自己或团队的云同步网盘，从而实现跨平台跨设备文件同步、共享、版本控制、团队协作等功能。它的客户端覆盖了Windows、Mac、Android、iOS、Linux 等各种平台，也提供了网页端以及 WebDAV接口，所以你几乎可以在各种设备上方便地访问你的云盘。</p>
<span id="more"></span>

<h2 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h2><p>略</p>
<h2 id="在docker中部署mysql"><a href="#在docker中部署mysql" class="headerlink" title="在docker中部署mysql"></a>在docker中部署mysql</h2><p>略（请查看其他文章）</p>
<h2 id="在docker中部署nextcloud安装"><a href="#在docker中部署nextcloud安装" class="headerlink" title="在docker中部署nextcloud安装"></a>在docker中部署nextcloud安装</h2><p>查找镜像包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker search nextcloud                  </span><br></pre></td></tr></table></figure>

<p>拉取镜像包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull nextcloud</span><br></pre></td></tr></table></figure>

<p>查看镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<p>运行镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d --name nextcloud -p 80:80 -v /Users/wzm/data/nextcloud/data:/data nextcloud</span><br></pre></td></tr></table></figure>

<ul>
<li>登录地址为<code>http://ip</code>，<code>80</code>端口可自行替换，如果你改成<code>800</code>，那么登录地址会变成<code>http://ip:800</code>，/Users/wzm/data/nextcloud/data为网盘的数据库，也可以自行修改。</li>
</ul>
<p>或者使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">     -v /opt/module/nextcloud/html:/var/www/html \</span><br><span class="line">     -v /opt/module/nextcloud/apps:/var/www/html/custom_apps \</span><br><span class="line">     -v /opt/module/nextcloud/config:/var/www/html/config \</span><br><span class="line">     -v /opt/module/nextcloud/nextcloud/data:/var/www/html/data \</span><br><span class="line">     -v /opt/module/nextcloud/themes:/var/www/html/themes \</span><br><span class="line">     -p 8080:80 \</span><br><span class="line">     --name nextcloud</span><br><span class="line">    nextcloud</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d   -v /opt/module/nextcloud/html:/var/www/html   -v /opt/module/nextcloud/apps:/var/www/html/custom_apps   -v /opt/module/nextcloud/config:/var/www/html/config   -v /opt/module/nextcloud/nextcloud/data:/var/www/html/data   -v /opt/module/nextcloud/themes:/var/www/html/themes    -p 80:80    --name nextcloud   nextcloud </span><br></pre></td></tr></table></figure>



<p>进入镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it  ID /bin/bash     <span class="comment">#进入容器</span></span><br></pre></td></tr></table></figure>

<p>浏览器访问<code>127.0.0.1</code></p>
<p>创建管理员用户，连接mysql服务器</p>
<p>点击 最下面安装</p>
<h2 id="在docker上安装collabora-code"><a href="#在docker上安装collabora-code" class="headerlink" title="在docker上安装collabora/code"></a>在docker上安装collabora/code</h2><p><a href="https://hub.docker.com/r/collabora/code/">https://hub.docker.com/r/collabora/code/</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull collabora/code</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -t -d -p 9980:9980 -e &quot;extra_params=--o:ssl.enable=false&quot; --name collabora collabora/code </span><br></pre></td></tr></table></figure>



<h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>在docker中无法使用vi/vim等编辑器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install vim</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install vim</span><br></pre></td></tr></table></figure>

<h2 id="在docker上安装onlyoffice"><a href="#在docker上安装onlyoffice" class="headerlink" title="在docker上安装onlyoffice"></a>在docker上安装onlyoffice</h2><p>在线编辑onlyoffice的坑<br>NextCloud使用onlyoffice，Docker安装OnlyOffice Server 后，使用本地服务器异常</p>
<p><code>Error when trying to connect (Host violates local access rules)</code><br>参照：<a href="https://github.com/ONLYOFFICE/onlyoffice-nextcloud/issues/293">https://github.com/ONLYOFFICE/onlyoffice-nextcloud/issues/293</a></p>
<p>18以后的NextCloud版本有这个bug， 解决办法在config.php配置文件添加配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;allow_local_remote_servers&#x27; =&gt; true,</span><br></pre></td></tr></table></figure>



<h3 id="拉取ONLYOFFICE-Document-Server-的Docker镜像"><a href="#拉取ONLYOFFICE-Document-Server-的Docker镜像" class="headerlink" title="拉取ONLYOFFICE Document Server 的Docker镜像"></a>拉取ONLYOFFICE Document Server 的Docker镜像</h3><p>拉取镜像：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker pull onlyoffice/documentserver</span><br></pre></td></tr></table></figure>

<p><a href="https://img.orgleaf.com/2017/08/2017080718195660.png"><img src="https://img.orgleaf.com/2017/08/2017080718195660-e1502101263743.png" alt="img"></a></p>
<p>国内主机从Docker Hub拉取镜像的话可能会比较慢，可以尝试类似阿里云、Daocloud的加速器。</p>
<p>拉取完成：</p>
<p><a href="https://img.orgleaf.com/2017/08/2017080718234876.png"><img src="https://img.orgleaf.com/2017/08/2017080718234876.png" alt="img"></a></p>
<h3 id="启动Docker容器"><a href="#启动Docker容器" class="headerlink" title="启动Docker容器"></a>启动Docker容器</h3><p>启动Document Server镜像，并映射80端口至本地。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run -i -t -d -p 80:80 onlyoffice/documentserver</span><br></pre></td></tr></table></figure>

<p><a href="https://img.orgleaf.com/2017/08/2017080718282213.png"><img src="https://img.orgleaf.com/2017/08/2017080718282213.png" alt="img"></a></p>
<p>启动后，访问http://服务器地址:80，就可以看到如下的页面：</p>
<p><a href="https://img.orgleaf.com/2017/08/2017080718331637.png"><img src="https://img.orgleaf.com/2017/08/2017080718331637.png" alt="img"></a></p>
<p>刚开始看到的可能是是502 Bad Gateway，稍等一会，刷新浏览器页面即可。</p>
<h3 id="将Document-Server映射至其它端口"><a href="#将Document-Server映射至其它端口" class="headerlink" title="将Document Server映射至其它端口"></a>将Document Server映射至其它端口</h3><p>80端口上往往会运行像Apache、Nginx之类的HTTP服务，为了避免端口冲突，我们可以将Document Server映射至其它端口。</p>
<p>例如映射至9000端口：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run -i -t -d -p 9000:80 onlyoffice/documentserver</span><br></pre></td></tr></table></figure>

<p><a href="https://img.orgleaf.com/2017/08/2017080718561784.png"><img src="https://img.orgleaf.com/2017/08/2017080718561784.png" alt="img"></a></p>
<h3 id=""><a href="#" class="headerlink" title=""></a><a href="https://img.orgleaf.com/2017/08/onlyoffice-docker-p-9000.png"><img src="https://img.orgleaf.com/2017/08/onlyoffice-docker-p-9000.png" alt="img"></a></h3><h3 id="一些说明……"><a href="#一些说明……" class="headerlink" title="一些说明……"></a>一些说明……</h3><p>Document Server的数据在容器中的储存位置如下：</p>
<ul>
<li>/var/log/onlyoffice 存放ONLYOFFICE Document Server日志</li>
<li>/var/www/onlyoffice/Data 存放证书文件</li>
</ul>
<p>你可以用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker -exec -it onlyoffice/documentserver /bin/bash</span><br></pre></td></tr></table></figure>

<p>登入容器，也可以将以上两个目录映射到本地，这样更方便。</p>
<p>创建目录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /app/onlyoffice/DocumentServer/logs</span><br><span class="line">mkdir -p /app/onlyoffice/DocumentServer/data</span><br></pre></td></tr></table></figure>

<p>使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure>

<p> 将目录映射至本地：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run -i -t -d -p 80:80 \</span><br><span class="line">    -v /app/onlyoffice/DocumentServer/logs:/var/log/onlyoffice  \</span><br><span class="line">    -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  onlyoffice/documentserver</span><br></pre></td></tr></table></figure>

<p>这样，直接访问本地的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/app/onlyoffice/DocumentServer/</span><br></pre></td></tr></table></figure>

<p> 下的两个文件夹就可以了。</p>
<h3 id="启用HTTPS"><a href="#启用HTTPS" class="headerlink" title="启用HTTPS"></a>启用HTTPS</h3><p>HTTPS需要使用SSL证书，可以自己签发也可以用ca机构签发的，加密效果相同。</p>
<p>生成证书：</p>
<ol>
<li><p>创建私钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl genrsa -out onlyoffice.key 2048</span><br></pre></td></tr></table></figure></li>
<li><p>创建CSR</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl req -new -key onlyoffice.key -out onlyoffice.csr</span><br></pre></td></tr></table></figure></li>
<li><p>用私枂和CSR签发证书</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl x509 -req -days 365 -in onlyoffice.csr -signkey onlyoffice.key -out onlyoffice.crt</span><br></pre></td></tr></table></figure></li>
<li><p>用dhparam加密服务器密钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl dhparam -out dhparam.pem 2048</span><br></pre></td></tr></table></figure></li>
</ol>
<p>完成证书的生成后，将生成的证书拷贝到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/app/onlyoffice/DocumentServer/data/certs</span><br></pre></td></tr></table></figure>

<p> 目录下。</p>
<p>创建相应目录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /app/onlyoffice/DocumentServer/data/certs</span><br></pre></td></tr></table></figure>

<p>复制证书到</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/app/onlyoffice/DocumentServer/data/certs</span><br></pre></td></tr></table></figure>

<p>目录并设置权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp onlyoffice.key /app/onlyoffice/DocumentServer/data/certs/</span><br><span class="line">cp onlyoffice.crt /app/onlyoffice/DocumentServer/data/certs/</span><br><span class="line">cp dhparam.pem /app/onlyoffice/DocumentServer/data/certs/</span><br><span class="line">chmod 400 /app/onlyoffice/DocumentServer/data/certs/onlyoffice.key</span><br></pre></td></tr></table></figure>

<p>运行容器，映射容器的443端口和Data目录至本地：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run -i -t -d -p 443:443 \</span><br><span class="line">   -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  onlyoffice/documentserver</span><br></pre></td></tr></table></figure>

<p><a href="https://img.orgleaf.com/2017/08/map-443-data-to-local-docker-documentserver.png"><img src="https://img.orgleaf.com/2017/08/map-443-data-to-local-docker-documentserver.png" alt="img"></a></p>
<p>在浏览器里访问https://服务器地址/。（CentOS/RHEL/Fedora系统可能无法访问，请往下看）</p>
<p><a href="https://img.orgleaf.com/2017/08/aceess-docker-documentserver-https.png"><img src="https://img.orgleaf.com/2017/08/aceess-docker-documentserver-https.png" alt="img"></a></p>
<p>当然了，如果本地443端口已经被占用了的话，可以映射至其它端口：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker run -i -t -d -p 9000:443 \</span><br><span class="line">   -v /app/onlyoffice/DocumentServer/data:/var/www/onlyoffice/Data  onlyoffice/documentserver</span><br></pre></td></tr></table></figure>

<p>但是仍然是要用HTTPS协议访问，比如：https://服务器地址:9000/</p>
<h3 id="CentOS-RHEL-Fedora无法访问"><a href="#CentOS-RHEL-Fedora无法访问" class="headerlink" title="CentOS/RHEL/Fedora无法访问"></a>CentOS/RHEL/Fedora无法访问</h3><p>这是由于SELinux的阻止。</p>
<p>暂时关闭SELinux（重启后失效）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>在docker中部署mysql</title>
    <url>/2021/01/09/docker/%E5%9C%A8docker%E4%B8%AD%E9%83%A8%E7%BD%B2mysql/</url>
    <content><![CDATA[<p>MySQL 是最流行的关系型数据库管理系统，在 WEB 应用方面 MySQL 是最好的 RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。</p>
<span id="more"></span>

<ol>
<li>安装／升级Docker客户端</li>
</ol>
<p>推荐安装1.10.0以上版本的Docker客户端，docker容器技术文章</p>
<ol start="2">
<li>配置镜像加速器</li>
</ol>
<p>针对Docker客户端版本大于 1.10.0 的用户</p>
<p>您可以通过修改daemon配置文件/etc/docker/daemon.json来使用加速器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://jmpaeocm.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>docker中搜索MySQL相关镜像</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>拉起mysql镜像（:5.7表示版本）</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>运行MySQL容器</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run </span><br><span class="line">		-d </span><br><span class="line">		-p 3306:3306 </span><br><span class="line">		--privileged=true </span><br><span class="line">		-v /opt/docker_v/mysql/conf:/etc/mysql/conf.d</span><br><span class="line">		-v /docker/mysql/data:/var/lib/mysql </span><br><span class="line">		-e MYSQL_ROOT_PASSWORD=123456 </span><br><span class="line">		--name mysql </span><br><span class="line">		--character-set-server=utf8mb4 </span><br><span class="line">		--collation-server=utf8mb4_general_ci</span><br><span class="line">		mysql:5.7 </span><br></pre></td></tr></table></figure>

<p>参数说明:</p>
<ul>
<li>run   run 是运行一个容器</li>
<li>-d　 表示后台运行</li>
<li>-p　 表示容器内部端口和服务器端口映射关联</li>
<li>–privileged=true　设值MySQL 的root用户权限, 否则外部不能使用root用户登陆</li>
<li>-v /opt/docker_v/mysql/conf:/etc/mysql/conf.d：将主机/opt/docker_v/mysql/conf目录挂载到容器的/etc/mysql/conf.d</li>
<li>-v /opt/docker_v/mysql/data:/etc/mysql/data　　</li>
<li>-e MYSQL_ROOT_PASSWORD=123456　　　设置MySQL数据库root用户的密码</li>
<li>–name mysql　　　　 设值容器名称为mysql</li>
<li>–character-set-server=utf8mb4  –collation-server=utf8mb4_general_ci 设值数据库默认编码</li>
<li>mysql:5.7　　表示从docker镜像mysql:5.7中启动一个容器</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 3306:3306 --privileged=true -v /opt/data/mysql/conf:/etc/mysql/conf.d -v /opt/data/mysql/data:/etc/mysql/data -e MYSQL_ROOT_PASSWORD=123456 --name mysql mysql:5.7 </span><br></pre></td></tr></table></figure>

<ol start="6">
<li>新建MySQL用户</li>
</ol>
<p>先进入容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mysql bash</span><br></pre></td></tr></table></figure>

<p>执行MySQL命令, 输入root密码, 连接MySQL</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>

<p>输入密码后, 执行下面命令创建新用户 (用户名: test , 密码: test123)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;test123&#x27;</span> WITH GRANT OPTION;</span><br></pre></td></tr></table></figure>

<p><strong>阿里云的话远程访问记得防火墙开 3306 端口 ！！！！</strong></p>
<p>刷新</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>离线安装docker</title>
    <url>/2020/03/03/docker/%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85docker/</url>
    <content><![CDATA[<p>Docker 是一个开源的应用容器引擎，基于 <a href="https://www.runoob.com/go/go-tutorial.html">Go 语言</a> 并遵从 Apache2.0 协议开源。</p>
<p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p>
<p>容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p>
<span id="more"></span>

<p>1.从官方下载Docker安装包并上传至虚拟机</p>
<p><a href="https://download.docker.com/linux/static/stable/x86_64/">https://download.docker.com/linux/static/stable/x86_64/</a></p>
<p>2.解压安装包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -xvf docker-18.06.1-ce.tgz</span><br></pre></td></tr></table></figure>

<p>3.将解压出来的docker文件内容移动到 /usr/bin/ 目录下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp docker/* /usr/bin/</span><br></pre></td></tr></table></figure>

<p>4.将docker注册为service服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/systemd/system/docker.service</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"># the default is not to use systemd for cgroups because the delegate issues still</span><br><span class="line"># exists and systemd currently does not support the cgroup feature set required</span><br><span class="line"># for containers run by docker</span><br><span class="line">ExecStart=/usr/bin/dockerd</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line"># Having non-zero Limit*s causes performance problems due to accounting overhead</span><br><span class="line"># in the kernel. We recommend using cgroups to do container-local accounting.</span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line"># Uncomment TasksMax if your systemd version supports it.</span><br><span class="line"># Only systemd 226 and above support this version.</span><br><span class="line">#TasksMax=infinity</span><br><span class="line">TimeoutStartSec=0</span><br><span class="line"># set delegate yes so that systemd does not reset the cgroups of docker containers</span><br><span class="line">Delegate=yes</span><br><span class="line"># kill only the docker process, not all processes in the cgroup</span><br><span class="line">KillMode=process</span><br><span class="line"># restart the docker process if it exits prematurely</span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>5.启动docker</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x /etc/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start docker            #启动Docker</span><br><span class="line">systemctl enable docker.service            #设置开机自启</span><br></pre></td></tr></table></figure>

<p>6.验证</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status docker            #查看Docker状态</span><br><span class="line">docker -v            #查看Docker版本</span><br></pre></td></tr></table></figure>

<p>Tips:</p>
<p><strong>①忽略证书配置</strong></p>
<p>ExecStart=/usr/bin/dockerd –insecure-registry Docker仓库IP:Docker端口号</p>
<p><strong>②启动容器报错：</strong></p>
<p>/usr/bin/docker-current: Error response from daemon: shim error: docker-runc not installed on system.</p>
<p>解决：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ln -s /usr/libexec/docker/docker-runc-current /usr/bin/docker-runc</span><br></pre></td></tr></table></figure>

<p>To the world you may be one person, but to one person you may be the world</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>给docker容器分配内存和cpu</title>
    <url>/2020/03/03/docker/%E7%BB%99docker%E5%AE%B9%E5%99%A8%E5%88%86%E9%85%8D%E5%86%85%E5%AD%98%E5%92%8Ccpu/</url>
    <content><![CDATA[<p>如何给<a href="https://www.west.cn/paas/container/">docker容器</a>分配内存和cpu？默认情况下，容器使用的资源是不受限制的。也就是可以使用主机内核调度器所允许的最大资源。但是在容器的使用过程中，经常需要对容器可以使用的主机资源进行限制，下面我们来介绍下。</p>
<span id="more"></span>

<p><strong>容器CPU设置</strong></p>
<p>默认设置下，所有容器可以平等地使用主机 CPU 资源并且没有限制。<a href="https://www.west.cn/paas/container/">docker</a> 可以通过-c或–cpu-shares设置容器使用 CPU 的权重。如果不指定，默认值为 1024。</p>
<p>与内存限额不同，通过-c设置的 cpu share 并不是 CPU 资源的绝对数量，而是一个相对的权重值。某个容器最终能分配到的 CPU 资源取决于它的 cpu share 占所有容器 cpu share 总和的比例。通过 cpu share 可以设置容器使用 CPU 的优先级。</p>
<p>比如在 host 中启动了两个容器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name &quot;container_A&quot; -c 1024 ubuntu</span><br><span class="line">docker run --name &quot;container_B&quot; -c 512 ubuntu</span><br></pre></td></tr></table></figure>

<p>container_A 的 cpu share 1024，是 container_B 的两倍。当两个容器都需要 CPU 资源时，container_A 可以得到的 CPU 是 container_B 的两倍。</p>
<p>需要注意的是，这种按权重分配 CPU只会发生在 CPU资源紧张的情况下。如果 container_A 处于空闲状态，为了充分利用 CPU资源，container_B 也可以分配到全部可用的 CPU。</p>
<p><strong>容器内存限额</strong></p>
<p>与操作系统类似，容器可使用的内存包括两部分：物理内存和 swap。 Docker 通过下面两组参数来控制容器内存的使用量。</p>
<p>-m 或 –memory：设置内存的使用限额，例如 100M, 2G。</p>
<p>–memory-swap：设置 内存+swap 的使用限额。</p>
<p>当我们执行如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -m 200M --memory-swap=300M ubuntu</span><br></pre></td></tr></table></figure>

<p>其含义是允许该容器最多使用 200M 的内存和 100M 的 swap。默认情况下，上面两组参数为 -1，即对容器内存和 swap 的使用没有限制。</p>
<p>下面我们使用 progrium/stress 镜像来为容器分配内存。该镜像可用于对容器执行压力测试。执行如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it -m 200M --memory-swap=300M progrium/stress --vm 1 --vm-bytes 280M</span><br></pre></td></tr></table></figure>

<p>–vm 1：启动 1 个内存工作线程。</p>
<p>–vm-bytes 280M：每个线程分配 280M 内存。</p>
<p>如果让工作线程分配的内存超过 300M，分配的内存超过限额，stress 线程报错，容器退出。</p>
<p>如果在启动容器时只指定 -m 而不指定 –memory-swap，那么 –memory-swap 默认为 -m 的两倍，比如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it -m 200M ubuntu</span><br></pre></td></tr></table></figure>

<p>容器最多使用 200M 物理内存和 200M swap。</p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>docker容器技术.</title>
    <url>/2021/01/09/docker/docker%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/</url>
    <content><![CDATA[<p>Docker 是一个开源的应用容器引擎，基于 <a href="https://www.runoob.com/go/go-tutorial.html">Go 语言</a> 并遵从 Apache2.0 协议开源。</p>
<p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p>
<p>容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p>
<span id="more"></span>

<h3 id="一、docker容器技术入门"><a href="#一、docker容器技术入门" class="headerlink" title="一、docker容器技术入门"></a>一、docker容器技术入门</h3><h4 id="1、容器化技术"><a href="#1、容器化技术" class="headerlink" title="1、容器化技术"></a>1、容器化技术</h4><ul>
<li><p>主机虚拟化</p>
</li>
<li><p>共用一组硬件</p>
</li>
<li><p>独立内核</p>
</li>
<li><p>容器虚拟化</p>
</li>
<li><p>共用一组硬件</p>
</li>
<li><p>共用一个内核</p>
</li>
<li><p>独立UTS,Mount,IPC,PID,User,Net,namespaces<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559143055248.png"></p>
</li>
<li><p>Control Group：分配容器资源</p>
</li>
</ul>
<p>LXC：LinuX Container<br>docker —&gt;LXC的增强版，简化LXC<br>docker优势：统一环境，一次开发多出运行<br>docker劣势：增加运维的难度，因为一个容器一个进程，要进行调试要突破边界，进入容器才能调试</p>
<h4 id="2、docker的安装"><a href="#2、docker的安装" class="headerlink" title="2、docker的安装"></a>2、docker的安装</h4><p><strong>安装一些必要的系统工具：</strong></p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">sudo</span> yum install -y yum-utils device-mapper-persistent-<span class="class"><span class="keyword">data</span> lvm2</span></span><br></pre></td></tr></table></figure>

<p><strong>添加软件源信息：</strong></p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">sudo yum-config-manager --<span class="built_in">add</span>-repo http://mirrors.aliyun.<span class="keyword">com</span>/docker-<span class="keyword">ce</span>/linux/centos/docker-<span class="keyword">ce</span>.repo</span><br></pre></td></tr></table></figure>

<p><strong>更新 yum 缓存：</strong></p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sudo yum makecache fast</span></span><br></pre></td></tr></table></figure>

<p><strong>安装 Docker-ce：</strong></p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sudo yum -y install docker-ce</span></span><br></pre></td></tr></table></figure>

<p><strong>启动 Docker 后台服务</strong></p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">sudo systemctl start docker</span></span><br></pre></td></tr></table></figure>

<p><strong>测试运行 hello-world</strong></p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@runoob</span> ~]<span class="comment"># docker run hello-world</span></span><br></pre></td></tr></table></figure>

<p>由于本地没有hello-world这个镜像，所以会下载一个hello-world的镜像，并在容器内运行。</p>
<p><strong>镜像加速</strong></p>
<p>鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，我们可以需要配置加速器来解决，我使用的是网易的镜像地址：<a href="http://hub-mirror.c.163.com./">http://hub-mirror.c.163.com。</a></p>
<p>新版的 Docker 使用 /etc/docker/daemon.json（Linux） 或者 %programdata%\docker\config\daemon.json（Windows） 来配置 Daemon。</p>
<p>请在该配置文件中加入（没有该文件的话，请先建一个）：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;http://hub-mirror.c.163.com&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>查看docker版本</strong></p>
<figure class="highlight d"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">version</span></span><br></pre></td></tr></table></figure>

<p><strong>查看docker中的镜像</strong></p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker images</span></span><br></pre></td></tr></table></figure>

<p><strong>下载安装centos虚拟镜像</strong><br>查看docker有哪些镜像</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">search</span> centos</span><br></pre></td></tr></table></figure>

<p>下载镜像</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> pull docker.io/centos</span><br></pre></td></tr></table></figure>

<p>进入docker虚拟镜像</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> run -it docker.io/centos:latest /bin/bash</span><br></pre></td></tr></table></figure>

<h3 id="二、docker的基本用法"><a href="#二、docker的基本用法" class="headerlink" title="二、docker的基本用法"></a>二、docker的基本用法</h3><p>镜像：静态的<br>容器：动态的，有生命周期</p>
<h4 id="运行守护式容器"><a href="#运行守护式容器" class="headerlink" title="运行守护式容器"></a>运行守护式容器</h4><p><strong>方式一</strong><br>运行容器</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">run</span> -<span class="keyword">it</span> centos /bin/bash</span><br></pre></td></tr></table></figure>

<p>ctrl+p和ctrl+q退出容器，这个时候容器就在后台启动了<br>进入到运行中的容器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker attach 容器名</span><br></pre></td></tr></table></figure>

<p><strong>方式二</strong><br>使用run -d</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="bash"> --name dc1 -d centos /bin/sh -c <span class="string">&quot;while true; do echo hello world; sleep 1; done&quot;</span></span></span><br></pre></td></tr></table></figure>

<p>–name：给容器取个名字<br>-d：让容器在后台运行<br>-c：使容器执行sh脚本（打印好看日志）</p>
<h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">logs</span>  [<span class="string">-f</span>] [<span class="string">-t</span>] [<span class="string">-tail</span>] <span class="string">容器名</span></span><br><span class="line"><span class="string">-f</span>  <span class="string">--follows=true</span> <span class="string">|</span> <span class="literal">false</span><span class="string">默认为fase</span></span><br><span class="line"><span class="string">-t</span> <span class="string">--timestamps=true</span> <span class="string">|</span> <span class="literal">false</span> <span class="string">默认</span> <span class="literal">false</span></span><br><span class="line"><span class="string">-tail</span> <span class="string">=</span> <span class="string">&quot;all&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559055642525.png">   </p>
<p>查看容器中的进程</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker top 容器名</span><br></pre></td></tr></table></figure>
<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559055988821.png"></p>
<h4 id="执行新的线程"><a href="#执行新的线程" class="headerlink" title="执行新的线程"></a>执行新的线程</h4><figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">docker exec <span class="comment">[-d]</span> <span class="comment">[-i]</span> <span class="comment">[-t]</span> 容器名</span><br></pre></td></tr></table></figure>

<h4 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h4><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">stop</span> 容器名（发送一条命令给容器停止）</span><br><span class="line">docker <span class="built_in">kill</span> 容器名（直接停止）</span><br></pre></td></tr></table></figure>

<h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><p>1）首先需要停止所有的容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker stop $(docker ps -a -q)</span><br></pre></td></tr></table></figure>

<p>2）删除所有的容器（只删除单个时把后面的变量改为image id即可）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rm $(docker ps -a -q)</span><br></pre></td></tr></table></figure>
<h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><p>1）查看host中的镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>
<p>2）删除指定id的镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker rmi &lt;image id&gt;</span><br></pre></td></tr></table></figure>
<h3 id="三、docker-镜像管理基础"><a href="#三、docker-镜像管理基础" class="headerlink" title="三、docker 镜像管理基础"></a>三、docker 镜像管理基础</h3><ul>
<li><p>docker镜像含有启动容器所需要的文件系统及内容，因此，其用于创建并启动docker容器</p>
<ul>
<li>采用分层构建机制，最底层为boofs，其之上为roofs<ul>
<li>bootfs：用于系统引导的文件系统，包括bootloader和kernel，容器启动后会被卸载以节省内存资源；</li>
<li>roofs：位于bootfs之上，表现为docker容器的根文件系统<ul>
<li><p>传统模式中，系统启动之时，内核挂载rootfs时会首先将其挂载为“只读”模式，完整性自检完成后将其重现挂载为读写模式。</p>
</li>
<li><p>docker中，rootfs由内核挂载为“只读”模式，而后通过“联合挂载”技术额外挂载一个“可写层”</p>
<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559369540559.png" alt="enter description here"></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>Docker Image Layer</p>
<ul>
<li><p>位于下层的镜像称为父镜像，最底层的称为基础镜像</p>
</li>
<li><p>最上层为“可读写”层，其下的均为“只读”层</p>
<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559369529256.png" alt="enter description here"></p>
</li>
</ul>
</li>
<li><p>Docker Registry<br>容器启动时，docker daemon会试图从本地获取相关的镜像；本地镜像不存在时，其将从Registry中下载该镜像并保存到本地；</p>
<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559370362678.png"></p>
</li>
<li><p>Docker Registry 分类</p>
<ul>
<li>Registry 用于保存docker镜像，包括镜像的层次结构和元数据</li>
<li>用户可以自建Registry，也可以使用官方的Docker Hub</li>
<li>分类：<ul>
<li>Sponsor Registry：第三方的Registry，供客户和Docker社区使用</li>
<li>Mirror Registry：第三方的Registry，只让客户使用</li>
<li>Vcndor Registry：由发布Docker镜像的供应商提供的Registry</li>
<li>Private Registry：通过设有防火墙和额外的安全层的私有实体提供的Registry</li>
</ul>
</li>
</ul>
</li>
<li><p>Registry(repository and index)</p>
</li>
<li><p>Repository</p>
<ul>
<li>由某特定的 dockerf镜像的所有迭代版本组成的镜像仓库<ul>
<li>一个 RegistryRepository<ul>
<li>Repository可分为“顶层仓”和“用户仓库”</li>
<li>用户仓库名称格式为“用户名/仓库名</li>
</ul>
</li>
<li>每个仓库可以包含多个ag(标签),每个标签对应一个镜像</li>
</ul>
</li>
<li>Index<ul>
<li>维护用户帐户、镜像的校验以及公共命名空间的信息</li>
<li>相当于为registry提供了一个完成用户认证等功能的检索接口</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h4><h5 id="基于容器制作镜像"><a href="#基于容器制作镜像" class="headerlink" title="基于容器制作镜像"></a>基于容器制作镜像</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559374836752.png"></p>
<ul>
<li>进入交互式镜像</li>
</ul>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">run</span> <span class="comment">--name b1 -it busybox</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559374862840.png"></p>
<ul>
<li>创建一个目录和文件<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559375300008.png"></li>
<li>生成镜像文件</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">docker commit -<span class="selector-tag">p</span> b1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559375407164.png"></p>
<ul>
<li>查看生成的镜像文件<br>此时的镜像文件只有id没有仓库名的标签名<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559375485797.png"></li>
<li>给镜像加上仓库名和标签名</li>
</ul>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">tag</span> <span class="title">92cadba8bb5a</span> erwin/httpd:v0.<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559375640315.png"><br>​    一个镜像可以打多个标签</p>
<ul>
<li>启动镜像查看文件是否存在</li>
</ul>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">run</span> <span class="comment">--name t1 -it erwin/httpd:v0.1</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559376096212.png"></p>
<ul>
<li>查看镜像启动命令</li>
</ul>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">inspect</span> b1</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559375902956.png"></p>
<ul>
<li>制作镜像同时设置标签和修改启动命令</li>
</ul>
<figure class="highlight scilab"><table><tr><td class="code"><pre><span class="line">docker commit -c <span class="string">&#x27;CMD [&quot;</span>/bin/httpd<span class="string">&quot;,&quot;</span>-f<span class="string">&quot;,&quot;</span>-h<span class="string">&quot;,&quot;</span>/data/html/<span class="string">&quot;]&#x27;</span> -p b1 erwin/httpd:v0.<span class="number">2</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559376424718.png"></p>
<ul>
<li>启动镜像</li>
</ul>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">run</span> <span class="comment">--name t2 erwin/httpd:v0.2</span></span><br></pre></td></tr></table></figure>

<p> -访问服务<br> <img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559376865301.png"></p>
<h5 id="镜像的导入导出"><a href="#镜像的导入导出" class="headerlink" title="镜像的导入导出"></a>镜像的导入导出</h5><ul>
<li>导入</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">docker save -o myimages<span class="selector-class">.gz</span> erwin/httpd:v0.<span class="number">2</span></span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559377111820.png"></p>
<ul>
<li>导出</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">docker load -<span class="selector-tag">i</span> myimages.gz</span><br></pre></td></tr></table></figure>

<h5 id="docker启动jar文件"><a href="#docker启动jar文件" class="headerlink" title="docker启动jar文件"></a>docker启动jar文件</h5><ul>
<li>下载java镜像</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">docker pull java:<span class="number">8</span>u111</span><br></pre></td></tr></table></figure>

<ul>
<li>启动可执行文件</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">docker run -d -<span class="selector-tag">p</span> <span class="number">9090</span>:<span class="number">9090</span> -v /usr/springboot-<span class="number">1</span><span class="selector-class">.jar</span>:/usr/springboot-<span class="number">1</span><span class="selector-class">.jar</span> --name springboot java:<span class="number">8</span>u111 java -jar /usr/springboot-<span class="number">1</span>.jar</span><br></pre></td></tr></table></figure>

<p>==-d 表示在后台启动<br>-p 9090:9090 表示将容器的端口 映射成宿主主机的端口，否则9090端口访问不到<br>-v /usr/springboot-1.jar:/usr/springboot-1.jar 表示将宿主主机的jar文件，映射到容器中（分号前为宿主主机的路径，分号后为容器中的路径）<br>–name springboot 表示为该容器取一个全局唯一的名称，这里我取的名称为springboot<br>java:8u111 表示镜像文件的名称和tag<br>java -jar /usr/springboot-1.jar 表示运行jar包，注意：这里的jar包为容器中的位置，是通过前面的-v属性映射的==</p>
<h3 id="四、docker容器虚拟化网络"><a href="#四、docker容器虚拟化网络" class="headerlink" title="四、docker容器虚拟化网络"></a>四、docker容器虚拟化网络</h3><h4 id="docker的四种网络类型"><a href="#docker的四种网络类型" class="headerlink" title="docker的四种网络类型"></a>docker的四种网络类型</h4><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559470576751.png"></p>
<ul>
<li>封闭式网络<br>创建封闭式网络的容器</li>
</ul>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="built_in">--name</span> <span class="string">t1</span> -<span class="string">it</span> <span class="built_in">--network</span> <span class="string">none</span> <span class="built_in">--rm</span> <span class="string">busybox:latest</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="built_in">--rm</span> 表示退出即删除容器</span><br><span class="line"><span class="built_in">--network</span> 网络名称 创建容器并接入哪个网络</span><br></pre></td></tr></table></figure>

<p>通过ifconfig查看网络<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559471137666.png"></p>
<ul>
<li>桥接网络（默认）<br>创建交接网路</li>
</ul>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="built_in">--name</span> <span class="string">t1</span> -<span class="string">it</span> <span class="built_in">--network</span> <span class="string">bridge</span> <span class="built_in">--rm</span> <span class="string">busybox:latest</span></span><br></pre></td></tr></table></figure>

<p>查看网络<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559471352298.png"></p>
<ul>
<li>容器联盟网络（共享容器net名称空间）<br>创建容器</li>
</ul>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="built_in">--name</span> <span class="string">t1</span> <span class="built_in">--network</span> <span class="string">container:t2 </span>-<span class="string">it</span> <span class="built_in">--rm</span> <span class="string">busybox</span></span><br><span class="line">创建容易并共享容器<span class="string">t2</span>的网络名称空间</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559474321030.png"></p>
<ul>
<li>主机联盟网络（共享主机net名称空间）</li>
</ul>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="built_in">--name</span> <span class="string">t1</span> <span class="built_in">--network</span> <span class="string">host</span> -<span class="string">it</span> <span class="built_in">--rm</span> <span class="string">busybox</span></span><br><span class="line">创建并共享宿主机的网络名称空间</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559474583116.png"></p>
<h4 id="docker容器的端口映射"><a href="#docker容器的端口映射" class="headerlink" title="docker容器的端口映射"></a>docker容器的端口映射</h4><ul>
<li>Docker为NAT桥,因此容器一般获得的是私有网络地址</li>
<li>可以把容器想像为宿主机NAT服务背后的主机</li>
<li>如果开放容器或其上的服务为外部网络访问,需要在宿主机上为其定义DNAT规则,例如<ul>
<li>对宿主机某IP地址的访问全部映射给某容器地址<ul>
<li>主机IP : : 容器IP</li>
</ul>
</li>
<li>对宿主机某IP地址的某端口的访问映射给某容器地址的某端口<ul>
<li>主机IP:PORT : : 容器IP:PORT</li>
</ul>
</li>
</ul>
</li>
<li>为docker run命令使用-p选项即可实现端口映射,无须手动添加规则</li>
<li>-p选项的使用格式<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559472397894.png"></li>
<li><strong>映射容器的80端口</strong></li>
</ul>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="built_in">--name</span> <span class="string">t1</span> <span class="built_in">--rm</span> -<span class="string">p</span> <span class="string">80</span> <span class="string">erwin</span>/<span class="string">httpd:v0.</span><span class="string">2</span></span><br></pre></td></tr></table></figure>

<p>使用<code>iptables -t nat -vnL</code>查看映射的端口（或<code>docker ports 容器名</code>）<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559473048178.png"><br>自此可以通过访问宿主机的32768端口访问到容器的80端口<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559473114259.png"></p>
<h4 id="修改docker网桥地址"><a href="#修改docker网桥地址" class="headerlink" title="修改docker网桥地址"></a>修改docker网桥地址</h4><ul>
<li>关闭docker</li>
</ul>
<figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line">systemctl <span class="keyword">stop</span> docker</span><br></pre></td></tr></table></figure>

<ul>
<li>修改/etc/docker/daemon.json</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;http://hub-mirror.c.163.com&quot;</span>],</span><br><span class="line">  <span class="attr">&quot;bip&quot;</span>:<span class="string">&quot;10.0.0.1/16&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>查看网桥地址<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559475421173.png"></li>
</ul>
<h3 id="五、docker-存储卷"><a href="#五、docker-存储卷" class="headerlink" title="五、docker 存储卷"></a>五、docker 存储卷</h3><ol>
<li><p>什么是存储卷？容器与宿主机的文件关联。</p>
</li>
<li><p>为什么使用存储卷？<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559514591718.png"></p>
<p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559514746519.png"></p>
</li>
<li><p>存储卷的类型<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559515031903.png"></p>
</li>
<li><p>在容器中使用Volumes（卷）<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559515128962.png"><br><strong>案例</strong></p>
</li>
</ol>
<p>启动一个容器，使容器目录/data/t1挂载到主机/data/t1上</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">docker run <span class="params">--name</span> t1 <span class="params">--rm</span> -it -v <span class="string">/data/t1</span>:<span class="string">/data/t1</span> busybox</span><br></pre></td></tr></table></figure>

<p>在容器/data/t1中添加文件index.html<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559515622159.png"><br>查看宿主机的是否有这个文件<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559515667872.png"></p>
<ol>
<li>多容器共享存储卷<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559515810955.png"><br><strong>使用–volumes-from</strong><br>启动一个新的容器t2绑定t1的卷</li>
</ol>
<figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">run</span> <span class="built_in">--name</span> <span class="string">t2</span> -<span class="string">it</span> <span class="built_in">--volumes-from</span> <span class="string">t1</span>  <span class="string">busybox</span></span><br></pre></td></tr></table></figure>

<p>增加一个t2.txt文件<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559516175798.png"><br>宿主机查看是否存在文件<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559516258116.png"></p>
<h3 id="六、Dockerfile详解"><a href="#六、Dockerfile详解" class="headerlink" title="六、Dockerfile详解"></a>六、Dockerfile详解</h3><h4 id="1、什么是Dockerfile？"><a href="#1、什么是Dockerfile？" class="headerlink" title="1、什么是Dockerfile？"></a>1、什么是Dockerfile？</h4><p>简单一句话：Dockerfile是制作镜像的指令文件。<br>Dockerfile文件注意事项：</p>
<ul>
<li>Dockerfile文件首字母必须大写</li>
<li>制作镜像用到的文件不能再Dockerfile所在文件的父目录</li>
<li>Dockerfile指令不区分大小写，不过约定俗成都用大写</li>
</ul>
<h4 id="2、Dockerfile各指令功能详情"><a href="#2、Dockerfile各指令功能详情" class="headerlink" title="2、Dockerfile各指令功能详情"></a>2、Dockerfile各指令功能详情</h4><h5 id="2-1、FROM"><a href="#2-1、FROM" class="headerlink" title="2.1、FROM"></a>2.1、FROM</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559686263111.png"></p>
<h5 id="2-2、MAINTANIER"><a href="#2-2、MAINTANIER" class="headerlink" title="2.2、MAINTANIER"></a>2.2、MAINTANIER</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559686510603.png"></p>
<h5 id="2-3、COPY"><a href="#2-3、COPY" class="headerlink" title="2.3、COPY"></a>2.3、COPY</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559686617576.png"></p>
<h5 id="2-4、ADD"><a href="#2-4、ADD" class="headerlink" title="2.4、ADD"></a>2.4、ADD</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559687203855.png"></p>
<h5 id="2-5、WORKDIR"><a href="#2-5、WORKDIR" class="headerlink" title="2.5、WORKDIR"></a>2.5、WORKDIR</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559687390208.png"></p>
<h5 id="2-6、VOLUME"><a href="#2-6、VOLUME" class="headerlink" title="2.6、VOLUME"></a>2.6、VOLUME</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559687357740.png"></p>
<h5 id="2-7、EXPOSE"><a href="#2-7、EXPOSE" class="headerlink" title="2.7、EXPOSE"></a>2.7、EXPOSE</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559687546282.png"></p>
<h5 id="2-8、ENV"><a href="#2-8、ENV" class="headerlink" title="2.8、ENV"></a>2.8、ENV</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559687659969.png"></p>
<h5 id="2-9、RUN"><a href="#2-9、RUN" class="headerlink" title="2.9、RUN"></a>2.9、RUN</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559687764752.png"></p>
<h5 id="2-10、CMD"><a href="#2-10、CMD" class="headerlink" title="2.10、CMD"></a>2.10、CMD</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559687992826.png"></p>
<h5 id="2-11、ENTRYPOINT"><a href="#2-11、ENTRYPOINT" class="headerlink" title="2.11、ENTRYPOINT"></a>2.11、ENTRYPOINT</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559688261062.png"></p>
<h5 id="2-12、HEALTHCHCK"><a href="#2-12、HEALTHCHCK" class="headerlink" title="2.12、HEALTHCHCK"></a>2.12、HEALTHCHCK</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559688461634.png"></p>
<h5 id="2-13、USER"><a href="#2-13、USER" class="headerlink" title="2.13、USER"></a>2.13、USER</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559688386329.png"></p>
<h5 id="2-14、SHLEE"><a href="#2-14、SHLEE" class="headerlink" title="2.14、SHLEE"></a>2.14、SHLEE</h5><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559688576800.png"></p>
<h4 id="3、一个Dockerfile的文件示例"><a href="#3、一个Dockerfile的文件示例" class="headerlink" title="3、一个Dockerfile的文件示例"></a>3、一个Dockerfile的文件示例</h4><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># This my first nginx Dockerfile</span></span><br><span class="line"><span class="comment"># Version 1.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Base images 基础镜像</span></span><br><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"></span><br><span class="line"><span class="comment">#MAINTAINER 维护者信息</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> tianfeiyu </span><br><span class="line"></span><br><span class="line"><span class="comment">#ENV 设置环境变量</span></span><br><span class="line"><span class="keyword">ENV</span> PATH /usr/local/nginx/sbin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="comment">#ADD  文件放在当前目录下，拷过去会自动解压</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> nginx-1.8.0.tar.gz /usr/<span class="built_in">local</span>/  </span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> epel-release-latest-7.noarch.rpm /usr/<span class="built_in">local</span>/  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#RUN 执行以下命令 </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> rpm -ivh /usr/<span class="built_in">local</span>/epel-release-latest-7.noarch.rpm</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum install -y wget lftp gcc gcc-c++ make openssl-devel pcre-devel pcre &amp;&amp; yum clean all</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> useradd -s /sbin/nologin -M www</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#WORKDIR 相当于cd</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /usr/<span class="built_in">local</span>/nginx-1.8.0 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> ./configure --prefix=/usr/<span class="built_in">local</span>/nginx --user=www --group=www --with-http_ssl_module --with-pcre &amp;&amp; make &amp;&amp; make install</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;daemon off;&quot;</span> &gt;&gt; /etc/nginx.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#EXPOSE 映射端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#CMD 运行以下命令</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;nginx&quot;</span>]</span></span><br></pre></td></tr></table></figure>

<h3 id="七、Docker私有Registry"><a href="#七、Docker私有Registry" class="headerlink" title="七、Docker私有Registry"></a>七、Docker私有Registry</h3><h4 id="1、docker-registry-分类"><a href="#1、docker-registry-分类" class="headerlink" title="1、docker registry 分类"></a>1、docker registry 分类</h4><p><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559900446994.png"></p>
<h4 id="2、安装配置registry"><a href="#2、安装配置registry" class="headerlink" title="2、安装配置registry"></a>2、安装配置registry</h4><ul>
<li>安装registry</li>
</ul>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">yum -y install docker-registry</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查看安装目录<code>rpm -ql docker-distribution</code><br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559900618581.png"></li>
<li>查看config.yml配合文件</li>
</ul>
<p><code>cd /etc/docker-distribution/registry/</code></p>
<p><code>vi config.yml</code></p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">version:</span> <span class="number">0.1</span></span><br><span class="line"><span class="symbol">log:</span></span><br><span class="line"><span class="symbol">  fields:</span></span><br><span class="line"><span class="symbol">    service:</span> registry</span><br><span class="line"><span class="symbol">storage:</span></span><br><span class="line"><span class="symbol">    cache:</span></span><br><span class="line"><span class="symbol">        layerinfo:</span> inmemory</span><br><span class="line"><span class="symbol">    filesystem:</span></span><br><span class="line"><span class="symbol">        rootdirectory:</span> <span class="meta-keyword">/var/</span>lib/registry</span><br><span class="line"><span class="symbol">http:</span></span><br><span class="line"><span class="symbol">    addr:</span> :<span class="number">5000</span></span><br></pre></td></tr></table></figure>

<ul>
<li>启动registry</li>
</ul>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">systemctl start docker-distribution</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查看下端口映射<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559901003457.png"></li>
<li>修改daemon.json配置文件，增加信任路径</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;insecure-registries&quot;</span>:[<span class="string">&quot;192.168.80.128:5000&quot;</span>]</span><br></pre></td></tr></table></figure>

<ul>
<li>推送镜像到registry<br>给镜像打个标签：<code>docker tag busybox:latest 192.168.80.128:5000/b1:v02</code><br>推送到仓库：<code>docker push 192.168.80.128:5000/b1:v02</code><br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559901273291.png"></li>
</ul>
<h4 id="3、安装配置barbor"><a href="#3、安装配置barbor" class="headerlink" title="3、安装配置barbor"></a>3、安装配置barbor</h4><p>barbor是提供可是话ui的docker registry<br>可以去github上下载最新版的barbor：<a href="https://github.com/goharbor/harbor">https://github.com/goharbor/harbor</a> ，在视频教程目录也有1.8版的</p>
<ul>
<li>安装<br>下载下来之后放入一个自定义的目录，然后解压<br><code>tar xf harbor-offline-installer-v1.8.0.tgz -C /usr/local/</code><br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559901707896.png"></li>
<li>安装docker-compose</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.24.0/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br></pre></td></tr></table></figure>

<ul>
<li>可以查看harbor.yml配置文件，修改host为自己的ip</li>
<li><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559901930147.png"><br>配置指南：<a href="https://github.com/goharbor/harbor/blob/master/docs/installation_guide.md">https://github.com/goharbor/harbor/blob/master/docs/installation_guide.md</a></li>
<li>启动harbor</li>
</ul>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">./install<span class="selector-class">.sh</span> </span><br></pre></td></tr></table></figure>

<p>第一次启动较慢，启动成功，打开页面<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559904711404.png"><br>初始账号密码：admin，Harbor12345<br><img src="https://gitee.com/BestErwin/img/raw/master/xiaoshujing/1559904758591.png"></p>
<hr>
<p>end</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>2.2获取Rinkeby测试以太</title>
    <url>/2020/01/04/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/2.2%E8%8E%B7%E5%8F%96%20Rinkeby%E6%B5%8B%E8%AF%95%E4%BB%A5%E5%A4%AA/</url>
    <content><![CDATA[<h1 id="获取Rinkeby测试以太"><a href="#获取Rinkeby测试以太" class="headerlink" title="获取Rinkeby测试以太"></a>获取<strong>Rinkeby</strong>测试以太</h1><p>Ropsten是以太坊的主测试网，自然是我们测试练手的首选。不过由于Robsten采用与主网完全一样的PoW 共识，有时也就会和主网一样拥堵，甚至有过之而无不及。比如前些天Robsten测试君士坦丁堡分叉的时候，一度完全瘫痪，无法发送交易。这时我们可能就需要找别的替代品了。Rinkey 和Kovan采用的是PoA机制，所以出块很快而且很稳定。</p>
<span id="more"></span>

<p>现在我们切换到Rinkby测试网络，再来看一下如果获取免费的测试以太。</p>
<p>关于在Rinkeby的faucet上获取测试以太，社区已经提供了很不错的解决办法。目前发现的免费充值方法（当然是充值到测试网络中）主要有两个：</p>
<ul>
<li><p>rinkeby-faucet.com，只要提供账户地址即可充值0.001 ETH，理论上是可以无限制充值的，但是如果需要充值1ETH，需要操作1000 次，太费劲，建议大家直接使用第2 种方式；</p>
</li>
<li><p>faucet.rinkeby.io，可以提供多达18 ETH （/三天）的充值金额，但是为了避免被滥用，要求接受充值的账户持有人必须以太坊账户地址发送到自己的社交网络中（如Twitter、Facebook、Google Plus），同样，该工具限制了充值的频率；</p>
</li>
</ul>
<p>接下来，逐步跟大家介绍下，如何使用faucet.rinkeby.io 为Metamask 里面的账户充值18 ETH。</p>
<ol>
<li><p>复制Metamask 账户的地址。点击小狐狸的图标打开钱包（必要的时候需要输入密码解锁钱包），然后点击”Account 1”把地址复制到剪贴板，</p>
</li>
<li><p>打开plus.google.com，确保处于登录状态（如果没有需要先注册google账号），如下图，按页面右下角的按钮，准备开始发布新的状态：</p>
</li>
</ol>
<ol start="3">
<li>把复制到的Metamask 账户地址粘贴到状态发布输入框里面，然后点击发布：</li>
</ol>
<ol start="4">
<li><p>单击新发布状态卡片右上角的分享按钮，会在新标签中打开该状态：</p>
</li>
<li><p>在新标签中复制地址栏中的地址备用：</p>
</li>
</ol>
<ol start="6">
<li>打开faucet.rinkeby.io，按下图提示操作：</li>
</ol>
<p>提交充值申请之后，可能会遇到Google 的图形验证码，按提示操作即可，等待转账完成，</p>
<p>重新打开我们的Metamask 钱包账户，查看账户余额，发现还是0。</p>
<p>可能你会好奇，刚才明明充值成功了，为什么账户余额还是0 呢？原因是充值操作只发生在Rinkeby 测试网络中，而Metamask 钱包默认链接的是以太坊主网，还记得主网和测试网络的账号可以还记得主网和测试网络的账号可以通用，但是账户中的数据是完全隔离的么？点击Metamask 钱包界面左上角的”Main network”，切换到Rinkeby 测试网络即可。</p>
<p>不出意外，现在可以看到已经有余额了。恭喜，拿到了接近4000美金的测试金！</p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>3.1以太坊客户端</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/3.1%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    <content><![CDATA[<h1 id="以太坊客户端"><a href="#以太坊客户端" class="headerlink" title="以太坊客户端"></a>以太坊客户端</h1><h2 id="什么是以太坊客户端"><a href="#什么是以太坊客户端" class="headerlink" title="什么是以太坊客户端"></a>什么是以太坊客户端</h2><ul>
<li>以太坊客户端是一个软件应用程序，它实现以太坊规范并通过 p2p<br>网络与其他以太坊客户端进行通信。如果不同的以太坊客户端符合<br>参考规范和标准化通信协议，则可以进行相互操作。</li>
<li>以太坊是一个开源项目，由“黄皮书”正式规范定义。除了各种以<br>太坊改进提案之外，此正式规范还定义了以太坊客户端的标准行为。</li>
<li>因为以太坊有明确的正式规范，以太网客户端有了许多独立开发的<br>软件实现，它们之间又可以彼此交互。</li>
</ul>
<span id="more"></span>

<h2 id="基于以太坊规范的网络"><a href="#基于以太坊规范的网络" class="headerlink" title="基于以太坊规范的网络"></a>基于以太坊规范的网络</h2><ul>
<li>存在各种基于以太坊规范的网络，这些网络基本符合以太坊“黄皮<br>书”中定义的形式规范，但它们之间可能相互也可能不相互操作。</li>
<li>这些基于以太坊的网络中有：以太坊，以太坊经典， Ella<br>Expanse Ubiq Musicoin 等等。</li>
<li>虽然大多数在协议级别兼容，但这些网络通常具有特殊要求，以太<br>坊客户端软件的维护人员、需要进行微小更改、以支持每个网络的<br>功能或属性。</li>
</ul>
<h2 id="以太坊的多种客户端"><a href="#以太坊的多种客户端" class="headerlink" title="以太坊的多种客户端"></a>以太坊的多种客户端</h2><ul>
<li>go ethereum ( Go官方推荐，开发使用最多）<br>地址： <a href="https://github.com/ethereum/go">https://github.com/ethereum/go</a> ethereum</li>
<li>parity ( Rust )<br>最轻便客户端，在历次以太坊网络攻击中表现卓越<br>地址： <a href="https://github.com/ethcore/parity/releases">https://github.com/ethcore/parity/releases</a></li>
<li>cpp ethereum (C++）<br>地址： <a href="https://github.com/ethereum/cpp">https://github.com/ethereum/cpp</a> ethereum</li>
<li>pyethapp (Python）<br>地址： <a href="https://github.com/heikoheiko/pyethapp">https://github.com/heikoheiko/pyethapp</a></li>
<li>ethereumjs lib ( javascript）<br>地址： <a href="https://github.com/ethereumjs/ethereumjs">https://github.com/ethereumjs/ethereumjs</a> lib</li>
<li>EthereumJ / Harmony ( Java）<br>地址： <a href="https://github.com/ethereum/ethereumj">https://github.com/ethereum/ethereumj</a></li>
</ul>
<h2 id="以太坊全节点"><a href="#以太坊全节点" class="headerlink" title="以太坊全节点"></a>以太坊全节点</h2><ul>
<li>全节点是整个主链的一个副本，存储并维护链上的所有数据，并随<br>时验证新区块的合法性。</li>
<li>区块链的健康和扩展弹性，取决于具有许多独立操作和地理上分散<br>的全节点。每个全节点都可以帮助其他新节点获取区块数据，并提<br>供所有交易和合约的独立验证。</li>
<li>运行全节点将耗费巨大的成本，包括硬件资源和带宽。</li>
<li>以太坊开发不需要在实时网络（主网）上运行的全节点。我们可以<br>使用测试网络的节点来代替，也可以用本地私链，或者使用服务商<br>提供的基于云的以太坊客户端；这些几乎都可以执行所有操作。</li>
</ul>
<h2 id="远程客户端和轻节点"><a href="#远程客户端和轻节点" class="headerlink" title="远程客户端和轻节点"></a>远程客户端和轻节点</h2><ul>
<li>远程客户端<br>不存储区块链的本地副本或验证块和交易。这些客户端一般只提<br>供钱包的功能，可以创建和广播交易。远程客户端可用于连接到<br>现有网络， MetaMask 就是一个这样的客户端。</li>
<li>轻节点<br>不保存链上的区块历史数据，只保存区块链当前的状态。轻节点<br>可以对块和交易进行验证。</li>
</ul>
<h2 id="公共测试网络节点的优缺点"><a href="#公共测试网络节点的优缺点" class="headerlink" title="公共测试网络节点的优缺点"></a>公共测试网络节点的优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul>
<li>一个 testnet 节点需要同步和存储更少的数据，大约 10GB ，具体取决<br>于不同的网络。</li>
<li>一个 testnet 节点一般可以在几个小时内完全同步。</li>
<li>部署合约或进行交易只需要发送测试以太，可以从“水龙头”免费获<br>得。</li>
<li>测试网络是公共区块链，有许多其他用户和合约运行（区别于私链）。</li>
</ul>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li>测试网络上使用测试以太，它没有价值。因此，无法测试交易对手的<br>安全性，因为没有任何利害关系。</li>
<li>测试网络上的测试无法涵盖所有的真实主网特性。例如，交易费用虽<br>然是发送交易所必需的，但由于 gas 免费，因此 testnet 上往往不会考<br>虑。而且一般来说，测试网络不会像主网那样经常拥堵。</li>
</ul>
<h2 id="本地私链的优缺点"><a href="#本地私链的优缺点" class="headerlink" title="本地私链的优缺点"></a>本地私链的优缺点</h2><p>优点</p>
<ul>
<li>磁盘上几乎没有数据，也不同步别的数据，是一个完全“干净”的<br>环境。</li>
<li>无需获取测试以太，你可以任意分配以太，也可以随时自己挖矿获<br>得。</li>
<li>没有其他用户，也没有其他合约，没有任何外部干扰。</li>
</ul>
<p>缺点</p>
<ul>
<li>没有其他用户意味与公链的行为不同。发送的交易并不存在空间或<br>交易顺序的竞争。</li>
<li>除自己之外没有矿工意味着挖矿更容易预测，因此无法测试公链上<br>发生的某些情况。</li>
<li>没有其他合约，意味着你必须部署要测试的所有内容，包括所有的</li>
</ul>
<h2 id="运行全节点的要求"><a href="#运行全节点的要求" class="headerlink" title="运行全节点的要求"></a>运行全节点的要求</h2><ul>
<li><p>最低要求</p>
<ul>
<li>双核以上 CPU</li>
<li>硬盘存储可用空间至少 80GB</li>
<li>如果是 SSD ，需要 4GB 以上 RAM ，如果是 HDD ，至少 8GB RAM</li>
<li>8 MB/s 下载带宽 </li>
</ul>
</li>
<li><p>推荐配置</p>
<ul>
<li>四核以上的快速 CPU</li>
<li>16GB 以上 RAM</li>
<li>500GB 以上可用空间的快速 SSD</li>
<li>25+ MB/s 下载带宽</li>
</ul>
</li>
</ul>
<h2 id="Geth"><a href="#Geth" class="headerlink" title="Geth"></a>Geth</h2><p>( Go Ethereum)</p>
<ul>
<li>Geth 是由以太坊基金会积极开发的 Go 语言实现，因此被认为是以<br>太坊客户端的“官方”实现。</li>
<li>通常，每个基于以太坊的区块链都有自己的 Geth 实现。</li>
<li>以太坊的 Geth github 仓库链接：<br><a href="https://github.com/ethereum/go">https://github.com/ethereum/go</a> ethereum</li>
</ul>
<h2 id="JSON-RPC"><a href="#JSON-RPC" class="headerlink" title="JSON-RPC"></a>JSON-RPC</h2><ul>
<li>以太坊客户端提供了 API 和一组远程调用（ RPC ）命令，这些命令<br>被编码为 JSON 。这被称为 JSON RPC API 。本质上， JSON RPC<br>API 就是一个接口，允许我们编写的程序使用以太坊客户端作为网<br>关，访问以太坊网络和链上数据。</li>
<li>通常， RPC 接口作为一个 HTTP 服务，端口设定为 8545 。出于安<br>全原因，默认情况下，它仅限于接受来自 localhost 的连接。</li>
<li>要访问 JSON RPC API ，我们可以使用编程语言编写的专用库，例<br>如 JavaScript 的 web3.js 。</li>
<li>或者也可以手动构建 HTTP 请求并发送 接收 JSON 编码的请求，如：<br>$ curl<br>X POST H “Content Type: application/ json “ data<br>‘{“jsonrpc”:”2.0”,”method”:”web3_clientVersion”,”params”:[],”id”:1<br>}’ <a href="http://localhost:8545/">http://localhost:8545</a></li>
</ul>
<h2 id="用Geth-搭建以太坊私链"><a href="#用Geth-搭建以太坊私链" class="headerlink" title="用Geth 搭建以太坊私链"></a>用Geth 搭建以太坊私链</h2><p>安装Geth前,请先安装golang</p>
<h3 id="安装Geth"><a href="#安装Geth" class="headerlink" title="安装Geth"></a>安装Geth</h3><p>下载可执行文件,访问<a href="https://geth.ethereum.org/downloads/">https://geth.ethereum.org/downloads/</a></p>
<p>复制下载链接地址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[wzm@wzm-pc module]$ cd /opt/module/</span><br><span class="line">[wzm@wzm-pc module]$ wget https://gethstore.blob.core.windows.net/builds/geth-linux-amd64-1.9.25-e7872729.tar.gz</span><br><span class="line">[wzm@wzm-pc module]$ tar -zxvf gethXXXXXXX.tar.gz</span><br><span class="line">[wzm@wzm-pc module]$ cd geth</span><br><span class="line">[wzm@wzm-pc geth]$ ./geth version</span><br></pre></td></tr></table></figure>

<h2 id="Geth控制台命令"><a href="#Geth控制台命令" class="headerlink" title="Geth控制台命令"></a>Geth控制台命令</h2><p>双终端执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[wzm@wzm-pc geth]$ geth --datadir ./data/  console console 2&gt;log/output.log</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tail -f log/output.log</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Welcome to the Geth JavaScript console!</span><br><span class="line"></span><br><span class="line">instance: Geth/v1.9.25-stable-e7872729/darwin-amd64/go1.15.6</span><br><span class="line">at block: 0 (Thu Jan 01 1970 08:00:00 GMT+0800 (CST))</span><br><span class="line"> datadir: /Users/wzm/module/geth/data</span><br><span class="line"> modules: admin:1.0 debug:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 web3:1.0</span><br><span class="line"></span><br><span class="line">To exit, press ctrl-d</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br><span class="line"><span class="bash">&gt;</span></span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">INFO [02-21|15:52:10.695] Starting Geth on Ethereum mainnet... </span><br><span class="line">INFO [02-21|15:52:10.695] Bumping default cache on mainnet         provided=1024 updated=4096</span><br><span class="line">WARN [02-21|15:52:10.695] Sanitizing cache to Go&#x27;s GC limits       provided=4096 updated=324</span><br><span class="line">INFO [02-21|15:52:10.696] Maximum peer count                       ETH=50 LES=0 total=50</span><br><span class="line">INFO [02-21|15:52:10.696] Smartcard socket not found, disabling    err=&quot;stat /run/pcscd/pcscd.comm: no such file or directory&quot;</span><br><span class="line">INFO [02-21|15:52:10.702] Set global gas cap                       cap=25000000</span><br><span class="line">INFO [02-21|15:52:10.702] Allocated trie memory caches             clean=80.00MiB dirty=81.00MiB</span><br><span class="line">INFO [02-21|15:52:10.702] Allocated cache and file handles         database=/home/wzm/.ethereum/geth/chaindata cache=162.00MiB handles=2048</span><br><span class="line">INFO [02-21|15:52:10.716] Opened ancient database                  database=/home/wzm/.ethereum/geth/chaindata/ancient</span><br><span class="line">INFO [02-21|15:52:10.722] Initialised chain configuration          config=&quot;&#123;ChainID: 1 Homestead: 1150000 DAO: 1920000 DAOSupport: true EIP150: 2463000 EIP155: 2675000 EIP158: 2675000 Byzantium: 4370000 Constantinople: 7280000 Petersburg: 7280000 Istanbul: 9069000, Muir Glacier: 9200000, YOLO v2: &lt;nil&gt;, Engine: ethash&#125;&quot;</span><br><span class="line">INFO [02-21|15:52:10.722] Disk storage enabled for ethash caches   dir=/home/wzm/.ethereum/geth/ethash count=3</span><br><span class="line">INFO [02-21|15:52:10.722] Disk storage enabled for ethash DAGs     dir=/home/wzm/.ethash               count=2</span><br><span class="line">INFO [02-21|15:52:10.722] Initialising Ethereum protocol           versions=&quot;[65 64 63]&quot; network=1 dbversion=8</span><br><span class="line">INFO [02-21|15:52:10.725] Loaded most recent local header          number=0 hash=&quot;d4e567…cb8fa3&quot; td=17179869184 age=51y10mo2w</span><br><span class="line">INFO [02-21|15:52:10.725] Loaded most recent local full block      number=0 hash=&quot;d4e567…cb8fa3&quot; td=17179869184 age=51y10mo2w</span><br><span class="line">INFO [02-21|15:52:10.725] Loaded most recent local fast block      number=0 hash=&quot;d4e567…cb8fa3&quot; td=17179869184 age=51y10mo2w</span><br><span class="line">INFO [02-21|15:52:10.725] Loaded local transaction journal         transactions=0 dropped=0</span><br><span class="line">INFO [02-21|15:52:10.726] Regenerated local transaction journal    transactions=0 accounts=0</span><br><span class="line">INFO [02-21|15:52:10.733] Allocated fast sync bloom                size=161.00MiB</span><br><span class="line">INFO [02-21|15:52:10.764] Starting peer-to-peer node               instance=Geth/v1.9.25-stable-e7872729/linux-amd64/go1.15.6</span><br><span class="line">INFO [02-21|15:52:10.916] New local node record                    seq=3 id=5daae6a43a716f09 ip=127.0.0.1 udp=30303 tcp=30303</span><br><span class="line">INFO [02-21|15:52:10.933] Started P2P networking                   self=enode://614eb5421e688b675bca42d1db00840876e671d499d04e99ec4f8bcd1e116ff6ac9cdd0441e74d0315022682ae67def2010f6e4d3916d1c4263ab01e33502037@127.0.0.1:30303</span><br><span class="line">INFO [02-21|15:52:10.947] IPC endpoint opened                      url=/home/wzm/.ethereum/geth.ipc</span><br><span class="line">INFO [02-21|15:52:10.960] Initialized fast sync bloom              items=12356 errorrate=0.000 elapsed=225.631ms</span><br><span class="line">WARN [02-21|15:52:11.077] Served eth_coinbase                      reqid=3 t=&quot;47.116µs&quot; err=&quot;etherbase must be explicitly specified&quot;</span><br><span class="line">Welcome to the Geth JavaScript console!</span><br><span class="line"></span><br><span class="line">instance: Geth/v1.9.25-stable-e7872729/linux-amd64/go1.15.6</span><br><span class="line">at block: 0 (Wed Dec 31 1969 16:00:00 GMT-0800 (PST))</span><br><span class="line"> datadir: /home/wzm/.ethereum</span><br><span class="line"> modules: admin:1.0 debug:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 web3:1.0</span><br><span class="line"></span><br><span class="line">To exit, press ctrl-d</span><br></pre></td></tr></table></figure>

<ul>
<li><p>Geth Console 是 一个 交互式 的 JavaScript 执行环境， 里面 内置了一些用来操作以太坊的 JavaScript对象， 我们 可以直接 调用 这些对象 来获取区块链上的相关信息 。这些对象主要包括：</p>
<ul>
<li>eth 主要 包含 对 区块链 进行访问和交互 相关的方法；</li>
<li>net 主要 包含 查看 p2p 网络状态的方法；</li>
<li>admin 主要 包含 与管理节点相关的方法；</li>
<li>miner 主要 包含 挖矿 相关 的一些方法；</li>
<li>personal ：包含 账户 管理 的方法；</li>
<li>txpool ：包含 查看交易内存池的方法；</li>
<li>web3 ：包含 以上 所有 对象，还包含一些 通用 方法。</li>
</ul>
</li>
<li><p>常用命令有：</p>
<ul>
<li>personal.newAccount() newAccount()：创建账户</li>
<li>personal.unlockAccount() unlockAccount()：解锁账户</li>
<li>eth.accounts 列出 系统中的账户；</li>
<li>eth.getBalance() getBalance()：查看账户余额，返回值的单位是 Wei</li>
<li>eth.blockNumber ：列出 当前 区块 高度</li>
<li>eth.getTransaction() getTransaction()：获取交易 信息</li>
<li>eth.getBlock() getBlock()：获取区块 信息</li>
<li>miner.start() start()：开始挖矿</li>
<li>miner.stop() stop()：停止挖矿</li>
<li>web3.fromWei() Wei 换算成以太币；</li>
<li>web3.toWei() toWei()：以太币换算成 Wei</li>
<li>txpool.status ：交易池中的状态</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>3.2用 Geth 搭建以太坊私链</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/3.2%E7%94%A8%20Geth%20%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%A7%81%E9%93%BE/</url>
    <content><![CDATA[<h1 id="用-Geth-搭建以太坊私链"><a href="#用-Geth-搭建以太坊私链" class="headerlink" title="用 Geth 搭建以太坊私链"></a>用 Geth 搭建以太坊私链</h1><h3 id="安装Geth"><a href="#安装Geth" class="headerlink" title="安装Geth"></a>安装<strong>Geth</strong></h3><p>安装Geth有很多种方式，这里主要就Linux环境给出两种：系统包管理器（apt-get）安装和源码安装。更加推荐大家用源码安装，在整个过程中可以看到Geth各组件的构建步骤。</p>
<span id="more"></span>

<h4 id="一、apt-get"><a href="#一、apt-get" class="headerlink" title="一、apt-get"></a>一、apt-get</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install software-properties-common</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo add-apt-repository -y ppa:ethereum/ethereum</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install ethereum</span> </span><br></pre></td></tr></table></figure>

<h4 id="二、源码安装"><a href="#二、源码安装" class="headerlink" title="二、源码安装"></a>二、源码安装</h4><ol>
<li>克隆github仓库</li>
</ol>
<p>我们的第一步是克隆git仓库，以获取源代码的副本。</p>
<p>$ git clone <a href="https://github.com/ethereum/go-ethereum.git">https://github.com/ethereum/go-ethereum.git</a> </p>
<ol start="2">
<li>从源码构建Geth</li>
</ol>
<p>要构建Geth，切换到下载源代码的目录并使用make命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> go-ethereum</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> make geth</span> </span><br></pre></td></tr></table></figure>

<p>如果一切顺利，我们将看到Go编译器构建每个组件，直到它生成geth可执行文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">build/env.sh go run build/ci.go install ./cmd/geth </span><br><span class="line"></span><br><span class="line">\&gt;&gt;&gt; /usr/local/go/bin/go install -ldflags -X main.gitCommit=58a1e13e6dd7f52a1d5e67bee47d23fd6cfdee5c -v ./cmd/geth github.com/ethereum/go-ethereum/common/hexutil github.com/ethereum/go-ethereum/common/math github.com/ethereum/go-ethereum/crypto/sha3 github.com/ethereum/go-ethereum/rlp github.com/ethereum/go-ethereum/crypto/secp256k1 github.com/ethereum/go-ethereum/common [...] github.com/ethereum/go-ethereum/cmd/utils </span><br><span class="line">github.com/ethereum/go-ethereum/cmd/geth Done building. Run &quot;build/bin/geth&quot; to launch geth. </span><br></pre></td></tr></table></figure>

<p>查看gethversion，确保在真正运行之前安装正常：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./build/bin/geth version</span> </span><br><span class="line"></span><br><span class="line">Geth </span><br><span class="line">Version: 1.8.0-unstable </span><br><span class="line">Git Commit: e37f7be97e47a032d723db16d8b195998547805a </span><br><span class="line">Architecture: amd64 </span><br><span class="line">Protocol Versions: [63 62] </span><br><span class="line">Network Id: 1 </span><br><span class="line">Go Version: go1.9 </span><br><span class="line">Operating System: linux </span><br><span class="line">GOPATH=/home/ubuntu/project </span><br><span class="line">GOROOT=/usr/local/go </span><br></pre></td></tr></table></figure>



<h3 id="启动节点同步"><a href="#启动节点同步" class="headerlink" title="启动节点同步"></a>启动节点同步</h3><p>安装好了Geth，现在我们可以尝试运行一下它。执行下面的命令，geth就会开始同步区块，并存储在当前目录下。这里的–syncmode fast参数表示我们会以“快速”模式同步区块。在这种模式下，我们只会下载每个区块头和区块体，但不会执行验证所有的交易，直到所有区块同步完毕再去获取一个系统当前的状态。这样就节省了很多交易验证的时间。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> geth –datadir . --syncmode fast</span> </span><br></pre></td></tr></table></figure>

<p>通常，在同步以太坊区块链时，客户端会一开始就下载并验证每个块和每个交易，也就是说从创世区块开始。毫无疑问，如果我们不加–syncmodefast参数，同步将花费很长时间并且具有很高的资源要求（它将需要更多的RAM，如果你没有快速存储，则需要很长时间）。</p>
<p>有些文章会把这个参数写成–fast，这是以前快速同步模式的参数写法，现在已经被–syncmode fast取代。</p>
<p>如果我们想同步测试网络的区块，可以用下面的命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> geth --testnet --datadir . --syncmode fast</span> </span><br></pre></td></tr></table></figure>

<p>–testnet 这个参数会告诉geth 启动并连接到最新的测试网络，也就是Ropsten。测试网络的区块和交易数量会明显少于主网，所以会更快一点。但即使是用快速模式同步测试网络，也会需要几个小时的时间。</p>
<p>因为公共网络的区块数量太多，同步耗时太长，我们为了方便快速了解Geth，可以试着用它来搭一个只属于自己的私链。</p>
<p>首先，我们需要创建网络的“创世”（genesis）状态，这写在一个小小的JSON文件里（例如，我们将其命名为genesis.json）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123; </span><br><span class="line"></span><br><span class="line">	&quot;config&quot;: &#123; </span><br><span class="line">		&quot;chainId&quot;: 15 </span><br><span class="line">	&#125;, </span><br><span class="line">	&quot;difficulty&quot;: &quot;2000&quot;, </span><br><span class="line">	&quot;gasLimit&quot;: &quot;2100000&quot;, </span><br><span class="line">	&quot;alloc&quot;: &#123; </span><br><span class="line">		&quot;7df9a875a174b3bc565e6424a0050ebc1b2d1d82&quot;: &#123; &quot;balance&quot;: &quot;300000&quot; &#125;, </span><br><span class="line">		&quot;f41c74c9ae680c1aa78f42e5647a62f353b7bdde&quot;: &#123; &quot;balance&quot;: &quot;400000&quot; &#125; </span><br><span class="line">	&#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>要初始化一条以它作为创世块的区块链，我们可以使用下面的命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">geth --datadir path/to/custom/data/folder init genesis.json </span><br></pre></td></tr></table></figure>

<p>在当前目录下运行geth，就会启动这条私链，注意要将networked设置为与创世块配置里的chainId 一致。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">geth --datadir path/to/custom/data/folder --networkid 15 </span><br></pre></td></tr></table></figure>

<p>我们可以看到节点正常启动：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WARN [10-23|02:38:19] No etherbase set and no accounts found as default </span><br><span class="line"></span><br><span class="line">INFO [10-23|02:38:19] Starting peer-to-peer node instance=Geth/v1.8.0-unstable-e37f7be9/linux-amd64/go1.9 </span><br><span class="line"></span><br><span class="line">… </span><br><span class="line"></span><br><span class="line">INFO [10-23|02:38:21] IPC endpoint opened: /home/ubuntu/project/go_ethereum_test/geth.ipc </span><br><span class="line">INFO [10-23|02:38:21] Mapped network port proto=tcp extport=30303 intport=30303 interface=&quot;UPNP IGDv1-IP1&quot; </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>2.3在 Remix 上构建简单的水龙头合约 </title>
    <url>/2020/01/04/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/2.3%E5%9C%A8Remix%E4%B8%8A%E6%9E%84%E5%BB%BA%E7%AE%80%E5%8D%95%E7%9A%84%E6%B0%B4%E9%BE%99%E5%A4%B4%E5%90%88%E7%BA%A6/</url>
    <content><![CDATA[<h1 id="在-Remix-上构建简单的水龙头合约"><a href="#在-Remix-上构建简单的水龙头合约" class="headerlink" title="在 Remix 上构建简单的水龙头合约"></a>在 Remix 上构建简单的水龙头合约</h1><p>我们已经创建了一个钱包，而且接收并发送了以太币。到目前为止，我们看到以太坊和比特币一样，也可以看作一种加密货币。但以太坊还有更多功能。事实上，加密货币功能服从于以太坊作为世界计算机的功能; 去中心化的智能合约平台。Ether用于支付运行智能合约的费用，智能合约是在称为以太坊虚拟机（EVM）的模拟计算机上运行的计算机程序。</p>
<span id="more"></span>

<p>EVM是一个全局单例，意味着它就像是一个全局的单实例计算机一样运行，无处不在。以太坊网络上的每个节点都运行EVM的本地副本以验证合约执行，而以太坊区块链在处理交易和智能合约时记录此世界计算机的变化状态。</p>
<p>以太坊有许多不同的高级语言，所有这些语言都可用于编写合约并生成EVM字节码。到目前为止，一种高级语言是智能合约编程的主要语言：Solidity。Solidity由Gavin Wood创建，并已成为以太坊及其他地区使用最广泛的语言。我们将使用Solidity编写我们的第一份合约。</p>
<p>编写水龙头合约</p>
<p>对于我们的第一个例子，我们将编写一个控制水龙头的合约。我们已经在Ropsten测试网络上使用了一个水龙头来测试ether。水龙头是一件相对简单的事情：它会向任何要求的地址发出以太，并且可以定期重新填充。当然，我们可以将水龙头实施为由人（或Web服务器）控制的钱包，不过现在我们的目标是学习智能合约，所以我们将编写实施水龙头的Solidity合同：</p>
<p>Faucet.sol：实施水龙头的Solidity合同</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Version of Solidity compiler this program was written for </span></span><br><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.19</span>; </span><br><span class="line"><span class="comment">// Our first contract is a faucet! </span></span><br><span class="line">contract Faucet &#123; </span><br><span class="line">	<span class="comment">// Give out ether to anyone who asks </span></span><br><span class="line">	function withdraw(<span class="keyword">uint</span> withdraw_amount) public &#123; </span><br><span class="line">	<span class="comment">// Limit withdrawal amount </span></span><br><span class="line">	require(withdraw_amount &lt;= <span class="number">100000000000000000</span>); </span><br><span class="line">	<span class="comment">// Send the amount to the address that requested it </span></span><br><span class="line">	msg.sender.transfer(withdraw_amount); </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// Accept any incoming amount </span></span><br><span class="line">function () public payable &#123;&#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>



<p>这是一个非常简单的合约，尽可能简单。它也是一个有缺陷的合同，表明了一些不良做法和安全漏洞。我们将通过检查后面部分中的所有缺陷来学习。但就目前而言，让我们一行一步地看看这份合约的作用及其运作方式。</p>
<p>第一行是注释：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Version of Solidity compiler this program was written for </span></span><br></pre></td></tr></table></figure>

<p>注释供人阅读，不包含在可执行EVM字节码中。我们通常在我们试图解释的代码之前将它们放在行上，或者有时在同一行上。注释以两个正斜杠//开头。从斜线到超出的所有内容，直到该行的结尾，都被视为空行并被忽略。</p>
<p>好的，下一行是我们实际合同开始的地方：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">contract Faucet &#123; </span><br></pre></td></tr></table></figure>

<p>该行声明了一个合约对象，类似于其他面向对象语言（如JavaScript，Java或C ++）中的类声明。合约定义包括定义范围的花括号{}之间的所有行，就像在许多其他编程语言中使用花括号一样。</p>
<p>接下来，我们声明水龙头合约的第一个功能：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">function withdraw(<span class="keyword">uint</span> withdraw_amount) public &#123; </span><br></pre></td></tr></table></figure>

<p>该函数名为withdraw，它接受一个名为withdraw_amount的无符号整数（uint）参数。它被声明为公共函数，这意味着它可以被其他合约调用。函数定义遵循花括号：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">require(withdraw_amount &lt;= <span class="number">100000000000000000</span>); </span><br></pre></td></tr></table></figure>

<p>提现功能的第一部分设定了提款限额。它使用内置的Solidity函数require来测试一个前提条件，即withdraw_amount小于或等于100000000000000000 wei，这是ether的基本单位，相当于0.1 ether。如果使用大于该数量的withdraw_amount调用withdraw函数，则此处的require函数将导致合约执行停止并因异常而失败。</p>
<p>这部分合约是我们水龙头的主要逻辑。它通过限制提款来控制合约之外的资金流动。这是一个非常简单的控制，但可以让你一瞥可编程区块链的力量：控制资金的去中心化软件。</p>
<p>接下来是实际提现：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">msg.sender.transfer（withdraw_amount）; </span><br></pre></td></tr></table></figure>

<p>这里有一些神奇的东西：msg对象，这是所有合约都可以访问的输入之一。它表示触发此合约执行的交易。属性sender是交易的发件人地址。函数传递是一个内置函数，它将以太从合约传递到调用它的地址。向后读，这意味着转移到触发此合约执行的msg的发送者。传递函数将金额作为其唯一参数。我们将withdraw_amount值作为参数传递给上面几行声明的withdraw函数。</p>
<p>下一行是结束大括号，表示我们的withdraw函数定义的结束。</p>
<p>下面我们再声明一个功能：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">function () public payable &#123;&#125; </span><br></pre></td></tr></table></figure>

<p>此函数是所谓的“回退”或默认函数，如果触发合约的交易未命名合约中的任何已声明函数或任何函数或未包含数据，则调用此函数。合约可以有一个这样的默认函数（没有名称），它通常是接收以太的函数。这就是为什么它被定义为公共和默认函数，这意味着它可以接受以太合约。除了接受以太之外，它没有做任何事情，如花括号{}中的空定义所示。如果我们创建一个将ether发送到合约地址的交易，就好像它是钱包一样，这个函数将处理它。</p>
<p>在我们的默认函数下面是最后的结束花括号，它表示了合约Faucet的定义结束。</p>
<p>编译水龙头合约</p>
<p>现在我们有了第一个示例合约，我们需要使用Solidity编译器将Solidity代码转换为EVM字节码，因此它可以由EVM执行。</p>
<p>Solidity编译器作为独立的可执行文件，作为不同框架的一部分，也捆绑在集成开发环境（IDE）中。为了简单起见，我们将使用一种比较流行的IDE，称为Remix。</p>
<p>Remix是以太坊社区开发并开源的、一款非常好用的在线Solidity 集成开发环境，我们可以方便的在其中编写、部署、测试智能合约，Remix 提供了强大的自动完成，语法高亮，实时编译检查错误等。</p>
<p>使用Chrome浏览器导航到Remix IDE：</p>
<p><a href="https://remix.ethereum.org/">https://remix.ethereum.org/</a></p>
<p>接下来，我们使用Remix 开发和调试第一个智能合约，</p>
<p>默认的界面可以划分为4 个区域：</p>
<ul>
<li><p>文件目录：这里有新建文件、从本地打开文件等按钮，可以直观的看到当前编辑过哪些合约文件，以及删除、重命名这些文件；</p>
</li>
<li><p>代码编辑：是使用频繁的区域，提供了语法高亮、自动完成等功能，左上角的加号和减号可以调整编辑器字体，即使刷新浏览器这些代码也不会丢失，因为Remix 把配置和源代码都保存在了浏览器的LocalStorage 里面；</p>
</li>
<li><p>调试工具：是使用频繁的区域，提供了智能合约的编译、运行、单步调试、编译器选项配置等功能；</p>
</li>
<li><p>调试输出：会打印出所有测试活动产生的日志，比如部署智能合约，调用智能合约函数过程中的各种交易；除了代码区域之外的3个区域都是可以折叠起来的，点击要折叠的区域和代码区域相邻边上的双尖括号即可实现折叠。</p>
</li>
</ul>
<p>第一次加载Remix时，它将以一个名为ballot.sol的示例合约开始。我们不需要它，所以让我们关闭它，点击选项卡一角的x：</p>
<p>现在，通过单击左侧工具栏中的圆形加号，添加一个新选项卡，命名新文件Faucet.sol：</p>
<p>打开新选项卡后，复制并粘贴我们的示例Faucet.sol中的代码：</p>
<p>现在我们已经将Faucet.sol合约加载到Remix IDE中，IDE将自动编译代码。如果一切顺利，你会在右侧的Compile选项卡下看到一个带有“Faucet”的绿色框，确认编译成功：</p>
<p>如果出现问题，最可能的问题是Remix IDE使用的是与0.4.19不同的Solidity编译器版本。在这种情况下，我们的pragma指令将阻止Faucet.sol编译。要更改编译器版本，点击“设置”选项卡，将编译器版本设置为0.4.19，然后重试。</p>
<p>Solidity编译器现在已将Faucet.sol编译为EVM字节码。如果你很好奇，字节码看起来像这样：</p>
<p>看到这么反人类的字节码，是不是很高兴我们可以使用Solidity等高级语言而不是直接在EVM字节码中编程？</p>
<p>在区块链上创建合同</p>
<p>所以我们写了合约。我们把它编译成字节码。现在，我们需要在以太坊区块链上“注册”合约。我们将使用Ropsten测试网来测试我们的合约，这就是我们想要记录的区块链。</p>
<p>在区块链上注册合约涉及创建一个特殊交易，其目的地是一个“零地址”，也就是地址为：0x0000000000000000000000000000000000000000。零地址是一个特殊地址，告诉以太坊区块链我们想要注册合约。不过我们不需要手动输入这么多个0，Remix IDE将为我们处理所有这些并将交易发送到MetaMask。</p>
<p>首先，切换到“Run”选项卡，然后在“Environment”下拉选择框中选择“Injected Web3”。这将Remix IDE连接到MetaMask钱包，并通过MetaMask连接到Ropsten测试网络。一旦你这样做，你可以在环境下看到“Ropsten”。此外，在帐户选择框中，它显示你的钱包的地址：</p>
<p>在我们刚刚确认的“Run”设置的正下方，是水龙头合约，准备好了。单击“Deploy”按钮:</p>
<p>Remix IDE将构建特殊的“Create”交易，MetaMask将要我们批准它。正如从MetaMask中看到的那样，合约创建交易中发送0个以太，但它有224个字节（已编译的合约）并将消耗余额0.000312以太的gas费用。点击“Confirm”批准它：</p>
<p>现在，稍微等一下：在Ropsten上部署合约大约需要15到30秒。还记得Ropsten采用什么共识机制吗？它和主网完全一样采用了PoW的机制，出块的时间大概是15秒。</p>
<p>创建合约后，它将显示在“Run”选项卡的底部：</p>
<p>请注意，水龙头合约现在有一个自己的地址：Remix将其显示为Faucet，位于0x832 …. 095e6。右侧的小剪贴板符号允许你将合约地址复制到剪贴板中。我们将在下一节中使用它。</p>
<p>另外如果细心我们可以在控制台log中看到，交易成功发送，我们可以用这里的链接到etherscan上查询：</p>
<p>与合约交互</p>
<p>让我们回顾一下迄今为止我们学到的东西：以太坊合约是控制资金的程序，它在称为EVM的虚拟机内运行。它们由特殊交易创建，该交易提交其字节码以记录在区块链上。一旦他们在区块链上创建，他们就有了一个以太坊地址，就像钱包一样。只要有人将某个交易发送到合约地址，就会导致合约在EVM中运行，并将该合约作为其输入。</p>
<p>发送到合约地址的交易可能包含ether或数据或两者。如果它们含有ether，则将其“存入”合约余额。如果它们包含数据，则数据可以在合约中指定命名函数并调用它，将参数传递给函数。</p>
<p>在区块浏览器中查看合同地址</p>
<p>现在，我们已经在Ropsten区块链上记录了一份合约，我们可以看到它有一个以太坊地址。让我们在ropsten.etherscan.io区块浏览器上查看它，看看合约是什么样的。</p>
<p>在一个标签中打开Remix，稍后我们会再次回顾它。现在，将浏览器导航到ropsten.etherscan.io并将地址粘贴到搜索框中。你应该看到合约的以太坊地址历史：在 Remix 上构建简单的水龙头合约 ————————————————————————————— </p>
<p>11 更多 Java –大数据 –前端 –python 人工智能 –区块链资料下载，可访问百度：尚硅谷官网 </p>
<p>资助合约</p>
<p>目前，合约在其历史记录中只有一个交易：合约创建交易。我们刚才在etherscan上也看到了，合约也还没有以太（零余额）。那是因为我们没有在创建交易中向合约发送任何以太，当然这本来是可以的。</p>
<p>那就让我们现在给合约发一些以太。你仍然应该在剪贴板中包含合约的地址（如果没有，从Remix再次复制）。打开MetaMask，并向其发送1个以太，就像你发送给其他任何以太坊地址一样：</p>
<p>在一分钟内，如果你重新加载etherscan区块资源管理器，它将显示合约地址的另一个交易以及1个以太网的更新余额。</p>
<p>还记得我们的Faucet.sol代码中未命名的默认公共应付款功能吗？它看起来像这样：在 Remix 上构建简单的水龙头合约 ————————————————————————————— </p>
<p>12 更多 Java –大数据 –前端 –python 人工智能 –区块链资料下载，可访问百度：尚硅谷官网 </p>
<p>function () public payable {} </p>
<p>当你将交易发送到合同地址时，没有数据指定要调用的函数，它会调用此默认函数。因为我们将其声明为应付款，所以它接受并将1以太币存入合约账户余额。你的交易导致合约在EVM中运行，更新其余额。我们已经顺利资助了我们的水龙头！</p>
<p>提现我们的合约</p>
<p>接下来，让我们从水龙头中提取一些资金。要提现，我们必须构造一个调用withdraw函数的交易，并将withdraw_amount参数传递给它。为了使事情变得简单，Remix将为我们构建该交易，MetaMask将提供它以供我们批准。</p>
<p>返回Remix选项卡，查看“Run”选项卡下的合约。你应该看到一个标有“Withdraw”的红色框，其中包含一个标记为uint256 withdraw_amount的字段条目：</p>
<p>这是合约的Remix接口。它允许我们构造调用合约中定义的函数的交易。我们将输入withdraw_amount并单击“Withdraw”按钮以生成交易。</p>
<p>首先，让我们弄清一下withdraw_amount。我们想尝试提现0.1以太，这是我们合约允许的最大金额。请记住，以太坊中的所有货币值都在内部以wei表示，而我们的提现功能期望withdraw_amount也以wei计价。我们想要的数量是0.1以太，这是在 Remix 上构建简单的水龙头合约 ————————————————————————————— </p>
<p>13 更多 Java –大数据 –前端 –python 人工智能 –区块链资料下载，可访问百度：尚硅谷官网 </p>
<p>100000000000000000 wei（1后跟17个零）。</p>
<p>由于<em>JavaScript</em>的限制，<em>Remix</em>无法处理大到<em>10 ^ 17</em>的数字。相反，我们将它括在双引号中，以允许<em>Remix</em>将其作为字符串接收并将其作为<em>BigNumber</em>进行操作。如果我们不将它括在引号中，则<em>Remix IDE</em>将无法处理它并显示<em>“Error encoding arguments</em>：<em>Error</em>：<em>Assertion failed”</em>，好在<em>Remix</em>会帮我们做自动转换 </p>
<p>在withdraw_amount框中键入100000000000000000，然后单击“Withdraw”按钮：</p>
<p>MetaMask将弹出一个交易窗口供你批准。点击“Confirm”将你的提款调用发送给合约。</p>
<p>等一下，然后重新加载etherscan区块资源管理器，以查看在水龙头合约地址历史记录中的交易：</p>
<p>我们现在看到一个新的交易，其中合约地址为目的地，零以太。合约余额已经改变，现在是0.9以太，因为它按要求向我们发送了0.1以太。但我们在合约地址历史记录中看不到在 Remix 上构建简单的水龙头合约 ————————————————————————————— </p>
<p>14 更多 Java –大数据 –前端 –python 人工智能 –区块链资料下载，可访问百度：尚硅谷官网 </p>
<p>“OUT”交易。</p>
<p>提现的地方在哪里？合约的地址历史记录页面中出现了一个新选项卡，名为“Internal Transactions”。因为0.1以太传输源自合约代码，所以它是内部交易（也称为消息）。单击“Internal Transactions”选项卡以查看它：</p>
<p>这个“Internal Transactions”是由合约在这行代码中发出的（来自Faucet.sol中的提现功能）：</p>
<p>msg.sender.transfer（withdraw_amount）; </p>
<p>回顾一下：我们从MetaMask钱包发送了一个包含数据指令的交易，调用withdraw_amount参数为0.1 ether的withdraw函数；该交易导致合约在EVM内部运行，当EVM运行水龙头合约的提现功能时，首先它调用require函数并验证我们的金额小于或等于允许的最大提现0.1以太；然后它调用传递函数向我们发送以太，运行转账功能会产生一个内部交易，从合约的余额中将0.1以太币存入我们的钱包地址；这就是etherscan中“内部交易”选项卡中显示的那笔交易。</p>
<p><strong>小结</strong></p>
<p>在这次课程中，我们在Solidity写了一个水龙头合约，然后使用Remix IDE将合约编译为EVM字节码；我们使用Remix进行交易，并在Ropsten区块链上记录了水龙头合约。一旦记录下来，水龙头合约就有一个以太坊地址，我们给它发了一些ether。最后，我们构建了一个交易来调用withdraw函数并成功请求0.1 ether。合约检查了我们的请求，并通过内部交易向我们发送了0.1以太。</p>
<p>它可能看起来不多，但我们刚刚成功地与在分散的世界计算机上控制资金的软件进行交互。</p>
<p>我们将在之后的课程中进行更多智能合约编程，并了解最佳实践和安全注意事项。</p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>3.3 Geth控制台命令</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/3.3Geth%20%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="Geth-控制台命令"><a href="#Geth-控制台命令" class="headerlink" title="Geth 控制台命令"></a><strong>Geth</strong> 控制台命令</h1><p>Geth Console是一个交互式的JavaScript 执行环境，里面内置了一些用来操作以太坊的JavaScript 对象，我们可以直接调用这些对象来获取区块链上的相关信息。</p>
<span id="more"></span>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash"> geth --datadir data --networkid 15 console</span></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">geth --datadir data --dev  --rpc --networkid 15 console 2&gt;log/output.log</span><br><span class="line">tail -f log/ouput.log</span><br></pre></td></tr></table></figure>



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">INFO [03-05|11:54:18.548] Maximum peer count                       ETH=50 LES=0 total=50</span><br><span class="line">INFO [03-05|11:54:18.573] Set global gas cap                       cap=25000000</span><br><span class="line">INFO [03-05|11:54:18.573] Allocated trie memory caches             clean=256.00MiB dirty=256.00MiB</span><br><span class="line">INFO [03-05|11:54:18.575] Allocated cache and file handles         database=/Users/wzm/module/geth/data/geth/chaindata cache=512.00MiB handles=5120</span><br><span class="line">INFO [03-05|11:54:18.635] Opened ancient database                  database=/Users/wzm/module/geth/data/geth/chaindata/ancient</span><br><span class="line">INFO [03-05|11:54:18.653] Initialised chain configuration          config=&quot;&#123;ChainID: 1 Homestead: 1150000 DAO: 1920000 DAOSupport: true EIP150: 2463000 EIP155: 2675000 EIP158: 2675000 Byzantium: 4370000 Constantinople: 7280000 Petersburg: 7280000 Istanbul: 9069000, Muir Glacier: 9200000, YOLO v2: &lt;nil&gt;, Engine: ethash&#125;&quot;</span><br><span class="line">INFO [03-05|11:54:18.653] Disk storage enabled for ethash caches   dir=/Users/wzm/module/geth/data/geth/ethash count=3</span><br><span class="line">INFO [03-05|11:54:18.654] Disk storage enabled for ethash DAGs     dir=/Users/wzm/Library/Ethash               count=2</span><br><span class="line">INFO [03-05|11:54:18.657] Initialising Ethereum protocol           versions=&quot;[65 64 63]&quot; network=15 dbversion=8</span><br><span class="line">INFO [03-05|11:54:18.664] Loaded most recent local header          number=415676 hash=&quot;74cead…4ed2ce&quot; td=2106685270486944450 age=5y5mo1w</span><br><span class="line">INFO [03-05|11:54:18.665] Loaded most recent local full block      number=0      hash=&quot;d4e567…cb8fa3&quot; td=17179869184         age=51y11mo1d</span><br><span class="line">INFO [03-05|11:54:18.665] Loaded most recent local fast block      number=415676 hash=&quot;74cead…4ed2ce&quot; td=2106685270486944450 age=5y5mo1w</span><br><span class="line">INFO [03-05|11:54:18.665] Loaded last fast-sync pivot marker       number=11912318</span><br><span class="line">INFO [03-05|11:54:18.669] Loaded local transaction journal         transactions=0 dropped=0</span><br><span class="line">INFO [03-05|11:54:18.670] Regenerated local transaction journal    transactions=0 accounts=0</span><br><span class="line">INFO [03-05|11:54:18.680] Allocated fast sync bloom                size=512.00MiB</span><br><span class="line">INFO [03-05|11:54:18.685] Starting peer-to-peer node               instance=Geth/v1.9.25-stable-e7872729/darwin-amd64/go1.15.6</span><br><span class="line">INFO [03-05|11:54:18.750] New local node record                    seq=7 id=da0aea80198e530e ip=127.0.0.1 udp=30303 tcp=30303</span><br><span class="line">INFO [03-05|11:54:18.752] Started P2P networking                   self=enode://63f0bcf7c95b1b4cddd15e5961fadaa46985a5eb6c29c31d12a5345da111287839b193c7d05c7f314598a7d3d90c0626b0c400de0ad34d7398938c48f7e0b941@127.0.0.1:30303</span><br><span class="line">INFO [03-05|11:54:18.758] IPC endpoint opened                      url=/Users/wzm/module/geth/data/geth.ipc</span><br><span class="line">INFO [03-05|11:54:18.835] Etherbase automatically configured       address=0x92ae143a59f91ced7bE1A3438A36057dC4d4Dc29</span><br><span class="line">Welcome to the Geth JavaScript console!</span><br><span class="line"></span><br><span class="line">instance: Geth/v1.9.25-stable-e7872729/darwin-amd64/go1.15.6</span><br><span class="line">coinbase: 0x92ae143a59f91ced7be1a3438a36057dc4d4dc29</span><br><span class="line">at block: 0 (Thu Jan 01 1970 08:00:00 GMT+0800 (CST))</span><br><span class="line"> datadir: /Users/wzm/module/geth/data</span><br><span class="line"> modules: admin:1.0 debug:1.0 eth:1.0 ethash:1.0 miner:1.0 net:1.0 personal:1.0 rpc:1.0 txpool:1.0 web3:1.0</span><br><span class="line"></span><br><span class="line">To exit, press ctrl-d</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br></pre></td></tr></table></figure>



<p>这些对象主要包括：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">eth：主要包含对区块链进行访问和交互相关的方法；</span><br><span class="line">net：主要包含查看p2p网络状态的方法；</span><br><span class="line">admin：主要包含与管理节点相关的方法；</span><br><span class="line">miner：主要包含挖矿相关的一些方法；</span><br><span class="line">personal：包含账户管理的方法；</span><br><span class="line">txpool：包含查看交易内存池的方法；</span><br><span class="line">web3：包含以上所有对象，还包含一些通用方法。</span><br></pre></td></tr></table></figure>

<p>常用命令有：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">personal.newAccount()：<span class="comment">//创建账户；</span></span><br><span class="line">personal.unlockAccount()：<span class="comment">//解锁账户；</span></span><br><span class="line">eth.accounts：<span class="comment">//列出系统中的账户；</span></span><br><span class="line">eth.getBalance()：<span class="comment">//查看账户余额，返回值的单位是Wei；</span></span><br><span class="line">eth.blockNumber：<span class="comment">//列出当前区块高度；</span></span><br><span class="line">eth.getTransaction()：<span class="comment">//获取交易信息；</span></span><br><span class="line">eth.getBlock()：<span class="comment">//获取区块信息；</span></span><br><span class="line">miner.start()：<span class="comment">//开始挖矿；</span></span><br><span class="line">miner.stop()：<span class="comment">//停止挖矿；</span></span><br><span class="line">web3.fromWei()：<span class="comment">//Wei 换算成以太币；</span></span><br><span class="line">web3.toWei()：<span class="comment">//以太币换算成Wei；</span></span><br><span class="line">txpool.status：<span class="comment">//交易池中的状态；Geth 控制台命令 </span></span><br></pre></td></tr></table></figure>







<p>web3对象如下:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">admin</span>: &#123;</span><br><span class="line">    <span class="attr">datadir</span>: <span class="string">&quot;/Users/wzm/module/geth/data&quot;</span>,</span><br><span class="line">    <span class="attr">nodeInfo</span>: &#123;</span><br><span class="line">      <span class="attr">enode</span>: <span class="string">&quot;enode://63f0bcf7c95b1b4cddd15e5961fadaa46985a5eb6c29c31d12a5345da111287839b193c7d05c7f314598a7d3d90c0626b0c400de0ad34d7398938c48f7e0b941@192.168.16.100:30303&quot;</span>,</span><br><span class="line">      <span class="attr">enr</span>: <span class="string">&quot;enr:-Jq4QAoMGz2CWFTq598iKN0KKQ-ZMzU533X5RoDUDwP0PeCYQ7YfPdKzD5vXQqYx_IJU5OCVOtMEfWZ4HleeYoo8DfMIg2V0aMrJhPxk7ASDEYwwgmlkgnY0gmlwhMCoEGSJc2VjcDI1NmsxoQNj8Lz3yVsbTN3RXllh-tqkaYWl62wpwx0SpTRdoREoeIN0Y3CCdl-DdWRwgnZf&quot;</span>,</span><br><span class="line">      <span class="attr">id</span>: <span class="string">&quot;da0aea80198e530ef896b633ab6054e485d2d822a8144ea47c2b4ff9b8c458b5&quot;</span>,</span><br><span class="line">      <span class="attr">ip</span>: <span class="string">&quot;192.168.16.100&quot;</span>,</span><br><span class="line">      <span class="attr">listenAddr</span>: <span class="string">&quot;[::]:30303&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;Geth/v1.9.25-stable-e7872729/darwin-amd64/go1.15.6&quot;</span>,</span><br><span class="line">      <span class="attr">ports</span>: &#123;</span><br><span class="line">        <span class="attr">discovery</span>: <span class="number">30303</span>,</span><br><span class="line">        <span class="attr">listener</span>: <span class="number">30303</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">protocols</span>: &#123;</span><br><span class="line">        <span class="attr">eth</span>: &#123;...&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">peers</span>: [],</span><br><span class="line">    <span class="attr">addPeer</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span><br><span class="line"><span class="function">    <span class="title">addTrustedPeer</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span><br><span class="line"><span class="function"><span class="function">    <span class="title">clearHistory</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function">    <span class="title">exportChain</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getDatadir</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getNodeInfo</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getPeers</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">importChain</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">removePeer</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">removeTrustedPeer</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">sleep</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">sleepBlocks</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">startRPC</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">startWS</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">stopRPC</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">stopWS</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">bzz</span>: <span class="title">WARN</span> [03-05|11:56:45.543] <span class="title">Served</span> <span class="title">bzz_hive</span>                          <span class="title">reqid</span>=15 <span class="title">t</span>=&quot;20.274µ<span class="title">s</span>&quot; <span class="title">err</span>=&quot;<span class="title">the</span> <span class="title">method</span> <span class="title">bzz_hive</span> <span class="title">does</span> <span class="title">not</span> <span class="title">exist</span>/<span class="title">is</span> <span class="title">not</span> <span class="title">available</span>&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="title">WARN</span> [03-05|11:56:45.544] <span class="title">Served</span> <span class="title">bzz_info</span>                          <span class="title">reqid</span>=16 <span class="title">t</span>=&quot;12.714µ<span class="title">s</span>&quot; <span class="title">err</span>=&quot;<span class="title">the</span> <span class="title">method</span> <span class="title">bzz_info</span> <span class="title">does</span> <span class="title">not</span> <span class="title">exist</span>/<span class="title">is</span> <span class="title">not</span> <span class="title">available</span>&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"></span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="title">WARN</span> [03-05|11:56:45.545] <span class="title">Served</span> <span class="title">bzz_hive</span>                          <span class="title">reqid</span>=17 <span class="title">t</span>=&quot;7.652µ<span class="title">s</span>&quot;  <span class="title">err</span>=&quot;<span class="title">the</span> <span class="title">method</span> <span class="title">bzz_hive</span> <span class="title">does</span> <span class="title">not</span> <span class="title">exist</span>/<span class="title">is</span> <span class="title">not</span> <span class="title">available</span>&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">hive</span>: <span class="title">undefined</span>,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="title">WARN</span> [03-05|11:56:45.545] <span class="title">Served</span> <span class="title">bzz_info</span>                          <span class="title">reqid</span>=18 <span class="title">t</span>=&quot;6.406µ<span class="title">s</span>&quot;  <span class="title">err</span>=&quot;<span class="title">the</span> <span class="title">method</span> <span class="title">bzz_info</span> <span class="title">does</span> <span class="title">not</span> <span class="title">exist</span>/<span class="title">is</span> <span class="title">not</span> <span class="title">available</span>&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">info</span>: <span class="title">undefined</span>,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">blockNetworkRead</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">download</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">get</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getHive</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getInfo</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">modify</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">put</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">retrieve</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">store</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">swapEnabled</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">syncEnabled</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">upload</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">currentProvider</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">send</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">sendAsync</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">db</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getHex</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getString</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">putHex</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">putString</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">debug</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">accountRange</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">backtraceAt</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">blockProfile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">chaindbCompact</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">chaindbProperty</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">cpuProfile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">dumpBlock</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">freeOSMemory</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">freezeClient</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">gcStats</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getBadBlocks</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getBlockRlp</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getModifiedAccountsByHash</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getModifiedAccountsByNumber</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">goTrace</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">memStats</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">mutexProfile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">preimage</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">printBlock</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">seedHash</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setBlockProfileRate</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setGCPercent</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setHead</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setMutexProfileFraction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">stacks</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">standardTraceBadBlockToFile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">standardTraceBlockToFile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">startCPUProfile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">startGoTrace</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">stopCPUProfile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">stopGoTrace</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">storageRangeAt</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">testSignCliqueBlock</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">traceBadBlock</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">traceBlock</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">traceBlockByHash</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">traceBlockByNumber</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">traceBlockFromFile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">traceCall</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">traceTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">verbosity</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">vmodule</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">writeBlockProfile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">writeMemProfile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">writeMutexProfile</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">eth</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">accounts</span>: [&quot;0<span class="title">x92ae143a59f91ced7be1a3438a36057dc4d4dc29</span>&quot;, &quot;0<span class="title">x88c69682f366c3331951b3fde84e63cde5dd4b57</span>&quot;],</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">blockNumber</span>: 0,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">coinbase</span>: &quot;0<span class="title">x92ae143a59f91ced7be1a3438a36057dc4d4dc29</span>&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">compile</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">lll</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">serpent</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">solidity</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">defaultAccount</span>: <span class="title">undefined</span>,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">defaultBlock</span>: &quot;<span class="title">latest</span>&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">gasPrice</span>: 1000000000,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">hashrate</span>: 0,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">mining</span>: <span class="title">false</span>,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">pendingTransactions</span>: [],</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">protocolVersion</span>: &quot;0<span class="title">x41</span>&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">syncing</span>: <span class="title">false</span>,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">call</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">chainId</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">contract</span>: <span class="function"><span class="keyword">function</span>(<span class="params">abi</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">estimateGas</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">fillTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">filter</span>: <span class="function"><span class="keyword">function</span>(<span class="params">options, callback, filterCreationErrorCallback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getAccounts</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getBalance</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getBlock</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getBlockByHash</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getBlockByNumber</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getBlockNumber</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getBlockTransactionCount</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getBlockUncleCount</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getCode</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getCoinbase</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getCompilers</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getGasPrice</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getHashrate</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getHeaderByHash</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getHeaderByNumber</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getMining</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getPendingTransactions</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getProof</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getProtocolVersion</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getRawTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getRawTransactionFromBlock</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getStorageAt</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getSyncing</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getTransactionCount</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getTransactionFromBlock</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getTransactionReceipt</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getUncle</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getWork</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">iban</span>: <span class="function"><span class="keyword">function</span>(<span class="params">iban</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">icapNamereg</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">isSyncing</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">namereg</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">resend</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">sendIBANTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">sendRawTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">sendTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">sign</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">signTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">submitTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">submitWork</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">ethash</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getHashrate</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getWork</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">submitHashRate</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">submitWork</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">isIBAN</span>: <span class="title">undefined</span>,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">miner</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getHashrate</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setEtherbase</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setExtra</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setGasPrice</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setRecommitInterval</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">start</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">stop</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">net</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">listening</span>: <span class="title">true</span>,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">peerCount</span>: 0,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">version</span>: &quot;15&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getListening</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getPeerCount</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getVersion</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">personal</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">listAccounts</span>: [&quot;0<span class="title">x92ae143a59f91ced7be1a3438a36057dc4d4dc29</span>&quot;, &quot;0<span class="title">x88c69682f366c3331951b3fde84e63cde5dd4b57</span>&quot;],</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">listWallets</span>: [</span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">        <span class="title">accounts</span>: [...],</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">        <span class="title">status</span>: &quot;<span class="title">Locked</span>&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">        <span class="title">url</span>: &quot;<span class="title">keystore</span>:///<span class="title">Users</span>/<span class="title">wzm</span>/<span class="title">module</span>/<span class="title">geth</span>/<span class="title">data</span>/<span class="title">keystore</span>/<span class="title">UTC</span>--2021-02-23<span class="title">T09</span>-53-03.135257000<span class="title">Z</span>--92<span class="title">ae143a59f91ced7be1a3438a36057dc4d4dc29</span>&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    &#125;, </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">        <span class="title">accounts</span>: [...],</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">        <span class="title">status</span>: &quot;<span class="title">Locked</span>&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">        <span class="title">url</span>: &quot;<span class="title">keystore</span>:///<span class="title">Users</span>/<span class="title">wzm</span>/<span class="title">module</span>/<span class="title">geth</span>/<span class="title">data</span>/<span class="title">keystore</span>/<span class="title">UTC</span>--2021-02-23<span class="title">T09</span>-53-36.408456000<span class="title">Z</span>--88<span class="title">c69682f366c3331951b3fde84e63cde5dd4b57</span>&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    &#125;],</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">deriveAccount</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">ecRecover</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getListAccounts</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getListWallets</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">importRawKey</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">initializeWallet</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">lockAccount</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">newAccount</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">openWallet</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">sendTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">sign</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">signTransaction</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">unlockAccount</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">unpair</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">providers</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">HttpProvider</span>: <span class="function"><span class="keyword">function</span>(<span class="params">host, timeout, user, password</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">IpcProvider</span>: <span class="function"><span class="keyword">function</span>(<span class="params">path, net</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">rpc</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">modules</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">admin</span>: &quot;1.0&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">debug</span>: &quot;1.0&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">eth</span>: &quot;1.0&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">ethash</span>: &quot;1.0&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">miner</span>: &quot;1.0&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">net</span>: &quot;1.0&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">personal</span>: &quot;1.0&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">rpc</span>: &quot;1.0&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">txpool</span>: &quot;1.0&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">web3</span>: &quot;1.0&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getModules</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">settings</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">defaultAccount</span>: <span class="title">undefined</span>,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">defaultBlock</span>: &quot;<span class="title">latest</span>&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">shh</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">addPrivateKey</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">addSymKey</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">deleteKeyPair</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">deleteSymKey</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">generateSymKeyFromPassword</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getPrivateKey</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getPublicKey</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getSymKey</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">hasKeyPair</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">hasSymKey</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">info</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">markTrustedPeer</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">newKeyPair</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">newMessageFilter</span>: <span class="function"><span class="keyword">function</span>(<span class="params">options, callback, filterCreationErrorCallback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">newSymKey</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">post</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setMaxMessageSize</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">setMinPoW</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">version</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">txpool</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">content</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">pending</span>: </span>&#123;&#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">queued</span>: </span>&#123;&#125;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">inspect</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">pending</span>: </span>&#123;&#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">queued</span>: </span>&#123;&#125;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">status</span>: </span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">pending</span>: 0,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">      <span class="title">queued</span>: 0</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getContent</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getInspect</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getStatus</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">version</span>: <span class="title">WARN</span> [03-05|11:56:45.556] <span class="title">Served</span> <span class="title">shh_version</span>                       <span class="title">reqid</span>=58 <span class="title">t</span>=&quot;6.665µ<span class="title">s</span>&quot;  <span class="title">err</span>=&quot;<span class="title">the</span> <span class="title">method</span> <span class="title">shh_version</span> <span class="title">does</span> <span class="title">not</span> <span class="title">exist</span>/<span class="title">is</span> <span class="title">not</span> <span class="title">available</span>&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"></span>&#123;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">api</span>: &quot;0.20.1&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">ethereum</span>: &quot;0<span class="title">x41</span>&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">network</span>: &quot;15&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">node</span>: &quot;<span class="title">Geth</span>/<span class="title">v1</span>.9.25-<span class="title">stable</span>-<span class="title">e7872729</span>/<span class="title">darwin</span>-<span class="title">amd64</span>/<span class="title">go1</span>.15.6&quot;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="title">WARN</span> [03-05|11:56:45.557] <span class="title">Served</span> <span class="title">shh_version</span>                       <span class="title">reqid</span>=62 <span class="title">t</span>=&quot;6.347µ<span class="title">s</span>&quot;  <span class="title">err</span>=&quot;<span class="title">the</span> <span class="title">method</span> <span class="title">shh_version</span> <span class="title">does</span> <span class="title">not</span> <span class="title">exist</span>/<span class="title">is</span> <span class="title">not</span> <span class="title">available</span>&quot;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">whisper</span>: <span class="title">undefined</span>,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getEthereum</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getNetwork</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getNode</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">    <span class="title">getWhisper</span>: <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  &#125;,</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">BigNumber</span>: <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">e,n</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">createBatch</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">fromAscii</span>: <span class="function"><span class="keyword">function</span>(<span class="params">str</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">fromDecimal</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">fromICAP</span>: <span class="function"><span class="keyword">function</span>(<span class="params">icap</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">fromUtf8</span>: <span class="function"><span class="keyword">function</span>(<span class="params">str</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">fromWei</span>: <span class="function"><span class="keyword">function</span>(<span class="params">number, unit</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">isAddress</span>: <span class="function"><span class="keyword">function</span>(<span class="params">address</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">isChecksumAddress</span>: <span class="function"><span class="keyword">function</span>(<span class="params">address</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">isConnected</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">padLeft</span>: <span class="function"><span class="keyword">function</span>(<span class="params">string, chars, sign</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">padRight</span>: <span class="function"><span class="keyword">function</span>(<span class="params">string, chars, sign</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">reset</span>: <span class="function"><span class="keyword">function</span>(<span class="params">keepIsSyncing</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">setProvider</span>: <span class="function"><span class="keyword">function</span>(<span class="params">provider</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">sha3</span>: <span class="function"><span class="keyword">function</span>(<span class="params">string, options</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">toAscii</span>: <span class="function"><span class="keyword">function</span>(<span class="params">hex</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">toBigNumber</span>: <span class="function"><span class="keyword">function</span>(<span class="params">number</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">toChecksumAddress</span>: <span class="function"><span class="keyword">function</span>(<span class="params">address</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">toDecimal</span>: <span class="function"><span class="keyword">function</span>(<span class="params">value</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">toHex</span>: <span class="function"><span class="keyword">function</span>(<span class="params">val</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">toUtf8</span>: <span class="function"><span class="keyword">function</span>(<span class="params">hex</span>),</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">  <span class="title">toWei</span>: <span class="function"><span class="keyword">function</span>(<span class="params">number, unit</span>)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br><span class="line"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function"><span class="function">&#125;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>



<ul>
<li><p>发送以太前,用此函数进行检验gas费用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">eth.estimateGas(&#123;<span class="attr">from</span>:eth.accounts[<span class="number">0</span>],<span class="attr">to</span>:<span class="string">&quot;0x8CcbB7f6D29242D8E328a4A9AD9dc6b09C0Cb06D&quot;</span>,<span class="attr">value</span>:<span class="number">10</span>&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>发送以太</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">eth.sendTransaction(&#123;<span class="attr">from</span>:eth.accounts[<span class="number">0</span>],<span class="attr">to</span>:<span class="string">&quot;0x8CcbB7f6D29242D8E328a4A9AD9dc6b09C0Cb06D&quot;</span>,<span class="attr">value</span>:web3.toWei(<span class="number">100</span>,<span class="string">&#x27;ether&#x27;</span>)&#125;)	</span><br></pre></td></tr></table></figure></li>
<li><p>查询交易信息</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">eth.getTransaction(<span class="string">&quot;0xf9816fec3830e360ef256caafdeb8d2a7c5a079a5f4ee6a44cc69efe673c0a07&quot;</span>)</span><br><span class="line"><span class="comment">//返回数据</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">blockHash</span>: <span class="string">&quot;0x0ab9970f74dc78e4ef3d2b12a1cf1acaf6baea711c5457741861aa2e8d886185&quot;</span>,</span><br><span class="line">  <span class="attr">blockNumber</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">from</span>: <span class="string">&quot;0x57520121b4b51ff8dac7295137da8401a71686c2&quot;</span>,</span><br><span class="line">  <span class="attr">gas</span>: <span class="number">21000</span>,</span><br><span class="line">  <span class="attr">gasPrice</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">hash</span>: <span class="string">&quot;0xf9816fec3830e360ef256caafdeb8d2a7c5a079a5f4ee6a44cc69efe673c0a07&quot;</span>,</span><br><span class="line">  <span class="attr">input</span>: <span class="string">&quot;0x&quot;</span>,</span><br><span class="line">  <span class="attr">nonce</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">r</span>: <span class="string">&quot;0xdca4162792ff821a8a704a822f41defdbf5eb53c63de4d31350d47e1a074e75d&quot;</span>,</span><br><span class="line">  <span class="attr">s</span>: <span class="string">&quot;0x5830523cb7e5d20497ddfd4fec230eb25458668981397a70ebfd0787eed818d3&quot;</span>,</span><br><span class="line">  <span class="attr">to</span>: <span class="string">&quot;0x8ccbb7f6d29242d8e328a4a9ad9dc6b09c0cb06d&quot;</span>,</span><br><span class="line">  <span class="attr">transactionIndex</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">v</span>: <span class="string">&quot;0xa95&quot;</span>,</span><br><span class="line">  <span class="attr">value</span>: <span class="number">100000000000000000000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>4.2 以太坊交易</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/4.2%E4%BB%A5%E5%A4%AA%E5%9D%8A%E4%BA%A4%E6%98%93%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="交易的本质"><a href="#交易的本质" class="headerlink" title="交易的本质"></a>交易的本质</h1><ul>
<li><p>交易是由外部拥有的账户发起的签名消息，由以太坊网络传输，并被序列化后记录在以太坊区块链上。</p>
</li>
<li><p>交易是唯一可以触发状态更改或导致合约在EVM中执行的事物。</p>
</li>
<li><p>以太坊是一个全局单例状态机，交易是唯一可以改变其状态的东西。</p>
</li>
<li><p>合约不是自己运行的，以太坊也不会“在后台”运行。以太坊上的一切变化都始于交易。</p>
</li>
</ul>
<span id="more"></span>

<h1 id="交易数据结构"><a href="#交易数据结构" class="headerlink" title="交易数据结构"></a>交易数据结构</h1><p>交易是包含以下数据的序列化二进制消息：</p>
<ul>
<li><p><strong>nonce</strong>：由发起人EOA发出的序列号，用于防止交易消息重播。</p>
</li>
<li><p><strong>gas price</strong>：交易发起人愿意支付的gas单价（wei）。</p>
</li>
<li><p><strong>start gas</strong>：交易发起人愿意支付的最大gas量。</p>
</li>
<li><p><strong>to</strong>：目的以太坊地址。</p>
</li>
<li><p><strong>value</strong>：要发送到目的地的以太数量。</p>
</li>
<li><p><strong>data</strong>：可变长度二进制数据负载（payload）。</p>
</li>
<li><p><strong>v,r,s</strong>：发起人EOA的ECDSA签名的三个组成部分。</p>
</li>
<li><p>交易消息的结构使用递归长度前缀（RLP）编码方案进行序列化，该方案专为在以太坊中准确和字节完美的数据序列化而创建。</p>
</li>
</ul>
<h1 id="交易中的nonce"><a href="#交易中的nonce" class="headerlink" title="交易中的nonce"></a>交易中的nonce</h1><ul>
<li>黄皮书定义：一个标量值，等于从这个地址发送的交易数，或者对于关联code的帐户来说，是这个帐户创建合约的数量。</li>
<li>nonce不会明确存储为区块链中帐户状态的一部分。相反，它是通过计算发送地址的已确认交易的数量来动态计算的。</li>
<li>nonce值还用于防止错误计算账户余额。nonce强制来自任何地址的交易按顺序处理，没有间隔，无论节点接收它们的顺序如何。</li>
<li>使用nonce确保所有节点计算相同的余额和正确的序列交易，等同于用于防止比特币“双重支付”（“重放攻击”）的机制。但是，由于以太坊跟踪账户余额并且不单独跟踪UTXO ，因此只有在错误地计算账户余额时才会发生“双重支付”。nonce机制可以防止这种情况发生。</li>
</ul>
<h1 id="并发和nonce"><a href="#并发和nonce" class="headerlink" title="并发和nonce"></a>并发和nonce</h1><ul>
<li>以太坊是一个允许操作（节点，客户端，DApps）并发的系统，但强制执行单例状态。例如，出块的时候只有一个系统状态。</li>
<li>假如我们有多个独立的钱包应用或客户端，比如MetaMask和Geth，它们可以使用相同的地址生成交易。如果我们希望它们都够同时发送交易，该怎么设置交易的nonce呢？</li>
<li>用一台服务器为各个应用分配nonce，先来先服务——可能出现单点故障，并且失败的交易会将后续交易阻塞。</li>
<li>生成交易后不分配nonce，也不签名，而是把它放入一个队列等待。另起一个节点跟踪nonce并签名交易。同样会有单点故障的可能，而且跟踪</li>
</ul>
<h1 id="交易中的gas"><a href="#交易中的gas" class="headerlink" title="交易中的gas"></a>交易中的gas</h1><ul>
<li>当由于交易或消息触发EVM 运行时，每个指令都会在网络的每个节点上执行。这具有成本：对于每个执行的操作，都存在固定的成本，我们把这个成本用一定量的gas 表示。</li>
<li>gas是交易发起人需要为EVM 上的每项操作支付的成本名称。发起交易时，我们需要从执行代码的矿工那里用以太币购买gas 。</li>
<li>gas 与消耗的系统资源对应，这是具有自然成本的。因此在设计上gas 和ether 有意地解耦，消耗的gas 数量代表了对资源的占用，而对应的交易费用则还跟gas 对以太的单价有关。这两者是由自由市场调节的：gas 的价格实际上是由矿工决定的，他们可以拒绝处理gas 价格低于最低限额的交易。我们不需要专门购买gas ，只需将以太币添加到帐户即可，客户端在发送交易时会自动用以太币购买汽油。而以太币本身的价格通常由于市场力量而波动。</li>
</ul>
<h1 id="gas的计算"><a href="#gas的计算" class="headerlink" title="gas的计算"></a>gas的计算</h1><ul>
<li><p>发起交易时的gas limit 并不是要支付的gas 数量，而只是给定了一个消耗gas 的上限，相当于“押金”</p>
</li>
<li><p>实际支付的gas 数量是执行过程中消耗的gas （gasUsed），gas limit 中剩余的部分会返回给发送人</p>
</li>
<li><p>最终支付的gas 费用是gasUsed对应的以太币费用，单价由设定的gasPrice而定</p>
</li>
<li><p>最终支付费用totalCost= gasPrice* gasUsed</p>
</li>
<li><p>totalCost会作为交易手续费（Txfee）支付给矿工</p>
</li>
</ul>
<h1 id="交易的接收者（to）"><a href="#交易的接收者（to）" class="headerlink" title="交易的接收者（to）"></a>交易的接收者（to）</h1><ul>
<li><p>交易接收者在to字段中指定，是一个20字节的以太坊地址。地址可以是EOA或合约地址。</p>
</li>
<li><p>以太坊没有进一步的验证，任何20字节的值都被认为是有效的。如果20字节值对应于没有相应私钥的地址，或不存在的合约，则该交易仍然有效。以太坊无法知道地址是否是从公钥正确派生的。</p>
</li>
<li><p>如果将交易发送到无效地址，将销毁发送的以太，使其永远无法访问。</p>
</li>
<li><p>验证接收人地址是否有效的工作，应该在用户界面一层完成。</p>
</li>
</ul>
<h1 id="交易的value-和data"><a href="#交易的value-和data" class="headerlink" title="交易的value 和data"></a>交易的value 和data</h1><ul>
<li><p>交易的主要“有效负载”包含在两个字段中：value 和data。交易可以同时有value 和data，仅有value，仅有data，或者既没有value 也没有data。所有四种组合都有效。</p>
</li>
<li><p>仅有value 的交易就是一笔以太的付款</p>
</li>
<li><p>仅有data 的交易一般是合约调用</p>
</li>
<li><p>进行合约调用的同时，我们除了传输data，还可以发送以太，从而交易中同时包含data 和value</p>
</li>
<li><p>没有value 也没有data 的交易，只是在浪费gas，但它是有效的</p>
</li>
</ul>
<h1 id="向EOA-或合约传递data"><a href="#向EOA-或合约传递data" class="headerlink" title="向EOA 或合约传递data"></a>向EOA 或合约传递data</h1><ul>
<li><p>当交易包含数据有效负载时，它很可能是发送到合约地址的，但它同样可以发送给EOA</p>
</li>
<li><p>如果发送data 给EOA，数据负载（data payload）的解释取决于钱包</p>
</li>
<li><p>如果发送数据负载给合约地址，EVM 会解释为函数调用，从payload 里解码出函数名称和参数，调用该函数并传入参数</p>
</li>
<li><p>发送给合约的数据有效负载是32字节的十六进制序列化编码：</p>
<ul>
<li>函数选择器：函数原型的Keccak256 哈希的前4个字节。这允许EVM 明确地识别将要调用的函数。</li>
<li>函数参数：根据EVM 定义的各种基本类型的规则进行编码。</li>
</ul>
</li>
</ul>
<h1 id="特殊交易：创建（部署）合约"><a href="#特殊交易：创建（部署）合约" class="headerlink" title="特殊交易：创建（部署）合约"></a>特殊交易：创建（部署）合约</h1><ul>
<li><p>有一中特殊的交易，具有数据负载且没有value，那就是一个创建新合约的交易。</p>
</li>
<li><p>合约创建交易被发送到特殊目的地地址，即零地址0x0。该地址既不代表EOA 也不代表合约。它永远不会花费以太或发起交易，它仅用作目的地，具有特殊含义“创建合约”。</p>
</li>
<li><p>虽然零地址仅用于合同注册，但它有时会收到来自各种地址的付款。这种情况要么是偶然误操作，导致失去以太；要么是故意销毁以太。</p>
</li>
<li><p>合约注册交易不应包含以太值，只包含合约的已编译字节码的数据有效负载。此交易的唯一效果是注册合约。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>4.3 以太坊虚拟机</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/4.3%E4%BB%A5%E5%A4%AA%E5%9D%8A%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%88%20EVM)/</url>
    <content><![CDATA[<h1 id="以太坊虚拟机（EVM）"><a href="#以太坊虚拟机（EVM）" class="headerlink" title="以太坊虚拟机（EVM）"></a>以太坊虚拟机（EVM）</h1><ul>
<li><p>以太坊虚拟机EVM 是智能合约的运行环境</p>
</li>
<li><p>作为区块验证协议的一部分，参与网络的每个节点都会运行EVM。他们会检查正在验证的块中列出的交易，并运行由EVM中的交易触发的代码</p>
</li>
<li><p>EVM不仅是沙盒封装的，而且是完全隔离的，也就是说在EVM 中运行的代码是无法访问网络、文件系统和其他进程的，甚至智能合约之间的访问也是受限的</p>
</li>
<li><p>合约以字节码的格式（EVM bytecode）存在于区块链上</p>
</li>
<li><p>合约通常以高级语言（solidity）编写，通过EVM编译器编译为字节码，最终通过客户端上载部署到区块链网络中</p>
</li>
</ul>
<span id="more"></span>

<h1 id="EVM和账户"><a href="#EVM和账户" class="headerlink" title="EVM和账户"></a>EVM和账户</h1><ul>
<li><p>以太坊中有两类账户：<strong>外部账户</strong>和<strong>合约账户</strong>，它们共用EVM中同一个地址空间</p>
</li>
<li><p>无论帐户是否存储代码，这两类账户对EVM 来说处理方式是完全一样的</p>
</li>
<li><p>每个账户在EVM中都有一个键值对形式的持久化存储。其中key 和value 的长度都是256位，称之为<strong>存储空间</strong>（storage）</p>
</li>
</ul>
<h1 id="EVM和交易"><a href="#EVM和交易" class="headerlink" title="EVM和交易"></a>EVM和交易</h1><ul>
<li><p>交易可以看作是从一个帐户发送到另一个帐户的消息，它可以包含二进制数据（payload）和以太币</p>
</li>
<li><p>如果目标账户含有代码，此代码会在EVM中执行，并以payload 作为入参，这就是合约的调用</p>
</li>
<li><p>如果目标账户是零账户（账户地址为0)，此交易就将创建一个<strong>新合约</strong>，这个用来创建合约的交易的payload 会被转换为EVM 字节码并执行，执行的输出作为合约代码永久存储</p>
</li>
</ul>
<h1 id="EVM和gas"><a href="#EVM和gas" class="headerlink" title="EVM和gas"></a>EVM和gas</h1><ul>
<li><p>合约被交易触发调用时，指令会在全网的每个节点上执行：这需要消耗算力成本；每一个指令的执行都有特定的消耗，<strong>gas</strong>就用来量化表示这个成本消耗</p>
</li>
<li><p>一经创建，每笔交易都按照一定数量的gas预付一笔费用，目的是限制执行交易所需要的工作量和为交易支付手续费</p>
</li>
<li><p>EVM 执行交易时，gas 将按特定规则逐渐耗尽</p>
</li>
<li><p><strong>gas price</strong>是交易发送者设置的一个值，作为发送者预付手续费的单价。如果交易执行后还有剩余，gas 会原路返还</p>
</li>
<li><p>无论执行到什么位置，一旦gas 被耗尽（比如降为负值），将会触发一个out-of-gas 异常。当前调用帧（call frame）所做的所有状态修改都将被回滚</p>
</li>
</ul>
<h1 id="EVM数据存储"><a href="#EVM数据存储" class="headerlink" title="EVM数据存储"></a>EVM数据存储</h1><ul>
<li><p><strong>Storage</strong></p>
<ul>
<li>每个账户都有一块持久化的存储空间，称为storage，这是一个将256位字映射到256位字的key-value 存储区，可以理解为合约的数据库</li>
<li>永久储存在区块链中，由于会永久保存合约状态变量，所以读写的gas开销也最大</li>
</ul>
</li>
<li><p><strong>Memory</strong>（内存）</p>
<ul>
<li>每一次消息调用，合约会临时获取一块干净的内存空间</li>
<li>生命周期仅为整个方法执行期间，函数调用后回收，因为仅保存临时变量，故读写gas开销较小</li>
</ul>
</li>
<li><p><strong>Stack</strong>（栈）</p>
<ul>
<li>EVM 不是基于寄存器的，而是基于栈的，因此所有的计算都在一个被称为栈（stack）的区域执行</li>
<li>存放部分局部值类型变量，几乎免费使用的内存，但有数量限制</li>
</ul>
</li>
</ul>
<h1 id="EVM指令集"><a href="#EVM指令集" class="headerlink" title="EVM指令集"></a>EVM指令集</h1><ul>
<li><p>所有的指令都是针对”256位的字（word）”这个基本的数据类型来进行操作</p>
</li>
<li><p>具备常用的算术、位、逻辑和比较操作，也可以做到有条件和无条件跳转</p>
</li>
<li><p>合约可以访问当前区块的相关属性，比如它的块高度和时间戳</p>
</li>
</ul>
<h1 id="消息调用（Message-Calls-）"><a href="#消息调用（Message-Calls-）" class="headerlink" title="消息调用（Message Calls ）"></a>消息调用（Message Calls ）</h1><ul>
<li>合约可以通过消息调用的方式来调用其它合约或者发送以太币到非合约账户</li>
<li>合约可以决定在其内部的消息调用中，对于剩余的gas，应发送和保留多少</li>
<li>如果在内部消息调用时发生了out-of-gas 异常（或其他任何异常），这将由一个被压入栈顶的错误值所指明；此时只有与该内部消息调用一起发送的gas 会被消耗掉</li>
</ul>
<h1 id="委托调用（Delegatecall）"><a href="#委托调用（Delegatecall）" class="headerlink" title="委托调用（Delegatecall）"></a>委托调用（Delegatecall）</h1><ul>
<li>一种特殊类型的消息调用</li>
<li>目标地址的代码将在发起调用的合约的上下文中执行，并且msg.sender和msg.value不变</li>
<li>可以由此实现“库”（library）：可复用的代码库可以放在一个合约的存储上，通过委托调用引入相应代码</li>
</ul>
<h1 id="合约的创建和自毁"><a href="#合约的创建和自毁" class="headerlink" title="合约的创建和自毁"></a>合约的创建和自毁</h1><ul>
<li>通过一个特殊的消息调用<strong>create calls</strong>，合约可以创建其他合约（不是简单的调用零地址）</li>
<li>合约代码从区块链上移除的唯一方式是合约在合约地址上的执行自毁操作<strong>selfdestruct</strong>；合约账户上剩余的以太币会发送给指定的目标，然后其存储和代码从状态中被移除</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>5.1 Solidity简介</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/5.1Solidity%20%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="Solidity是什么"><a href="#Solidity是什么" class="headerlink" title="Solidity是什么"></a>Solidity是什么</h1><ul>
<li>Solidity 是一门面向合约的、为实现智能合约而创建的高级编程语言。这门语言受到了C++，Python 和Javascript 语言的影响，设计的目的是能在以太坊虚拟机（EVM）上运行。</li>
</ul>
<span id="more"></span>

<ul>
<li><p>Solidity 是静态类型语言，支持继承、库和复杂的用户定义类型等特性。</p>
</li>
<li><p>内含的类型除了常见编程语言中的标准类型，还包括address 等以太坊独有的类型，Solidity 源码文件通常以.sol 作为扩展名</p>
</li>
<li><p>目前尝试Solidity 编程的最好的方式是使用Remix。Remix 是一个基于Web 浏览器的IDE，它可以让你编写Solidity 智能合约，然后部署并运行该智能合约。</p>
</li>
</ul>
<h1 id="Solidity语言特性"><a href="#Solidity语言特性" class="headerlink" title="Solidity语言特性"></a>Solidity语言特性</h1><p>Solidity的语法接近于JavaScript，是一种面向对象的语言。但作为一种真正意义上运行在网络上的去中心合约，它又有很多的不同：</p>
<ul>
<li><p>以太坊底层基于帐户，而不是UTXO，所以增加了一个特殊的address 的数据类型用于定位用户和合约账户。</p>
</li>
<li><p>语言内嵌框架支持支付。提供了payable 等关键字，可以在语言层面直接支持支付。</p>
</li>
<li><p>使用区块链进行数据存储。数据的每一个状态都可以永久存储，所以在使用时需要确定变量使用内存，还是区块链存储。</p>
</li>
<li><p>运行环境是在去中心化的网络上，所以需要强调合约或函数执行的调用的方式。</p>
</li>
<li><p>不同的异常机制。一旦出现异常，所有的执行都将会被回撤，这主要是为了保证合约执行的原子性，以避免中间状态出现的数据不一致。</p>
</li>
</ul>
<h1 id="Solidity源码和智能合约"><a href="#Solidity源码和智能合约" class="headerlink" title="Solidity源码和智能合约"></a>Solidity源码和智能合约</h1><ul>
<li>Solidity 源代码要成为可以运行在以太坊上的智能合约需要经历如下的步骤：</li>
</ul>
<ol>
<li><p>用Solidity 编写的智能合约源代码需要先使用编译器编译为字节码（Bytecode），编译过程中会同时产生智能合约的二进制接口规范（Application Binary Interface，简称为ABI）；</p>
</li>
<li><p>通过交易（Transaction）的方式将字节码部署到以太坊网络，每次成功部署都会产生一个新的智能合约账户；</p>
</li>
<li><p>使用Javascript 编写的DApp 通常通过web3.js + ABI去调用智能合约中的函数来实现数据的读取和修改。</p>
</li>
</ol>
<h1 id="Solidity编译器"><a href="#Solidity编译器" class="headerlink" title="Solidity编译器"></a>Solidity编译器</h1><p><strong>Remix</strong></p>
<ul>
<li><p>Remix是一个基于Web 浏览器的SolidityIDE；可在线使用而无需安装任何东西</p>
</li>
<li><p><a href="http://remix.ethereum.org/">http://remix.ethereum.org</a></p>
</li>
</ul>
<p><strong>solcjs</strong></p>
<ul>
<li><p>solc是Solidity 源码库的构建目标之一，它是Solidity 的命令行编译器</p>
</li>
<li><p>使用<em>npm</em>可以便捷地安装Solidity 编译器solcjs</p>
</li>
<li><p><em>npm install -g solc</em></p>
</li>
</ul>
<h1 id="一个简单的智能合约"><a href="#一个简单的智能合约" class="headerlink" title="一个简单的智能合约"></a>一个简单的智能合约</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.0</span>;</span><br><span class="line">contract SimpleStorage &#123; </span><br><span class="line">	uint storedData; </span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">set</span>(<span class="params"> uint x</span>)  <span class="title">public</span> </span>&#123; </span><br><span class="line">		storedData = x; </span><br><span class="line">	&#125; </span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"></span>) <span class="title">publicviewreturns</span>(<span class="params"> uint </span>) </span>&#123; </span><br><span class="line">		<span class="keyword">return</span> storedData; </span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="智能合约概述"><a href="#智能合约概述" class="headerlink" title="智能合约概述"></a>智能合约概述</h1><p>Solidity中合约</p>
<ul>
<li>一组代码（合约的函数)和数据（合约的状态），它们位于以太坊区块链的一个特定地址上</li>
<li>代码行uintstoredData;声明一个类型为uint(256位无符号整数）的状态变量，叫做storedData</li>
<li>函数set和get可以用来变更或取出变量的值</li>
</ul>
<h1 id="合约结构"><a href="#合约结构" class="headerlink" title="合约结构"></a>合约结构</h1><ul>
<li><p>状态变量（State Variables）</p>
<p>作为合约状态的一部分，值会永久保存在存储空间内。</p>
</li>
<li><p>函数（Functions）</p>
<p>合约中可执行的代码块。</p>
</li>
<li><p>函数修饰器（Function Modifiers）</p>
<p>用在函数声明中，用来补充修饰函数的语义。</p>
</li>
<li><p>事件（Events）</p>
<p>非常方便的EVM 日志工具接口。</p>
</li>
</ul>
<h1 id="智能合约练习"><a href="#智能合约练习" class="headerlink" title="智能合约练习"></a>智能合约练习</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma</span><br><span class="line">solidity &gt;<span class="number">0.4</span><span class="number">.22</span>;</span><br><span class="line">contract Car &#123;</span><br><span class="line">	string public brand;</span><br><span class="line">	uint public price;</span><br><span class="line">	<span class="function"><span class="title">constructor</span>(<span class="params"> string initBrand, uint initPrice</span>)</span>&#123;</span><br><span class="line">		brand = initBrand;</span><br><span class="line">		price = initPrice;</span><br><span class="line">	&#125;;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">setBrand</span>(<span class="params"> string newBrand</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		brand = newBrand;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">setPrice</span>(<span class="params"> uint newPrice</span>)(<span class="params"> uint </span>) </span>&#123;</span><br><span class="line">		price = newPrice;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>另一个例子——子货币</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;<span class="number">0.4</span><span class="number">.22</span> &lt;<span class="number">0.6</span><span class="number">.0</span>;</span><br><span class="line">contract Coin &#123;</span><br><span class="line">	address public minter;</span><br><span class="line">	mapping (<span class="function"><span class="params">address</span> =&gt;</span> uint ) public balances;</span><br><span class="line">	event Sent( address <span class="keyword">from</span>, address to, uint amount);</span><br><span class="line">	<span class="title">constructor</span> <span class="title">public</span> &#123; minter = msg.sender; &#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">mint</span>(<span class="params"> address receiver, uint amount</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		<span class="built_in">require</span>(msg.sender == minter);</span><br><span class="line">		balances[receiver] += amount;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params"> address receiver, uint amount</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">	<span class="built_in">require</span>(amount &lt;= balances[msg.sender]);</span><br><span class="line">	balances[msg.sender]</span><br><span class="line">	--= amount;</span><br><span class="line">	balances[receiver] += amount;</span><br><span class="line">	emit Sent(msg.sender, receiver, amount);</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;<span class="number">0.4</span><span class="number">.22</span>;</span><br><span class="line">contract Coin&#123;</span><br><span class="line">    address public minter;</span><br><span class="line">    mapping(<span class="function"><span class="params">address</span>=&gt;</span>uint) balances;</span><br><span class="line">    event Sent(address <span class="keyword">from</span> ,address to,uint amout);</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        minter = msg.sender;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">mint</span>(<span class="params">address receiver,uint amount</span>)<span class="title">public</span></span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(msg.sender == minter);</span><br><span class="line">        balances[receiver]+=amount;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params">address receiver,uint amount</span>)<span class="title">public</span></span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(balances[msg.sender]&gt;=amount);</span><br><span class="line">        balances[msg.sender]-=amount;</span><br><span class="line">        balances[receiver]+=amount;</span><br><span class="line">        </span><br><span class="line">        emit Sent(msg.sender,receiver,amount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;<span class="number">0.4</span><span class="number">.20</span>;</span><br><span class="line">contract MyToken &#123;</span><br><span class="line">    mapping (<span class="function"><span class="params">address</span> =&gt;</span>uint256 )public balanceOf;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">uint256 intitialSupply</span>)</span>&#123;</span><br><span class="line">        balanceOf[msg.sender] = intitialSupply;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">transfer</span>(<span class="params">address _to,uint256 _value</span>)<span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(balanceOf[msg.sender] &gt;= _value);</span><br><span class="line">        <span class="built_in">require</span>(balanceOf[_to] +_value &gt;=balanceOf[_to]);</span><br><span class="line">        balanceOf[msg.sender] -= _value;</span><br><span class="line">        balanceOf[_to]+=_value;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="合约代码解读"><a href="#合约代码解读" class="headerlink" title="合约代码解读"></a>合约代码解读</h1><p><em>address</em><strong>public</strong>minter;</p>
<ul>
<li><p>这一行声明了一个可以被公开访问的address类型的状态变量。</p>
</li>
<li><p>关键字public自动生成一个函数，允许你在这个合约之外访问这个状态变量的当前值。</p>
</li>
</ul>
<p><em>mapping(address =&gt; uint) public balances;</em></p>
<ul>
<li><p>也创建一个公共状态变量，但它是一个更复杂的数据类型，该类型将<em>address</em>映射为无符号整数。</p>
</li>
<li><p><em>mappings</em>可以看作是一个<strong>哈希表</strong>，它会执行虚拟初始化，把所有可能存在的键都映射到一个字节表示为全零的值。</p>
</li>
</ul>
<h1 id="合约代码解读-1"><a href="#合约代码解读-1" class="headerlink" title="合约代码解读"></a>合约代码解读</h1><p><strong>event</strong>Sent(<em>address</em> from,<em>address</em> to,<em>uint</em> amount);</p>
<ul>
<li><p>声明了一个“事件”（event），它会在send函数的最后一行触发</p>
</li>
<li><p>用户可以监听区块链上正在发送的事件，而不会花费太多成本。一旦它被发出，监听该事件的listener都将收到通知</p>
</li>
<li><p>所有的事件都包含了from，to和amount三个参数，可方便追踪事务</p>
</li>
</ul>
<p><strong>emit</strong>Sent(msg.sender, receiver, amount);</p>
<ul>
<li>触发Sent事件，并将参数传入</li>
</ul>
<h1 id="事件的监听"><a href="#事件的监听" class="headerlink" title="事件的监听"></a>事件的监听</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Coin.Sent().watch(&#123;&#125;, <span class="string">&#x27;&#x27;</span>,<span class="function"><span class="keyword">function</span> (<span class="params">error, result</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!error) &#123;</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">&quot;Coin transfer: &quot;</span> + result.args.amount + <span class="string">&quot;coins were sent from&quot;</span> + result.args.from +<span class="string">&quot; to &quot;</span> + result.args.to + <span class="string">&quot;.&quot;</span>);</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">&quot;Balances now:n &quot;</span> +<span class="string">&quot;Sender: &quot;</span> + Coin.balances.call(result.args. <span class="keyword">from</span> ) +<span class="string">&quot;Receiver: &quot;</span> + Coin.balances.call(result.args.to));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;<span class="number">0.4</span><span class="number">.22</span> &lt;<span class="number">0.6</span><span class="number">.0</span>;</span><br><span class="line">contract Coin &#123;</span><br><span class="line">	address public minter;</span><br><span class="line">	mapping address =&gt; uint ) public balances;</span><br><span class="line">	event Sent( address <span class="keyword">from</span>, address to, uint amount);</span><br><span class="line">	<span class="title">constructor</span> <span class="title">public</span> &#123; minter = msg.sender; &#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">mint</span>(<span class="params"> address receiver, uint amount</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		<span class="built_in">require</span>(msg.sender == minter);</span><br><span class="line">		balances[receiver] += amount;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">send</span>(<span class="params"> address receiver, uint amount</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		<span class="built_in">require</span>(amount &lt;= balances[msg.sender]);</span><br><span class="line">		balances[msg.sender]--= amount;</span><br><span class="line">		balances[receiver] += amount;</span><br><span class="line">		emit Sent(msg.sender, receiver, amount);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<h1 id="Ballot-–一个简单的投票合约"><a href="#Ballot-–一个简单的投票合约" class="headerlink" title="Ballot –一个简单的投票合约"></a>Ballot –一个简单的投票合约</h1><ul>
<li><p>电子投票的主要问题是如何将投票权分配给正确的人员以及如何防止被操纵。这个合约展示了如何进行委托投票，同时，计票又是<strong>自动和完全透明的</strong></p>
</li>
<li><p>为每个（投票）表决创建一份合约，然后作为合约的创造者——即主席，将给予每个独立的地址以投票权</p>
</li>
<li><p>地址后面的人可以选择自己投票，或者委托给他们信任的人来投票</p>
</li>
<li><p>在投票时间结束时，winningProposal()将返回获得最多投票的提案</p>
</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>5.4 Ballot( 投票合约 )</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/5.4_Ballot/</url>
    <content><![CDATA[<p>合约代码如下:</p>
<span id="more"></span>



<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: GPL-3.0</span></span><br><span class="line"></span><br><span class="line">pragma solidity &gt;=<span class="number">0.7</span><span class="number">.0</span> &lt;<span class="number">0.8</span><span class="number">.0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@title <span class="variable">Ballot</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@dev </span>Implements voting process along with vote delegation</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">contract Ballot &#123;</span><br><span class="line">   </span><br><span class="line">    struct Voter &#123;</span><br><span class="line">        uint weight; <span class="comment">// weight is accumulated by delegation(重量是通过委托来累积的)</span></span><br><span class="line">        bool voted;  <span class="comment">// if true, that person already voted(如果是真的，那人已经投票了)</span></span><br><span class="line">        address delegate; <span class="comment">// 人委托给</span></span><br><span class="line">        uint vote;   <span class="comment">// 经表决的提案索引</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    struct Proposal &#123;</span><br><span class="line">        <span class="comment">// If you can limit the length to a certain number of bytes, (如果可以将长度限制为一定的字节数，)</span></span><br><span class="line">        <span class="comment">// always use one of bytes1 to bytes32 because they are much cheaper(总是使用bytes1到bytes32中的一个，因为它们更便宜)</span></span><br><span class="line">        bytes32 name;   <span class="comment">// short name (up to 32 bytes) ()</span></span><br><span class="line">        uint voteCount; <span class="comment">// number of accumulated votes</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    address public chairperson;</span><br><span class="line"></span><br><span class="line">    mapping(<span class="function"><span class="params">address</span> =&gt;</span> Voter) public voters;</span><br><span class="line"></span><br><span class="line">    Proposal[] public proposals;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@dev </span>Create a new ballot to choose one of &#x27;proposalNames&#x27;.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param </span>proposalNames names of proposals</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">bytes32[] memory proposalNames</span>)</span> &#123;</span><br><span class="line">        chairperson = msg.sender;</span><br><span class="line">        voters[chairperson].weight = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (uint i = <span class="number">0</span>; i &lt; proposalNames.length; i++) &#123;</span><br><span class="line">            <span class="comment">// &#x27;Proposal(&#123;...&#125;)&#x27; creates a temporary</span></span><br><span class="line">            <span class="comment">// Proposal object and &#x27;proposals.push(...)&#x27;</span></span><br><span class="line">            <span class="comment">// appends it to the end of &#x27;proposals&#x27;.</span></span><br><span class="line">            proposals.push(Proposal(&#123;</span><br><span class="line">                <span class="attr">name</span>: proposalNames[i],</span><br><span class="line">                <span class="attr">voteCount</span>: <span class="number">0</span></span><br><span class="line">            &#125;));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@dev </span>Give &#x27;voter&#x27; the right to vote on this ballot. May only be called by &#x27;chairperson&#x27;.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param </span>voter address of voter</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">giveRightToVote</span>(<span class="params">address voter</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        <span class="built_in">require</span>(</span><br><span class="line">            msg.sender == chairperson,</span><br><span class="line">            <span class="string">&quot;Only chairperson can give right to vote.&quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="built_in">require</span>(</span><br><span class="line">            !voters[voter].voted,</span><br><span class="line">            <span class="string">&quot;The voter already voted.&quot;</span></span><br><span class="line">        );</span><br><span class="line">        <span class="built_in">require</span>(voters[voter].weight == <span class="number">0</span>);</span><br><span class="line">        voters[voter].weight = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@dev </span>Delegate your vote to the voter &#x27;to&#x27;.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param </span>to address to which vote is delegated</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">delegate</span>(<span class="params">address to</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        Voter storage sender = voters[msg.sender];</span><br><span class="line">        <span class="built_in">require</span>(!sender.voted, <span class="string">&quot;You already voted.&quot;</span>);</span><br><span class="line">        <span class="built_in">require</span>(to != msg.sender, <span class="string">&quot;Self-delegation is disallowed.&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (voters[to].delegate != address(<span class="number">0</span>)) &#123;</span><br><span class="line">            to = voters[to].delegate;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// We found a loop in the delegation, not allowed.</span></span><br><span class="line">            <span class="built_in">require</span>(to != msg.sender, <span class="string">&quot;Found loop in delegation.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sender.voted = <span class="literal">true</span>;</span><br><span class="line">        sender.delegate = to;</span><br><span class="line">        Voter storage delegate_ = voters[to];</span><br><span class="line">        <span class="keyword">if</span> (delegate_.voted) &#123;</span><br><span class="line">            <span class="comment">// If the delegate already voted,</span></span><br><span class="line">            <span class="comment">// directly add to the number of votes</span></span><br><span class="line">            proposals[delegate_.vote].voteCount += sender.weight;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// If the delegate did not vote yet,</span></span><br><span class="line">            <span class="comment">// add to her weight.</span></span><br><span class="line">            delegate_.weight += sender.weight;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@dev </span>Give your vote (including votes delegated to you) to proposal &#x27;proposals[proposal].name&#x27;.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param </span>proposal index of proposal in the proposals array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">vote</span>(<span class="params">uint proposal</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">        Voter storage sender = voters[msg.sender];</span><br><span class="line">        <span class="built_in">require</span>(sender.weight != <span class="number">0</span>, <span class="string">&quot;Has no right to vote&quot;</span>);</span><br><span class="line">        <span class="built_in">require</span>(!sender.voted, <span class="string">&quot;Already voted.&quot;</span>);</span><br><span class="line">        sender.voted = <span class="literal">true</span>;</span><br><span class="line">        sender.vote = proposal;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// If &#x27;proposal&#x27; is out of the range of the array,</span></span><br><span class="line">        <span class="comment">// this will throw automatically and revert all</span></span><br><span class="line">        <span class="comment">// changes.</span></span><br><span class="line">        proposals[proposal].voteCount += sender.weight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@dev </span>Computes the winning proposal taking all previous votes into account.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return </span>winningProposal_ index of winning proposal in the proposals array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">winningProposal</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span></span></span><br><span class="line"><span class="function">            <span class="title">returns</span> (<span class="params">uint winningProposal_</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        uint winningVoteCount = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (uint p = <span class="number">0</span>; p &lt; proposals.length; p++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (proposals[p].voteCount &gt; winningVoteCount) &#123;</span><br><span class="line">                winningVoteCount = proposals[p].voteCount;</span><br><span class="line">                winningProposal_ = p;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@dev </span>Calls winningProposal() function to get the index of the winner contained in the proposals array and then</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return </span>winnerName_ the name of the winner</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">winnerName</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span></span></span><br><span class="line"><span class="function">            <span class="title">returns</span> (<span class="params">bytes32 winnerName_</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        winnerName_ = proposals[winningProposal()].name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>6.1 web3.js简介</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/6.1%20web3js%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="web3-js-简介"><a href="#web3-js-简介" class="headerlink" title="web3.js 简介"></a>web3.js 简介</h1><h2 id="web3-js"><a href="#web3-js" class="headerlink" title="web3.js"></a>web3.js</h2><ul>
<li>Web3 JavaScript app API </li>
<li>web3.js 是一个JavaScript API库。要使DApp在以太坊上运行，<ul>
<li>我们可以使用web3.js库提供的web3对象</li>
</ul>
</li>
<li>web3.js 通过RPC调用与本地节点通信，它可以用于任何暴露<ul>
<li>了RPC层的以太坊节点</li>
</ul>
</li>
<li> web3 包含 eth 对象 - web3.eth(专门与以太坊区块链交互) 和 shh 对象 - web3.shh(用于与 Whisper 交互)</li>
</ul>
<span id="more"></span>

<h2 id="web3-模块加载"><a href="#web3-模块加载" class="headerlink" title="web3 模块加载"></a>web3 模块加载</h2><ul>
<li><p>首先需要将web3模块安装在项目中: </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install web3@0.20.1</span><br></pre></td></tr></table></figure></li>
<li><p> 然后创建一个web3实例，设置一个“provider”</p>
</li>
<li><p> 为了保证我们的MetaMask设置好的provider不被覆盖掉，在引入web3之前</p>
</li>
<li><p>我们一般要做当前环境检查(以v0.20.1为例):</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> web3 !== <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">	web3 = <span class="keyword">new</span> Web3(web3.currentProvider); </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">	web3 = <span class="keyword">new</span> Web3(<span class="keyword">new</span> Web3.providers .HttpProvider(<span class="string">&quot;http://localhost:8545&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="异步回调-callback"><a href="#异步回调-callback" class="headerlink" title="异步回调(callback)"></a>异步回调(callback)</h2><ul>
<li><p>web3js API 设计的最初目的，主要是为了和本地 RPC 节点共同使用，所 以默认情况下发送的是同步 HTTP 请求</p>
</li>
<li><p>如果要发送异步请求，可以在函数的最后一个参数位置上，传入一个回调 函数。回调函数是可选(optioanl)的</p>
</li>
<li><p>我们一般采用的回调风格是所谓的“错误优先”，例如:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.getBlock(<span class="number">48</span>, <span class="function"><span class="keyword">function</span>(<span class="params">error, result</span>)</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(!error)&#123;</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(result));</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">console</span>.error(error);</span><br><span class="line">	&#125;</span><br><span class="line"> );</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="回调-Promise-事件-v1-0-0"><a href="#回调-Promise-事件-v1-0-0" class="headerlink" title="回调 Promise 事件(v1.0.0)"></a>回调 Promise 事件(v1.0.0)</h2><ul>
<li><p>为了帮助 web3 集成到不同标准的所有类型项目中，1.0.0 版本提供了多种方式来处理异步函数。 大多数的 web3 对象允许将一个回调函数作为最后一个函数参数传入，同时会返回一个<br> promise 用于链式函数调用。</p>
</li>
<li><p>以太坊作为一个区块链系统，一次请求具有不同的结束阶段。为了满足这样的要求，1.0.0 版本 将这类函数调用的返回值包成一个“承诺事件”(promiEvent)，这是一个 promise 和 EventEmitter 的结合体。</p>
</li>
<li><p>PromiEvent 的用法就像 promise 一样，另外还加入了.on，.once 和.off方法 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.sendTransaction(&#123;<span class="attr">from</span>: <span class="string">&#x27;0x123...&#x27;</span>, <span class="attr">data</span>: <span class="string">&#x27;0x432...&#x27;</span>&#125;) 			</span><br><span class="line">  .once(<span class="string">&#x27;transactionHash&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">hash</span>)</span>&#123; ... &#125;)</span><br><span class="line">	.once(<span class="string">&#x27;receipt&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">receipt</span>)</span>&#123; ... &#125;)</span><br><span class="line">	.on(<span class="string">&#x27;confirmation&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">confNumber, receipt</span>)</span>&#123; ... &#125;)</span><br><span class="line">	.on(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123; ... &#125;)</span><br><span class="line">	.then(<span class="function"><span class="keyword">function</span>(<span class="params">receipt</span>)</span>&#123; <span class="comment">// will be fired once the receipt is mined &#125;);</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="应用二进制接口-ABI"><a href="#应用二进制接口-ABI" class="headerlink" title="应用二进制接口(ABI)"></a>应用二进制接口(ABI)</h2><ul>
<li><p>web3.js 通过以太坊智能合约的 json 接口(Application Binary Interface，ABI)创建一个 JavaScript 对象，用来在 js 代码中描述</p>
</li>
<li><p>函数(functions)</p>
<ul>
<li>type:函数类型，默认“function”，也可能是“constructor”</li>
<li>constant, payable, stateMutability:函数的状态可变性 </li>
<li>inputs, outputs: 函数输入、输出参数描述列表</li>
</ul>
</li>
<li><p>事件(events)</p>
<ul>
<li>type:类型，总是“event”</li>
<li>inputs:输入对象列表，包括 name、type、indexed</li>
</ul>
</li>
</ul>
<h2 id="批处理请求-batch-requests"><a href="#批处理请求-batch-requests" class="headerlink" title="批处理请求(batch requests)"></a>批处理请求(batch requests)</h2><ul>
<li><p>批处理请求允许我们将请求排序，然后一起处理它们。</p>
</li>
<li><p>注意:批量请求不会更快。实际上，在某些情况下，一次性地发出许多请求会更快，因为请求是异步处理的。</p>
</li>
<li><p>批处理请求主要用于确保请求的顺序，并串行处理。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> batch = web3.createBatch(); batch.add(web3.eth.getBalance.request(<span class="string">&#x27;0x0000000000000000000000000000000000000000&#x27;</span>, <span class="string">&#x27;latest&#x27;</span>, callback)); batch.add(web3.eth.contract(abi).at(address).balance.request(address, callback2)); batch.execute();</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="大数处理-big-numbers"><a href="#大数处理-big-numbers" class="headerlink" title="大数处理(big numbers)"></a>大数处理(big numbers)</h2><ul>
<li><p>JavaScript中默认的数字精度较小，所以web3.js会自动添加一个依 赖库 BigNumber，专门用于大数处理</p>
</li>
<li><p>对于数值，我们应该习惯把它转换成BigNumber对象来处理 var balance = new</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">BigNumber(<span class="string">&#x27;131242344353464564564574574567456&#x27;</span>); <span class="comment">// or var balance = web3.eth.getBalance(someAddress); </span></span><br><span class="line">balance.plus(<span class="number">21</span>).toString(<span class="number">10</span>); <span class="comment">//&quot;131242344353464564564574574567477&quot;</span></span><br></pre></td></tr></table></figure></li>
<li><p> BigNumber.toString(10)对小数只保留20位浮点精度。所以推荐的做 法是，我们内部总是用 wei 来表示余额(大整数)，只有在需要显示 给用户看的时候才转换为ether或其它单位</p>
</li>
</ul>
<h2 id="常用-API-——-基本信息查询"><a href="#常用-API-——-基本信息查询" class="headerlink" title="常用 API —— 基本信息查询"></a>常用 API —— 基本信息查询</h2><p>查看 web3 版本</p>
<ul>
<li><p>v0.2x.x:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.version.api</span><br></pre></td></tr></table></figure></li>
<li><p>v1.0.0:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.version</span><br></pre></td></tr></table></figure></li>
</ul>
<p>查看 web3 连接到的节点版本(clientVersion)</p>
<ul>
<li><p>同步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.version.node</span><br></pre></td></tr></table></figure></li>
<li><p>异步: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.version.getNode((error,result)=&gt;&#123;console.log(result)&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>v1.0.0:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.getNodeInfo().then(<span class="built_in">console</span>.log)</span><br></pre></td></tr></table></figure></li>
</ul>
<p>基本信息查询</p>
<ul>
<li><p>获取 network id</p>
<ul>
<li><p>同步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.version.network</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.version.getNetwork(<span class="function">(<span class="params">err,res</span>)=&gt;</span>&#123;<span class="built_in">console</span>.log(res)&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>v1.0.0:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.net.getId().then(<span class="built_in">console</span>.log)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>获取节点的以太坊协议版本</p>
<ul>
<li><p>同步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.version.ethereum</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.version.getEthereum((err,res)=&gt;&#123;console.log(res)&#125;)</span><br></pre></td></tr></table></figure></li>
<li><p>v1.0.0:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.getProtocolVersion().then(<span class="built_in">console</span>.log)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>网络状态查询</p>
<ul>
<li><p>是否有节点连接/监听，返回true/false</p>
<ul>
<li><p>同步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.isConnect() </span><br></pre></td></tr></table></figure>

<p>或者 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.net.listening</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.net.getListening(<span class="function">(<span class="params">err,res</span>)=&gt;</span><span class="built_in">console</span>.log(res))</span><br></pre></td></tr></table></figure></li>
<li><p>v1.0.0:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.net.isListening().then(<span class="built_in">console</span>.log)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
<li><p>查看当前连接的 peer 节点</p>
<ul>
<li><p>同步:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">web3.net.peerCount</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.net.getPeerCount(<span class="function">(<span class="params">err,res</span>)=&gt;</span><span class="built_in">console</span>.log(res))</span><br></pre></td></tr></table></figure></li>
<li><p>v1.0.0:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.net.getPeerCount().then(<span class="built_in">console</span>.log)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="Provider"><a href="#Provider" class="headerlink" title="Provider"></a>Provider</h2><ul>
<li><p>查看当前设置的 web3 provider </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.currentProvider</span><br></pre></td></tr></table></figure></li>
<li><p>查看浏览器环境设置的 web3 provider(v1.0.0) </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.givenProvider</span><br></pre></td></tr></table></figure></li>
<li><p>设置 provider</p>
<ul>
<li>web3.setProvider(provider)</li>
<li>web3.setProvider(new web3.providers.HttpProvider(‘<a href="http://localhost:8545&#39;">http://localhost:8545&#39;</a>))</li>
</ul>
</li>
</ul>
<h2 id="web3-通用工具方法"><a href="#web3-通用工具方法" class="headerlink" title="web3 通用工具方法"></a>web3 通用工具方法</h2><ul>
<li><p>以太单位转换</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.fromWei web3.toWei</span><br></pre></td></tr></table></figure></li>
<li><p>数据类型转换</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.toString web3.toDecimal web3.toBigNumber</span><br></pre></td></tr></table></figure></li>
<li><p>字符编码转换</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.toHex web3.toAscii web3.toUtf8 web3.fromUtf8</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="地址相关"><a href="#地址相关" class="headerlink" title="地址相关"></a>地址相关</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.isAddress web3.toChecksumAddress</span><br></pre></td></tr></table></figure>

<h2 id="web3-eth-–-账户相关"><a href="#web3-eth-–-账户相关" class="headerlink" title="web3.eth – 账户相关"></a>web3.eth – 账户相关</h2><ul>
<li><p>coinbase 查询</p>
<ul>
<li><p>同步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.coinbase</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.getCoinbase( <span class="function">(<span class="params">err, res</span>)=&gt;</span><span class="built_in">console</span>.log(res) ) </span><br></pre></td></tr></table></figure></li>
<li><p>v1.0.0:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.getCoinbase().then(<span class="built_in">console</span>.log)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>账户查询</p>
<ul>
<li><p>同步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.accounts</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getAccounts( (err, res)=&gt;console.log(res) ) </span><br></pre></td></tr></table></figure></li>
<li><p>v1.0.0:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getAccounts().then(console.log)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="区块相关"><a href="#区块相关" class="headerlink" title="区块相关"></a>区块相关</h2><ul>
<li><p>区块高度查询</p>
<ul>
<li><p>同步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth. blockNumber</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getBlockNumber( callback )</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>gasPrice 查询</p>
<ul>
<li><p>同步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.gasPrice</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getGasPrice( callback )</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="区块相关-1"><a href="#区块相关-1" class="headerlink" title="区块相关"></a>区块相关</h2><ul>
<li><p>区块查询</p>
<ul>
<li><p>同步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getBlockNumber(hashStringOrBlockNumber[ ,returnTransactionObjects] )</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getBlockNumber( hashStringOrBlockNumber, callback )</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>块中交易数量查询</p>
<ul>
<li><p>同步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getBlockTransactionCount( hashStringOrBlockNumber )</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getBlockTransactionCount( hashStringOrBlockNumber, callback )</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="交易相关"><a href="#交易相关" class="headerlink" title="交易相关"></a>交易相关</h2><ul>
<li><p>余额查询</p>
<ul>
<li><p>同步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getBalance(addressHexString [, defaultBlock]) </span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getBalance(addressHexString [, defaultBlock][, callback])</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>交易查询</p>
<ul>
<li><p>同步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getTransaction(transactionHash)</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.getTransaction(transactionHash [, callback])</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h1 id="交易执行相关"><a href="#交易执行相关" class="headerlink" title="交易执行相关"></a>交易执行相关</h1><ul>
<li><p>交易收据查询(已进块)</p>
<ul>
<li><p>同步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getTransactionReceipt(hashString)</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.getTransactionReceipt(hashString [, callback])</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>估计 gas 消耗量</p>
<ul>
<li><p>同步:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.estimateGas(callObject)</span><br></pre></td></tr></table></figure></li>
<li><p>异步:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.estimateGas(callObject [, callback])</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>发送交易</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.sendTransaction(transactionObject [, callback]) </span><br></pre></td></tr></table></figure>

<ul>
<li>交易对象: <ul>
<li>from:发送地址</li>
<li> to:接收地址，如果是创建合约交易，可不填 • value:交易金额，以wei为单位，可选</li>
<li>gas:交易消耗 gas 上限，可选</li>
<li>gasPrice:交易 gas 单价，可选</li>
<li>data:交易携带的字串数据，可选 • nonce:整数 nonce 值，可选</li>
</ul>
</li>
</ul>
</li>
<li><p>消息调用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.call(callObject[,defaultBlock][,callback])</span><br></pre></td></tr></table></figure>

<ul>
<li><p>参数:</p>
<ul>
<li><p>调用对象:与交易对象相同，只是from也是可选的</p>
</li>
<li><p>默认区块:默认“latest”，可以传入指定的区块高度 • 回调函数，如果没有则为同步调用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var result = web3.eth.call(&#123; to:&quot;0xc4abd0339eb8d57087278718986382264244252f&quot;,data:&quot;0xc6888fa100000000000000000000000000000000000000000000000000 0 0000000000003&quot; &#125;);</span><br><span class="line"></span><br><span class="line">console.log(result);</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
</li>
<li><p>日志过滤(事件监听)</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3.eth.filter( filterOptions [ , callback ] )</span><br><span class="line"></span><br><span class="line"><span class="comment">// filterString 可以是 &#x27;latest&#x27; or &#x27;pending&#x27; var filter = web3.eth.filter(filterString); </span></span><br><span class="line"><span class="comment">// 或者可以填入一个日志过滤 options var filter = web3.eth.filter(options);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听日志变化</span></span><br><span class="line"> filter.watch(<span class="function"><span class="keyword">function</span>(<span class="params">error, result</span>)</span>&#123; <span class="keyword">if</span> (!error) <span class="built_in">console</span>.log(result); &#125;); <span class="comment">// 还可以用传入回调函数的方法，立刻开始监听日志 web3.eth.filter(options, function(error, result)&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!error) <span class="built_in">console</span>.log(result); &#125;);</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="合约相关-——-创建合约"><a href="#合约相关-——-创建合约" class="headerlink" title="合约相关 —— 创建合约"></a>合约相关 —— 创建合约</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">web3.eth.contract</span><br><span class="line">var MyContract = web3.eth.contract(abiArray); // 通过地址初始化合约实例</span><br><span class="line">var contractInstance = MyContract.at(address); // 或者部署一个新合约</span><br><span class="line">var contractInstance = MyContract.new([constructorParam1][, constructorParam2], &#123;data: &#x27;0x12345...&#x27;, from: myAccount, gas: 1000000&#125;);</span><br></pre></td></tr></table></figure>

<ul>
<li><p>调用合约函数</p>
<p>可以通过已创建的合约实例，直接调用合约函数</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 直接调用，自动按函数类型决定用 sendTransaction 还是 call</span></span><br><span class="line">myContractInstance.myMethod(param1 [, param2, ...] [, transactionObject] [, defaultBlock] [, callback]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显式以消息调用形式 call 该函数 myContractInstance.myMethod.call(param1 [, param2, ...] [,</span></span><br><span class="line">transactionObject] [, defaultBlock] [, callback]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 显式以发送交易形式调用该函数</span></span><br><span class="line">myContractInstance.myMethod.sendTransaction(param1 [, param2, ...] [, transactionObject] [, callback]);</span><br></pre></td></tr></table></figure>



<ul>
<li><p>监听合约事件</p>
<p> 合约的 event 类似于 filter，可以设置过滤选项来监听 </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> event = myContractInstance.MyEvent(&#123;<span class="attr">valueA</span>: <span class="number">23</span>&#125; [, additionalFilterObject]) <span class="comment">// 监听事件</span></span><br><span class="line">event.watch(<span class="function"><span class="keyword">function</span>(<span class="params">error, result</span>)</span>&#123; <span class="keyword">if</span> (!error) <span class="built_in">console</span>.log(result); &#125;); <span class="comment">//还可以用传入回调函数的方法，立刻开始监听事件</span></span><br><span class="line"><span class="keyword">var</span> event = myContractInstance.MyEvent([&#123;<span class="attr">valueA</span>: <span class="number">23</span>&#125;][, additionalFilterObject] , <span class="function"><span class="keyword">function</span>(<span class="params">error, result</span>)</span>&#123; <span class="keyword">if</span> (!error) <span class="built_in">console</span>.log(result);</span><br><span class="line">&#125; );</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>7.2 编写合约的部署脚本</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/7.2%E7%BC%96%E5%86%99%E5%90%88%E7%BA%A6%E7%9A%84%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>我们已经通过编译从 solidity 源码得到了字节码，接下来我们会试图 完成一个自动化脚本，将合约部署到区块链网络中。 </p>
<h2 id="部署的必要条件"><a href="#部署的必要条件" class="headerlink" title="部署的必要条件"></a>部署的必要条件</h2><ul>
<li><p>与以太坊节点的通信连接 </p>
<p>我们需要启动一个以太坊节点，连接到想要的网络，然后开放 HTTP-RPC 的 API（默认 8545 端口）给外部调用；或者也可以用第三方提供的可用节点入 口，以太坊社区有人专门为开发者提供了节点服务。目前我们直接用 ganache， 不需要考虑这些问题，但如果配置其它网络，这个配置就是必要的。</p>
</li>
<li><p>余额大于 0 的账户 </p>
<p>因为以太坊上的任何交易都需要账户发起，账户中必须有足够的余额来支付 手续费（Transaction Fee），如果余额为 0 部署会失败。当然，我们目前用的 是 ganache，里面默认有 10 个账户，每个账户 100ETH，不存在这个问题，但 如果要部署到其它网络（私链、测试网络、主网）就必须考虑这个问题。 </p>
</li>
</ul>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>搞清楚部署的必要条件之后，我们需要安装必要的依赖包。首先是 web3.js， web3.js 的 1.0.0 版本尚未发布，但是相比 0.2x.x 版本变化非常大，1.x 中大 量使用了 Promise，可以结合 async/await 使用，而 0.x 版本只支持回调，因 为使用 async/await 能让代码可读性更好，我们这次选择使用 1.0.0 版本。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install web3	</span><br></pre></td></tr></table></figure>

<h2 id="编写部署脚本"><a href="#编写部署脚本" class="headerlink" title="编写部署脚本"></a>编写部署脚本</h2><p>做好准备工作之后，我们开始编写合约部署脚本，在 scripts 目录下新建脚 本文件 deploy.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> Web3 = <span class="built_in">require</span>(<span class="string">&#x27;web3&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> web3 = <span class="keyword">new</span> Web3(<span class="keyword">new</span> Web3.providers.HttpProvider(<span class="string">&#x27;http://localhost:8545&#x27;</span>));</span><br><span class="line"><span class="comment">// 1. 拿到 abi 和 bytecode</span></span><br><span class="line"><span class="keyword">const</span> contractPath = path.resolve(__dirname,<span class="string">&#x27;../compiled/Car.json&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; interface, bytecode &#125; = <span class="built_in">require</span>(contractPath);</span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">	<span class="comment">// 2. 获取钱包里面的账户</span></span><br><span class="line">	<span class="keyword">const</span> accounts = <span class="keyword">await</span> web3.eth.getAccounts();</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">&#x27;部署合约的账户：&#x27;</span>, accounts[<span class="number">0</span>]);</span><br><span class="line">	<span class="comment">// 3. 创建合约实例并且部署</span></span><br><span class="line">	<span class="keyword">var</span> result = <span class="keyword">await</span> <span class="keyword">new</span> web3.eth.Contract(<span class="built_in">JSON</span>.parse(interface)).deploy(&#123; <span class="attr">data</span>: bytecode, <span class="attr">arguments</span>: [<span class="string">&#x27;AUDI&#x27;</span>] &#125;).send(&#123; <span class="attr">from</span>: accounts[<span class="number">0</span>], <span class="attr">gas</span>: <span class="string">&#x27;1000000&#x27;</span> &#125;);</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">&#x27;合约部署成功：&#x27;</span>, result);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>

<p>我们来熟悉一下 v1.0.0 版本中的部署操作。由于 1.0.0 版本中调用返回全部 是 promise，所以我们这里用到了 ES7 中的 async/await 来处理所有异步调用。 </p>
<p>第二步获取钱包账户，存为本地变量，然后选取 accounts[0] 作为部署合约 的账户；我们应该确保这个账户中以太余额充足。</p>
<p>第三步中，我们用 promise 的链式调用完成了创建抽象合约对象、创建部署 交易对象（deploy）和发送部署交易三个步骤，其中只有 send 一步是真正的异 步请求调用。分开写就是这样：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> contract = <span class="keyword">new</span> web3.eth.Contract(<span class="built_in">JSON</span>.parse(interface));</span><br><span class="line"><span class="keyword">const</span> transaction = contract.deploy(&#123; <span class="attr">data</span>: bytecode, <span class="attr">arguments</span>:[<span class="string">&#x27;AUDI&#x27;</span>] &#125;);</span><br><span class="line"><span class="keyword">const</span> result = <span class="keyword">await</span> transaction.send(&#123; <span class="attr">from</span>: accounts[<span class="number">0</span>], <span class="attr">gas</span>:<span class="number">1000000</span> &#125;);</span><br></pre></td></tr></table></figure>

<h2 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h2><p>在根目录下运行写好的部署脚本： node scripts/deploy.js 查看结果，可以看到合约已经成功部署。我们发现返回结果有些复杂，所以 可以对代码稍作改进，截取 address 返回，并计算一下部署花了多少时间：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> Web3 = <span class="built_in">require</span>(<span class="string">&#x27;web3&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> web3 = <span class="keyword">new</span> Web3(<span class="keyword">new</span> Web3.providers.HttpProvider(<span class="string">&#x27;http://localhost:8545&#x27;</span>));</span><br><span class="line"><span class="comment">// 1. 拿到 bytecode</span></span><br><span class="line"><span class="keyword">const</span> contractPath = path.resolve(__dirname,<span class="string">&#x27;../compiled/Car.json&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; interface, bytecode &#125; = <span class="built_in">require</span>(contractPath);</span><br><span class="line">(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="comment">// 2. 获取钱包里面的账户</span></span><br><span class="line">  <span class="keyword">const</span> accounts = <span class="keyword">await</span> web3.eth.getAccounts();</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;部署合约账户:&#x27;</span>, accounts[<span class="number">0</span>]);</span><br><span class="line">  <span class="comment">// 3. 创建合约实例并且部署</span></span><br><span class="line">  <span class="built_in">console</span>.time(<span class="string">&#x27;合约部署耗时&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> result = <span class="keyword">await</span> <span class="keyword">new</span> web3.eth.Contract(<span class="built_in">JSON</span>.parse(interface)).deploy(&#123; <span class="attr">data</span>: bytecode, <span class="attr">arguments</span>: [<span class="string">&#x27;AUDI&#x27;</span>] &#125;).send(&#123; <span class="attr">from</span>: accounts[<span class="number">0</span>], <span class="attr">gas</span>: <span class="string">&#x27;1000000&#x27;</span> &#125;);</span><br><span class="line">  <span class="built_in">console</span>.timeEnd(<span class="string">&#x27;合约部署耗时&#x27;</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&#x27;合约部署成功:&#x27;</span>, result.options.address);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>7.3 编写合约的测试脚本</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/7.3%E7%BC%96%E5%86%99%E5%90%88%E7%BA%A6%E6%B5%8B%E8%AF%95%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>我们已经实现了合约的编译和部署的自动化，这将大大提升我们开发的效率。 但流程的自动化并不能保证我们的代码质量。质量意识是靠谱工程师的基本职业 素养，在智能合约领域也不例外：任何代码如果不做充分的测试，问题发现时通 常都已为时太晚；如果代码不做自动化测试，问题发现的成本就会越来越高。 </p>
<p>在编写合约时，我们可以利用 remix 部署后的页面调用合约函数，进行单元 测试；还可以将合约部署到私链，用 geth 控制台或者 node 命令行进行交互测 试。但这有很大的随意性，并不能形成标准化测试流程；而且手动一步步操作， 比较繁琐，不易保证重复一致。 </p>
<p>于是我们想到，是否可以利用现成的前端技术栈实现合约的自动化测试呢？ 当然是可以的，mocha 就是这样一个 JavaScript 测试框架。</p>
<h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><p>开始编写测试脚本之前，我们首先需要安装依赖：测试框架 mocha。当然， 作为对合约的测试，模拟节点 ganache 和 web3 都是不可缺少的；不过我们在 上节课编写部署脚本时，已经安装了这些依赖（我们的 web3 依然是 1.0.0 版本）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install mocha –save-dev</span><br></pre></td></tr></table></figure>

<p>进行单元测试，比较重要的一点是保证测试的独立性和隔离性，所以我们并 不需要测试网络这种有复杂交互的环境，甚至不需要本地私链保存测试历史。而 ganache 基于内存模拟以太坊节点行为，每次启动都是一个干净的空白环境，所 以非常适合我们做开发时的单元测试。还记得 ganache 的前身叫什么吗？就是 大名鼎鼎的 testRPC。</p>
<h2 id="mocha-简介"><a href="#mocha-简介" class="headerlink" title="mocha 简介"></a>mocha 简介</h2><p>mocha 是 JavaScript 的一个单元测试框架，既可以在浏览器环境中运行， 也可以在 node.js 环境下运行。我们只需要编写测试用例，mocha 会将测试自动 运行并给出测试结果。 </p>
<p>mocha 的主要特点有：</p>
<ul>
<li>既可以测试简单的 JavaScript 函数，又可以测试异步代码；</li>
<li> 可以自动运行所有测试，也可以只运行特定的测试；</li>
<li>可以支持 before、after、beforeEach 和 afterEach 来编写初始化代码。</li>
</ul>
<h2 id="测试脚本示例"><a href="#测试脚本示例" class="headerlink" title="测试脚本示例"></a>测试脚本示例</h2><p>假设我们编写了一个 sum.js，并且输出一个简单的求和函数：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params">...rest</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> sum = <span class="number">0</span>;</span><br><span class="line"> <span class="keyword">for</span> (<span class="keyword">let</span> n <span class="keyword">of</span> rest) &#123;</span><br><span class="line"> sum += n;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> sum;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>这个函数非常简单，就是对输入的任意参数求和并返回结果。 </p>
<p>如果我们想对这个函数进行测试，可以写一个 test.js，然后使用 Node.js 提 供的 assert 模块进行断言：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> assert = <span class="built_in">require</span>(<span class="string">&#x27;assert&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> sum = <span class="built_in">require</span>(<span class="string">&#x27;./sum&#x27;</span>);</span><br><span class="line">assert.strictEqual(sum(), <span class="number">0</span>);</span><br><span class="line">assert.strictEqual(sum(<span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">assert.strictEqual(sum(<span class="number">1</span>, <span class="number">2</span>), <span class="number">3</span>);</span><br><span class="line">assert.strictEqual(sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="number">6</span>);</span><br></pre></td></tr></table></figure>

<p>assert 模块非常简单，它断言一个表达式为 true。如果断言失败，就抛出 Error。</p>
<p>单独写一个 test.js 的缺点是没法自动运行测试，而且，如果第一个 assert 报错，后面的测试也执行不了了。 </p>
<p>如果有很多测试需要运行，就必须把这些测试全部组织起来，然后统一执行， 并且得到执行结果。这就是我们为什么要用 mocha 来编写并运行测试。</p>
<p> 我们利用 mocha 修改后的测试脚本如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> assert = <span class="built_in">require</span>(<span class="string">&#x27;assert&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> sum = <span class="built_in">require</span>(<span class="string">&#x27;../sum&#x27;</span>);</span><br><span class="line">describe(<span class="string">&#x27;#sum.js&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> 		describe(<span class="string">&#x27;#sum()&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> 			it(<span class="string">&#x27;sum() should return 0&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> 				assert.strictEqual(sum(), <span class="number">0</span>);</span><br><span class="line"> 			&#125;);</span><br><span class="line"> 			it(<span class="string">&#x27;sum(1) should return 1&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> 				assert.strictEqual(sum(<span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line"> 			&#125;);</span><br><span class="line"> 			it(<span class="string">&#x27;sum(1, 2) should return 3&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> 				assert.strictEqual(sum(<span class="number">1</span>, <span class="number">2</span>), <span class="number">3</span>);</span><br><span class="line"> 			&#125;);</span><br><span class="line"> 			it(<span class="string">&#x27;sum(1, 2, 3) should return 6&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> 				assert.strictEqual(sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>), <span class="number">6</span>);</span><br><span class="line"> 			&#125;);</span><br><span class="line"> 	&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>这里我们使用 mocha 默认的 BDD-style 的测试。describe 可以任意嵌套， 以便把相关测试看成一组测试。</p>
<p>describe 可以任意嵌套，以便把相关测试看成一组测试；而其中的每个 it 就代表一个测试。 </p>
<p>每个 it(“name”, function() {…})就代表一个测试。例如，为了测试 sum(1, 2)， 我们这样写：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">it(<span class="string">&#x27;sum(1, 2) should return 3&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"> assert.strictEqual(sum(<span class="number">1</span>, <span class="number">2</span>), <span class="number">3</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>编写测试的原则是，一次只测一种情况，且测试代码要非常简单。我们编写 多个测试来分别测试不同的输入，并使用 assert 判断输出是否是我们所期望的。</p>
<h2 id="运行测试脚本"><a href="#运行测试脚本" class="headerlink" title="运行测试脚本"></a>运行测试脚本</h2><p>下一步，我们就可以用 mocha 运行测试了。打开命令提示符，切换到项目 目录，然后创建文件夹 test，将 test.js 放入 test 文件夹下，执行命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./node_modules/mocha/bin/mocha</span><br></pre></td></tr></table></figure>

<p>mocha 就会自动执行 test 文件夹下所有测试，然后输出如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#sum.js</span><br><span class="line"> #sum()</span><br><span class="line"> ✓ sum() should return 0</span><br><span class="line"> ✓ sum(1) should return 1</span><br><span class="line"> ✓ sum(1, 2) should return 3</span><br><span class="line"> ✓ sum(1, 2, 3) should return 6</span><br><span class="line"> 4 passing (7ms)</span><br></pre></td></tr></table></figure>

<p>这说明我们编写的 4 个测试全部通过。如果没有通过，要么修改测试代码， 要么修改 hello.js，直到测试全部通过为止。</p>
<h2 id="编写合约测试脚本"><a href="#编写合约测试脚本" class="headerlink" title="编写合约测试脚本"></a>编写合约测试脚本</h2><p>测试时我们通常会把每次测试运行的环境隔离开，以保证互不影响。对应到 合约测试，我们每次测试都需要部署新的合约实例，然后针对新的实例做功能测 试。 Car 合约的功能比较简单，我们只要设计 2 个测试用例： </p>
<ul>
<li>合约部署时传入的 brand 属性被正确存储；</li>
<li>调用 setBrand 之后合约的 brand 属性被正确更新；</li>
</ul>
<p> 新建测试文件 tests/car.spec.js，完整的测试代码如下。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> assert = <span class="built_in">require</span>(<span class="string">&#x27;assert&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> ganache = <span class="built_in">require</span>(<span class="string">&#x27;ganache-cli&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> Web3 = <span class="built_in">require</span>(<span class="string">&#x27;web3&#x27;</span>);</span><br><span class="line"><span class="comment">// 1. 配置 provider</span></span><br><span class="line"><span class="keyword">const</span> web3 = <span class="keyword">new</span> Web3(ganache.provider());</span><br><span class="line"><span class="comment">// 2. 拿到 abi 和 bytecode</span></span><br><span class="line"><span class="keyword">const</span> contractPath = path.resolve(__dirname,</span><br><span class="line"><span class="string">&#x27;../compiled/Car.json&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> &#123; interface, bytecode &#125; = <span class="built_in">require</span>(contractPath);</span><br><span class="line"><span class="keyword">let</span> accounts;</span><br><span class="line"><span class="keyword">let</span> contract;</span><br><span class="line"><span class="keyword">const</span> initialBrand = <span class="string">&#x27;BMW&#x27;</span>; </span><br><span class="line">describe(<span class="string">&#x27;contract&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 3. 每次跑单测时需要部署全新的合约实例，起到隔离的作用</span></span><br><span class="line">beforeEach(<span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">accounts = <span class="keyword">await</span> web3.eth.getAccounts();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;合约部署账户：&#x27;</span>, accounts[<span class="number">0</span>]);</span><br><span class="line">contract = <span class="keyword">await</span> <span class="keyword">new</span></span><br><span class="line">web3.eth.Contract(<span class="built_in">JSON</span>.parse(interface))</span><br><span class="line">.deploy(&#123; <span class="attr">data</span>: bytecode, <span class="attr">arguments</span>: [initialBrand] &#125;)</span><br><span class="line">.send(&#123; <span class="attr">from</span>: accounts[<span class="number">0</span>], <span class="attr">gas</span>: <span class="string">&#x27;1000000&#x27;</span> &#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;合约部署成功：&#x27;</span>,</span><br><span class="line">contract.options.address); &#125;);</span><br><span class="line"><span class="comment">// 4. 编写单元测试</span></span><br><span class="line">it(<span class="string">&#x27;deployed contract&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">assert.ok(contract.options.address);</span><br><span class="line">&#125;);</span><br><span class="line">it(<span class="string">&#x27;should has initial brand&#x27;</span>, <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line"><span class="keyword">const</span> brand = <span class="keyword">await</span> contract.methods.brand().call();</span><br><span class="line">assert.equal(brand, initialBrand);</span><br><span class="line">&#125;);</span><br><span class="line">it(<span class="string">&#x27;can change the brand&#x27;</span>, <span class="keyword">async</span> ()=&gt;&#123;</span><br><span class="line"> <span class="keyword">const</span> newBrand = <span class="string">&#x27;Benz&#x27;</span>;</span><br><span class="line"> <span class="keyword">await</span> contract.methods.setBrand(newBrand)</span><br><span class="line">.send(&#123;<span class="attr">from</span>: accounts[<span class="number">0</span>]&#125;);</span><br><span class="line"> <span class="keyword">const</span> brand = <span class="keyword">await</span> contract.methods.brand().call();</span><br><span class="line"> assert.equal(brand, newBrand);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>整个测试代码使用的断言库是 Node.js 内置的 assert 模块，assert.ok() 用于判断表达式真值，等同于 assert()，如果为 false 则抛出 error；assert.equal() 用于判断实际值和期望值是否相等（==），如果不相等则抛出 error。 </p>
<p>beforeEach 是 mocha 里提供的声明周期方法，表示每次运行时每个 test 执行前都要做的准备操作。因为我们知道，在测试前初始化资源，测试后释放资 源是非常常见的，所以 mocha 提供了 before、after、beforeEach 和 afterEach 来实现这些功能。</p>
<p> 测试的关键步骤也用编号的数字做了注释，其中步骤 1、2、3 在合约部署 脚本中已经比较熟悉，需要注意的是 ganache-cli provider 的创建方式。我们在 脚本中引入 ganache，将模拟以太坊节点嵌入测试中，就不会影响我们外部运行 的节点环境了。 </p>
<p>测试中我们用到了 web3.js 中两个与合约实例交互的方法，之前我们已经接 触过，以后在 DApp 开发时会大量使用：</p>
<ul>
<li>contract.methods.brand().call()，调用合约上的方法，通常是取数据， 立即返回，与 v0.20.1 版本中的 .call() 相同； </li>
<li> contract.methods.setBrand(‘xxx’).send()，对合约发起交易，通常是修 改数据，返回的是交易 Hash，相当于 v0.20.1 中的 sendTransaction() ；</li>
</ul>
<p> send 必须指定发起的账户地址，而 call 可以直接调用。 </p>
<p>注意在 v1.0.0 中，contract 后面要加上.methods 然后才能跟合约函数名， 这与 v0.20.1 不同；类似，v1.0.0 中事件的监听也要 contract 后面加.events。</p>
<h2 id="运行测试脚本-1"><a href="#运行测试脚本-1" class="headerlink" title="运行测试脚本"></a>运行测试脚本</h2><p>有了测试代码，就可以运行并观察结果。mocha 默认会执行 test 目录下的 所有脚本，但我们也可以传入脚本路径，指定执行目录。如果你环境中全局安装 了 mocha，可以使用如下命令运行测试：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mocha tests </span><br><span class="line">./node_modules/.bin/mocha tests</span><br></pre></td></tr></table></figure>

<p>如果一切正常，我们可以看到 输出结果：</p>
<h2 id="完整的工作流"><a href="#完整的工作流" class="headerlink" title="完整的工作流"></a>完整的工作流</h2><p>到目前为止，我们已经熟悉了智能合约的开发、编译、部署、测试，而在实 际工作中，把这些过程串起来才能算作是真正意义上的工作流。比如修改了合约 代码需要重新运行测试，但是重新运行测试之前需要重新编译，而部署的过程也 是类似的，每次部署的都要是最新的合约代码。</p>
<p> 通过 npm script 机制，我们可以把智能合约的工作流串起来，让能自动化 的尽可能自动化，在 package.json 中作如下修改：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line"><span class="attr">&quot;compile&quot;</span>: <span class="string">&quot;node scripts/compile.js&quot;</span>,</span><br><span class="line"><span class="attr">&quot;pretest&quot;</span>: <span class="string">&quot;npm run compile&quot;</span>,</span><br><span class="line"><span class="attr">&quot;test&quot;</span>: <span class="string">&quot;mocha tests/&quot;</span>,</span><br><span class="line"><span class="attr">&quot;predeploy&quot;</span>: <span class="string">&quot;npm run compile&quot;</span>,</span><br><span class="line"><span class="attr">&quot;deploy&quot;</span>: <span class="string">&quot;node scripts/deploy.js&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>上面的改动中，我们为项目增加了 3 条命令：compile、test、deploy，其 中 pretest、predeploy 是利用了 npm script 的生命周期机制，把我们的 compile、test、deploy 串起来。 </p>
<p>接下来我们可以使用 npm run test 运行测试，结果如下：</p>
<p>同理我们可以使用 npm run deploy 部署合约，结果如下：</p>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务学习--02grpc 远程调用</title>
    <url>/2020/01/04/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/02grpc%20%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/</url>
    <content><![CDATA[<h1 id="grpc-远程调用。"><a href="#grpc-远程调用。" class="headerlink" title="grpc 远程调用。"></a>grpc 远程调用。</h1><ul>
<li>服务端 grpc <ol>
<li>初始一个 grpc 对象</li>
<li>注册服务</li>
<li>设置监听， 指定 IP、port</li>
<li>启动服务。—- serve()</li>
</ol>
</li>
<li>客户端 grpc<ol>
<li>连接 grpc 服务<ol>
<li>给 grpc.Dial() 传参2 ： grpc.WithInsecure()  .  表示：以安全的方式操作。</li>
</ol>
</li>
<li>初始化 grpc 客户端</li>
<li>调用远程服务。<ol>
<li>给 grpc.SayHello() 传参1： context.TODO() 表示：空对象。</li>
</ol>
</li>
</ol>
</li>
</ul>
<span id="more"></span>



<p>服务器端代码</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;context&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">    <span class="string">&quot;net&quot;</span></span><br><span class="line">    <span class="string">&quot;testrpc/day01/pb&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义类</span></span><br><span class="line"><span class="keyword">type</span> Children <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Children)</span> <span class="title">SayHello</span><span class="params">(ctx context.Context,t *pb.Teacher)</span><span class="params">(*pb.Teacher,error)</span></span>&#123;</span><br><span class="line">    t.Name +=<span class="string">&quot;is Sleeping&quot;</span></span><br><span class="line">    <span class="keyword">return</span> t,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//1.初始一个grpc对象</span></span><br><span class="line">    grpcServer := grpc.NewServer()</span><br><span class="line">    <span class="comment">//2.注册服务</span></span><br><span class="line">    pb.RegisterSayNameServer(grpcServer,<span class="built_in">new</span>(Children))</span><br><span class="line">    <span class="comment">//3.设置监听(指定IP,port)</span></span><br><span class="line">    listener, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;127.0.0.1:8800&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;listener Error&quot;</span>,err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> listener.Close()</span><br><span class="line">    <span class="comment">//启动服务(serve())</span></span><br><span class="line">    grpcServer.Serve(listener)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>客户端代码</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="go-mirco"><a href="#go-mirco" class="headerlink" title="go-mirco"></a>go-mirco</h1><h2 id="micro-简介"><a href="#micro-简介" class="headerlink" title="micro 简介"></a>micro 简介</h2><ul>
<li>go-micro：微服务开发使用资源库。添加 RCP、GRPC</li>
<li>micro：微服务开发的生态。包含 微服务命令、API、插件。。。</li>
<li>go-plugins：微服务使用的插件。（新版微服务，舍弃了旧版的内容。）</li>
<li>服务发现：微服务开发的核心</li>
</ul>
<p>从 github 搜索 micro</p>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581732082449.png" alt="1581732082449"></p>
<h2 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h2><ul>
<li>是微服务开发中，必须的 核心技术</li>
</ul>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581734008422.png" alt="1581734008422"></p>
<ul>
<li><strong>==服务发现，也可以看做一个 “服务”， 是给 “服务” 提供服务的。==</strong></li>
</ul>
<h3 id="有服务发现后，client、server工作流程："><a href="#有服务发现后，client、server工作流程：" class="headerlink" title="有服务发现后，client、server工作流程："></a>有服务发现后，client、server工作流程：</h3><ol>
<li>每个server启动时，都将自己的IP、port 和 服务名 注册给 ”服务发现“</li>
<li>当 client 向服务发现发起服务请求时， “服务发现” 会自动找一个可用的 服务，将其 IP/port/服务名返回给 client</li>
<li>client 再借助服务发现，访问 server。</li>
</ol>
<h3 id="服务发现的种类："><a href="#服务发现的种类：" class="headerlink" title="服务发现的种类："></a>服务发现的种类：</h3><ul>
<li>consul： 常应用于 go-micro 中。</li>
<li>mdns：go-micro中默认自带的服务发现。</li>
<li>etcd：k8s 内嵌的服务发现</li>
<li>zookeeper：java中较常用。</li>
</ul>
<h3 id="consul-关键特性"><a href="#consul-关键特性" class="headerlink" title="consul 关键特性"></a>consul 关键特性</h3><ol>
<li><p>服务发现： consul 提供服务， 服务端 主动向 consul 发起注册。</p>
</li>
<li><p>健康检查： 定时发送消息，类似于 “心跳包”，保证 客户端获得到的 一定是 健康的服务。</p>
</li>
<li><p>键值存储： consul 提供，但是我们使用 redis</p>
</li>
<li><p>多数据中心：可以轻松搭建集群。</p>
</li>
</ol>
<h3 id="consul-安装说明："><a href="#consul-安装说明：" class="headerlink" title="consul 安装说明："></a>consul 安装说明：</h3><ol>
<li>下载 consul： <a href="https://releases.hashicorp.com/consul/">https://releases.hashicorp.com/consul/</a>   从中选择版本下载。得到 zip 压缩包。</li>
<li>解压缩 ：  命令：unzip。</li>
<li>将解压缩的文件 拷贝至 /usr/local/bin/  —— 可执行文件。</li>
<li>终端使用 consul -h 验证 安装是否成功。</li>
</ol>
<h3 id="consul-常用命令"><a href="#consul-常用命令" class="headerlink" title="consul 常用命令"></a>consul 常用命令</h3><ul>
<li><p>consul agent</p>
<ul>
<li><p>-bind=0.0.0.0         指定 consul所在机器的 IP地址。 默认值：0.0.0.0</p>
</li>
<li><p>-http-port=8500    consul 自带一个web访问的默认端口：8500</p>
</li>
<li><p>-client=127.0.0.1   表明哪些机器可以访问consul 。 默认本机。0.0.0.0 所有机器均可访问。</p>
</li>
<li><p>-config-dir=foo      所有主动注册服务的 描述信息</p>
</li>
<li><p>-data-dir=path       储存所有注册过来的srv机器的详细信息。</p>
</li>
<li><p>-dev                         开发者模式，直接以默认配置启动 consul</p>
</li>
<li><p>-node=hostname  服务发现的名字。</p>
</li>
<li><p>-rejoin                     consul 启动的时候，加入到的 consul集群</p>
</li>
<li><p>-server                    以服务方式开启consul， 允许其他的consul 连接到开启的 consul上 （形成集群）。如果不加 -server， 表示以 “客户端” 的方式开启。不能被连接。</p>
</li>
<li><p>-ui                           可以使用 web 页面 来查看服务发现的详情</p>
</li>
</ul>
</li>
<li><p>测试上述 命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在终端中，键入：</span></span><br><span class="line">consul agent -server -bootstrap-expect 1 -data-dir /tmp/consul -node=n1 -bind=192.168.6.108 -ui -rejoin -config-dir=/etc/consul.d/ -client 0.0.0.0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">看到提示：</span></span><br><span class="line">==&gt; Consul agent running!</span><br></pre></td></tr></table></figure>

<p>  启动 Google 浏览器， 测试：</p>
<p>  <img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581737388273.png" alt="1581737388273"></p>
</li>
<li><p>consul members： 查看集群中有多少个成员。</p>
</li>
<li><p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581737508458.png" alt="1581737508458"></p>
</li>
<li><p>consul info： 查看当前 consul 的 IP 信息。</p>
</li>
<li><p>consul leave： 优雅的关闭 consul 。—— 不优雅！Ctrl -c </p>
</li>
</ul>
<h3 id="注册服务到-consul-并查看"><a href="#注册服务到-consul-并查看" class="headerlink" title="注册服务到 consul 并查看"></a>注册服务到 consul 并查看</h3><p>步骤：</p>
<ol>
<li><p>进入配置文件路径 cd  /etc/consul.d/</p>
</li>
<li><p>创建 json 文件。 sudo vim web.json</p>
</li>
<li><p>按 json 的语法，填写 服务信息。</p>
<p> <img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581738360648.png" alt="1581738360648"></p>
</li>
<li><p>重新启动 consul </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">consul agent -server -bootstrap-expect 1 -data-dir /tmp/consul -node=n1 -bind=192.168.6.108 -ui -rejoin -config-dir=/etc/consul.d/ -client 0.0.0.0</span><br></pre></td></tr></table></figure></li>
<li><p>查询 服务</p>
<ol>
<li><p>浏览器查看：</p>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581738450004.png" alt="1581738450004"></p>
</li>
<li><p>终端命令查看：</p>
<p> <img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581738514380.png" alt="1581738514380"></p>
<p> 将 终端终端的 json数据，粘贴至 json在线网站中，查看消息。</p>
<p> <img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581738272128.png" alt="1581738272128"></p>
</li>
</ol>
</li>
</ol>
<h3 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h3><ol>
<li><p>sudo vim /etc/consul.d/web.json  打开配置文件</p>
</li>
<li><p>写入 服务的配置 信息。</p>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581739388605.png" alt="1581739388605"></p>
</li>
<li><p>执行命令，consul reload。 或者，关闭consul 再重启。</p>
</li>
<li><p>使用 浏览器 键入 192.168.6.108:8500 查看 “bj38” 这个服务 的 健康状况</p>
<ul>
<li>不健康！没有服务bj38 给 consul 实时回复！</li>
</ul>
</li>
<li><p>除了 http 实现健康检查外，还可以使用 “脚本”、“tcp”、“ttl” 方式进行健康检查。</p>
</li>
</ol>
<h2 id="consul-和-grpc-结合"><a href="#consul-和-grpc-结合" class="headerlink" title="consul 和 grpc 结合"></a>consul 和 grpc 结合</h2><p>安装 consul 源码包：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go get -u -v github.com/hashicorp/consul</span></span><br></pre></td></tr></table></figure>

<h3 id="使用整体流程"><a href="#使用整体流程" class="headerlink" title="使用整体流程"></a>使用整体流程</h3><ol>
<li>创建 proto文件 ， 指定 rpc 服务</li>
<li>启动 consul 服务发现  consul agent -dev</li>
<li>启动server<ol>
<li>获取consul 对象。</li>
<li>使用 consul对象，将 server 信息，注册给 consul </li>
<li>启动服务</li>
</ol>
</li>
<li>启动client<ol>
<li>获取consul 对象。</li>
<li>使用consul对象，从consul 上获取健康的 服务。</li>
<li>再访问服务 （grpc远程调用）</li>
</ol>
</li>
</ol>
<h3 id="编码实现："><a href="#编码实现：" class="headerlink" title="编码实现："></a>编码实现：</h3><ul>
<li><p>用到的函数：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 从 consul 服务发送上获取 健康服务</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Health)</span> <span class="title">Service</span><span class="params">(service, tag <span class="keyword">string</span>, passingOnly <span class="keyword">bool</span>, q *QueryOptions)</span> <span class="params">([]*ServiceEntry, *QueryMeta, error)</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数：</span></span><br><span class="line">service: 服务名。 -- 注册服务时，指定该<span class="keyword">string</span></span><br><span class="line">tag：外名/别名。 如果有多个， 任选一个</span><br><span class="line">passingOnly：是否通过健康检查。 <span class="literal">true</span></span><br><span class="line">q：查询参数。 通常传 <span class="literal">nil</span></span><br><span class="line"><span class="comment">// 返回值：</span></span><br><span class="line">ServiceEntry： 存储服务的切片。</span><br><span class="line">QueryMeta：额外查询返回值。 <span class="literal">nil</span></span><br><span class="line">error： 错误信息</span><br></pre></td></tr></table></figure></li>
<li><p>proto文件</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> pb;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">int32</span> age = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加 rpc服务</span></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">hello</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> sayHello (Person) <span class="keyword">returns</span> (Person)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>  protoc –go_out=plugins=grpc:./ *.proto</p>
</li>
<li><p>服务端</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">    <span class="string">&quot;day02/pb&quot;</span></span><br><span class="line">    <span class="string">&quot;context&quot;</span></span><br><span class="line">    <span class="string">&quot;net&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/hashicorp/consul/api&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义类</span></span><br><span class="line"><span class="keyword">type</span> Children <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定类方法, 实现借口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Children)</span><span class="title">SayHello</span><span class="params">(ctx context.Context, p *pb.Person)</span> <span class="params">(*pb.Person, error)</span></span> &#123;</span><br><span class="line">    p.Name = <span class="string">&quot;hello  &quot;</span> + p.Name</span><br><span class="line">    <span class="keyword">return</span> p, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">    <span class="comment">// 把grpc服务,注册到consul上.</span></span><br><span class="line">    <span class="comment">// 1. 初始化 consul 配置</span></span><br><span class="line">    consulConfig := api.DefaultConfig()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 创建 consul 对象</span></span><br><span class="line">    consulClient, err := api.NewClient(consulConfig)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;api.NewClient err:&quot;</span>, err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 3. 告诉consul, 即将注册的服务的配置信息</span></span><br><span class="line">    reg := api.AgentServiceRegistration &#123;</span><br><span class="line">        ID:<span class="string">&quot;bj38&quot;</span>,</span><br><span class="line">        Tags:[]<span class="keyword">string</span>&#123;<span class="string">&quot;grcp&quot;</span>, <span class="string">&quot;consul&quot;</span>&#125;,</span><br><span class="line">        Name:<span class="string">&quot;grpc And Consul&quot;</span>,</span><br><span class="line">        Address:<span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">        Port:<span class="number">8800</span>,</span><br><span class="line">        Check:&amp;api.AgentServiceCheck&#123;</span><br><span class="line">            CheckID:<span class="string">&quot;consul grpc test&quot;</span>,</span><br><span class="line">            TCP:<span class="string">&quot;127.0.0.1:8800&quot;</span>,</span><br><span class="line">            Timeout:<span class="string">&quot;1s&quot;</span>,</span><br><span class="line">            Interval:<span class="string">&quot;5s&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. 注册 grpc 服务到 consul 上</span></span><br><span class="line">    consulClient.Agent().ServiceRegister(&amp;reg)</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////以下为 grpc 服务远程调用////////////////////////</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.初始化 grpc 对象,</span></span><br><span class="line">    grpcServer := grpc.NewServer()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.注册服务</span></span><br><span class="line">    pb.RegisterHelloServer(grpcServer, <span class="built_in">new</span>(Children))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.设置监听, 指定 IP/port</span></span><br><span class="line">    listener, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;127.0.0.1:8800&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;Listen err:&quot;</span>, err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> listener.Close()</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;服务启动... &quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4. 启动服务</span></span><br><span class="line">    grpcServer.Serve(listener)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>客户端</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line">    <span class="string">&quot;day02/pb&quot;</span></span><br><span class="line">    <span class="string">&quot;context&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/hashicorp/consul/api&quot;</span></span><br><span class="line">    <span class="string">&quot;strconv&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">    <span class="comment">// 初始化 consul 配置</span></span><br><span class="line">    consulConfig := api.DefaultConfig()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建consul对象 -- (可以重新指定 consul 属性: IP/Port , 也可以使用默认)</span></span><br><span class="line">    consulClient, err := api.NewClient(consulConfig)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 服务发现. 从consuL上, 获取健康的服务</span></span><br><span class="line">    services, _, err := consulClient.Health().Service(<span class="string">&quot;grpc And Consul&quot;</span>, <span class="string">&quot;grcp&quot;</span>, <span class="literal">true</span>, <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 简单的负载均衡.</span></span><br><span class="line"></span><br><span class="line">    addr := services[<span class="number">0</span>].Service.Address + <span class="string">&quot;:&quot;</span> + strconv.Itoa(services[<span class="number">0</span>].Service.Port)</span><br><span class="line"></span><br><span class="line"><span class="comment">//////////////////////以下为 grpc 服务远程调用///////////////////////////</span></span><br><span class="line">    <span class="comment">// 1. 链接服务</span></span><br><span class="line">    <span class="comment">//grpcConn, _ := grpc.Dial(&quot;127.0.0.1:8800&quot;, grpc.WithInsecure())</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 服务发现consul 上的 IP/port 来与服务建立链接</span></span><br><span class="line">    grpcConn, _ := grpc.Dial(addr, grpc.WithInsecure())</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 初始化 grpc 客户端</span></span><br><span class="line">    grpcClient := pb.NewHelloClient(grpcConn)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> person pb.Person</span><br><span class="line">    person.Name = <span class="string">&quot;Andy&quot;</span></span><br><span class="line">    person.Age = <span class="number">18</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 调用远程函数</span></span><br><span class="line">    p, err := grpcClient.SayHello(context.TODO(), &amp;person)</span><br><span class="line"></span><br><span class="line">    fmt.Println(p, err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="服务注销"><a href="#服务注销" class="headerlink" title="服务注销"></a>服务注销</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/hashicorp/consul/api&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">    <span class="comment">// 1. 初始化 consul 配置</span></span><br><span class="line">    consuConfig := api.DefaultConfig()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 创建 consul 对象</span></span><br><span class="line">    consulClient, _ := api.NewClient(consuConfig)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 注销服务</span></span><br><span class="line">    consulClient.Agent().ServiceDeregister(<span class="string">&quot;bj38&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="go-micro-安装"><a href="#go-micro-安装" class="headerlink" title="go-micro 安装"></a>go-micro 安装</h2><ul>
<li>在线安装：  参考讲义。</li>
<li>docker 镜像安装： 参考讲义。</li>
<li>测试：micro 命令！</li>
</ul>
<h2 id="go-micro-的使用"><a href="#go-micro-的使用" class="headerlink" title="go-micro 的使用"></a>go-micro 的使用</h2><h3 id="new命令"><a href="#new命令" class="headerlink" title="new命令"></a>new命令</h3><ul>
<li>参数：<ul>
<li>–namespace： 命名空间  == 包名</li>
<li>–type ： 微服务类型。<ul>
<li>srv： 微服务</li>
<li>web：基于微服务的 web 网站。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h3><ul>
<li>==micro new –type srv bj38  —— 创建一个微服务项目!==</li>
</ul>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E7%AC%AC2%E5%A4%A9.assets/1581755524432.png" alt="1581755524432"></p>
<ul>
<li>main.go : 项目的入口文件。</li>
<li>handler/:  处理 grpc 实现的接口。对应实现接口的子类，都放置在 handler 中。</li>
<li>proto/： 预生成的 protobuf 文件。</li>
<li>Dockerfile：部署微服务使用的 Dockerfile</li>
<li>Makefile：编译文件。—— 快速编译 protobuf 文件。 </li>
</ul>
<h4 id="查看创建的项目"><a href="#查看创建的项目" class="headerlink" title="查看创建的项目"></a>查看创建的项目</h4><ol>
<li><p>makefile 编译 proto </p>
</li>
<li><p>查看 make proto生 成 的 文件：</p>
<ol>
<li>xxx.pb.go</li>
<li>xxx.micro.go<ul>
<li>RegisterBj38Handler()【168行】服务端用 ———— 对应 grpc  RegisterXXXService() </li>
<li>NewBj38Service()【47行】客户端用 —— 对应 grpc NewXXXClient() —— 对应自己封装的 IintXXX</li>
</ul>
</li>
</ol>
</li>
<li><p>查看 main.go</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// New Service   -- 初始化服务器对象.</span></span><br><span class="line">    service := micro.NewService(</span><br><span class="line">        micro.Name(<span class="string">&quot;go.micro.srv.bj38&quot;</span>),   <span class="comment">// 服务器名</span></span><br><span class="line">        micro.Version(<span class="string">&quot;latest&quot;</span>),           <span class="comment">// 版本</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment">// Initialise service 与newService作用一致,但优先级高.后续代码运行期,初始化才有使用的必要.</span></span><br><span class="line">    <span class="comment">//service.Init()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Register Handler --- 注册服务</span></span><br><span class="line">    bj38.RegisterBj38Handler(service.Server(), <span class="built_in">new</span>(handler.Bj38))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Register Struct as Subscriber -- redis 发布订阅.</span></span><br><span class="line">    <span class="comment">//micro.RegisterSubscriber(&quot;go.micro.srv.bj38&quot;, service.Server(), new(subscriber.Bj38))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Register Function as Subscriber</span></span><br><span class="line">    <span class="comment">//micro.RegisterSubscriber(&quot;go.micro.srv.bj38&quot;, service.Server(), subscriber.Handler)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Run service  --- 运行服务</span></span><br><span class="line">    <span class="keyword">if</span> err := service.Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>查看 handler/ xxx.go 文件</p>
<p> 包含 与 Interface 严格对应的 3 个函数实现！！</p>
</li>
</ol>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务学习--04开发者平台与redis</title>
    <url>/2020/01/04/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/04%E5%BC%80%E5%8F%91%E8%80%85%E5%B9%B3%E5%8F%B0%E4%B8%8Eredis/</url>
    <content><![CDATA[<h1 id="图片验证码"><a href="#图片验证码" class="headerlink" title="图片验证码"></a>图片验证码</h1><h2 id="获取-注册页面-图片验证码ID"><a href="#获取-注册页面-图片验证码ID" class="headerlink" title="获取 注册页面 图片验证码ID"></a>获取 注册页面 图片验证码ID</h2><ol>
<li><p> 启动 web页面，点击“注册” 按钮。在 NetWork —— Headers 中 看到 错误信息！</p>
</li>
<li><p>从 URL中，提取 图片验证码ID 。 保存 成 uuid</p>
</li>
<li><p>查看 gin 框架 中文文档。—— “获取路径中的参数”</p>
</li>
<li><p>web/main.go 中 添加 路由匹配：</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">router.GET(<span class="string">&quot;/api/v1.0/imagecode/:uuid&quot;</span>, controller.GetImageCd)</span><br></pre></td></tr></table></figure></li>
<li><p>web/controller/user.go 中 ，实现回调：</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取图片信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetImageCd</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">	uuid := ctx.Param(<span class="string">&quot;uuid&quot;</span>)</span><br><span class="line">	fmt.Println(<span class="string">&quot;uuid = &quot;</span>, uuid)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<span id="more"></span>

<h2 id="图片验证码获取"><a href="#图片验证码获取" class="headerlink" title="图片验证码获取"></a>图片验证码获取</h2><ul>
<li>去 github 中搜索 “captcha” 关键词。 过滤 Go语言。 ——  <a href="https://github.com/afocus/captcha">afocus/<em>captcha</em></a></li>
</ul>
<ul>
<li><p>使用 go get github.com/afocus/captcha 下载源码包。</p>
</li>
<li><p>参照 github 中的示例代码，测试生成 图片验证码：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;github.com/afocus/captcha&quot;</span>   <span class="comment">// 按住 Ctrl ，鼠标左键点击 captcha 看到 examples， 从中可以提取到 “comic.ttf”</span></span><br><span class="line">	<span class="string">&quot;image/color&quot;</span></span><br><span class="line">	<span class="string">&quot;image/png&quot;</span></span><br><span class="line">	<span class="string">&quot;net/http&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	<span class="comment">// 初始化对象</span></span><br><span class="line">	<span class="built_in">cap</span> := captcha.New()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置字体</span></span><br><span class="line">	<span class="built_in">cap</span>.SetFont(<span class="string">&quot;comic.ttf&quot;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置验证码大小</span></span><br><span class="line">	<span class="built_in">cap</span>.SetSize(<span class="number">128</span>, <span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置干扰强度</span></span><br><span class="line">	<span class="built_in">cap</span>.SetDisturbance(captcha.MEDIUM)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置前景色</span></span><br><span class="line">	<span class="built_in">cap</span>.SetFrontColor(color.RGBA&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">255</span>&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置背景色</span></span><br><span class="line">	<span class="built_in">cap</span>.SetBkgColor(color.RGBA&#123;<span class="number">100</span>,<span class="number">0</span>,<span class="number">255</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">255</span>,<span class="number">0</span>,<span class="number">127</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">255</span>,<span class="number">255</span>,<span class="number">10</span>, <span class="number">255</span>&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成字体 -- 将图片验证码, 展示到页面中.</span></span><br><span class="line">	http.HandleFunc(<span class="string">&quot;/r&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">		img, str := <span class="built_in">cap</span>.Create(<span class="number">4</span>, captcha.NUM)</span><br><span class="line">		png.Encode(w, img)</span><br><span class="line"></span><br><span class="line">		<span class="built_in">println</span>(str)</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 或者 自定固定的数据,来做图片内容.</span></span><br><span class="line">	http.HandleFunc(<span class="string">&quot;/c&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">		str := <span class="string">&quot;itcast&quot;</span></span><br><span class="line">		img := <span class="built_in">cap</span>.CreateCustom(str)</span><br><span class="line">		png.Encode(w, img)</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 启动服务</span></span><br><span class="line">	http.ListenAndServe(<span class="string">&quot;:8086&quot;</span>, <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="图片验证码模块集成到web"><a href="#图片验证码模块集成到web" class="headerlink" title="图片验证码模块集成到web"></a>图片验证码模块集成到web</h2><ol>
<li>将 ImgTest.go 中的测试代码， 粘贴到 web/controller/user.go 中的 GetImageCd() 函数</li>
<li> 导入需要的包。 将 “comic.ttf” 文件 存放到 web/conf/ 中。 对应修改访问代码。</li>
<li>浏览器中，“注册” 页面测试！</li>
</ol>
<h2 id="微服务实现-图片验证码"><a href="#微服务实现-图片验证码" class="headerlink" title="微服务实现 图片验证码"></a>微服务实现 图片验证码</h2><ol>
<li><p>创建 微服务项目：  <code>micro new --type srv bj38web/service/getCaptcha</code></p>
<p> ​    创建完成，会在项目 bj38web 的 service/ 中，多出 getCaptcha 的微服务项目。</p>
</li>
<li><p>修改密码本 —— getCaptcha/proto/getCaptcha.proto</p>
 <figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> go.micro.srv.getCaptcha;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">GetCaptcha</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">rpc</span> Call(Request) <span class="keyword">returns</span> (Response) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">	<span class="comment">// 使用切片存储图片信息, 用 json 序列化</span></span><br><span class="line">	<span class="built_in">bytes</span> img = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>编译 proto 文件。 —— make 命令！得到 getCaptcha.micro.go  和 getCaptcha.pb.go</p>
</li>
<li><p>修改 service/getCaptcha/main.go </p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;github.com/micro/go-micro/util/log&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/micro/go-micro&quot;</span></span><br><span class="line">	<span class="string">&quot;bj38web/service/getCaptcha/handler&quot;</span></span><br><span class="line"></span><br><span class="line">	getCaptcha <span class="string">&quot;bj38web/service/getCaptcha/proto/getCaptcha&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// New Service</span></span><br><span class="line">	service := micro.NewService(</span><br><span class="line">		micro.Name(<span class="string">&quot;go.micro.srv.getCaptcha&quot;</span>),</span><br><span class="line">		micro.Version(<span class="string">&quot;latest&quot;</span>),</span><br><span class="line">	)</span><br><span class="line">	<span class="comment">// Register Handler</span></span><br><span class="line">	getCaptcha.RegisterGetCaptchaHandler(service.Server(), <span class="built_in">new</span>(handler.GetCaptcha))</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Run service</span></span><br><span class="line">	<span class="keyword">if</span> err := service.Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>修改服务发现 ： mdns ——&gt; consul</p>
<ol>
<li><p> 初始化consul</p>
</li>
<li><p>添加 consul 到  micro.NewSerive( )</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">consulReg := consul.NewRegistry()</span><br><span class="line"></span><br><span class="line"><span class="comment">// New Service</span></span><br><span class="line">service := micro.NewService(</span><br><span class="line">    micro.Address(<span class="string">&quot;192.168.6.108:12341&quot;</span>),  <span class="comment">// 防止随机生成 port </span></span><br><span class="line">    micro.Name(<span class="string">&quot;go.micro.srv.getCaptcha&quot;</span>),</span><br><span class="line">    micro.Registry(consulReg),				<span class="comment">// 添加注册</span></span><br><span class="line">    micro.Version(<span class="string">&quot;latest&quot;</span>),</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
<li><p>启动 consul ， consul agent -dev </p>
</li>
</ol>
</li>
<li><p>修改 handler/getCaptcha.go 文件。</p>
<ol>
<li><p> 删除  除  Call 以外的 其他 所有函数。—— 受 .proto 文件制约。</p>
</li>
<li><p> 清空 Call 方法。准备添加具体实现代码。</p>
</li>
<li><p> 将 之前实现的图片验证码测试模块代码， 剪切到 Call方法中。</p>
</li>
<li><p> 在 getCaptcha/ 下 ， 添加 conf/comic.ttf </p>
</li>
<li><p>将 生成的图片验证码，写成 json 序列化数据， 通过 rsp 参数传出！</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *GetCaptcha)</span> <span class="title">Call</span><span class="params">(ctx context.Context, req *getCaptcha.Request, rsp *getCaptcha.Response)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="comment">// 生成图片验证码</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 初始化对象</span></span><br><span class="line">	<span class="built_in">cap</span> := captcha.New()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置字体</span></span><br><span class="line">	<span class="built_in">cap</span>.SetFont(<span class="string">&quot;./conf/comic.ttf&quot;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置验证码大小</span></span><br><span class="line">	<span class="built_in">cap</span>.SetSize(<span class="number">128</span>, <span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置干扰强度</span></span><br><span class="line">	<span class="built_in">cap</span>.SetDisturbance(captcha.NORMAL)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置前景色</span></span><br><span class="line">	<span class="built_in">cap</span>.SetFrontColor(color.RGBA&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>, <span class="number">255</span>&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 设置背景色</span></span><br><span class="line">	<span class="built_in">cap</span>.SetBkgColor(color.RGBA&#123;<span class="number">100</span>,<span class="number">0</span>,<span class="number">255</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">255</span>,<span class="number">0</span>,<span class="number">127</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">255</span>,<span class="number">255</span>,<span class="number">10</span>, <span class="number">255</span>&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 生成字体</span></span><br><span class="line">	img, _ := <span class="built_in">cap</span>.Create(<span class="number">4</span>, captcha.NUM)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 将 生成成的图片 序列化.</span></span><br><span class="line">	imgBuf, _ := json.Marshal(img)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 将 imgBuf 使用 参数 rsp 传出</span></span><br><span class="line">	rsp.Img = imgBuf</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
</li>
</ol>
<h2 id="web端对接微服务实现"><a href="#web端对接微服务实现" class="headerlink" title="web端对接微服务实现"></a>web端对接微服务实现</h2><ol>
<li><p> 拷贝密码本。 将 service 下的 proto/  拷贝 web/   下</p>
</li>
<li><p>在 GetImageCd() 中 导入包，起别名：</p>
<p> <code>getCaptcha &quot;bj38web/web/proto/getCaptcha&quot; </code></p>
</li>
<li><p>指定consul 服务发现：</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 指定 consul 服务发现</span></span><br><span class="line">consulReg := consul.NewRegistry()</span><br><span class="line"></span><br><span class="line">consulService := micro.NewService(</span><br><span class="line">    micro.Registry(consulReg),</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
<li><p>初始化客户端</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">microClient := getCaptcha.NewGetCaptchaService(<span class="string">&quot;getCaptcha&quot;</span>, consulService.Client())</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>调用远程函数</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">resp, err := microClient.Call(context.TODO(), &amp;getCaptcha.Request&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;未找到远程服务...&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>将得到的数据,反序列化,得到图片数据</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> img captcha.Image</span><br><span class="line">json.Unmarshal(resp.Img, &amp;img)</span><br></pre></td></tr></table></figure></li>
<li><p>将图片写出到 浏览器.</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">png.Encode(ctx.Writer, img)</span><br></pre></td></tr></table></figure></li>
<li><p>测试：</p>
<ol>
<li>启动 consul  ，  consul agent -dev</li>
<li>启动 service/  下的  main.go</li>
<li>启动 web/ 下的  main.go</li>
<li>浏览器中 192.168.IP: port/home    点击注册 查看图片验证码！</li>
</ol>
</li>
</ol>
<h2 id="连接形式"><a href="#连接形式" class="headerlink" title="连接形式"></a>连接形式</h2><ul>
<li>长连接：<ul>
<li>TCP。—— 有状态！</li>
</ul>
</li>
<li>短连接：<ul>
<li>http。—— 无状态！断开后，再发送请求，与上次发送无关！<ul>
<li>选用带有 “时效性” 的介质，存储。 —— redis数据库。setex — expire。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="Redis-数据库"><a href="#Redis-数据库" class="headerlink" title="Redis 数据库"></a>Redis 数据库</h1><h2 id="Redis-基本使用"><a href="#Redis-基本使用" class="headerlink" title="Redis 基本使用"></a>Redis 基本使用</h2><ol>
<li>修改 配置文件。 /etc/redis/redis.conf . <ul>
<li>bind 地址。修改成当前主机地址。 —— 192.168.6.108 </li>
</ul>
</li>
<li>port：<ul>
<li>6379</li>
</ul>
</li>
<li>开启 redis：<ul>
<li>sudo  redis-server  /etc/redis/redis.conf</li>
<li>验证 ： ps xua | grep redis  —— iP 和 port</li>
</ul>
</li>
<li>连接 redis ：<ul>
<li>redis-cli -h 192.168.6.108 -p 6379</li>
</ul>
</li>
<li>查看所有：<ul>
<li>keys *</li>
</ul>
</li>
<li>删除所有：<ul>
<li>flushall</li>
</ul>
</li>
<li>添加一条：<ul>
<li>set key  value  ——   set  hello  world</li>
</ul>
</li>
<li>获取一条：<ul>
<li>get key </li>
</ul>
</li>
</ol>
<h2 id="go语言操作-Redis"><a href="#go语言操作-Redis" class="headerlink" title="go语言操作 Redis"></a>go语言操作 Redis</h2><ul>
<li><p>从 redis.cn —— 客户端 —— go语言 —— 选择 redigo —— <a href="https://godoc.org/github.com/gomodule/redigo/redis#pkg-examples">https://godoc.org/github.com/gomodule/redigo/redis#pkg-examples</a>  查看 API</p>
</li>
<li><p>主要分为 3 类：</p>
<ol>
<li>连接数据库。   <ul>
<li>API文档中，所有以 Dial 开头。</li>
</ul>
</li>
<li>操作数据库。   <ul>
<li>Do() 函数【推荐】;  Send()函数, 需要配合Flush()、Receive() 3 个函数使用。</li>
</ul>
</li>
<li>回复助手。   <ul>
<li>相当于 “类型断言”。根据使用的具体数据类型，选择调用。</li>
</ul>
</li>
</ol>
</li>
<li><p>添加测试案例：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;github.com/gomodule/redigo/redis&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	<span class="comment">// 1. 链接数据库</span></span><br><span class="line">	conn, err := redis.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;192.168.6.108:6379&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;redis Dial err:&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 2. 操作数据库</span></span><br><span class="line">	reply, err := conn.Do(<span class="string">&quot;set&quot;</span>, <span class="string">&quot;itcast&quot;</span>, <span class="string">&quot;itheima&quot;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 3. 回复助手类函数. ---- 确定成具体的数据类型</span></span><br><span class="line">	r, e := redis.String(reply, err)</span><br><span class="line"></span><br><span class="line">	fmt.Println(r, e)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="redis-存储-图片验证码的uuid-和-码值"><a href="#redis-存储-图片验证码的uuid-和-码值" class="headerlink" title="redis 存储 图片验证码的uuid 和 码值"></a>redis 存储 图片验证码的uuid 和 码值</h2><ul>
<li><p>微服务端</p>
<ol>
<li><p>修改 service/proto 中 getCaptcha.proto 的 Request 消息体，填加 uuid 成员。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">message Request &#123;</span><br><span class="line">	<span class="keyword">string</span> uuid = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p> 使用 make 命令，重新生成 getCaptcha.proto 对应的文件。</p>
</li>
<li><p> 遵循 MVC 代码组织架构，在 service/getCaptcha/ 中 创建 model 目录</p>
</li>
<li><p>创建 modelFunc.go 文件 封装并实现 SaveImgCode() 函数：</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 存储图片id 到redis 数据库</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SaveImgCode</span><span class="params">(code, uuid <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="comment">// 1. 链接数据库</span></span><br><span class="line">	conn, err := redis.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;192.168.6.108:6379&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;redis Dial err:&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 2. 写数据库  --- 有效时间 5 分钟</span></span><br><span class="line">	_, err = conn.Do(<span class="string">&quot;setex&quot;</span>, uuid, <span class="number">60</span>*<span class="number">5</span>, code)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> err  <span class="comment">// 不需要回复助手!</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>在 getCaptcha.go 文件的 Call() 方法中， cap.Create() 后， 调用 SaveImgCode() 传参。</p>
</li>
</ol>
</li>
<li><p>web端</p>
<ol>
<li><p> 修改密码本！因为 微服务端 修改了 proto/  , 添加消息体成员。 需要重新拷贝 proto/ 到web</p>
</li>
<li><p>  修改 web/controller/user.go 中 Call() 方法传参。给 Request{} 初始化。</p>
</li>
</ol>
<pre><code>  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">resp, err := microClient.Call(context.TODO(), &amp;getCaptcha.Request&#123;Uuid:uuid&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;未找到远程服务...&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</code></pre>
<ol start="3">
<li>测试验证：<ol>
<li>确认 consul 已经启动 </li>
<li>启动 service/    main.go </li>
<li>启动 web/   main.go</li>
<li>浏览器：192.168.6.108:8080/home  — 点击“注册”。看到 图片验证码。</li>
<li>查看 redis 数据库， keys * 能看到 图片验证吗，对应 uuid。 校验！！</li>
</ol>
</li>
</ol>
</li>
</ul>
<h1 id="开发者平台"><a href="#开发者平台" class="headerlink" title="开发者平台"></a>开发者平台</h1><ul>
<li><p>中国移动 —— 短信验证码 业务 —— 下放到各个大公司（资质）。</p>
</li>
<li><p>常用平台：</p>
<ol>
<li>聚合数据：</li>
<li>京东万象：</li>
<li>腾讯云：</li>
<li>阿里云（推荐）： 推荐，服务器。—— 生态好！ API接口丰富。 对应开发友好度高！</li>
</ol>
</li>
<li><p>资料搜索。</p>
<ul>
<li>免费：—— github </li>
<li>收费：—— 各种开发者平台。刁钻、生僻领域。</li>
<li>最后Google。</li>
</ul>
</li>
</ul>
<h2 id="注册阿里云账号"><a href="#注册阿里云账号" class="headerlink" title="注册阿里云账号"></a>注册阿里云账号</h2><ol>
<li>通过实名认证</li>
<li>开通短信验证码功能 —— 充值 2 元左右。</li>
<li>申请 AccessKey</li>
<li>申请签名。国内消息 —— 签名管理</li>
<li>申请模板。国内消息 —— 模板管理</li>
<li>测试使用  OpenAPI Explorer， 成功发送一条短信验证码！</li>
</ol>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务学习--03go-Micro 框架</title>
    <url>/2020/01/04/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/03go-Micro%20%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<h1 id="go-Micro-框架"><a href="#go-Micro-框架" class="headerlink" title="go-Micro 框架"></a>go-Micro 框架</h1><h2 id="创建-micro-服务"><a href="#创建-micro-服务" class="headerlink" title="创建 micro 服务"></a>创建 micro 服务</h2><p>命令：micro new –type srv test66</p>
<p>框架默认自带服务发现：mdns。</p>
<span id="more"></span>

<p>使用consul服务发现：</p>
<pre><code>1. 初始consul服务发现： consulReg := consul.NewRegistry()
2. 在 NewService 中 添加 服务。 micro.Registry(consulReg )，
</code></pre>
<h2 id="使用-go-micro框架-创建-客户端"><a href="#使用-go-micro框架-创建-客户端" class="headerlink" title="使用 go-micro框架 创建 客户端"></a>使用 go-micro框架 创建 客户端</h2><p>命令：micro new –type web test77</p>
<h3 id="补充-http-相关知识："><a href="#补充-http-相关知识：" class="headerlink" title="补充 http 相关知识："></a>补充 http 相关知识：</h3><ul>
<li>路由器：资源分发</li>
<li>路由：请求分发。<ul>
<li>service.HandleFunc(“/test77/call”, handler.Test77Call)<ul>
<li>将 /test77/call 这个请求，通过 回到函数 Test77Call() 处理。</li>
</ul>
</li>
</ul>
</li>
<li>URL：<ul>
<li>组成：<a href="https://ip+port/%E8%B5%84%E6%BA%90%E8%B7%AF%E5%BE%84">https://ip+port/资源路径</a><ul>
<li><a href="https://ip+port/">https://ip+port/</a>   找到 pc机，找到 对应进程</li>
<li>资源路径：在代码中，称之为路由。</li>
</ul>
</li>
<li>“/ ” : 代表 主机上进程 对应的默认资源。<ul>
<li>http协议，自动找当前目录下的 index.html 文件，做默认页面。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="go-micro-框架-测试使用-分析图"><a href="#go-micro-框架-测试使用-分析图" class="headerlink" title="go-micro 框架 测试使用 分析图"></a>go-micro 框架 测试使用 分析图</h3><p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-03.assets/1581907970023.png" alt="1581907970023"></p>
<h1 id="gin-框架"><a href="#gin-框架" class="headerlink" title="gin 框架"></a>gin 框架</h1><p>go常见的web框架：gin、beego、echo、Iris 。。。</p>
<h3 id="实现简单的-web"><a href="#实现简单的-web" class="headerlink" title="实现简单的 web"></a>实现简单的 web</h3><p>http 常用方法与 数据库访问 一一对应。</p>
<ul>
<li>GET —— 查 —— 获取数据</li>
<li>Post —— 增 —— 增加数据</li>
<li>Put —— 改 —— 更新数据</li>
<li>Delete —— 删 —— 删除数据</li>
</ul>
<p>​    </p>
<h3 id="使用-gin-框架创建最简单的web"><a href="#使用-gin-框架创建最简单的web" class="headerlink" title="使用 gin 框架创建最简单的web"></a>使用 gin 框架创建最简单的web</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">    <span class="comment">// 1. 初始化路由 -- 官网:初始化 web 引擎</span></span><br><span class="line">    router := gin.Default()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 做路由匹配</span></span><br><span class="line">    router.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">        context.Writer.WriteString(<span class="string">&quot;hello world!&quot;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 启动运行</span></span><br><span class="line">    router.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="gin-框架的客户端-与-微服务-对接"><a href="#gin-框架的客户端-与-微服务-对接" class="headerlink" title="gin 框架的客户端 与 微服务 对接"></a>gin 框架的客户端 与 微服务 对接</h3><ol>
<li><p>封装回调函数， 给 router.Get() 设置</p>
</li>
<li><p>拷贝 微服务的 “ 密码本” protobuf 到  web 中</p>
</li>
<li><p>修改 protobuf文件的 包名。  test66别名  “test66web/proto/test66”</p>
</li>
<li><p>实现 回调函数：</p>
<ol>
<li><p>初始化客户端。    microClient := NewTeset66Sevice(服务名，client.DefaultClient)</p>
</li>
<li><p>调用远程服务。    resp, err := microClient.Call(context.TODO, &amp;test66.Request{</p>
<p> ​                               })</p>
</li>
<li><p>将 返回的 数据， 显示到 浏览器。 context.Writer.WriteString(resp.Msg);</p>
</li>
</ol>
</li>
</ol>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    test66 <span class="string">&quot;test66web/proto/test66&quot;</span>     <span class="comment">// test66 为包的别名.</span></span><br><span class="line">    <span class="string">&quot;github.com/micro/go-micro/client&quot;</span></span><br><span class="line">    <span class="string">&quot;context&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CallRemote</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">    <span class="comment">// 1. 初始化客户端</span></span><br><span class="line">    microClient := test66.NewTest66Service(<span class="string">&quot;go.micro.srv.test66&quot;</span>, client.DefaultClient)</span><br><span class="line">    fmt.Println()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 调用远程服务</span></span><br><span class="line">    resp, err := microClient.Call(context.TODO(), &amp;test66.Request&#123;</span><br><span class="line">        Name:<span class="string">&quot;xiaowang&quot;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;call err:&quot;</span>, err)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 为了方便查看, 在打印之前将结果返回给浏览器</span></span><br><span class="line">    ctx.Writer.WriteString(resp.Msg)</span><br><span class="line"></span><br><span class="line">    fmt.Println(resp, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">    <span class="comment">// 1. 初始化路由 -- 官网:初始化 web 引擎</span></span><br><span class="line">    router := gin.Default()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2. 做路由匹配</span></span><br><span class="line">    router.GET(<span class="string">&quot;/&quot;</span>, CallRemote)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3. 启动运行</span></span><br><span class="line">    router.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-03.assets/1581911529452.png" alt="1581911529452"></p>
<h3 id="指定-consul-服务发现到-go-micro-服务和-gin-框架客户端中"><a href="#指定-consul-服务发现到-go-micro-服务和-gin-框架客户端中" class="headerlink" title="指定 consul 服务发现到 go-micro 服务和 gin 框架客户端中"></a>指定 consul 服务发现到 go-micro 服务和 gin 框架客户端中</h3><ul>
<li>mdns服务发现: （组播）支持的服务，必须是本地服务， 局域网内的服务。</li>
</ul>
<h4 id="修改-go-micro-微服务"><a href="#修改-go-micro-微服务" class="headerlink" title="修改 go-micro 微服务"></a>修改 go-micro 微服务</h4><ol>
<li><p>consulReg := consul.NewRegistry()   初始化 consul服务发现</p>
</li>
<li><p>添加 服务 service := micro.NewService(</p>
<pre><code>     micro.Name(&quot;go.micro.srv.test66&quot;),
         micro.Registry(consulReg),
         micro.Version(&quot;latest&quot;),
     )
</code></pre>
</li>
<li><p>在命令行，执行 consul agent -dev</p>
</li>
</ol>
<h4 id="修改-gin-框架-web服务-客户端"><a href="#修改-gin-框架-web服务-客户端" class="headerlink" title="修改 gin 框架 web服务 (客户端)"></a>修改 gin 框架 web服务 (客户端)</h4><ol>
<li>consulReg := consul.NewRegistry()   初始化 consul服务发现</li>
<li>microClinet := micro.NewService( micro.Registry(consulReg ) )</li>
<li>test66.NewTest66Service(“服务名”，microClinet.Client() )</li>
</ol>
<p>测试：浏览器键入： 192.168.6.108:8080  ——&gt; hello xiaowang </p>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-03.assets/1581922279521.png" alt="1581922279521"></p>
<h1 id="REST"><a href="#REST" class="headerlink" title="REST"></a>REST</h1><p>REST全称是Representational State Transfer：  表述性 状态 转义</p>
<p>本质：一种代码设计风格。  web开发中常用。——遵循风格！</p>
<p>使用：一般以 http 4 种请求方法， 来确定对某一资源（URI：标识符。名词）的 固定操作。</p>
<ul>
<li>获取数据：GET</li>
<li>添加数据：POST</li>
<li>修改数据：PUT</li>
<li>删除数据：Delete</li>
</ul>
<p>​        满足 REST 设计风格的， 称之为 “RESTful”</p>
<p>​    </p>
<h1 id="MVC"><a href="#MVC" class="headerlink" title="MVC"></a>MVC</h1><ul>
<li>是一种常见的 “代码组织架构”， 可以在开发中，对数据进行处理并解耦。<ul>
<li>model：模型。 处理数据库相关的文件。</li>
<li>veiw：视图。处理显示相关的文件。 网站：html</li>
<li>controller：控制器。处理具体业务！  联动 m 和 v</li>
</ul>
</li>
<li>MVC 与语言无关！是常见的 代码组织架构。</li>
</ul>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-03.assets/1581924280038.png" alt="1581924280038"></p>
<h1 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h1><ol>
<li><p>准备项目环境。</p>
<ol>
<li>创建项目目录  web、service</li>
<li>在 web 端 使用 MVC</li>
<li>创建项目常用目录： conf 配置文件、utils 工具类、bin可执行文件、test测试目录</li>
<li>导入 异常处理error.go</li>
<li>导入前端资源 html/ 到 view/ 中</li>
</ol>
</li>
<li><p>开发项目</p>
<ol>
<li>开发 微服务端</li>
<li>开发 web 服务（客户端）</li>
</ol>
</li>
</ol>
<h3 id="http协议错误"><a href="#http协议错误" class="headerlink" title="http协议错误"></a>http协议错误</h3><p>5 类：</p>
<ol>
<li>1xx       100        请求成功，需要继续发送请求</li>
<li>2xx       200   201  202    请求被成功接收。</li>
<li>3xx       300 301               请求的资源，指定到对应的 URI上</li>
<li>4xx       404  403              请求端错误</li>
<li>5xx       500 501  502      服务端错误</li>
</ol>
<h3 id="网站开发形式："><a href="#网站开发形式：" class="headerlink" title="网站开发形式："></a>网站开发形式：</h3><ol>
<li>前后端不分离<ul>
<li>前端只负责页面创建，不负责加载数据。</li>
<li>后台负责主要业务书写，数据操作、加载。—— 需要后端会 web。 css 、js、h5 </li>
</ul>
</li>
<li>前后端分离<ul>
<li>前端负责页面创建 和 数据的加载。</li>
<li>后端只负责数据处理。  —— 节省时间：服务器优化     1）健壮性 2）并发性。</li>
</ul>
</li>
</ol>
<h1 id="获取-session"><a href="#获取-session" class="headerlink" title="获取 session"></a>获取 session</h1><ol>
<li><p>在 web/main.go 中 ， 跟据 gin 框架 使用static() , 设置访问路径</p>
</li>
<li><p>F12 浏览器中，查看 NetWork 中 Headers 和  Respose。 得到 url</p>
</li>
<li><p>查看 《接口文档.doc》, 获取 url 、错误码、错误处理函数。</p>
</li>
<li><p>在 web/ 下 遵循 MVC 设计模式创建  controller 目录。添加 user.go</p>
</li>
<li><p>根据 《接口文档.doc》实现错误函数。</p>
<ol>
<li>resp[“errno”]</li>
<li>resp[“errmsg”]</li>
<li>ctx.Json(200, resp)  // 将 错误消息，进行序列化。返回给浏览器。</li>
</ol>
</li>
<li><p>url寻址时，都是从 “/‘’ 开始， 产生歧义</p>
<ul>
<li>router.Static(“/”)    — 修改为： router.Static(“/home”)</li>
</ul>
</li>
<li><p>浏览器测试： IP:8080/home </p>
</li>
</ol>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务学习--05验证码</title>
    <url>/2020/01/04/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/05%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    <content><![CDATA[<h1 id="短信验证码"><a href="#短信验证码" class="headerlink" title="短信验证码"></a>短信验证码</h1><h2 id="测试短信验证码"><a href="#测试短信验证码" class="headerlink" title="测试短信验证码"></a>测试短信验证码</h2><ol>
<li><p> 申请 阿里云账号、开通短信验证码功能、申请签名、申请模板、申请 AccessKey</p>
</li>
<li><p> 打开 OpenAPI  Explorer。</p>
</li>
<li><p> 选择 左侧 SendSms</p>
</li>
<li><p> 在中间位置依次填：华东1（杭州）、手机号、签名的名称、模板Code、{”code“:验证码}</p>
</li>
<li><p> 在右侧自动生成代码。 拷贝至，测试.go 程序中</p>
</li>
<li><p> 将 dysmsapi.NewClientWithAccessKey(） 函数的 ：&lt;accessKeyId&gt; 和 &lt;accessSecret&gt; 替换为我们申请到的 AccessKey 对应值。</p>
</li>
<li><p>虚拟机安装的 SDK 版本，比从 OpenAPI  Explorer 工具拿到的代码版本低。需要添加一行代码：</p>
<p> <code>request.Domain = &quot;dysmsapi.aliyuncs.com&quot; </code></p>
</li>
<li><p>运行 测试.go 程序。 —— 成功：在手机上收到 短信验证码。</p>
</li>
</ol>
<span id="more"></span>

<h2 id="将短信验证码集成到项目"><a href="#将短信验证码集成到项目" class="headerlink" title="将短信验证码集成到项目"></a>将短信验证码集成到项目</h2><ol>
<li><p>修改 router 分组。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 在 web/main.<span class="keyword">go</span> 中</span><br><span class="line"><span class="comment">// 添加路由分组</span></span><br><span class="line">r1 := router.Group(<span class="string">&quot;/api/v1.0&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    r1.GET(<span class="string">&quot;/session&quot;</span>, controller.GetSession)</span><br><span class="line">    r1.GET(<span class="string">&quot;/imagecode/:uuid&quot;</span>, controller.GetImageCd)</span><br><span class="line">    r1.GET(<span class="string">&quot;/smscode/:phone&quot;</span>, controller.GetSmscd)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>提取Get请求中的数据</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 在 web/controller/user.<span class="keyword">go</span> 中</span><br><span class="line">GET 请求 URL 格式： http:<span class="comment">//IP:port/资源路径?key=value&amp;key=value&amp;key=value...</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetSmscd</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">	<span class="comment">// 获取短信验证码</span></span><br><span class="line">	phone := ctx.Param(<span class="string">&quot;phone&quot;</span>)</span><br><span class="line">	<span class="comment">// 拆分 GET 请求中 的 URL === 格式: 资源路径?k=v&amp;k=v&amp;k=v</span></span><br><span class="line">	imgCode := ctx.Query(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">	uuid := ctx.Query(<span class="string">&quot;id&quot;</span>)</span><br><span class="line"></span><br><span class="line">	fmt.Println(<span class="string">&quot;---out---:&quot;</span>, phone, imgCode, uuid)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>封装实现 校验图片 验证码</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 依据 MVC 代码架构。 创建 model/modelFunc.<span class="keyword">go</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 校验图片验证码</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CheckImgCode</span><span class="params">(uuid, imgCode <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">	<span class="comment">// 链接 redis</span></span><br><span class="line">	conn, err := redis.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;192.168.6.108:6379&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;redis.Dial err:&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 查询 redis 数据</span></span><br><span class="line">	code, err := redis.String(conn.Do(<span class="string">&quot;get&quot;</span>, uuid))</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;查询错误 err:&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">// 返回校验结果</span></span><br><span class="line">	<span class="keyword">return</span> code == imgCode</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>根据校验结果，发送短信验证码</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">result := model.CheckImgCode(uuid, imgCode)</span><br><span class="line"><span class="keyword">if</span> result &#123;  <span class="comment">// 校验成功</span></span><br><span class="line">    <span class="comment">// 发送短信验证码</span></span><br><span class="line">    response, _ := client.SendSms(request)</span><br><span class="line">    <span class="keyword">if</span> response.IsSuccess() &#123;</span><br><span class="line">        <span class="comment">// 发送短信验证码 成功</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 发送端验证码 失败.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 校验失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>发送短信验证码实现</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">client, _ := dysmsapi.NewClientWithAccessKey(<span class="string">&quot;cn-hangzhou&quot;</span>, <span class="string">&quot;LTAI4FgbQXjf117SX7E75Rmn&quot;</span>, <span class="string">&quot;6icOghQlhjevrTM5PxfiB8nDTxB9z6&quot;</span>)</span><br><span class="line"></span><br><span class="line">request := dysmsapi.CreateSendSmsRequest()</span><br><span class="line">request.Scheme = <span class="string">&quot;https&quot;</span></span><br><span class="line"></span><br><span class="line">request.Domain = <span class="string">&quot;dysmsapi.aliyuncs.com&quot;</span>  <span class="comment">//域名  ---参考讲义补充!</span></span><br><span class="line">request.PhoneNumbers = phone</span><br><span class="line">request.SignName = <span class="string">&quot;爱家租房网&quot;</span></span><br><span class="line">request.TemplateCode = <span class="string">&quot;SMS_183242785&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成一个随机 6 位数, 做验证码</span></span><br><span class="line">rand.Seed(time.Now().UnixNano())		<span class="comment">// 播种随机数种子.</span></span><br><span class="line"><span class="comment">// 生成6位随机数.</span></span><br><span class="line">smsCode := fmt.Sprintf(<span class="string">&quot;%06d&quot;</span>, rand.Int31n(<span class="number">1000000</span>))</span><br><span class="line"></span><br><span class="line">request.TemplateParam = <span class="string">`&#123;&quot;code&quot;:&quot;`</span> + smsCode + <span class="string">`&quot;&#125;`</span></span><br><span class="line"></span><br><span class="line">response, _ := client.SendSms(request)</span><br></pre></td></tr></table></figure>

</li>
<li><p>根据发送结果，给前端反馈消息</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 校验图片验证码 是否正确</span></span><br><span class="line">result := model.CheckImgCode(uuid, imgCode)</span><br><span class="line"><span class="keyword">if</span> result &#123;</span><br><span class="line">    <span class="comment">// 发送短信</span></span><br><span class="line">    .....</span><br><span class="line">    response, _ := client.SendSms(request)</span><br><span class="line">    <span class="keyword">if</span> response.IsSuccess() &#123;</span><br><span class="line">        <span class="comment">// 发送短信验证码 成功</span></span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 发送端验证码 失败.</span></span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SMSERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SMSERR)</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 校验失败, 发送错误信息</span></span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DATAERR</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>测试：</p>
<ol>
<li>启动 consul、启动微服务、启动 web 服务</li>
<li>浏览器 输入 手机号、图片验证码、短信验证码</li>
<li>成功：<ol>
<li>手机会收到短信验证码。 </li>
<li>浏览器的 Network – Response 中 会有 “成功”数据。</li>
<li>redis 数据库中有  图片验证码 对应数据。</li>
</ol>
</li>
</ol>
</li>
</ol>
<h2 id="短信验证码存入-Redis"><a href="#短信验证码存入-Redis" class="headerlink" title="短信验证码存入 Redis"></a>短信验证码存入 Redis</h2><ul>
<li><p>使用 Redis 连接池！</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// redis.Pool ——  Ctrl-B 查看 redis库， 连接池属性</span></span><br><span class="line"><span class="keyword">type</span> Pool <span class="keyword">struct</span> &#123;</span><br><span class="line">	Dial <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="params">(Conn, error)</span>	// 连接数据库使用</span></span><br><span class="line">	。。。。</span><br><span class="line">	MaxIdle <span class="keyword">int</span>		<span class="comment">// 最大空闲数 == 初始化连接数</span></span><br><span class="line">	MaxActive <span class="keyword">int</span>	<span class="comment">// 最大存活数 &gt; MaxIdle</span></span><br><span class="line">	IdleTimeout time.Duration	<span class="comment">// 空闲超时时间。</span></span><br><span class="line">	。。。。</span><br><span class="line">	MaxConnLifetime time.Duration	<span class="comment">// 最大生命周期。</span></span><br><span class="line">	。。。。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>连接池代码实现：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">-- 在 model/modelFunc.<span class="keyword">go</span> 中 创建redis连接池的 初始化函数。</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建全局redis 连接池 句柄</span></span><br><span class="line"><span class="keyword">var</span> RedisPool redis.Pool</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建函数, 初始化Redis连接池</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitRedis</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	RedisPool = redis.Pool&#123;</span><br><span class="line">		MaxIdle:<span class="number">20</span>,</span><br><span class="line">		MaxActive:<span class="number">50</span>,</span><br><span class="line">		MaxConnLifetime:<span class="number">60</span> * <span class="number">5</span>,</span><br><span class="line">		IdleTimeout:<span class="number">60</span>,</span><br><span class="line">		Dial: <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="params">(redis.Conn, error)</span></span> &#123;</span><br><span class="line">			<span class="keyword">return</span> redis.Dial(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;192.168.6.108:6379&quot;</span>)</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">---在 web/main.<span class="keyword">go</span> 中，使用该 InitRedis() , 在项目启动时，自动初始化连接池！</span><br></pre></td></tr></table></figure></li>
<li><p>修改了 CheckImgCode() , 使用连接池。</p>
</li>
<li><p>实现 SaveSmsCode() 函数，将数据存入 redis</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 链接 Redis --- 从链接池中获取一条链接</span></span><br><span class="line">conn := RedisPool.Get()</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储短信验证码到 redis 中</span></span><br><span class="line">_, err := conn.Do(<span class="string">&quot;setex&quot;</span>, phone+<span class="string">&quot;_code&quot;</span>, <span class="number">60</span> * <span class="number">3</span>, code)</span><br></pre></td></tr></table></figure>

</li>
<li><p>在 GetSmscd() 函数中，在 短信验证码发送成功之后：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">response, _ := client.SendSms(request)</span><br><span class="line"><span class="keyword">if</span> response.IsSuccess() &#123;</span><br><span class="line">    <span class="comment">// 发送短信验证码 成功</span></span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将 电话号:短信验证码 ,存入到 Redis 数据库</span></span><br><span class="line">    err := model.SaveSmsCode(phone, smsCode)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;存储短信验证码到redis失败:&quot;</span>, err)</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DBERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 发送端验证码 失败.</span></span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SMSERR</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SMSERR)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>测试：</p>
<ul>
<li>保证 consul、service的 main.go  web的main.go 、redis服务  启动。</li>
<li>浏览器 —— 注册 —— 获取短信验证码</li>
<li>成功：<ul>
<li>手机收到 验证码</li>
<li>Network —— Respose —— “成功”</li>
<li>打开 redis 数据库。 多 “手机号_code” 为 key 值的 一条数据。<ul>
<li>get “手机号_code”  取值 == 手机收到 验证码</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="短信验证码-分离成微服务"><a href="#短信验证码-分离成微服务" class="headerlink" title="短信验证码 分离成微服务"></a>短信验证码 分离成微服务</h2><ol>
<li><p>创建 微服务。 将 “登录”、“短信验证”、“注册” 使用 user 微服务 实现。</p>
<p> <code>micro new --type srv bj38web/service/user</code></p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Creating service go.micro.srv.user in /home/itcast/workspace/go/src/bj38web/service/user</span><br><span class="line">.</span><br><span class="line">├── main.go</span><br><span class="line">├── plugin.go</span><br><span class="line">├── handler</span><br><span class="line">│   └── user.go</span><br><span class="line">├── subscriber</span><br><span class="line">│   └── user.go</span><br><span class="line">├── proto/user</span><br><span class="line">│   └── user.proto</span><br><span class="line">├── Dockerfile</span><br><span class="line">├── Makefile</span><br><span class="line">├── README.md</span><br><span class="line">└── go.mod</span><br><span class="line"></span><br><span class="line">download protobuf for micro:</span><br><span class="line"></span><br><span class="line">brew install protobuf</span><br><span class="line">go get -u github.com/golang/protobuf/&#123;proto,protoc-gen-go&#125;</span><br><span class="line">go get -u github.com/micro/protoc-gen-micro</span><br><span class="line"></span><br><span class="line">compile the proto file user.proto:</span><br><span class="line"></span><br><span class="line">cd /home/itcast/workspace/go/src/bj38web/service/user</span><br><span class="line">protoc --proto_path=.:$GOPATH/src --go_out=. --micro_out=. proto/user/user.proto</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>修改密码本 —— proto文件。</p>
 <figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 修改 Call --- SendSms。  删除 Stream、PingPong 函数。</span></span><br><span class="line"><span class="comment">// 删除 除 Request、Response 之外的其他 message 消息体。</span></span><br><span class="line"><span class="comment">// 根据传入、传出修改 Request、Response </span></span><br><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> go.micro.srv.user;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">rpc</span> SendSms(Request) <span class="keyword">returns</span> (Response) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line">	<span class="built_in">string</span> phone = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">string</span> imgCode = <span class="number">2</span>;</span><br><span class="line">	<span class="built_in">string</span> uuid = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">	<span class="built_in">string</span> errno = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>编译 proto文件，生成 2 个新文件 xxx.micro.go 和 xxx.pb.go ，用于 grpc 远程调用！</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">make proto</span><br></pre></td></tr></table></figure></li>
<li><p>修改 service/user/main.go</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;github.com/micro/go-micro/util/log&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/micro/go-micro&quot;</span></span><br><span class="line">	<span class="string">&quot;bj38web/service/user/handler&quot;</span></span><br><span class="line">	user <span class="string">&quot;bj38web/service/user/proto/user&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	<span class="comment">// New Service</span></span><br><span class="line">	service := micro.NewService(</span><br><span class="line">		micro.Name(<span class="string">&quot;go.micro.srv.user&quot;</span>),</span><br><span class="line">		micro.Version(<span class="string">&quot;latest&quot;</span>),</span><br><span class="line">	)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Register Handler</span></span><br><span class="line">	user.RegisterUserHandler(service.Server(), <span class="built_in">new</span>(handler.User))</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Run service</span></span><br><span class="line">	<span class="keyword">if</span> err := service.Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		log.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
<li><p>修改 service/user/handler/user.go</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;context&quot;</span></span><br><span class="line">	user <span class="string">&quot;bj38web/service/user/proto/user&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Call is a single request handler called via client.Call or the generated client code</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *User)</span> <span class="title">SendSms</span><span class="params">(ctx context.Context, req *user.Request, rsp *user.Response)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
<li><p>修改服务发现 mdns ——&gt; consul:</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 在 /service/user/main.<span class="keyword">go</span> 中</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 Consul</span></span><br><span class="line">consulReg := consul.NewRegistry()</span><br><span class="line"></span><br><span class="line"><span class="comment">// New Service  -- 指定 consul</span></span><br><span class="line">service := micro.NewService(</span><br><span class="line">    micro.Address(<span class="string">&quot;192.168.6.108:12342&quot;</span>),</span><br><span class="line">    micro.Name(<span class="string">&quot;go.micro.srv.user&quot;</span>),</span><br><span class="line">    micro.Registry(consulReg),</span><br><span class="line">    micro.Version(<span class="string">&quot;latest&quot;</span>),</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
<li><p>移植 web/controller/user.go 中 “发送短信验证码” 代码，到 service/user/handler/user.go 中，实现微服务版的 短信验证码功能。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 修改对应的 <span class="keyword">import</span> 包。</span><br><span class="line">--- 从web/下 拷贝 model/ 和 utils/ 包  到  service/user/ 中。</span><br><span class="line">--- 修改代码，使用 SendSms() 的 req， rsp 进行传参！</span><br><span class="line"><span class="comment">// Call is a single request handler called via client.Call or the generated client code</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *User)</span> <span class="title">SendSms</span><span class="params">(ctx context.Context, req *user.Request, rsp *user.Response)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 校验图片验证码 是否正确</span></span><br><span class="line">	result := model.CheckImgCode(req.Uuid, req.ImgCode)</span><br><span class="line">	<span class="keyword">if</span> result &#123;</span><br><span class="line">		<span class="comment">// 发送短信</span></span><br><span class="line">		client, _ := dysmsapi.NewClientWithAccessKey(<span class="string">&quot;cn-hangzhou&quot;</span>, <span class="string">&quot;LTAI4FgbQXjf117SX7E75Rmn&quot;</span>, <span class="string">&quot;6icOghQlhjevrTM5PxfiB8nDTxB9z6&quot;</span>)</span><br><span class="line"></span><br><span class="line">		request := dysmsapi.CreateSendSmsRequest()</span><br><span class="line">		request.Scheme = <span class="string">&quot;https&quot;</span></span><br><span class="line"></span><br><span class="line">		request.Domain = <span class="string">&quot;dysmsapi.aliyuncs.com&quot;</span> <span class="comment">//域名  ---参考讲义补充!</span></span><br><span class="line">		request.PhoneNumbers = req.Phone</span><br><span class="line">		request.SignName = <span class="string">&quot;爱家租房网&quot;</span></span><br><span class="line">		request.TemplateCode = <span class="string">&quot;SMS_183242785&quot;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">// 生成一个随机 6 位数, 做验证码</span></span><br><span class="line">		rand.Seed(time.Now().UnixNano()) <span class="comment">// 播种随机数种子.</span></span><br><span class="line">		<span class="comment">// 生成6位随机数.</span></span><br><span class="line">		smsCode := fmt.Sprintf(<span class="string">&quot;%06d&quot;</span>, rand.Int31n(<span class="number">1000000</span>))</span><br><span class="line"></span><br><span class="line">		request.TemplateParam = <span class="string">`&#123;&quot;code&quot;:&quot;`</span> + smsCode + <span class="string">`&quot;&#125;`</span></span><br><span class="line"></span><br><span class="line">		response, _ := client.SendSms(request)</span><br><span class="line">		<span class="keyword">if</span> response.IsSuccess() &#123;</span><br><span class="line">			<span class="comment">// 发送短信验证码 成功</span></span><br><span class="line">			rsp.Errno = utils.RECODE_OK</span><br><span class="line">			rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 将 电话号:短信验证码 ,存入到 Redis 数据库</span></span><br><span class="line">			err := model.SaveSmsCode(req.Phone, smsCode)</span><br><span class="line">			<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">				fmt.Println(<span class="string">&quot;存储短信验证码到redis失败:&quot;</span>, err)</span><br><span class="line">				rsp.Errno = utils.RECODE_DBERR</span><br><span class="line">				rsp.Errmsg = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="comment">// 发送端验证码 失败.</span></span><br><span class="line">			rsp.Errno = utils.RECODE_SMSERR</span><br><span class="line">			rsp.Errmsg = utils.RecodeText(utils.RECODE_SMSERR)</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// 校验失败, 发送错误信息</span></span><br><span class="line">		rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">		rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>在微服务项目中，初始化 Redis 连接池！service/user/main.go 中 调用 InitRedis() </p>
</li>
</ol>
<h2 id="实现短信验证码-客户端调用"><a href="#实现短信验证码-客户端调用" class="headerlink" title="实现短信验证码 客户端调用"></a>实现短信验证码 客户端调用</h2><ol>
<li>拷贝密码本。</li>
</ol>
<ul>
<li>将 service/user/proto/user/  拷贝至  web/proto/   —— 与 getCaptcha 同级。</li>
</ul>
<ol start="2">
<li><p>先导包，起别名。</p>
<ul>
<li><code>userMicro &quot;bj38web/web/proto/user&quot;   // 给包起别名</code></li>
</ul>
</li>
<li><p>指定Consul服务发现。 mdns –&gt; consul</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">consulReg := consul.NewRegistry()</span><br><span class="line">consulService := micro.NewService(</span><br><span class="line">    micro.Registry(consulReg),</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li>
<li><p>初始化客户端</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">microClient := userMicro.NewUserService(<span class="string">&quot;go.micro.srv.user&quot;</span>, consulService.Client())</span><br><span class="line">参<span class="number">1</span>： service/user/main.<span class="keyword">go</span> 中 指定的 服务名。</span><br></pre></td></tr></table></figure></li>
<li><p>调用远程函数, 封装调用结果程json 发送给浏览器</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">resp, err := microClient.SendSms(context.TODO(), &amp;userMicro.Request&#123;Phone:phone, ImgCode:imgCode,Uuid:uuid&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;调用远程函数 SendSms 失败:&quot;</span>, err)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送校验结果 给 浏览器</span></span><br><span class="line">ctx.JSON(http.StatusOK, resp)</span><br></pre></td></tr></table></figure></li>
<li><p>测试：</p>
<ol>
<li>启动 consul  。  consul agent -dev</li>
<li>启动 service/getCaptcha/ 下的 main.go</li>
<li>启动 service/user/ 下的 main.go</li>
<li>启动 web/  下的 main.go</li>
<li>浏览器 ：192.168.6.108:8080/home  – &gt; 注册流程<ul>
<li>成功：<ol>
<li>手机获取到短信验证码</li>
<li>NetWork – Respose 收到 errno = 0  errmsg = 成功！</li>
<li>打开 redis 数据库。 验证 图片验证码、短信验证码    码值。 </li>
</ol>
</li>
</ul>
</li>
</ol>
</li>
</ol>
<h1 id="获取数据-绑定数据"><a href="#获取数据-绑定数据" class="headerlink" title="获取数据 绑定数据"></a>获取数据 绑定数据</h1><ul>
<li>前端传递数据种类：<ol>
<li>form表单：数据为 form data</li>
<li>ajax(阿贾克斯)： 数据为 json 格式。 体现成 —— Request Payload</li>
</ol>
</li>
<li>默认 postForm() 方法 只能获取 form 表单传递的数据。</li>
<li>针对 Request Payload 数据形式，需要 使用 “数据绑定“ 来获取传递的数据。<ul>
<li><code>ctx.Bind()</code> 将 数据绑定到对象中。</li>
</ul>
</li>
</ul>
<h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h2><p>浏览器 ：注册流程， —— Network 中 Headers 中 获取</p>
<ul>
<li> http请求方法：Post</li>
<li> Request Payload：  mobile、password、sms_code 作为 key </li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">-- web/main.<span class="keyword">go</span> 中 添加</span><br><span class="line"></span><br><span class="line">r1.POST(<span class="string">&quot;/users&quot;</span>, controller.PostRet)</span><br><span class="line"></span><br><span class="line">-- web/controller/user.<span class="keyword">go</span> 中添加、实现 </span><br><span class="line"><span class="comment">// 发送注册信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostRet</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">	<span class="comment">/*	mobile := ctx.PostForm(&quot;mobile&quot;)</span></span><br><span class="line"><span class="comment">		pwd := ctx.PostForm(&quot;password&quot;)</span></span><br><span class="line"><span class="comment">		sms_code := ctx.PostForm(&quot;sms_code&quot;)</span></span><br><span class="line"><span class="comment">		fmt.Println(&quot;m = &quot;, mobile, &quot;pwd = &quot;, pwd, &quot;sms_code = &quot;,sms_code)</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="comment">// 获取数据</span></span><br><span class="line">	<span class="keyword">var</span> regData <span class="keyword">struct</span> &#123;</span><br><span class="line">		Mobile   <span class="keyword">string</span> <span class="string">`json:&quot;mobile&quot;`</span></span><br><span class="line">		PassWord <span class="keyword">string</span> <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">		SmsCode  <span class="keyword">string</span> <span class="string">`json:&quot;sms_code&quot;`</span></span><br><span class="line">	&#125;</span><br><span class="line">	ctx.Bind(&amp;regData)</span><br><span class="line">	fmt.Println(<span class="string">&quot;获取到的数据为:&quot;</span>, regData)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务学习--06ORM 框架之gorm</title>
    <url>/2020/01/04/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/06ORM%20%E6%A1%86%E6%9E%B6%E4%B9%8Bgorm/</url>
    <content><![CDATA[<h1 id="ORM-框架"><a href="#ORM-框架" class="headerlink" title="ORM 框架"></a>ORM 框架</h1><h2 id="ORM-框架介绍"><a href="#ORM-框架介绍" class="headerlink" title="ORM 框架介绍"></a>ORM 框架介绍</h2><ul>
<li>ORM：Object  Relational   Mapping  —— 对象关系映射。</li>
</ul>
<span id="more"></span>

<p><img src="%E8%AF%BE%E6%9C%AC%E7%AC%94%E8%AE%B0-06.assets/1582249051388.png" alt="1582249051388"></p>
<ul>
<li><p>作用：</p>
<ul>
<li>通过操作结构体对象，来达到操作数据库表的目的。</li>
<li>通过结构体对象，来生成数据库表。</li>
</ul>
</li>
<li><p>优点：</p>
<ul>
<li>SQL有可能 比较复杂。（Oracle — 子查询 – 嵌套）ORM 操作数据库，不需要使用 SQL</li>
<li>不同开发者，书写的 SQL 语句执行效率不同。</li>
</ul>
</li>
<li><p>go语言支持的 ORM：</p>
<ul>
<li>gORM：<a href="http://gorm.book.jasperxu.com/">http://gorm.book.jasperxu.com/</a></li>
<li>xORM：</li>
</ul>
</li>
</ul>
<h1 id="gorm-连接数据库、建表"><a href="#gorm-连接数据库、建表" class="headerlink" title="gorm 连接数据库、建表"></a>gorm 连接数据库、建表</h1><ul>
<li><p>grom 操作的都是表、表数据。—— 不能操作数据库！使用SQL配合完成。</p>
  <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database 库名 charset<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="回顾MySQL"><a href="#回顾MySQL" class="headerlink" title="回顾MySQL"></a>回顾MySQL</h2><ol>
<li>确认mysql服务，启动：<code> ps xua | grep mysql</code></li>
<li>连接MySQL数据库： mysql -uroot -p123456</li>
<li>查看数据库：show databases;</li>
<li>删除数据库：drop database t1;    t1 代表库名。</li>
<li>选择数据库、查看表：use 数据库名；     show tables；</li>
<li>创建数据库： create database test charset=utf8;</li>
</ol>
<h2 id="gORM-操作-MySQL-数据库"><a href="#gORM-操作-MySQL-数据库" class="headerlink" title="gORM 操作 MySQL 数据库"></a>gORM 操作 MySQL 数据库</h2><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><ol>
<li><p>连接数据库</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;github.com/jinzhu/gorm&quot;</span></span><br><span class="line">	_ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span>   <span class="comment">//&quot;_&quot; 代码不直接使用包, 底层链接要使用!</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">// mysql: 数据库的驱动名</span></span><br><span class="line"><span class="comment">// 链接数据库 --格式: 用户名:密码@协议(IP:port)/数据库名？xxx&amp;yyy&amp;</span></span><br><span class="line">conn, err := gorm.Open(<span class="string">&quot;mysql&quot;</span>, <span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/test&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;gorm.Open err:&quot;</span>,err)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> conn.Close()</span><br></pre></td></tr></table></figure></li>
<li><p>创建数据库表。 ——不能使用gorm创建数据库。  提前使用 SQL语句，创建好想要的数据库。</p>
<p> AutoMigrate()  创建表。默认创建的表 为 复数类型。—— 自动添加 “s” </p>
<p> 在创建之前， 添加 <code>    conn.SingularTable(true)</code> 可以创建非复数表名的表。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 不要复数表名</span></span><br><span class="line">conn.SingularTable(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 借助 gorm 创建数据库表.</span></span><br><span class="line">fmt.Println(conn.AutoMigrate(<span class="built_in">new</span>(Student)).Error)</span><br></pre></td></tr></table></figure></li>
<li><p>查看</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> desc student;</span></span><br><span class="line">+-------+--------------+------+-----+---------+----------------+</span><br><span class="line">| Field | Type         | Null | Key | Default | Extra          |</span><br><span class="line">+-------+--------------+------+-----+---------+----------------+</span><br><span class="line">| id    | int(11)      | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| name  | varchar(255) | YES  |     | NULL    |                |</span><br><span class="line">| age   | int(11)      | YES  |     | NULL    |                |</span><br><span class="line">+-------+--------------+------+-----+---------+----------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="MySQL-包的-init-方法"><a href="#MySQL-包的-init-方法" class="headerlink" title="MySQL 包的 init 方法"></a>MySQL 包的 init 方法</h3><ol>
<li><p> <code>_ &quot;github.com/go-sql-driver/mysql&quot;</code> 导入包时， “_” ,表示，驱使go系统，在main() 函数被调用之前，自动调用 init() 函数。</p>
</li>
<li><p>go语言中有两个特殊函数：  —— 首字母小写，包外可见 。</p>
<ol>
<li>main()   —— 项目的入口函数 </li>
<li>init() —— 当导包，但没有在程序中使用。 在main() 调用之前，自动被调用。<ul>
<li>查看：光标置于 MySQL包的 “mysql” 上。 使用 Ctrl-鼠标左键。 看到源码。 在 driver.go 底部包含 init() 函数的 定义。</li>
<li>init() 作用：实现注册 MySQL 驱动。</li>
</ul>
</li>
</ol>
</li>
<li><p>测试：</p>
<p> test2/ 中</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 创建 test2/ 目录， 在内部添加 init()</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> test2</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="comment">// 首字母小写函数, 包作用域, 不能跨包使用!</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;测试 init 函数 ....&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> test/ 中</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;github.com/jinzhu/gorm&quot;</span></span><br><span class="line">	_ <span class="string">&quot;bj38web/web/test2&quot;</span>   <span class="comment">//&quot;_&quot; 代码不直接使用包, 底层链接要使用!</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;----this is main ---&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">输出：	测试 init 函数 ....</span><br><span class="line">再输出：----this is main ---</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>运行结果： init 函数 会先于 main() 函数被调用！！！</p>
<h3 id="gorm的连接池"><a href="#gorm的连接池" class="headerlink" title="gorm的连接池"></a>gorm的连接池</h3><ol>
<li><p>```go<br> – 默认， grom框架创建好的MySQL数据库连接 conn ，就是一个连接池的句柄。<br> conn, err := gorm.Open(“mysql”, “root:123456@tcp(127.0.0.1:3306)/test”)</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">2. 初始化全局变量， 接收句柄</span><br><span class="line"></span><br><span class="line">    ```go</span><br><span class="line">    // 创建全局连接池句柄</span><br><span class="line">    var GlobalConn *gorm.DB</span><br><span class="line">    </span><br><span class="line">    GlobalConn = conn</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改连接池初始属性</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始数</span></span><br><span class="line">GlobalConn.DB().SetMaxIdleConns(<span class="number">10</span>)</span><br><span class="line"><span class="comment">// 最大数</span></span><br><span class="line">GlobalConn.DB().SetMaxOpenConns(<span class="number">100</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>使用连接池句柄</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 对比redis连接池：不需要使用 Get() 方法，取一条连接。</span><br><span class="line"><span class="comment">// 不要复数表名</span></span><br><span class="line">GlobalConn.SingularTable(<span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 借助 gorm 创建数据库表.</span></span><br><span class="line">fmt.Println(GlobalConn.AutoMigrate(<span class="built_in">new</span>(Student)).Error)</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="gorm-操作数据库数据"><a href="#gorm-操作数据库数据" class="headerlink" title="gorm 操作数据库数据"></a>gorm 操作数据库数据</h1><h2 id="gorm-插入数据"><a href="#gorm-插入数据" class="headerlink" title="gorm 插入数据"></a>gorm 插入数据</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// insert into student(name, age) values(&#x27;zhangsan&#x27;, 100)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InsertData</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	<span class="comment">// 先创建数据 --- 创建对象</span></span><br><span class="line">	<span class="keyword">var</span> stu Student</span><br><span class="line">	stu.Name = <span class="string">&quot;zhangsan&quot;</span></span><br><span class="line">	stu.Age = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 插入(创建)数据</span></span><br><span class="line">	fmt.Println(GlobalConn.Create(&amp;stu).Error)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用注意事项：</p>
<ul>
<li>插入数据时，使用的 create() 函数，传参时，必须传入 &amp;对象。 如果遗漏 “&amp;” 会报错：</li>
</ul>
<p><img src="%E8%AF%BE%E6%9C%AC%E7%AC%94%E8%AE%B0-06.assets/1582255572530.png" alt="1582255572530"></p>
<ul>
<li>要保证 ，在插入数据库时，<code>GlobalConn.SingularTable(true)</code> 生效。代表不使用 复数表名。</li>
</ul>
<h2 id="gorm-查询数据"><a href="#gorm-查询数据" class="headerlink" title="gorm 查询数据"></a>gorm 查询数据</h2><h3 id="简单查询方法："><a href="#简单查询方法：" class="headerlink" title="简单查询方法："></a>简单查询方法：</h3><ol>
<li><p>First(&amp;suer):</p>
<ul>
<li><p>获取 user 表中的第一条数据</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SearchData</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	<span class="keyword">var</span> stu Student</span><br><span class="line">	GlobalConn.First(&amp;stu)</span><br><span class="line">	fmt.Println(stu)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>相当于SQL：<code> SELECT * FROM student ORDER BY id LIMIT 1;</code></p>
</li>
<li><p>只查询 name、age 不查询其他值：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">GlobalConn.Select(<span class="string">&quot;name, age&quot;</span>).First(&amp;stu)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>Last(&amp;user)</p>
<ul>
<li>获取 user 表中的最后一条数据</li>
<li>相当于SQL：<code> SELECT * FROM users ORDER BY id DESC LIMIT 1</code></li>
</ul>
</li>
<li><p>Find(&amp;user)</p>
<ul>
<li><p>获取 user 表中的所有数据。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> stu []Student		<span class="comment">// 改为切片</span></span><br><span class="line">GlobalConn.Select(<span class="string">&quot;name, age&quot;</span>).Find(&amp;stu)   <span class="comment">// Find() 查询多条</span></span><br></pre></td></tr></table></figure></li>
<li><p>相当于SQL：<code>select name, age from student;</code></p>
</li>
</ul>
</li>
</ol>
<h3 id="where-子句使用"><a href="#where-子句使用" class="headerlink" title="where 子句使用"></a>where 子句使用</h3><ul>
<li><p>select name, age from student where name = ‘lisi’;</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">GlobalConn.Select(<span class="string">&quot;name, age&quot;</span>).Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;lisi&quot;</span>).Find(&amp;stu)</span><br><span class="line">或：</span><br><span class="line">GlobalConn.Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;lisi&quot;</span>).Select(<span class="string">&quot;name, age&quot;</span>).Find(&amp;stu)</span><br></pre></td></tr></table></figure></li>
<li><p>select name, age from student where name = ‘lisi’ and age = 22; </p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//方法1：</span></span><br><span class="line">GlobalConn.Select(<span class="string">&quot;name, age&quot;</span>).Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;lisi&quot;</span>).</span><br><span class="line">			Where(<span class="string">&quot;age = ?&quot;</span>, <span class="number">22</span>).Find(&amp;stu)</span><br><span class="line"><span class="comment">//方法2：</span></span><br><span class="line">GlobalConn.Select(<span class="string">&quot;name, age&quot;</span>).Where(<span class="string">&quot;name = ? and age = ?&quot;</span>, <span class="string">&quot;lisi&quot;</span>, <span class="number">22</span>).Find(&amp;stu)</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="gorm-更新数据"><a href="#gorm-更新数据" class="headerlink" title="gorm 更新数据"></a>gorm 更新数据</h2><ol>
<li>Save(): 根据主键更新。 如果数据没有指定主键，不更新 ，变为 “插入”操作。</li>
<li>Update(): 更新一个字段。</li>
<li>Updates(): 更新多个字段。</li>
</ol>
<h3 id="save"><a href="#save" class="headerlink" title="save"></a>save</h3><ul>
<li><p>插入：</p>
<ul>
<li>```go<br>  func UpdateData()  {<pre><code>  var stu Student
  stu.Name = &quot;wangwu&quot;
  stu.Age = 99            // 没有指定 id -- 没有主键! --- 插入
  fmt.Println(GlobalConn.Save(&amp;stu).Error)
</code></pre>
  }  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- select * from student;</span><br><span class="line"></span><br><span class="line">    ```shell</span><br><span class="line">    mysql&gt; select * from student;</span><br><span class="line">    +----+----------+------+</span><br><span class="line">    | id | name     | age  |</span><br><span class="line">    +----+----------+------+</span><br><span class="line">    |  1 | zhangsan |  100 |</span><br><span class="line">    |  2 | lisi     |   18 |</span><br><span class="line">    |  3 | lisi     |   18 |</span><br><span class="line">    |  4 | lisi     |   18 |</span><br><span class="line">    |  5 | lisi     |   18 |</span><br><span class="line">    |  6 | lisi     |   22 |</span><br><span class="line">    |  7 | wangwu   |   99 |</span><br><span class="line">    +----+----------+------+</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>更新：</p>
<ul>
<li>```go<br>  func UpdateData()  {<pre><code>  var stu Student
  stu.Name = &quot;wangwu&quot;
  stu.Age = 77
  stu.Id = 4            //指定 id -- 更新操作!
  fmt.Println(GlobalConn.Save(&amp;stu).Error)
</code></pre>
  }  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 查询：</span><br><span class="line"></span><br><span class="line">    ```shell</span><br><span class="line">    mysql&gt; select * from student;</span><br><span class="line">    +----+----------+------+</span><br><span class="line">    | id | name     | age  |</span><br><span class="line">    +----+----------+------+</span><br><span class="line">    |  1 | zhangsan |  100 |</span><br><span class="line">    |  2 | lisi     |   18 |</span><br><span class="line">    |  3 | lisi     |   18 |</span><br><span class="line">    |  4 | wangwu   |   77 |</span><br><span class="line">    |  5 | lisi     |   18 |</span><br><span class="line">    |  6 | lisi     |   22 |</span><br><span class="line">    |  7 | wangwu   |   99 |</span><br><span class="line">    +----+----------+------+</span><br><span class="line">    7 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="update"><a href="#update" class="headerlink" title="update"></a>update</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">fmt.Println(GlobalConn.Model(<span class="built_in">new</span>(Student)).Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;zhaoliu&quot;</span>).</span><br><span class="line">            Update(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;lisi&quot;</span>).Error)</span><br><span class="line"></span><br><span class="line">Model(<span class="built_in">new</span>(Student): 指定更新 “student” 表</span><br><span class="line">Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;zhaoliu&quot;</span>)： 指定过滤条件。 </span><br><span class="line">Update(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;lisi&quot;</span>).Error)：指定 把 “zhaoliu” 更新成 “lisi”    </span><br></pre></td></tr></table></figure>

<h3 id="updates"><a href="#updates" class="headerlink" title="updates"></a>updates</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">fmt.Println(GlobalConn.Model(<span class="built_in">new</span>(Student)).Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;lisi&quot;</span>).</span><br><span class="line">            Updates(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;liuqi&quot;</span>, <span class="string">&quot;age&quot;</span>:<span class="number">77</span>&#125;).Error)</span><br></pre></td></tr></table></figure>



<h2 id="grom-删除数据"><a href="#grom-删除数据" class="headerlink" title="grom 删除数据"></a>grom 删除数据</h2><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><ul>
<li>物理删除。真正的执行 Delete。</li>
</ul>
<h3 id="软删除"><a href="#软删除" class="headerlink" title="软删除"></a>软删除</h3><ul>
<li><p>逻辑删除。不真正删。不执行Delete。 —— 数据无价的！</p>
<ul>
<li>创建表时，在表中添加一个 “删除字段” 。当需要删除时，更新 “删除字段”， 更新为 ：true</li>
<li>查询时，不查询 “删除字段” 为 null 的值。</li>
<li>举例：淘宝，删除订单。 手机，删除图片。</li>
</ul>
</li>
<li><p>实现 软删除：</p>
<ul>
<li>创建表：</li>
</ul>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建全局结构体</span></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">	gorm.Model		<span class="comment">// go语言中, 匿名成员 --- 继承! Student 继承 Model</span></span><br><span class="line">	Name <span class="keyword">string</span></span><br><span class="line">	Age <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line">--- 在 “Model” 上，Ctrl-B 跳转至 Model 类定义。</span><br><span class="line"><span class="keyword">type</span> Model <span class="keyword">struct</span> &#123;</span><br><span class="line">	ID        <span class="keyword">uint</span> <span class="string">`gorm:&quot;primary_key&quot;`</span></span><br><span class="line">	CreatedAt time.Time</span><br><span class="line">	UpdatedAt time.Time</span><br><span class="line">	DeletedAt *time.Time <span class="string">`sql:&quot;index&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line">--- Model 表由 mysql自动维护，不需要我们手动维护。</span><br></pre></td></tr></table></figure>

<ul>
<li><p>执行软删除：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 使用 Delete() 参数，指定要删除的数据所在表的表名。</span><br><span class="line">fmt.Println(GlobalConn.Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;lisi&quot;</span>).Delete(<span class="built_in">new</span>(Student)).Error)</span><br></pre></td></tr></table></figure></li>
<li><p>验证：</p>
<ol>
<li><p> select * from student；  依然能看到 “lisi” 相关数据。 但是 。delete_at 字段。被填入数据。</p>
</li>
<li><p>在 gorm 框架中，执行 查询语句：</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">SearchData</span><span class="params">()</span></span>  &#123;</span><br><span class="line">    <span class="keyword">var</span> stu []Student</span><br><span class="line">	GlobalConn.Find(&amp;stu)</span><br><span class="line">	fmt.Println(stu)</span><br><span class="line">&#125;</span><br><span class="line">--- 查询结果为： [ ]  ---- <span class="string">&quot;软删除&quot;</span> 成功！</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>想 查询 “软删除”的数据：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">GlobalConn.Unscoped().Find(&amp;stu)</span><br></pre></td></tr></table></figure></li>
<li><p>想 实现 “物理删除”</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 借助 Unscoped() 执行删除。</span><br><span class="line">GlobalConn.Unscoped().Where(<span class="string">&quot;name = ?&quot;</span>, <span class="string">&quot;lisi&quot;</span>).Delete(<span class="built_in">new</span>(Student))</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
<h3 id="MySQL-8小时-时区问题"><a href="#MySQL-8小时-时区问题" class="headerlink" title="MySQL 8小时 时区问题"></a>MySQL 8小时 时区问题</h3><ul>
<li><p>MySQL默认使用的时间 ： 美国 东 8 区 时间 。 —— 北京时间 —— 差 8 小时。</p>
</li>
<li><p>在连接数据库时，添加属性：<code>?parseTime=True&amp;loc=Local</code> </p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">conn, err := gorm.Open(<span class="string">&quot;mysql,                &quot;</span>root:<span class="number">123456</span>@tcp(<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3306</span>)/test?parseTime=True&amp;loc=Local<span class="string">&quot;)</span></span><br></pre></td></tr></table></figure></li>
<li><p>再执行SQL语句、gorm访问MySQL 使用 北京时间。</p>
</li>
</ul>
<h1 id="gorm-设置表属性"><a href="#gorm-设置表属性" class="headerlink" title="gorm 设置表属性"></a>gorm 设置表属性</h1><h2 id="修改表字段大小"><a href="#修改表字段大小" class="headerlink" title="修改表字段大小"></a>修改表字段大小</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建全局结构体</span></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">	Id <span class="keyword">int</span></span><br><span class="line">	Name <span class="keyword">string</span>		<span class="string">`gorm:&quot;size:50&quot;`</span>	</span><br><span class="line">    <span class="comment">// string -- varchar。 默认大小255.  可以在创建表时，指定大小。</span></span><br><span class="line">	Age <span class="keyword">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>结论：修改表属性，只能在第一次建表的时候，有效！或者给表增加新字段的时候，有效！其他场景，修改表属性 ，在 gorm 操作中，无效！</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建全局结构体</span></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">	Id    <span class="keyword">int</span></span><br><span class="line">	Name  <span class="keyword">string</span> <span class="string">`gorm:&quot;size:100;default:&#x27;xiaoming&#x27;&quot;`</span></span><br><span class="line">	Age   <span class="keyword">int</span></span><br><span class="line">	Class <span class="keyword">int</span>    <span class="string">`gorm:&quot;not null&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="设置时间"><a href="#设置时间" class="headerlink" title="设置时间"></a>设置时间</h2><ul>
<li><p>默认MySQL数据库 有 3 种时间：</p>
<ul>
<li>date：</li>
<li>datetime：</li>
<li>timeStamp：时间戳。 ——  gorm 中，只有 timeStamp</li>
</ul>
</li>
<li><p>如果必须使用 MySQL 数据库特有的 “数据类型”， 使用 “type” 关键字来设置。</p>
</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建全局结构体</span></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">	Id    <span class="keyword">int</span></span><br><span class="line">	Name  <span class="keyword">string</span>    <span class="string">`gorm:&quot;size:100;default:&#x27;xiaoming&#x27;&quot;`</span></span><br><span class="line">	Age   <span class="keyword">int</span></span><br><span class="line">	Class <span class="keyword">int</span>       <span class="string">`gorm:&quot;not null&quot;`</span></span><br><span class="line">	Join  time.Time <span class="string">`gorm:&quot;type:timestamp&quot;`</span><span class="comment">// 创建 Student 表指定 timestamp类型。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="项目中使用表-的创建"><a href="#项目中使用表-的创建" class="headerlink" title="项目中使用表 的创建"></a>项目中使用表 的创建</h1><ol>
<li><p>在 项目的 web/model/ 下 创建  model.go 文件。</p>
</li>
<li><p>参照讲义《微服务项目讲义1.md》中 2.2.2 小节，将创建表的代码 添加到  model.go 。</p>
</li>
<li><p>使用 SQL语句创建 数据库 search_house。修改 InitDb() 函数。同时，指定MySQL使用的时间。初始化全局连接池句柄。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建 数据库链接句柄</span></span><br><span class="line"><span class="keyword">var</span> GlobalConn *gorm.DB</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitDb</span><span class="params">()</span> <span class="params">(*gorm.DB, error)</span></span> &#123;</span><br><span class="line">	db, err := gorm.Open(<span class="string">&quot;mysql&quot;</span>,</span><br><span class="line"><span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/search_house?parseTime=True&amp;loc=Local&quot;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="comment">// 初始化 全局连接池句柄</span></span><br><span class="line">		GlobalConn = db</span><br><span class="line">		GlobalConn.DB().SetMaxIdleConns(<span class="number">10</span>)</span><br><span class="line">		GlobalConn.DB().SetConnMaxLifetime(<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">		db.SingularTable(<span class="literal">true</span>)</span><br><span class="line">		db.AutoMigrate(<span class="built_in">new</span>(User), <span class="built_in">new</span>(House), <span class="built_in">new</span>(Area), <span class="built_in">new</span>(Facility), <span class="built_in">new</span>(HouseImage), <span class="built_in">new</span>(OrderHouse))</span><br><span class="line">		<span class="keyword">return</span> db, <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>将  InitDb()  在 web/main.go 中 调用！</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化 MySQL 链接池</span></span><br><span class="line">model.InitDb()</span><br></pre></td></tr></table></figure></li>
<li><p>运行 web/main.go , 创建 项目中需要使用的表。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务学习--08登录</title>
    <url>/2020/01/04/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/08%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<h1 id="用户登录"><a href="#用户登录" class="headerlink" title="用户登录"></a>用户登录</h1><h2 id="修改-GetSession-方法"><a href="#修改-GetSession-方法" class="headerlink" title="修改 GetSession 方法"></a>修改 GetSession 方法</h2><ul>
<li>之前实现的 web/controller/user.go 中的 GetSession() 方法，是一个伪实现，没有真正的获取 Session。 </li>
<li>从 容器中， 真正的获取 Session，展示给浏览器。</li>
</ul>
<span id="more"></span>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetSession</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">	resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 获取 Session 数据</span></span><br><span class="line">	s := sessions.Default(ctx)		<span class="comment">// 初始化 Session 对象</span></span><br><span class="line">	userName := s.Get(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 用户没有登录.---没存在 MySQL中, 也没存在 Session 中</span></span><br><span class="line">	<span class="keyword">if</span> userName == <span class="literal">nil</span> &#123;</span><br><span class="line">		resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SESSIONERR</span><br><span class="line">		resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SESSIONERR)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">		resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line"></span><br><span class="line">		<span class="keyword">var</span> nameData <span class="keyword">struct</span>&#123;</span><br><span class="line">			Name <span class="keyword">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">		&#125;</span><br><span class="line">		nameData.Name = userName.(<span class="keyword">string</span>)		<span class="comment">// 类型断言</span></span><br><span class="line">		resp[<span class="string">&quot;data&quot;</span>] = nameData</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	ctx.JSON(http.StatusOK, resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h2><ul>
<li><p>将 Session 数据删除！保存修改！</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 退出登录</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DeleteSession</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">	resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 初始化 Session 对象</span></span><br><span class="line">	s := sessions.Default(ctx)</span><br><span class="line">	<span class="comment">// 删除 Session 数据</span></span><br><span class="line">	s.Delete(<span class="string">&quot;userName&quot;</span>)		<span class="comment">// 没有返回值</span></span><br><span class="line">	<span class="comment">// 必须使用 Save 保存</span></span><br><span class="line">	err := s.Save()				<span class="comment">// 有返回值</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_IOERR	<span class="comment">// 没有合适错误,使用 IO 错误!</span></span><br><span class="line">		resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_IOERR)</span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">		resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">	&#125;</span><br><span class="line">	ctx.JSON(http.StatusOK, resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h1 id="获取用户基本信息"><a href="#获取用户基本信息" class="headerlink" title="获取用户基本信息"></a>获取用户基本信息</h1><ol>
<li><p> 登录成功后，点击 “用户名(手机号)” 进入 用户页面。 尚未显示用户 “用户名”、“手机号” 用户信息。</p>
</li>
<li><p>web/main.go 中 添加 路由回调。—— 参考 《接口文档.doc》</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.GET(<span class="string">&quot;/user&quot;</span>, controller.GetUserInfo)</span><br></pre></td></tr></table></figure></li>
<li><p>web/controller/user.go 中添加 GetUserInfo 函数， 并实现</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取用户基本信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetUserInfo</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>实现：</p>
<ol>
<li><p>准备 存储输出结果(成功、失败) 的 数据结构：</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">defer</span> ctx.JSON(http.StatusOK, resp)</span><br></pre></td></tr></table></figure></li>
<li><p>获取 Session, 得到 当前 用户信息</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">s := sessions.Default(ctx)  <span class="comment">// Session 初始化</span></span><br><span class="line">userName := s.Get(<span class="string">&quot;userName&quot;</span>)	<span class="comment">// 根据key 获取Session</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> userName == <span class="literal">nil</span> &#123;		<span class="comment">// 用户没登录, 但进入该页面, 恶意进入.</span></span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SESSIONERR</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SESSIONERR)</span><br><span class="line">    <span class="keyword">return</span>		<span class="comment">// 如果出错, 报错, 退出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>访问 MySQL数据库， 按照 userName ， 提取用户信息</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 在 web/model/modleFunc.<span class="keyword">go</span> 中 创建 GetUserInfo() 函数，并实现。</span><br><span class="line"><span class="comment">// 获取用户信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetUserInfo</span><span class="params">(userName <span class="keyword">string</span>)</span> <span class="params">(User, error)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 实现SQL: select * from user where name = userName;</span></span><br><span class="line">	<span class="keyword">var</span> user User</span><br><span class="line">	err := GlobalConn.Where(<span class="string">&quot;name = ?&quot;</span>, userName).First(&amp;user).Error</span><br><span class="line">	<span class="keyword">return</span> user, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">上述函数，也可以写成。---- <span class="keyword">go</span>语法写。</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetUserInfo</span><span class="params">(userName <span class="keyword">string</span>)</span> <span class="params">(user User, err error)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 实现SQL: select * from user where name = userName;</span></span><br><span class="line">	err = GlobalConn.Where(<span class="string">&quot;name = ?&quot;</span>, userName).First(&amp;user).Error</span><br><span class="line">	<span class="keyword">return</span> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>调用 GetUserInfo 获取用户信息。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据用户名, 获取 用户信息  ---- 查 MySQL 数据库  user 表.</span></span><br><span class="line">user, err := model.GetUserInfo(userName.(<span class="keyword">string</span>))  <span class="comment">// 类型断言，传参</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DBERR</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">    <span class="keyword">return</span>		<span class="comment">// 如果出错, 报错, 退出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>参照 《接口文档.doc》 中 发送成功消息字段，实现</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line"></span><br><span class="line">temp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">temp[<span class="string">&quot;user_id&quot;</span>] = user.ID</span><br><span class="line">temp[<span class="string">&quot;name&quot;</span>] = user.Name</span><br><span class="line">temp[<span class="string">&quot;mobile&quot;</span>] = user.Mobile</span><br><span class="line">temp[<span class="string">&quot;real_name&quot;</span>] = user.Real_name</span><br><span class="line">temp[<span class="string">&quot;id_card&quot;</span>] = user.Id_card</span><br><span class="line">temp[<span class="string">&quot;avatar_url&quot;</span>] = user.Avatar_url</span><br><span class="line"></span><br><span class="line">resp[<span class="string">&quot;data&quot;</span>] = temp</span><br><span class="line"></span><br><span class="line"><span class="comment">// 前面已经添加 defer ctx.JSON() </span></span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>测试：</p>
<ol>
<li>重启  web/main.go </li>
<li>刷新 浏览器，看到：用户名：xxxx  手机号 ： xxxxx   。 </li>
</ol>
</li>
</ol>
<h1 id="更新用户名"><a href="#更新用户名" class="headerlink" title="更新用户名"></a>更新用户名</h1><ol>
<li><p>web/main.go 添加 路由回调</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.PUT(<span class="string">&quot;/user/name&quot;</span>, controller.PutUserInfo)</span><br></pre></td></tr></table></figure></li>
<li><p>web/controller/user.go 定义，实现函数 PutUserInfo</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PutUserInfo</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 获取当前用户名</span></span><br><span class="line">	<span class="comment">// 获取新用户名</span></span><br><span class="line">	<span class="comment">// 更新用户名</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取 当前用户名</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">s := sessions.Default(ctx)			<span class="comment">// 初始化Session 对象</span></span><br><span class="line">userName := s.Get(<span class="string">&quot;userName&quot;</span>)</span><br></pre></td></tr></table></figure>

</li>
<li><p>获取 新用户名</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取新用户名		---- 处理 Request Payload 类型数据. Bind()</span></span><br><span class="line"><span class="keyword">var</span> nameData <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="keyword">string</span> <span class="string">`json:&quot;name&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line">ctx.Bind(&amp;nameData)</span><br></pre></td></tr></table></figure>

</li>
<li><p>更新 用户名</p>
<ol>
<li><p>更新 MySQL 数据库</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">--- 在 web/model/modelFunc.<span class="keyword">go</span> 实现</span><br><span class="line"><span class="comment">// 更新用户名</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UpdateUserName</span><span class="params">(newName, oldName <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="comment">// update user set name = &#x27;itcast&#x27; where name = 旧用户名</span></span><br><span class="line">	<span class="keyword">return</span> GlobalConn.Model(<span class="built_in">new</span>(User)).Where(<span class="string">&quot;name = ?&quot;</span>, oldName).Update(<span class="string">&quot;name&quot;</span>, newName).Error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>调用 model 中的 UpdateUserName() 函数</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 更新用户名</span></span><br><span class="line">resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">defer</span> ctx.JSON(http.StatusOK, resp)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 更新数据库中的 name</span></span><br><span class="line">err := model.UpdateUserName(nameData.Name, userName.(<span class="keyword">string</span>))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DBERR</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>更新 Session </p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 更新 Session 数据</span></span><br><span class="line">s.Set(<span class="string">&quot;userName&quot;</span>, nameData.Name)</span><br><span class="line">err = s.Save()		<span class="comment">// 必须保存</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SESSIONERR</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SESSIONERR)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">resp[<span class="string">&quot;data&quot;</span>] = nameData</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>测试：</p>
<ul>
<li>修改以后的用户名，保存在 Session中， 后退页面也能看到！</li>
</ul>
</li>
</ol>
<h1 id="中间件-middleWare"><a href="#中间件-middleWare" class="headerlink" title="中间件 (middleWare)"></a>中间件 (middleWare)</h1><ul>
<li>中间件，对以后的路由全部生效。<ul>
<li>设置好中间件以后，所有的路由都会使用这个中间件。</li>
<li>设置以前的路由，不生效。</li>
</ul>
</li>
</ul>
<h2 id="什么是-“中间件”："><a href="#什么是-“中间件”：" class="headerlink" title="什么是 “中间件”："></a>什么是 “中间件”：</h2><ul>
<li><p>早期：</p>
<ul>
<li>用于 系统 和 应用之间。</li>
<li>中间件： 内核 —— 中间件 ——  用户应用</li>
</ul>
</li>
<li><p>现在：</p>
<ul>
<li>用于 两个模块之间的 功能 软件(模块)</li>
<li>中间件：—— 承上启下。  前后台开发： 路由 ——&gt; 中间件 (起过滤作用) ——&gt; 控制器</li>
<li>特性：对 “中间件”指定位置 ， 以下的路由起作用！以上的，作用不到。</li>
</ul>
</li>
</ul>
<h3 id="中间件类型"><a href="#中间件类型" class="headerlink" title="中间件类型"></a>中间件类型</h3><ul>
<li><p>gin 框架规定：中间件类型为：gin.HandlerFunc 类型。</p>
</li>
<li><p>gin.HandlerFunc 类型。就是 ：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *gin.Context)</span></span> &#123; </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 示例：</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Logger</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span> <span class="params">(c *gin.Context)</span></span> &#123;   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">r.Use(Logger())		<span class="comment">// 传 “中间件” 做参数。</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="中间件测试"><a href="#中间件测试" class="headerlink" title="中间件测试"></a>中间件测试</h3><ul>
<li>中间件使用的 3 个知识：</li>
</ul>
<h4 id="Next"><a href="#Next" class="headerlink" title="Next()"></a>Next()</h4><ul>
<li><p>表示，跳过当前中间件剩余内容， 去执行下一个中间件。 当所有操作执行完之后，以出栈的执行顺序返回，执行剩余代码。</p>
</li>
<li><p>```go</p>
<p>  // 创建中间件<br>  func Test1(ctx *gin.Context)  {</p>
<pre><code>  fmt.Println(&quot;1111&quot;)
  ctx.Next()
  fmt.Println(&quot;4444&quot;)
</code></pre>
<p>  }<br>  // 创建 另外一种格式的中间件.<br>  func Test2() gin.HandlerFunc {</p>
<pre><code>  return func(context *gin.Context) &#123;
      fmt.Println(&quot;3333&quot;)
      context.Next()
      fmt.Println(&quot;5555&quot;)
  &#125;
</code></pre>
<p>  }<br>  func main()  {</p>
<pre><code>  router := gin.Default()

  // 使用中间件
  router.Use(Test1)
  router.Use(Test2())

  router.GET(&quot;/test&quot;, func(context *gin.Context) &#123;
      fmt.Println(&quot;2222&quot;)
      context.Writer.WriteString(&quot;hello world!&quot;)
  &#125;)

  router.Run(&quot;:9999&quot;)
</code></pre>
<p>  }</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#### return </span><br><span class="line"></span><br><span class="line">- 终止执行当前中间件剩余内容，执行下一个中间件。 当所有的函数执行结束后，以出栈的顺序执行返回，但，不执行return后的代码！</span><br><span class="line"></span><br><span class="line">    ```go</span><br><span class="line">    // 创建中间件</span><br><span class="line">    func Test1(ctx *gin.Context)  &#123;</span><br><span class="line">    	fmt.Println(&quot;1111&quot;)</span><br><span class="line">    	</span><br><span class="line">    	ctx.Next()</span><br><span class="line">    </span><br><span class="line">    	fmt.Println(&quot;4444&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">    // 创建 另外一种格式的中间件.</span><br><span class="line">    func Test2() gin.HandlerFunc &#123;</span><br><span class="line">    	return func(context *gin.Context) &#123;</span><br><span class="line">    		fmt.Println(&quot;3333&quot;)</span><br><span class="line">    </span><br><span class="line">    		return</span><br><span class="line">    		context.Next()</span><br><span class="line">    </span><br><span class="line">    		fmt.Println(&quot;5555&quot;)</span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    func main()  &#123;</span><br><span class="line">    	router := gin.Default()</span><br><span class="line">    </span><br><span class="line">    	// 使用中间件</span><br><span class="line">    	router.Use(Test1)</span><br><span class="line">    	router.Use(Test2())</span><br><span class="line">    </span><br><span class="line">    	router.GET(&quot;/test&quot;, func(context *gin.Context) &#123;</span><br><span class="line">    		fmt.Println(&quot;2222&quot;)</span><br><span class="line">    		context.Writer.WriteString(&quot;hello world!&quot;)</span><br><span class="line">    	&#125;)</span><br><span class="line">    </span><br><span class="line">    	router.Run(&quot;:9999&quot;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="Abort"><a href="#Abort" class="headerlink" title="Abort()"></a>Abort()</h4><ul>
<li><p>只执行当前中间件， 操作完成后，以出栈的顺序，依次返回上一级中间件。</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建中间件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test1</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;1111&quot;</span>)</span><br><span class="line"></span><br><span class="line">	ctx.Next()</span><br><span class="line"></span><br><span class="line">	fmt.Println(<span class="string">&quot;4444&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 创建 另外一种格式的中间件.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test2</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;3333&quot;</span>)</span><br><span class="line"></span><br><span class="line">		context.Abort()</span><br><span class="line"></span><br><span class="line">		fmt.Println(<span class="string">&quot;5555&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	router := gin.Default()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用中间件</span></span><br><span class="line">	router.Use(Test1)</span><br><span class="line">	router.Use(Test2())</span><br><span class="line"></span><br><span class="line">	router.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;2222&quot;</span>)</span><br><span class="line">		context.Writer.WriteString(<span class="string">&quot;hello world!&quot;</span>)</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	router.Run(<span class="string">&quot;:9999&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-08.assets/1582529575294.png" alt="1582529575294"></p>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-08.assets/1582529769290.png" alt="1582529769290"></p>
<h3 id="中间件测试业务时间："><a href="#中间件测试业务时间：" class="headerlink" title="中间件测试业务时间："></a>中间件测试业务时间：</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建中间件</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test1</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">	fmt.Println(<span class="string">&quot;1111&quot;</span>)</span><br><span class="line"></span><br><span class="line">	t := time.Now()</span><br><span class="line"></span><br><span class="line">	ctx.Next()</span><br><span class="line"></span><br><span class="line">	fmt.Println(time.Now().Sub(t))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建 另外一种格式的中间件.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test2</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;3333&quot;</span>)</span><br><span class="line">        context.Abort()		<span class="comment">// 将 Abort() 替换成 Next()， 反复测试，获取时间差！</span></span><br><span class="line">		fmt.Println(<span class="string">&quot;5555&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	router := gin.Default()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用中间件</span></span><br><span class="line">	router.Use(Test1)</span><br><span class="line">	router.Use(Test2())</span><br><span class="line"></span><br><span class="line">	router.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;2222&quot;</span>)</span><br><span class="line">		context.Writer.WriteString(<span class="string">&quot;hello world!&quot;</span>)</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	router.Run(<span class="string">&quot;:9999&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ul>
<li>2种 书写格式：（见 前面笔记）</li>
<li>3个 操作函数/关键字： Next()、return、Abort()</li>
<li>作用域：作用域 以下 的路由。（ 对以上的 路由 无效！）</li>
</ul>
<h1 id="项目中使用中间件"><a href="#项目中使用中间件" class="headerlink" title="项目中使用中间件"></a>项目中使用中间件</h1><ol>
<li><p>在 web/main.go 中 创建 中间件。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LoginFilter</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">		<span class="comment">// 初始化 Session 对象</span></span><br><span class="line">		s := sessions.Default(ctx)</span><br><span class="line">		userName := s.Get(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> userName == <span class="literal">nil</span> &#123;</span><br><span class="line">			ctx.Abort()			<span class="comment">// 从这里返回, 不必继续执行了</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			ctx.Next()			<span class="comment">// 继续向下</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>在 所有需要进行 Session 校验操作之前， 添加、使用这个中间件。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加路由分组</span></span><br><span class="line">r1 := router.Group(<span class="string">&quot;/api/v1.0&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    r1.GET(<span class="string">&quot;/session&quot;</span>, controller.GetSession)</span><br><span class="line">    r1.GET(<span class="string">&quot;/imagecode/:uuid&quot;</span>, controller.GetImageCd)</span><br><span class="line">    r1.GET(<span class="string">&quot;/smscode/:phone&quot;</span>, controller.GetSmscd)</span><br><span class="line">    r1.POST(<span class="string">&quot;/users&quot;</span>, controller.PostRet)</span><br><span class="line">    r1.GET(<span class="string">&quot;/areas&quot;</span>, controller.GetArea)</span><br><span class="line">    r1.POST(<span class="string">&quot;/sessions&quot;</span>, controller.PostLogin)</span><br><span class="line"></span><br><span class="line">r1.Use(LoginFilter())  <span class="comment">//以后的路由,都不需要再校验 Session 了. 直接获取数据即可!</span></span><br><span class="line"></span><br><span class="line">    r1.DELETE(<span class="string">&quot;/session&quot;</span>, controller.DeleteSession)</span><br><span class="line">    r1.GET(<span class="string">&quot;/user&quot;</span>, controller.GetUserInfo)</span><br><span class="line">    r1.PUT(<span class="string">&quot;/user/name&quot;</span>, controller.PutUserInfo)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="用户头像"><a href="#用户头像" class="headerlink" title="用户头像"></a>用户头像</h1><ol>
<li><p> 登录成功后，点击 “修改” 进入 “个人信息”页面。点击 “选择文件” ， 在系统选择一张图片作为头像。F12查看， 会在 Header 中， 看到 “avatar” 错误。</p>
</li>
<li><p>web/main.go 中 添加 路由回调。—— 参考 《接口文档.doc》</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.GET(<span class="string">&quot;/user/avatar&quot;</span>, controller.PostAvatar)</span><br></pre></td></tr></table></figure></li>
<li><p>web/controller/user.go 中添加 GetUserInfo 函数， 并实现</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 上传头像</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostAvatar</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>实现 PostAvatar 函数。 ———— 测试 gin 框架上传文件函数。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostAvatar</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 获取图片文件, 静态文件对象</span></span><br><span class="line">	file, _ := ctx.FormFile(<span class="string">&quot;avatar&quot;</span>)</span><br><span class="line">	<span class="comment">// 上传文件到项目中</span></span><br><span class="line">	err := ctx.SaveUploadedFile(file, <span class="string">&quot;test/&quot;</span>+file.Filename)</span><br><span class="line">	fmt.Println(err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 可以将 头像，上传到 test/ 目录中。 </p>
</li>
</ol>
<ul>
<li>课后作业：<ul>
<li>看 《fastdfs.pdf》课件！ 配置 fastDFS、 Nginx 相应的环境。</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务学习--09FastDFS 和 Nginx</title>
    <url>/2020/01/04/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/09FastDFS%20%E5%92%8C%20Nginx/</url>
    <content><![CDATA[<h1 id="FastDFS-和-Nginx"><a href="#FastDFS-和-Nginx" class="headerlink" title="FastDFS 和 Nginx"></a>FastDFS 和 Nginx</h1><h2 id="FastDFS"><a href="#FastDFS" class="headerlink" title="FastDFS"></a>FastDFS</h2><h3 id="三端："><a href="#三端：" class="headerlink" title="三端："></a>三端：</h3><ul>
<li>客户端：client</li>
<li>监听端（监听服务器）：tracker</li>
<li>存储端（存储服务器）：storage</li>
</ul>
<span id="more"></span>

<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-09.assets/1582680996644.png" alt="1582680996644"></p>
<h3 id="使用步骤："><a href="#使用步骤：" class="headerlink" title="使用步骤："></a>使用步骤：</h3><ol>
<li>监听服务器定时查看存储服务器的状态。</li>
<li>client 访问监听服务器， 获取到可用的 存储服务器地址。</li>
<li>客户端根据返回的地址，访问存储服务器。</li>
<li>存储服务器存储文件，并返回凭证。如：“组名/M00/00/00/xxxxxx” </li>
</ol>
<h3 id="与以往的区别"><a href="#与以往的区别" class="headerlink" title="与以往的区别"></a>与以往的区别</h3><ul>
<li>图片需要上传！但是不需要下载。 直接按 “凭证” 展示到 浏览器即可。</li>
<li>fastDFS 不提供 “展示图片” 功能。 —— Nginx。</li>
</ul>
<h3 id="fastDFS-安装和配置"><a href="#fastDFS-安装和配置" class="headerlink" title="fastDFS 安装和配置"></a>fastDFS 安装和配置</h3><ul>
<li><p>安装 ： 参照 《fastdfs.pdf》实施</p>
</li>
<li><p>配置：</p>
<ul>
<li>修改sudo vim /etc/fdfs/storage.conf。    —— tracker_server=你自己的IP:22122</li>
<li>修改sudo vim /etc/fdfs/tracker.conf        —— 不需要。</li>
<li>修改sudo vim /etc/fdfs/client.conf          —— tracker_server=你自己的IP:22122</li>
</ul>
</li>
<li><p>启动 fastDFS：</p>
<ol>
<li><p> 启动 存储服务器 storage：   sudo fdfs_storaged /etc/fdfs/storage.conf</p>
</li>
<li><p>  启动 监听服务器 tracker： sudo fdfs_trackerd /etc/fdfs/tracker.conf</p>
</li>
<li><p>ps aux | grep fdfs</p>
<p> <img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-09.assets/1582682178020.png" alt="1582682178020"></p>
</li>
</ol>
</li>
</ul>
<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><ul>
<li><p>安装： fastDFS 的 Nginx 插件。</p>
<ul>
<li>参照 《fastdfs.pdf》 3.2.5.7安装fastdfs-nginx-module</li>
</ul>
</li>
<li><p>拷贝：</p>
<ul>
<li>将 解压缩的 fastdfs-master目录中 mod_fastdfs.conf 拷贝， 放到 /etc/fdfs/ 目录下。</li>
<li>将 解压缩的 fastdfs-master目录中 http.conf  拷贝， 放到 /etc/fdfs/ 目录下。 — 不需要修改</li>
<li>将 解压缩的 fastdfs-master目录中 mime.types 拷贝， 放到 /etc/fdfs/ 目录下。 — 不需要修改</li>
</ul>
</li>
<li><p>修改 mod_fastdfs.conf</p>
<ul>
<li>sudo  vim mod_fastdfs.conf 文件， 修改： tracker_server=你自己的IP地址:22122</li>
</ul>
</li>
<li><p>修改 Nginx：</p>
<ul>
<li>sudo vim /usr/local/nginx/conf/nginx.conf </li>
<li>参考 《fastdfs.pdf》 3.2.5.7 安装fastdfs-nginx-module 第 9 条。修改：</li>
</ul>
</li>
</ul>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-09.assets/1582683497645.png" alt="1582683497645"></p>
<ul>
<li>启动nginx<ul>
<li>启动命令：<code>sudo /usr/local/nginx/sbin/nginx</code></li>
<li>提示：类似于：<code>ngx_http_fastdfs_set pid=78481</code></li>
<li>查看：<ul>
<li>ps aux | grep nginx</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="Go语言-使用-FastDFS和Nginx"><a href="#Go语言-使用-FastDFS和Nginx" class="headerlink" title="Go语言 使用 FastDFS和Nginx"></a>Go语言 使用 FastDFS和Nginx</h1><ul>
<li><p>《fastdfs.pdf》中， 3.2.6 小结中的 方法， 已经过时！不要使用！</p>
</li>
<li><p> 去 github 搜索 “fastdfs”  — <a href="https://github.com/tedcy/fdfs_client">https://github.com/tedcy/fdfs_client</a></p>
</li>
<li><p>使用开源包，必须确认在  /etc/fdfs/client.conf 中 添加了 配置</p>
  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">maxConns=10		# 设置最大连接数。</span><br></pre></td></tr></table></figure></li>
<li><p>查看 demo：client_test.go ，确认，我们使用的方法：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">client, err := NewClientWithConfig(<span class="string">&quot;fdfs.conf&quot;</span>)</span><br><span class="line">	参数： /etc/fdfs/client.conf</span><br><span class="line"></span><br><span class="line">client.UploadByBuffer([]<span class="keyword">byte</span>(<span class="string">&quot;hello world&quot;</span>), <span class="string">&quot;go&quot;</span>); </span><br><span class="line">	参<span class="number">1</span>： []<span class="keyword">byte</span> 的图片数据。</span><br><span class="line">	参<span class="number">2</span>： 去除 “.” 文件后缀名。</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;github.com/tedcy/fdfs_client&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	<span class="comment">// 初始化客户端 --- 配置文件</span></span><br><span class="line">	clt, err := fdfs_client.NewClientWithConfig(<span class="string">&quot;/etc/fdfs/client.conf&quot;</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;初始化客户端错误, err:&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 上传文件 -- 尝试文件名上传! 传入到 storage</span></span><br><span class="line">	resp, err := clt.UploadByFilename(<span class="string">&quot;头像1.jpg&quot;</span>)</span><br><span class="line"></span><br><span class="line">	fmt.Println(resp, err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-- 运行成功后 去 ~/fastdfs/storage/data/<span class="number">00</span>/<span class="number">00</span>/ 中查看！   ls | grep  xxx</span><br></pre></td></tr></table></figure>



<h1 id="用户头像上传"><a href="#用户头像上传" class="headerlink" title="用户头像上传"></a>用户头像上传</h1><ol>
<li><p>获取图片文件, 静态文件对象</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">file, _ := ctx.FormFile(<span class="string">&quot;avatar&quot;</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>上传头像到fastdfs 中, 按字节流。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">clt, _ := fdfs_client.NewClientWithConfig(<span class="string">&quot;/etc/fdfs/client.conf&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打开文件,读取文件内容</span></span><br><span class="line">f, _ := file.Open()			<span class="comment">// 只读打开.</span></span><br><span class="line"></span><br><span class="line">buf := <span class="built_in">make</span>([]<span class="keyword">byte</span>, file.Size)	<span class="comment">// 按文件实际大小,创建切片.</span></span><br><span class="line"></span><br><span class="line">f.Read(buf)		<span class="comment">// 读取文件内容, 保存至buf缓冲区.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// go语言根据文件名获取文件后缀</span></span><br><span class="line">fileExt := path.Ext(file.Filename)		<span class="comment">// 传文件名, 获取文件后缀---- 带有&quot;.&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按字节流上传图片内容</span></span><br><span class="line">remoteId, _ := clt.UploadByBuffer(buf, fileExt[<span class="number">1</span>:])</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>获取session , 得到当前用户</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">userName := sessions.Default(ctx).Get(<span class="string">&quot;userName&quot;</span>)</span><br></pre></td></tr></table></figure></li>
<li><p>web/model/modelFunc.go 中添加函数， 更新用户头像到数据中。 将 图片 凭证写入 avatar_url</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UpdateAvatar</span><span class="params">(userName, avatar <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="comment">// update user set avatar_url = avatar, where name = username</span></span><br><span class="line">	<span class="keyword">return</span> GlobalConn.Model(<span class="built_in">new</span>(User)).Where(<span class="string">&quot;name = ?&quot;</span>, userName).</span><br><span class="line">		Update(<span class="string">&quot;avatar_url&quot;</span>, avatar).Error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
<li><p>根据用户名, 更新用户头像  — MySQL数据库</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">model.UpdateAvatar(userName.(<span class="keyword">string</span>), remoteId)</span><br></pre></td></tr></table></figure></li>
<li><p>这里 不在 remoteId 前，拼接 Nginx 使用的 IP:port。 这样写，会写死到 数据库。在 web/controller/user.go 中 修改 GetUserInfo() 函数， 在获取用户信息时， 添加  Nginx 使用的 IP:port。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetUserInfo</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">    ......</span><br><span class="line">    temp[<span class="string">&quot;name&quot;</span>] = user.Name</span><br><span class="line">	temp[<span class="string">&quot;mobile&quot;</span>] = user.Mobile</span><br><span class="line">	temp[<span class="string">&quot;real_name&quot;</span>] = user.Real_name</span><br><span class="line">	temp[<span class="string">&quot;id_card&quot;</span>] = user.Id_card</span><br><span class="line">    <span class="comment">// 修改 avatar_url 写入的值。</span></span><br><span class="line">	temp[<span class="string">&quot;avatar_url&quot;</span>] = <span class="string">&quot;http://192.168.6.108:8888/&quot;</span> + user.Avatar_url</span><br><span class="line"></span><br><span class="line">	resp[<span class="string">&quot;data&quot;</span>] = temp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>成功，写出返回值给前端</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line"></span><br><span class="line">temp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">temp[<span class="string">&quot;avatar_url&quot;</span>] = <span class="string">&quot;http://192.168.6.108:8888/&quot;</span> + remoteId</span><br><span class="line">resp[<span class="string">&quot;data&quot;</span>] = temp</span><br><span class="line"></span><br><span class="line">ctx.JSON(http.StatusOK, resp)</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务学习--07微服务实现 注册登录</title>
    <url>/2020/01/04/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/07%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0%20%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<h1 id="微服务实现-注册用户"><a href="#微服务实现-注册用户" class="headerlink" title="微服务实现 注册用户"></a>微服务实现 注册用户</h1><h2 id="微服务端"><a href="#微服务端" class="headerlink" title="微服务端"></a>微服务端</h2><span id="more"></span>

<ol>
<li><p>修改密码本 —— proto 文件</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> <span class="keyword">go</span>.micro.srv.user;</span><br><span class="line"></span><br><span class="line">service User &#123;</span><br><span class="line">	rpc SendSms(Request) returns (Response) &#123;&#125;;</span><br><span class="line">	rpc Register(RegReq) returns (Response) &#123;&#125;;   <span class="comment">// 注册用户</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message RegReq &#123;</span><br><span class="line">    <span class="keyword">string</span> mobile = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">string</span> password = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">string</span> sms_code = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Request &#123;</span><br><span class="line">	<span class="keyword">string</span> phone = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">string</span> imgCode = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">string</span> uuid = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Response &#123;</span><br><span class="line">	<span class="keyword">string</span> errno = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>make 编译生成 xxx.micro.go 文件。</p>
</li>
<li><p>修改 service/user/main.go    — 没有需要修改的</p>
</li>
<li><p>修改 handler/user.go </p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加 方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *User)</span> <span class="title">Register</span><span class="params">(ctx context.Context, req *user.RegReq, rsp *user.Response)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>需要操作，MySQL数据库， 拷贝 web/model/model.go 到  微服务项目中。</p>
</li>
<li><p>在 service/user/model/modelFunc.go 中 添加 校验短信验证码函数实现</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 校验短信验证码</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CheckSmsCode</span><span class="params">(phone, code <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="comment">// 链接redis</span></span><br><span class="line">	conn := RedisPool.Get()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 从 redis 中, 根据 key 获取 Value --- 短信验证码  码值</span></span><br><span class="line">	smsCode, err := redis.String(conn.Do(<span class="string">&quot;get&quot;</span>, phone+<span class="string">&quot;_code&quot;</span>))</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;redis get phone_code err:&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 验证码匹配  失败</span></span><br><span class="line">	<span class="keyword">if</span> smsCode != code &#123;</span><br><span class="line">		<span class="keyword">return</span> errors.New(<span class="string">&quot;验证码匹配失败!&quot;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 匹配成功!</span></span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>  service/user/model/modelFunc.go 中, 添加函数RegisterUser， 实现 用户注册信息，写入MySQL数据库</p>
</li>
</ol>
<pre><code><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 注册用户信息,写 MySQL 数据库.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RegisterUser</span><span class="params">(mobile, pwd <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="keyword">var</span> user User</span><br><span class="line">	user.Name = mobile		<span class="comment">// 默认使用手机号作为用户名</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用 md5 对 pwd 加密</span></span><br><span class="line">	m5 := md5.New()			<span class="comment">// 初始md5对象</span></span><br><span class="line">	m5.Write([]<span class="keyword">byte</span>(pwd))			<span class="comment">// 将 pwd 写入缓冲区</span></span><br><span class="line">	pwd_hash := hex.EncodeToString(m5.Sum(<span class="literal">nil</span>))	<span class="comment">// 不使用额外的秘钥</span></span><br><span class="line"></span><br><span class="line">	user.Password_hash = pwd_hash</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 插入数据到MySQL</span></span><br><span class="line">	<span class="keyword">return</span> GlobalConn.Create(&amp;user).Error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</code></pre>
<ol start="8">
<li><p>完成  Register  函数 实现</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *User)</span> <span class="title">Register</span><span class="params">(ctx context.Context, req *user.RegReq, rsp *user.Response)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	<span class="comment">// 先校验短信验证码,是否正确. redis 中存储短信验证码.</span></span><br><span class="line">	err := model.CheckSmsCode(req.Mobile, req.SmsCode)</span><br><span class="line">	<span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 如果校验正确. 注册用户. 将数据写入到 MySQL数据库.</span></span><br><span class="line">		err = model.RegisterUser(req.Mobile, req.Password)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">			rsp.Errno = utils.RECODE_DBERR</span><br><span class="line">			rsp.Errmsg = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			rsp.Errno = utils.RECODE_OK</span><br><span class="line">			rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;  <span class="comment">// 短信验证码错误</span></span><br><span class="line">		rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">		rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="web-端"><a href="#web-端" class="headerlink" title="web 端"></a>web 端</h2><ol>
<li><p> 拷贝密码本 ——proto</p>
</li>
<li><p>创建 web/utils/utils.go 文件， 封装 函数实现 初始 consul 客户端代码</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化micro</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitMicro</span><span class="params">()</span> <span class="title">micro</span>.<span class="title">Service</span></span> &#123;</span><br><span class="line">	<span class="comment">// 初始化客户端</span></span><br><span class="line">	consulReg := consul.NewRegistry()</span><br><span class="line">	<span class="keyword">return</span> micro.NewService(</span><br><span class="line">		micro.Registry(consulReg),</span><br><span class="line">	)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>实现 web/controller/user.go 中的 PostRet 函数</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 发送注册信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostRet</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 获取数据</span></span><br><span class="line">	<span class="keyword">var</span> regData <span class="keyword">struct</span> &#123;</span><br><span class="line">		Mobile   <span class="keyword">string</span> <span class="string">`json:&quot;mobile&quot;`</span></span><br><span class="line">		PassWord <span class="keyword">string</span> <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">		SmsCode  <span class="keyword">string</span> <span class="string">`json:&quot;sms_code&quot;`</span></span><br><span class="line">	&#125;</span><br><span class="line">	ctx.Bind(&amp;regData)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 初始化consul</span></span><br><span class="line">	microService := utils.InitMicro()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 初始化客户端</span></span><br><span class="line">	microClient := userMicro.NewUserService(<span class="string">&quot;go.micro.srv.user&quot;</span>, microService.Client())</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 调用远程函数</span></span><br><span class="line">	resp, err := microClient.Register(context.TODO(), &amp;userMicro.RegReq&#123;</span><br><span class="line">		Mobile:regData.Mobile,</span><br><span class="line">		SmsCode:regData.SmsCode,</span><br><span class="line">		Password:regData.PassWord,</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;注册用户, 找不到远程服务!&quot;</span>, err)</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 写给浏览器</span></span><br><span class="line">	ctx.JSON(http.StatusOK, resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试：</p>
<ul>
<li>consul 启动</li>
<li>getCaptcha 服务启动  — 12341</li>
<li>user 服务启动  — 12342</li>
<li>web 启动  — 8080</li>
<li>浏览器测试，注册流程。<ul>
<li>成功：<ul>
<li>界面跳转。</li>
<li>查询 MySQL数据库， 多一条用户信息。</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ol>
<h1 id="获取地域信息"><a href="#获取地域信息" class="headerlink" title="获取地域信息"></a>获取地域信息</h1><h2 id="导入-SQL脚本"><a href="#导入-SQL脚本" class="headerlink" title="导入 SQL脚本"></a>导入 SQL脚本</h2><ol>
<li>将 home.sql 保存至 Linux 系统。建议放 家目录。</li>
<li>登录 MySQL数据库。选择数据库： use  search_house;</li>
<li>执行 source  /home/itcast/home.sql  ——  运行 脚本文件。向表插入数据。</li>
</ol>
<h2 id="web端实现"><a href="#web端实现" class="headerlink" title="web端实现"></a>web端实现</h2><ol>
<li><p>在 web/main.go 中，添加路由， 设置回调。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.GET(<span class="string">&quot;/areas&quot;</span>, controller.GetArea)</span><br></pre></td></tr></table></figure></li>
<li><p>在 web/controller/use.go 中， 添加 GetArea() 函数。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetArea</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>从数据库获取数据，提高用户感受的常见方法：先查缓存， 缓存没有查MySQL， 写入redis缓存。</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 测试实现：</span></span><br><span class="line"><span class="comment">// 获取地域信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetArea</span><span class="params">(ctx *gin.Context)</span></span>  &#123;</span><br><span class="line">	<span class="comment">// 先从MySQL中获取数据.</span></span><br><span class="line">	<span class="keyword">var</span> areas []model.Area</span><br><span class="line"></span><br><span class="line">	model.GlobalConn.Find(&amp;areas)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 再把数据写入到 redis 中.</span></span><br><span class="line">	conn := model.RedisPool.Get()		<span class="comment">// 获取链接</span></span><br><span class="line">	conn.Do(<span class="string">&quot;set&quot;</span>, <span class="string">&quot;areaData&quot;</span>, areas)</span><br><span class="line"></span><br><span class="line">	resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">	resp[<span class="string">&quot;errno&quot;</span>] = <span class="string">&quot;0&quot;</span></span><br><span class="line">	resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">	resp[<span class="string">&quot;data&quot;</span>] = areas</span><br><span class="line"></span><br><span class="line">	ctx.JSON(http.StatusOK, resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>测试：登录 redis ，指定 –raw 参数，显示中文。</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">itcast@ubuntu:~$ redis-cli -h 192.168.6.108 -p 6379 --raw</span><br><span class="line">192.168.6.108:6379&gt; keys *</span><br><span class="line">areaData</span><br><span class="line">hello</span><br><span class="line">itcast</span><br><span class="line">192.168.6.108:6379&gt; get areaData</span><br><span class="line">[&#123;1 东城区 []&#125; &#123;2 西城区 []&#125; &#123;3 朝阳区 []&#125; &#123;4 海淀区 []&#125; &#123;5 昌平区 []&#125; &#123;6 丰台区 []&#125; &#123;7 房山区 []&#125; &#123;8 通州区 []&#125; &#123;9 顺义区 []&#125; &#123;10 大兴区 []&#125; &#123;11 怀柔区 []&#125; &#123;12 平谷区 []&#125; &#123;13 密云区 []&#125; &#123;14 延庆区 []&#125; &#123;15 石景山区 []&#125;]</span><br><span class="line">192.168.6.108:6379&gt; </span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>思考：按如上方法存储数据到 Redis 中 <code>conn.Do(&quot;set&quot;, &quot;areaData&quot;, areas)</code>， 将来 使用 Do 获取数据时！不好获取！没有对应的 回复助手函数来完成 “类型断言”。 —— 重新选择 存储 redis 的方法: 将 数据转换成 josn 字节流存储。 </p>
</li>
</ol>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-07.assets/1582438662615.png" alt="1582438662615"></p>
<ol start="6">
<li><p>重新实现获取地域信息， 没数据，读MySQL，写redis；有数据，直接读 redis</p>
<ul>
<li>强调：写入 Redis 中的数据 —— 序列化后的字节流数据。</li>
</ul>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取地域信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetArea</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 先从MySQL中获取数据.</span></span><br><span class="line">	<span class="keyword">var</span> areas []model.Area</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 从缓存redis 中, 获取数据</span></span><br><span class="line">	conn := model.RedisPool.Get()</span><br><span class="line">	<span class="comment">// 当初使用 &quot;字节切片&quot; 存入, 现在使用 切片类型接收</span></span><br><span class="line">	areaData, _ := redis.Bytes(conn.Do(<span class="string">&quot;get&quot;</span>, <span class="string">&quot;areaData&quot;</span>))</span><br><span class="line">	<span class="comment">// 没有从 Redis 中获取到数据</span></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(areaData) == <span class="number">0</span> &#123;</span><br><span class="line"></span><br><span class="line">		fmt.Println(<span class="string">&quot;从 MySQL 中 获取数据...&quot;</span>)</span><br><span class="line">		model.GlobalConn.Find(&amp;areas)</span><br><span class="line">		<span class="comment">// 把数据写入到 redis 中. , 存储结构体序列化后的 json 串</span></span><br><span class="line">		areaBuf, _ := json.Marshal(areas)</span><br><span class="line">		conn.Do(<span class="string">&quot;set&quot;</span>, <span class="string">&quot;areaData&quot;</span>, areaBuf)</span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		fmt.Println(<span class="string">&quot;从 redis 中 获取数据...&quot;</span>)</span><br><span class="line">		<span class="comment">// redis 中有数据</span></span><br><span class="line">		json.Unmarshal(areaData, &amp;areas)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">	resp[<span class="string">&quot;errno&quot;</span>] = <span class="string">&quot;0&quot;</span></span><br><span class="line">	resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">	resp[<span class="string">&quot;data&quot;</span>] = areas</span><br><span class="line"></span><br><span class="line">	ctx.JSON(http.StatusOK, resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>测试：</p>
<ol>
<li>GoLand 中 借助输出，看到 展示的数据来源。 </li>
</ol>
</li>
</ol>
<h1 id="Cookie-和-Session"><a href="#Cookie-和-Session" class="headerlink" title="Cookie 和 Session"></a>Cookie 和 Session</h1><h2 id="Cookie-和-Session简介"><a href="#Cookie-和-Session简介" class="headerlink" title="Cookie 和 Session简介"></a>Cookie 和 Session简介</h2><ul>
<li>http协议，有 3 个版本：<ul>
<li>http/1.0 版：无状态，短连接。</li>
<li>http/1.1 版：可以记录状态。—— 默认支持。</li>
<li>http/2.0 版：可以支持长连接。 协议头：Connection: keep-alive 。</li>
</ul>
</li>
</ul>
<h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><ul>
<li>最早的 http/1.0 版，提供 Cookie 机制， 但是没有 Session。</li>
<li>Cookie 作用：一定时间内， 存储用户的连接信息。如：用户名、登录时间 … 不敏感信息。</li>
<li>Cookie 出身：http自带机制。Session不是！</li>
<li>Cookie 存储：Cookie 存储在 客户端 (浏览器) 中。—— 浏览器可以存储数据。少<ul>
<li>存储形式：key - value</li>
<li>可以在浏览器中查看。</li>
<li>Cookie 不安全。直接将数据存储在浏览器上。</li>
</ul>
</li>
</ul>
<h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><ul>
<li>”会话“：在一次会话交流中，产生的数据。不是http、浏览器自带。</li>
<li>Session 作用：一定时间内， 存储用户的连接信息。</li>
<li>Session 存储：在服务器中。一般为 临时 Session。—— 会话结束 (浏览器关闭) ， Session被干掉！</li>
</ul>
<h3 id="对比-Cookie-和-Session"><a href="#对比-Cookie-和-Session" class="headerlink" title="对比 Cookie 和 Session"></a>对比 Cookie 和 Session</h3><ol>
<li> Cookie 存储在 浏览器， 在哪生成呢？</li>
<li> Session 存储在 服务器，在哪生成呢？</li>
<li> 什么时候生成Cookie ， 什么时候生成 Session？</li>
</ol>
<p><img src="%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-07.assets/1582441308868.png" alt="1582441308868"></p>
<h2 id="Cookie操作"><a href="#Cookie操作" class="headerlink" title="Cookie操作"></a>Cookie操作</h2><h3 id="设置Cookie"><a href="#设置Cookie" class="headerlink" title="设置Cookie"></a>设置Cookie</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Context)</span> <span class="title">SetCookie</span><span class="params">(name, value <span class="keyword">string</span>, maxAge <span class="keyword">int</span>, path, domain <span class="keyword">string</span>, secure, httpOnly <span class="keyword">bool</span>)</span></span> </span><br><span class="line">name: 名称。 相当于 key</span><br><span class="line">value：内容。</span><br><span class="line">maxAge：最大生命周期。</span><br><span class="line">	 = <span class="number">0</span> : 表示没指定该属性。</span><br><span class="line">	 &lt; <span class="number">0</span> ：表示删除。 ---- <span class="comment">// 删除Cookie 的操作， 可以使用 该属性实现。</span></span><br><span class="line">	 &gt; <span class="number">0</span> ：指定生命周期。 单位：s</span><br><span class="line">path：路径。—— 通常传<span class="string">&quot;&quot;</span></span><br><span class="line">domain：域名。 IP地址。</span><br><span class="line">secure：设置是否安全保护。<span class="literal">true</span>：不能在 地址栏前，点击查看。 可以使用 F12 查看。</span><br><span class="line">					   <span class="literal">false</span>：能在 地址栏前，点击查看。</span><br><span class="line">httpOnly：是否只针对http协议。</span><br></pre></td></tr></table></figure>

<p>测试案例：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	router := gin.Default()</span><br><span class="line"></span><br><span class="line">	router.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">		<span class="comment">// 设置 Cookie</span></span><br><span class="line">		<span class="comment">//context.SetCookie(&quot;mytest&quot;, &quot;chuanzhi&quot;, 60*60, &quot;&quot;, &quot;&quot;, true, true)</span></span><br><span class="line">        <span class="comment">//context.SetCookie(&quot;mytest&quot;, &quot;chuanzhi&quot;, 60*60, &quot;&quot;, &quot;&quot;, false, true)</span></span><br><span class="line">		context.SetCookie(<span class="string">&quot;mytest&quot;</span>, <span class="string">&quot;chuanzhi&quot;</span>, <span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="literal">false</span>, <span class="literal">true</span>)</span><br><span class="line">		context.Writer.WriteString(<span class="string">&quot;测试 Cookie ...&quot;</span>)</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	router.Run(<span class="string">&quot;:9999&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="获取Cookie"><a href="#获取Cookie" class="headerlink" title="获取Cookie"></a>获取Cookie</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取Cookie</span></span><br><span class="line">cookieVal, _ := context.Cookie(<span class="string">&quot;mytest&quot;</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;获取的Cookie 为:&quot;</span>, cookieVal)</span><br></pre></td></tr></table></figure>



<h2 id="Session-操作"><a href="#Session-操作" class="headerlink" title="Session 操作"></a>Session 操作</h2><ul>
<li><p>gin 框架， 默认不支持Session功能。要想在 gin 中使用 Session，需要添加插件！</p>
</li>
<li><p>gin 框架中的 “插件”  —— 中间件 —— gin MiddleWare</p>
</li>
<li><p>去 github 搜索，gin Session 可以得到：<a href="https://github.com/gin-contrib/sessions">https://github.com/gin-contrib/sessions</a></p>
</li>
<li><p>安装 Session 插件。</p>
</li>
<li><p>```<br>  $ go get github.com/gin-contrib/sessions</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 设置session</span><br><span class="line"></span><br><span class="line">- 容器的初始化：</span><br><span class="line"></span><br><span class="line">    ```go</span><br><span class="line">    func NewStore(size int, network, address, password string, keyPairs ...[]byte) (Store, error)</span><br><span class="line">    size:容器大小。</span><br><span class="line">    network：协议</span><br><span class="line">    address：IP：port</span><br><span class="line">    password：使用redis做容器使用的密码。 没有特殊设定，传 “”</span><br><span class="line">    []byte(“secret”)： 加密密钥！</span><br></pre></td></tr></table></figure></li>
<li><p>使用容器：</p>
  <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(engine *Engine)</span> <span class="title">Use</span><span class="params">(middleware ...HandlerFunc)</span> <span class="title">IRoutes</span></span> &#123;&#125;</span><br><span class="line">router.Use(sessions.Sessions(<span class="string">&quot;mysession&quot;</span>, store))</span><br></pre></td></tr></table></figure></li>
</ul>
<p>测试案例：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/gin-contrib/sessions/redis&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/gin-contrib/sessions&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">	router := gin.Default()</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 初始化容器.</span></span><br><span class="line">	store, _ := redis.NewStore(<span class="number">10</span>, <span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;192.168.6.108:6379&quot;</span>, <span class="string">&quot;&quot;</span>, []<span class="keyword">byte</span>(<span class="string">&quot;bj38&quot;</span>))</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 使用容器</span></span><br><span class="line">	router.Use(sessions.Sessions(<span class="string">&quot;mysession&quot;</span>, store))</span><br><span class="line"></span><br><span class="line">	router.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">		<span class="comment">// 调用session, 设置session数据</span></span><br><span class="line">		s := sessions.Default(context)</span><br><span class="line">		<span class="comment">// 设置session</span></span><br><span class="line">		s.Set(<span class="string">&quot;itcast&quot;</span>, <span class="string">&quot;itheima&quot;</span>)</span><br><span class="line">		<span class="comment">// 修改session时, 需要Save函数配合.否则不生效</span></span><br><span class="line">		s.Save()</span><br><span class="line"></span><br><span class="line">		context.Writer.WriteString(<span class="string">&quot;测试 Session ...&quot;</span>)</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	router.Run(<span class="string">&quot;:9999&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="获取session"><a href="#获取session" class="headerlink" title="获取session"></a>获取session</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 建议：不要修改 session属性，使用默认属性。</span></span><br><span class="line">v := s.Get(<span class="string">&quot;itcast&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;获取 Session:&quot;</span>, v.(<span class="keyword">string</span>))</span><br></pre></td></tr></table></figure>



<h1 id="实现用户登录"><a href="#实现用户登录" class="headerlink" title="实现用户登录"></a>实现用户登录</h1><ol>
<li><p>浏览器 访问 ： 192.168.6.108:8080/home   点击登录按钮。  跳“登录页面”。 输手机号、输密码，登录</p>
</li>
<li><p>在 Name的 General  和  Request Payload 中获取到 路由 和 方法以及数据信息。</p>
</li>
<li><p>web/main.go 添加：</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.POST(<span class="string">&quot;/sessions&quot;</span>, controller.PostLogin)    <span class="comment">// 注意 “s”</span></span><br></pre></td></tr></table></figure></li>
<li><p>web/controller/user.go 增加函数</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 处理登录业务</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostLogin</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>实现 PostLogin 函数</p>
<ol>
<li><p>获取数据。 因为数据来自  Request Payload , 所以：需要通过“Bind”来获取输入数据</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> loginData <span class="keyword">struct</span> &#123;</span><br><span class="line">    Mobile   <span class="keyword">string</span> <span class="string">`json:&quot;mobile&quot;`</span></span><br><span class="line">    PassWord <span class="keyword">string</span> <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line">ctx.Bind(&amp;loginData)</span><br></pre></td></tr></table></figure></li>
<li><p>web/model/modelFunc.go  创建函数, 处理登录业务，根据手机号/密码 获取用户名</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 处理登录业务,根据手机号/密码 获取用户名</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Login</span><span class="params">(mobile, pwd <span class="keyword">string</span>)</span> <span class="params">(<span class="keyword">string</span>, error)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> user User</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 对参数 pwd 做md5 hash</span></span><br><span class="line">	m5 := md5.New()</span><br><span class="line">	m5.Write([]<span class="keyword">byte</span>(pwd))</span><br><span class="line">	pwd_hash := hex.EncodeToString(m5.Sum(<span class="literal">nil</span>))</span><br><span class="line"></span><br><span class="line">	err := GlobalConn.Where(<span class="string">&quot;mobile = ?&quot;</span>, mobile).Select(<span class="string">&quot;name&quot;</span>).</span><br><span class="line">		Where(<span class="string">&quot;password_hash = ?&quot;</span>, pwd_hash).Find(&amp;user).Error</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> user.Name, err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><p>获取数据库数据，查询是否和输入数据匹配    </p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line">userName, err  := model.Login(loginData.Mobile, loginData.PassWord)</span><br><span class="line">resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="comment">// 登录成功</span></span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将 登录状态保存到 session 中 </span></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 登录失败.</span></span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_LOGINERR</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_LOGINERR)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
<li><p>在 web/main.go 中 ， 初始化容器， 使用容器</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 初始化容器</span></span><br><span class="line">store, _ := redis.NewStore(<span class="number">10</span>, <span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;192.168.6.108:6379&quot;</span>, <span class="string">&quot;&quot;</span>, []<span class="keyword">byte</span>(<span class="string">&quot;bj38&quot;</span>))	</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用容器</span></span><br><span class="line">router.Use(sessions.Sessions(<span class="string">&quot;mysession&quot;</span>, store))</span><br></pre></td></tr></table></figure>

</li>
<li><p>完整实现 ，处理登录业务  PostLogin() 函数</p>
 <figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 处理登录业务</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostLogin</span><span class="params">(ctx *gin.Context)</span></span> &#123;</span><br><span class="line">	<span class="comment">// 获取前端数据</span></span><br><span class="line">	<span class="keyword">var</span> loginData <span class="keyword">struct</span> &#123;</span><br><span class="line">		Mobile   <span class="keyword">string</span> <span class="string">`json:&quot;mobile&quot;`</span></span><br><span class="line">		PassWord <span class="keyword">string</span> <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">	&#125;</span><br><span class="line">	ctx.Bind(&amp;loginData)</span><br><span class="line"></span><br><span class="line">	resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">//获取 数据库数据, 查询是否和数据的数据匹配</span></span><br><span class="line">	userName, err := model.Login(loginData.Mobile, loginData.PassWord)</span><br><span class="line">	<span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="comment">// 登录成功!</span></span><br><span class="line">		resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">		resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line"></span><br><span class="line">		<span class="comment">// 将 登录状态, 保存到Session中</span></span><br><span class="line">		s := sessions.Default(ctx)	  <span class="comment">// 初始化session</span></span><br><span class="line">		s.Set(<span class="string">&quot;userName&quot;</span>, userName)   <span class="comment">// 将用户名设置到session中.</span></span><br><span class="line">		s.Save()</span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="comment">// 登录失败!</span></span><br><span class="line">		resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_LOGINERR</span><br><span class="line">		resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_LOGINERR)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	ctx.JSON(http.StatusOK, resp)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>测试：</p>
<ol>
<li>go  run   web/main.go 即可！ 其他的不用启动！</li>
<li>浏览器， 192.168.6.108:8080/home  ——&gt; 登录 ——&gt; 输入用户名、密码 ——&gt; 登录！</li>
<li>看不到变化，是因为：我们写的第一个 Session 相关函数 GetSession()，里面 直接发送的假数据，并没有真正获取 Session。现在我们有真正Session了。</li>
<li>请大家尝试修改实现 GetSession() ！最终能在浏览器中看到 登录变化。</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>在Mac上编译go</title>
    <url>/2020/03/03/golang/go/</url>
    <content><![CDATA[<h1 id="在Mac上编译可运行在Linux-Windows上的GO程序"><a href="#在Mac上编译可运行在Linux-Windows上的GO程序" class="headerlink" title="在Mac上编译可运行在Linux, Windows上的GO程序"></a>在Mac上编译可运行在Linux, Windows上的GO程序</h1><p>编译运行在 amd64位 linux系统</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">CGO_ENABLED=<span class="number">0</span> GOOS=linux GOARCH=amd64 <span class="keyword">go</span> build</span><br></pre></td></tr></table></figure>

<p>编译运行在 amd64位 windows系统</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">CGO_ENABLED=<span class="number">0</span> GOOS=windows  <span class="keyword">go</span> build </span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>go</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务相关知识2</title>
    <url>/2020/03/03/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/%E8%AE%B2%E4%B9%89/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A1%B9%E7%9B%AE%E8%AE%B2%E4%B9%892/</url>
    <content><![CDATA[<h1 id="IHome租房网"><a href="#IHome租房网" class="headerlink" title="IHome租房网"></a>IHome租房网</h1><h2 id="1-REST详解"><a href="#1-REST详解" class="headerlink" title="1.REST详解"></a>1.REST详解</h2><p>在进行开发前，这里面需要给大家介绍一个概念，<strong>REST</strong>。</p>
<p>REST全称是Representational State Transfer，中文意思是表述（编者注：通常译为表征）性状态转移。 </p>
<blockquote>
<p>也有说全称是 Resource Representational State Transfer  资源表现状态转移</p>
</blockquote>
<p>是Roy Thomas Fielding博士于2000年在他的博士论文中提出来的一种万维网软件架构风格，目的是便于不同软件/程序在网络（例如互联网）中互相传递信息。表现层状态转换是根基于超文本传输协议(HTTP)之上而确定的一组约束和属性，是一种设计提供万维网络服务的软件构建风格。符合或兼容于这种架构风格(简称为 REST 或 RESTful)的网络服务，允许客户端发出以统一资源标识符访问和操作网络资源的请求，而与预先定义好的无状态操作集一致化。因此表现层状态转换提供了在互联网络的计算系统之间，彼此资源可交互使用的协作性质(interoperability)。相对于其它种类的网络服务，例如 SOAP服务则是以本身所定义的操作集，来访问网络上的资源。</p>
<span id="more"></span>

<blockquote>
<p>（摘自维基百科）</p>
</blockquote>
<p>概念一般都比较晦涩难懂，我们看一下知乎大神给出的简洁版介绍：</p>
<p>1.REST不是”rest”这个单词，而是几个单词缩写。但即使那几个单词说出来，也无法理解在说什么 -_-!! （不是要贬低人，是我自己也理解困难）；</p>
<p>2.REST描述的是在网络中client和server的一种交互形式；REST本身不实用，实用的是如何设计 RESTful API（REST风格的网络接口）；</p>
<p>3.Server提供的RESTful API中，URL中只使用名词来指定资源，原则上不使用动词。“资源”是REST架构或者说整个网络处理的核心。比如：</p>
<p>URL全局资源定位符  locat   restful</p>
<p>URI:全局资源标识符  identify</p>
<p><code>http://api.qc.com/v1/newsfeed</code>: 获取某人的新鲜;<br><code>http://api.qc.com/v1/friends</code>: 获取某人的好友列表;<br><code>http://api.qc.com/v1/profile</code>: 获取某人的详细信息;</p>
<p>4 .用HTTP协议里的动词来实现资源的添加，修改，删除等操作。即通过HTTP动词来实现资源的状态扭转：</p>
<p><img src="assets%5C1565331217181.png" alt="1565331217181"></p>
<p>比如：<br>DELETE <code>http://api.qc.com/v1/friends</code>: 删除某人的好友 （在http parameter指定好友id）<br>POST <code>http://api.qc.com/v1/</code>friends: 添加好友<br>UPDATE <code>http://api.qc.com/v1/profile</code>: 更新个人资料</p>
<p>禁止使用： GET <code>http://api.qc.com/v1/deleteFriend</code></p>
<p><strong>Restful的好处</strong></p>
<ul>
<li><p>轻量，直接基于http，不再需要任何别的诸如消息协议。get/post/put/delete为CRUD操作</p>
</li>
<li><p>面向资源，一目了然，具有自解释性。</p>
</li>
<li><p>数据描述简单，一般以xml，json做数据交换。</p>
</li>
<li><p>无状态，在调用一个接口（访问、操作资源）的时候，可以不用考虑上下文，不用考虑当前状态，极大的降低了复杂度。</p>
</li>
<li><p>简单、低耦合</p>
</li>
</ul>
<p>在web开发中，restful是非常常见的设计。在我们接下来的开发过程中，路由尽量使用restful风格。</p>
<h2 id="2-IHome开发"><a href="#2-IHome开发" class="headerlink" title="2.IHome开发"></a>2.IHome开发</h2><h3 id="2-1创建项目"><a href="#2-1创建项目" class="headerlink" title="2.1创建项目"></a>2.1创建项目</h3><p>这里我们使用<code>gin</code>框架作为web框架进行开发，首先我们先来看一下gin的一个简单使用。</p>
<p>首先是gin的下载，下载命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go get -u -v github.com/gin-gonic/gin</span></span><br></pre></td></tr></table></figure>

<p>然后我们用简单的示例代码着手gin框架的学习使用，示例代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//初始化路由</span></span><br><span class="line">    router := gin.Default()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//路由匹配</span></span><br><span class="line">    router.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(context *gin.Context)</span></span> &#123;</span><br><span class="line">        context.Writer.Write([]<span class="keyword">byte</span>(<span class="string">&quot;Hello World&quot;</span>))</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开启监听</span></span><br><span class="line">    router.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>非常简单就能实现一个web服务器的雏形，接着我们在项目开发中再详细介绍gin的使用</p>
<p>开发过程中可能有些内容介绍不够全面，如果想看详细文档可以在下面网址查看：</p>
<p>github原始地址：<a href="https://github.com/gin-gonic/gin">https://github.com/gin-gonic/gin</a></p>
<p>github补充示例地址：<a href="https://github.com/gin-gonic/examples/">https://github.com/gin-gonic/examples/</a></p>
<p>gin中文文档：<a href="https://www.kancloud.cn/shuangdeyu/gin_book/949413">https://www.kancloud.cn/shuangdeyu/gin_book/949413</a></p>
</blockquote>
<h3 id="2-2开发前准备"><a href="#2-2开发前准备" class="headerlink" title="2.2开发前准备"></a>2.2开发前准备</h3><h4 id="2-2-1创建工具类文件夹"><a href="#2-2-1创建工具类文件夹" class="headerlink" title="2.2.1创建工具类文件夹"></a>2.2.1创建工具类文件夹</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">创建工具函数文件夹</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir utils</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进入文件夹创建文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> utils</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置文件读取函数文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim config.go</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 错误码文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim error.go</span></span><br></pre></td></tr></table></figure>

<p>错误码文件error.go内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> utils</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    RECODE_OK         = <span class="string">&quot;0&quot;</span></span><br><span class="line">    RECODE_DBERR      = <span class="string">&quot;4001&quot;</span></span><br><span class="line">    RECODE_NODATA     = <span class="string">&quot;4002&quot;</span></span><br><span class="line">    RECODE_DATAEXIST  = <span class="string">&quot;4003&quot;</span></span><br><span class="line">    RECODE_DATAERR    = <span class="string">&quot;4004&quot;</span></span><br><span class="line"></span><br><span class="line">    RECODE_SESSIONERR = <span class="string">&quot;4101&quot;</span></span><br><span class="line">    RECODE_LOGINERR   = <span class="string">&quot;4102&quot;</span></span><br><span class="line">    RECODE_PARAMERR   = <span class="string">&quot;4103&quot;</span></span><br><span class="line">    RECODE_USERONERR  = <span class="string">&quot;4104&quot;</span></span><br><span class="line">    RECODE_ROLEERR    = <span class="string">&quot;4105&quot;</span></span><br><span class="line">    RECODE_PWDERR     = <span class="string">&quot;4106&quot;</span></span><br><span class="line">    RECODE_USERERR    = <span class="string">&quot;4107&quot;</span></span><br><span class="line">    RECODE_SMSERR     = <span class="string">&quot;4108&quot;</span></span><br><span class="line">    RECODE_MOBILEERR  = <span class="string">&quot;4109&quot;</span></span><br><span class="line"></span><br><span class="line">    RECODE_REQERR     = <span class="string">&quot;4201&quot;</span></span><br><span class="line">    RECODE_IPERR      = <span class="string">&quot;4202&quot;</span></span><br><span class="line">    RECODE_THIRDERR   = <span class="string">&quot;4301&quot;</span></span><br><span class="line">    RECODE_IOERR      = <span class="string">&quot;4302&quot;</span></span><br><span class="line">    RECODE_SERVERERR  = <span class="string">&quot;4500&quot;</span></span><br><span class="line">    RECODE_UNKNOWERR  = <span class="string">&quot;4501&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> recodeText = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;</span><br><span class="line">    RECODE_OK:         <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">    RECODE_DBERR:      <span class="string">&quot;数据库查询错误&quot;</span>,</span><br><span class="line">    RECODE_NODATA:     <span class="string">&quot;无数据&quot;</span>,</span><br><span class="line">    RECODE_DATAEXIST:  <span class="string">&quot;数据已存在&quot;</span>,</span><br><span class="line">    RECODE_DATAERR:    <span class="string">&quot;数据错误&quot;</span>,</span><br><span class="line">    RECODE_SESSIONERR: <span class="string">&quot;用户未登录&quot;</span>,</span><br><span class="line">    RECODE_LOGINERR:   <span class="string">&quot;用户登录失败&quot;</span>,</span><br><span class="line">    RECODE_PARAMERR:   <span class="string">&quot;参数错误&quot;</span>,</span><br><span class="line">    RECODE_USERERR:    <span class="string">&quot;用户不存在或未激活&quot;</span>,</span><br><span class="line">    RECODE_USERONERR:  <span class="string">&quot;用户已经注册&quot;</span>,</span><br><span class="line">    RECODE_ROLEERR:    <span class="string">&quot;用户身份错误&quot;</span>,</span><br><span class="line">    RECODE_PWDERR:     <span class="string">&quot;密码错误&quot;</span>,</span><br><span class="line">    RECODE_REQERR:     <span class="string">&quot;非法请求或请求次数受限&quot;</span>,</span><br><span class="line">    RECODE_IPERR:      <span class="string">&quot;IP受限&quot;</span>,</span><br><span class="line">    RECODE_THIRDERR:   <span class="string">&quot;第三方系统错误&quot;</span>,</span><br><span class="line">    RECODE_IOERR:      <span class="string">&quot;文件读写错误&quot;</span>,</span><br><span class="line">    RECODE_SERVERERR:  <span class="string">&quot;内部错误&quot;</span>,</span><br><span class="line">    RECODE_UNKNOWERR:  <span class="string">&quot;未知错误&quot;</span>,</span><br><span class="line">    RECODE_SMSERR:     <span class="string">&quot;短信失败&quot;</span>,</span><br><span class="line">    RECODE_MOBILEERR:  <span class="string">&quot;手机号错误&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RecodeText</span><span class="params">(code <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    str, ok := recodeText[code]</span><br><span class="line">    <span class="keyword">if</span> ok &#123;</span><br><span class="line">        <span class="keyword">return</span> str</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> recodeText[RECODE_UNKNOWERR]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>配置文件内容，等到我们写业务代码的时候继续补充。</p>
<h4 id="2-2-2创建数据库和表"><a href="#2-2-2创建数据库和表" class="headerlink" title="2.2.2创建数据库和表"></a>2.2.2创建数据库和表</h4><p>先创建一个文件夹，用来存放数据库文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir models</span></span><br><span class="line"><span class="meta">#</span><span class="bash">创建数据库文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim models.go</span></span><br></pre></td></tr></table></figure>

<p>数据库文件models.go文件内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> model</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/jinzhu/gorm&quot;</span></span><br><span class="line">    _ <span class="string">&quot;github.com/jinzhu/gorm/dialects/mysql&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 用户 table_name = user */</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">    ID            <span class="keyword">int</span>                                  <span class="comment">//用户编号</span></span><br><span class="line">    Name          <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:32;unique&quot;`</span>           <span class="comment">//用户名</span></span><br><span class="line">    Password_hash <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:128&quot; `</span>      <span class="comment">//用户密码加密的</span></span><br><span class="line">    Mobile        <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:11;unique&quot; `</span> <span class="comment">//手机号</span></span><br><span class="line">    Real_name     <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:32&quot; `</span>      <span class="comment">//真实姓名  实名认证</span></span><br><span class="line">    Id_card       <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:20&quot; `</span>        <span class="comment">//身份证号  实名认证</span></span><br><span class="line">    Avatar_url    <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:256&quot; `</span>    <span class="comment">//用户头像路径       通过fastdfs进行图片存储</span></span><br><span class="line">    Houses        []*House         <span class="comment">//用户发布的房屋信息  一个人多套房</span></span><br><span class="line">    Orders        []*OrderHouse    <span class="comment">//用户下的订单       一个人多次订单</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 房屋信息 table_name = house */</span></span><br><span class="line"><span class="keyword">type</span> House <span class="keyword">struct</span> &#123;</span><br><span class="line">    gorm.Model                     <span class="comment">//房屋编号</span></span><br><span class="line">    UserId          <span class="keyword">uint</span>           <span class="comment">//房屋主人的用户编号  与用户进行关联</span></span><br><span class="line">    AreaId          <span class="keyword">uint</span>           <span class="comment">//归属地的区域编号   和地区表进行关联</span></span><br><span class="line">    Title           <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:64&quot; `</span>         <span class="comment">//房屋标题</span></span><br><span class="line">    Address         <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:512&quot;`</span>         <span class="comment">//地址</span></span><br><span class="line">    Room_count      <span class="keyword">int</span>           <span class="string">`gorm:&quot;default:1&quot; `</span>       <span class="comment">//房间数目</span></span><br><span class="line">    Acreage         <span class="keyword">int</span>           <span class="string">`gorm:&quot;default:0&quot; json:&quot;acreage&quot;`</span>                   <span class="comment">//房屋总面积</span></span><br><span class="line">    Price           <span class="keyword">int</span>           <span class="string">`json:&quot;price&quot;`</span></span><br><span class="line">    Unit            <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:32;default:&#x27;&#x27;&quot; json:&quot;unit&quot;`</span>             <span class="comment">//房屋单元,如 几室几厅</span></span><br><span class="line">    Capacity        <span class="keyword">int</span>           <span class="string">`gorm:&quot;default:1&quot; json:&quot;capacity&quot;`</span>                   <span class="comment">//房屋容纳的总人数</span></span><br><span class="line">    Beds            <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:64;default:&#x27;&#x27;&quot; json:&quot;beds&quot;`</span>             <span class="comment">//房屋床铺的配置</span></span><br><span class="line">    Deposit         <span class="keyword">int</span>           <span class="string">`gorm:&quot;default:0&quot; json:&quot;deposit&quot;`</span>                   <span class="comment">//押金</span></span><br><span class="line">    Min_days        <span class="keyword">int</span>           <span class="string">`gorm:&quot;default:1&quot; json:&quot;min_days&quot;`</span>                   <span class="comment">//最少入住的天数</span></span><br><span class="line">    Max_days        <span class="keyword">int</span>           <span class="string">`gorm:&quot;default:0&quot; json:&quot;max_days&quot;`</span>                   <span class="comment">//最多入住的天数 0表示不限制</span></span><br><span class="line">    Order_count     <span class="keyword">int</span>           <span class="string">`gorm:&quot;default:0&quot; json:&quot;order_count&quot;`</span>               <span class="comment">//预定完成的该房屋的订单数</span></span><br><span class="line">    Index_image_url <span class="keyword">string</span>        <span class="string">`gorm:&quot;size:256;default:&#x27;&#x27;&quot; json:&quot;index_image_url&quot;`</span>              <span class="comment">//房屋主图片路径</span></span><br><span class="line">    Facilities      []*Facility   <span class="string">`gorm:&quot;many2many:house_facilities&quot; json:&quot;facilities&quot;`</span>                 <span class="comment">//房屋设施   与设施表进行关联</span></span><br><span class="line">    Images          []*HouseImage <span class="string">`json:&quot;img_urls&quot;`</span>                      <span class="comment">//房屋的图片   除主要图片之外的其他图片地址</span></span><br><span class="line">    Orders          []*OrderHouse <span class="string">`json:&quot;orders&quot;`</span>                        <span class="comment">//房屋的订单    与房屋表进行管理</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 区域信息 table_name = area */</span>  <span class="comment">//区域信息是需要我们手动添加到数据库中的</span></span><br><span class="line"><span class="keyword">type</span> Area <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id     <span class="keyword">int</span>      <span class="string">`json:&quot;aid&quot;`</span>                        <span class="comment">//区域编号     1    2</span></span><br><span class="line">    Name   <span class="keyword">string</span>   <span class="string">`gorm:&quot;size:32&quot; json:&quot;aname&quot;`</span>       <span class="comment">//区域名字     昌平 海淀</span></span><br><span class="line">    Houses []*House <span class="string">`json:&quot;houses&quot;`</span> <span class="comment">//区域所有的房屋   与房屋表进行关联</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设施信息 table_name = &quot;facility&quot;*/</span>    <span class="comment">//设施信息 需要我们提前手动添加的</span></span><br><span class="line"><span class="keyword">type</span> Facility <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id     <span class="keyword">int</span>      <span class="string">`json:&quot;fid&quot;`</span>     <span class="comment">//设施编号</span></span><br><span class="line">    Name   <span class="keyword">string</span>   <span class="string">`gorm:&quot;size:32&quot;`</span> <span class="comment">//设施名字</span></span><br><span class="line">    Houses []*House  <span class="comment">//都有哪些房屋有此设施  与房屋表进行关联的</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 房屋图片 table_name = &quot;house_image&quot;*/</span></span><br><span class="line"><span class="keyword">type</span> HouseImage <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id    <span class="keyword">int</span>    <span class="string">`json:&quot;house_image_id&quot;`</span>         <span class="comment">//图片id</span></span><br><span class="line">    Url   <span class="keyword">string</span> <span class="string">`gorm:&quot;size:256&quot; json:&quot;url&quot;`</span>    <span class="comment">//图片url     存放我们房屋的图片</span></span><br><span class="line">    HouseId <span class="keyword">uint</span> <span class="string">`json:&quot;house_id&quot;`</span> <span class="comment">//图片所属房屋编号</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 订单 table_name = order */</span></span><br><span class="line"><span class="keyword">type</span> OrderHouse <span class="keyword">struct</span> &#123;</span><br><span class="line">    gorm.Model               <span class="comment">//订单编号</span></span><br><span class="line">    UserId        <span class="keyword">uint</span>     <span class="string">`json:&quot;user_id&quot;`</span>  <span class="comment">//下单的用户编号   //与用户表进行关联</span></span><br><span class="line">    HouseId       <span class="keyword">uint</span>    <span class="string">`json:&quot;house_id&quot;`</span> <span class="comment">//预定的房间编号   //与房屋信息进行关联</span></span><br><span class="line">    Begin_date  time.Time <span class="string">`gorm:&quot;type:datetime&quot;`</span>          <span class="comment">//预定的起始时间</span></span><br><span class="line">    End_date    time.Time <span class="string">`gorm:&quot;type:datetime&quot;`</span>          <span class="comment">//预定的结束时间</span></span><br><span class="line">    Days        <span class="keyword">int</span>       <span class="comment">//预定总天数</span></span><br><span class="line">    House_price <span class="keyword">int</span>       <span class="comment">//房屋的单价</span></span><br><span class="line">    Amount      <span class="keyword">int</span>       <span class="comment">//订单总金额</span></span><br><span class="line">    Status      <span class="keyword">string</span>    <span class="string">`gorm:&quot;default:&#x27;WAIT_ACCEPT&#x27;&quot;`</span>   <span class="comment">//订单状态</span></span><br><span class="line">    Comment     <span class="keyword">string</span>    <span class="string">`gorm:&quot;size:512&quot;`</span>                <span class="comment">//订单评论</span></span><br><span class="line">    Credit      <span class="keyword">bool</span>        <span class="comment">//表示个人征信情况 true表示良好</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitDb</span><span class="params">()</span><span class="params">(*gorm.DB,error)</span></span>&#123;</span><br><span class="line">    <span class="comment">//sql.Open()</span></span><br><span class="line">    db,err := gorm.Open(<span class="string">&quot;mysql&quot;</span>,<span class="string">&quot;root:123456@tcp(127.0.0.1:3306)/test?charset=utf8&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> db.Close()</span><br><span class="line">    <span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line">        db.SingularTable(<span class="literal">true</span>)</span><br><span class="line">        db.AutoMigrate(<span class="built_in">new</span>(User),<span class="built_in">new</span>(House),<span class="built_in">new</span>(Area),<span class="built_in">new</span>(Facility),<span class="built_in">new</span>(HouseImage),<span class="built_in">new</span>(OrderHouse))</span><br><span class="line">        <span class="comment">/*db.DB().SetMaxIdleConns(10)</span></span><br><span class="line"><span class="comment">        db.DB().SetConnMaxLifetime(100)*/</span></span><br><span class="line">        <span class="keyword">return</span> db,<span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span> ,err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里我们使用gorm来创建数据库表</p>
</blockquote>
<h4 id="2-2-3导入前端页面并展示"><a href="#2-2-3导入前端页面并展示" class="headerlink" title="2.2.3导入前端页面并展示"></a>2.2.3导入前端页面并展示</h4><p>把我们的html.zip拷贝过去，然后解压到对应目录。接着我们就可以开发具体业务了。</p>
<p>然后修改main.go文件，内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//初始化路由</span></span><br><span class="line">    router := gin.Default()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//映射静态资源</span></span><br><span class="line">    router.Static(<span class="string">&quot;/home&quot;</span>,<span class="string">&quot;html&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//开启监听</span></span><br><span class="line">    router.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>设置静态路径有三个方法，分别是：</p>
<p>Static:两个参数，第一个参数是资源路径，第二个参数是指定的文件夹,示例：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">router.Static(<span class="string">&quot;/assets&quot;</span>, <span class="string">&quot;./assets&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>StaticFS：两个参数，第一个参数是资源路径，第二个参数是http.Dir(),示例代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">router.StaticFS(<span class="string">&quot;/more_static&quot;</span>, http.Dir(<span class="string">&quot;my_file_system&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>StaticFile:俩个参数，第一个参数是资源路径，第二个参数是具体的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">router.StaticFile(&quot;/favicon.ico&quot;, &quot;./resources/favicon.ico&quot;)</span><br></pre></td></tr></table></figure>
</blockquote>
<p>运行项目，打开浏览器输入网址<code>127.0.0.1:8080/home</code>，查看页面如下：</p>
<p><img src="assets%5C1565488579627.png" alt="1565488579627"></p>
<p>按f12打开开发者工具，然后再次刷新页面，结果如下：</p>
<p><img src="assets%5C1565488723410.png" alt="1565488723410"></p>
<p>这些报红的页面就是需要我们接着来实现的具体功能，让我们先从获取地域信息开始！</p>
<h3 id="2-3获取地域信息"><a href="#2-3获取地域信息" class="headerlink" title="2.3获取地域信息"></a>2.3获取地域信息</h3><h4 id="2-3-1接口定义如下"><a href="#2-3-1接口定义如下" class="headerlink" title="2.3.1接口定义如下"></a><strong>2.3.1接口定义如下</strong></h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: GET</span><br><span class="line">url:api/v1<span class="number">.0</span>/areas</span><br><span class="line">#data:</span><br><span class="line">no input data</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;OK&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: [</span><br><span class="line">    &#123;<span class="attr">&quot;aid&quot;</span>: <span class="number">1</span>, <span class="attr">&quot;aname&quot;</span>: <span class="string">&quot;东城区&quot;</span>&#125;, </span><br><span class="line">    &#123;<span class="attr">&quot;aid&quot;</span>: <span class="number">2</span>, <span class="attr">&quot;aname&quot;</span>: <span class="string">&quot;西城区&quot;</span>&#125;, </span><br><span class="line">    &#123;<span class="attr">&quot;aid&quot;</span>: <span class="number">3</span>, <span class="attr">&quot;aname&quot;</span>: <span class="string">&quot;通州区&quot;</span>&#125;, </span><br><span class="line">    &#123;<span class="attr">&quot;aid&quot;</span>: <span class="number">4</span>, <span class="attr">&quot;aname&quot;</span>: <span class="string">&quot;顺义区&quot;</span>&#125;] </span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line">#注册失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-3-2业务流程图"><a href="#2-3-2业务流程图" class="headerlink" title="2.3.2业务流程图"></a><strong>2.3.2业务流程图</strong></h4><p><img src="assets%5C1565332723582.png" alt="1565332723582"></p>
<h4 id="2-3-3添加对应路由和业务处理"><a href="#2-3-3添加对应路由和业务处理" class="headerlink" title="2.3.3添加对应路由和业务处理"></a>2.3.3添加对应路由和业务处理</h4><p>在<code>main.go</code>页面进行修改，添加对应路由和处理函数，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//初始化路由</span></span><br><span class="line">    router := gin.Default()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//映射静态资源</span></span><br><span class="line">    router.Static(<span class="string">&quot;/home&quot;</span>,<span class="string">&quot;html&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加动态路由</span></span><br><span class="line">    r1 := router.Group(<span class="string">&quot;api/v1.0&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        r1.GET(<span class="string">&quot;/areas&quot;</span>,controller.GetArea)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//开启监听</span></span><br><span class="line">    router.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>在使用gin开发时，一般情况会按照模块把路由分为不同的组，然后在组内再做路由匹配。</p>
<p>使用路由匹配对应函数，函数格式必须是func(*gin.Context)</p>
</blockquote>
<p>接着我们来实现对应的控制器方法，方法名需要参考开发文档，和开发文档保持一直。</p>
<h4 id="2-3-4具体业务实现"><a href="#2-3-4具体业务实现" class="headerlink" title="2.3.4具体业务实现"></a>2.3.4具体业务实现</h4><p>这里我们把获取地域信息业务放到服务中实现，然后用远程调用。首先我们来创建一个服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> srv protect/getArea</span></span><br></pre></td></tr></table></figure>

<p>然后去修改proto文件并编译自动生成的proto文件：</p>
<p>修改后的proto文件如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> go.micro.srv.getArea;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">GetArea</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> Call(Request) <span class="keyword">returns</span> (Response) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">repeated</span> area data = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">area</span></span>&#123;</span><br><span class="line">    <span class="built_in">int32</span> aid = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> aname = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>根据接口文档定义的传入数据和传出数据定义protobuf格式，然后编译proto文件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> make proto</span></span><br></pre></td></tr></table></figure>

<p>然后删除掉main.go中的无用代码。进handler.go中进行代码实现。</p>
<p><strong>业务分析</strong></p>
<p>从业务流程图可知，我们需要从redis中获取数据，获取到数据就把数据通过json打包，传回给前端，获取不到数据，就从mysql中拿数据，拿到数据之后再把用json序列化之后存到redis中，然后把数据返回给前端。</p>
<p>那我们首先从redis中获取数据,这里我们直接用redis连接池来实现。其实在我们调用的redis包中有redis连接池的接口，我们直接使用即可，redis连接池代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> RedisClient *redis.Pool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitRedis</span><span class="params">()</span></span>&#123;</span><br><span class="line">    RedisClient = &amp;redis.Pool&#123;</span><br><span class="line">        <span class="comment">//设置redis连接池最大空闲链接数</span></span><br><span class="line">        MaxIdle:utils.G_redis_maxidel,</span><br><span class="line">        <span class="comment">//设置redis连接池最大同时链接数</span></span><br><span class="line">        MaxActive:utils.G_redis_maxactive,</span><br><span class="line">        <span class="comment">//设置redis连接池最大空闲时间</span></span><br><span class="line">        IdleTimeout:utils.G_redis_idletimeout,</span><br><span class="line">        <span class="comment">//连接redis</span></span><br><span class="line">        Dial: <span class="function"><span class="keyword">func</span><span class="params">()</span> <span class="params">(redis.Conn, error)</span></span> &#123;</span><br><span class="line">            conn,err :=redis.Dial(<span class="string">&quot;tcp&quot;</span>,utils.G_redis_addr+utils.G_redis_port)</span><br><span class="line">            <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">nil</span>,err</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//设置选中哪个数据库</span></span><br><span class="line">            conn.Do(<span class="string">&quot;select&quot;</span>,utils.G_redis_db)</span><br><span class="line">            <span class="keyword">return</span> conn,<span class="literal">nil</span></span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从redis中获取数据，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//连接redis</span></span><br><span class="line">    redisPool:=model.InitRedis()</span><br><span class="line">    client := redisPool.Get()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> client.Close()</span><br><span class="line"></span><br><span class="line">    areaResp,err := redis.Bytes(client.Do(<span class="string">&quot;get&quot;</span>,<span class="string">&quot;areas&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>校验是否能够获取到数据，如果获取不到，从mysql中获取代码，然后存储到redis中，具体代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> areas []model.Area</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(areaResp) == <span class="number">0</span>&#123;</span><br><span class="line">    <span class="comment">//第一次从mysql中获取数据 调用封装的函数</span></span><br><span class="line">    areas,err = model.GetAllArea()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        resp.Errno = utils.RECODE_DBERR</span><br><span class="line">        resp.Errmsg = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//对areas数据编码</span></span><br><span class="line">    areaBytes ,err := json.Marshal(areas)</span><br><span class="line">    <span class="keyword">if</span> err !=<span class="literal">nil</span>&#123;</span><br><span class="line">        resp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        resp.Errno = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存储到redis中</span></span><br><span class="line">    _,err = redis.String(client.Do(<span class="string">&quot;set&quot;</span>,<span class="string">&quot;areas&quot;</span>,areaBytes))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        resp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        resp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    err = json.Unmarshal(areaResp,&amp;areas)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        resp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        resp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里我们把mysql操作封装成函数，放到model包中。具体实现如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetAllArea</span><span class="params">(db*gorm.DB)</span><span class="params">([]Area,error)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> areas []Area</span><br><span class="line">    err := db.Find(&amp;areas).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>,err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> areas,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>gorm获取数据方法非常多，常见的方法如下：</p>
<p>获取一条数据：db.First(),db.Last()</p>
<p>获取所有数据：db.Find()</p>
<p>指定查询条件：db.Where(“name=?”,”xiaohong”).Find()或者db.Find(user,”name = ?”,”xiaohong”)</p>
<p>获取部分字段数据：db.Table(“user”).select(“name”,”age”).where(“name=?”,”xiaohong”).Scan(自定义结构体)</p>
</blockquote>
<p>完整代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//初始化返回值</span></span><br><span class="line">    resp.Errno = utils.RECODE_OK</span><br><span class="line">    resp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//连接redis</span></span><br><span class="line">    redisPool:=model.InitRedis()</span><br><span class="line">    client := redisPool.Get()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> client.Close()</span><br><span class="line"></span><br><span class="line">    areaResp,err := redis.Bytes(client.Do(<span class="string">&quot;get&quot;</span>,<span class="string">&quot;areas&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> areas []model.Area</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(areaResp) == <span class="number">0</span>&#123;</span><br><span class="line">        <span class="comment">//第一次从mysql中获取数据</span></span><br><span class="line">        db,_ :=model.InitDb()</span><br><span class="line">        areas,err = model.GetAllArea(db)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            resp.Errno = utils.RECODE_DBERR</span><br><span class="line">            resp.Errmsg = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//对areas数据编码</span></span><br><span class="line">        areaBytes ,err := json.Marshal(areas)</span><br><span class="line">        <span class="keyword">if</span> err !=<span class="literal">nil</span>&#123;</span><br><span class="line">            resp.Errno = utils.RECODE_DATAERR</span><br><span class="line">            resp.Errno = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//存储到redis中</span></span><br><span class="line">        _,err = redis.String(client.Do(<span class="string">&quot;set&quot;</span>,<span class="string">&quot;areas&quot;</span>,areaBytes))</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            resp.Errno = utils.RECODE_DATAERR</span><br><span class="line">            resp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        err = json.Unmarshal(areaResp,&amp;areas)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            resp.Errno = utils.RECODE_DATAERR</span><br><span class="line">            resp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _,v := <span class="keyword">range</span> areas&#123;</span><br><span class="line">        temp := getArea.Area&#123;</span><br><span class="line">            Aid:<span class="keyword">int32</span>(v.Id),</span><br><span class="line">            Aname:v.Name,</span><br><span class="line">        &#125;</span><br><span class="line">        resp.Data = <span class="built_in">append</span>(resp.Data,&amp;temp)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br></pre></td></tr></table></figure>

<h4 id="2-3-5web端回调服务接口"><a href="#2-3-5web端回调服务接口" class="headerlink" title="2.3.5web端回调服务接口"></a>2.3.5web端回调服务接口</h4><p>现在服务接口写完了，我们可以在web端调用一下这个接口，调用的方法和我们以前用go-micro方法一样，具体代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetArea</span><span class="params">(ctx *gin.Context)</span></span>&#123;</span><br><span class="line">    <span class="comment">//初始化service</span></span><br><span class="line">    reg := consul.NewRegistry(<span class="function"><span class="keyword">func</span><span class="params">(options *registry.Options)</span></span> &#123;</span><br><span class="line">        options.Addrs = []<span class="keyword">string</span>&#123;<span class="string">&quot;127.0.0.1:8500&quot;</span>&#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    service := grpc.NewService(</span><br><span class="line">        micro.Registry(reg),</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取操作客户端</span></span><br><span class="line">    grpcClient := getArea.NewGetAreaService(<span class="string">&quot;go.micro.srv.getArea&quot;</span>,service.Client())</span><br><span class="line">    <span class="comment">//回调函数</span></span><br><span class="line">    resp ,err:= grpcClient.Call(context.TODO(),&amp;getArea.Request&#123;&#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        resp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        resp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>开启web服务和获取地域信息服务，然后再打开我们页面，点击选择城区，显示如下：</p>
<p><img src="assets%5C1565529172641.png" alt="1565529172641"></p>
<blockquote>
<p>地域信息就获取到了</p>
</blockquote>
<h3 id="2-4获取验证码业务实现"><a href="#2-4获取验证码业务实现" class="headerlink" title="2.4获取验证码业务实现"></a>2.4获取验证码业务实现</h3><p>要显示注册页面，需要先把注册按钮显示出来，这里我们需要先给session请求回个假数据，然后再去实现注册相关业务。</p>
<h4 id="2-4-1模拟回复session请求"><a href="#2-4-1模拟回复session请求" class="headerlink" title="2.4.1模拟回复session请求"></a>2.4.1模拟回复session请求</h4><p>根据开发文档我们知道session的请求是<code>api/v1.0/session</code>,失败的话返回数据为，errno和errmsg。</p>
<p>我们先在web端给对应路由做匹配，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.GET(<span class="string">&quot;/session&quot;</span>,controller.GetSession)</span><br></pre></td></tr></table></figure>

<p>然后在控制器中实现GetSession函数，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取session信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetSession</span><span class="params">(ctx*gin.Context)</span></span>&#123;</span><br><span class="line">    resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化返回值</span></span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SESSIONERR</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SESSIONERR)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数据</span></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这时候再刷新页面，显示如下：</p>
<p><img src="assets%5C1565531933966.png" alt="1565531933966"></p>
<p>接着我们点击注册按钮，显示注册页面，页面如下：</p>
<p><img src="assets%5C1565531989744.png" alt="1565531989744"></p>
<h4 id="2-4-2获取验证码图片"><a href="#2-4-2获取验证码图片" class="headerlink" title="2.4.2获取验证码图片"></a>2.4.2获取验证码图片</h4><p>进入注册页面之后，在开发者工具中，会发现下面的问题：</p>
<p><img src="assets%5C1565532096094.png" alt="1565532096094"></p>
<p>验证码请求未实现，接着我们就来实现验证码服务。首先是创建服务，命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> srv project/getImageCode</span></span><br></pre></td></tr></table></figure>

<p>然后根据开发文档规定的请求参数和返回值修改proto文件并编译，修改之后的proto文件如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> <span class="keyword">go</span>.micro.srv.getImageCode;</span><br><span class="line"></span><br><span class="line">service GetImageCode &#123;</span><br><span class="line">    rpc Call(Request) returns (Response) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Request &#123;</span><br><span class="line">    <span class="keyword">string</span> uuid = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Response &#123;</span><br><span class="line">    <span class="keyword">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">string</span> msg = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-4-3业务流程图"><a href="#2-4-3业务流程图" class="headerlink" title="2.4.3业务流程图"></a>2.4.3业务流程图</h4><p><img src="assets%5C1542885416102.png"></p>
<h4 id="2-4-4具体业务实现"><a href="#2-4-4具体业务实现" class="headerlink" title="2.4.4具体业务实现"></a>2.4.4具体业务实现</h4><p>根据流程图分析可知，我们需要生成验证码图片，然后把验证码图片中的随机数和传入的uuid一起存到redis中。那我们先来看看图片验证码如何生成。我们这里选择的是<code>github.com/afocus/captcha</code>来实现验证码功能。</p>
<p>要使用这个包首先当然是去下载这个包，下载命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go get -u -v github.com/afocus/captcha</span></span><br></pre></td></tr></table></figure>

<p>然后我们来看一下这个包的一个简单示例代码，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cap</span> = captcha.New()</span><br><span class="line"><span class="comment">// 可以设置多个字体 或使用cap.AddFont(&quot;xx.ttf&quot;)追加</span></span><br><span class="line"><span class="built_in">cap</span>.SetFont(<span class="string">&quot;comic.ttf&quot;</span>, <span class="string">&quot;xxx.ttf&quot;</span>)</span><br><span class="line"><span class="comment">// 设置验证码大小</span></span><br><span class="line"><span class="built_in">cap</span>.SetSize(<span class="number">128</span>, <span class="number">64</span>)</span><br><span class="line"><span class="comment">// 设置干扰强度</span></span><br><span class="line"><span class="built_in">cap</span>.SetDisturbance(captcha.MEDIUM)</span><br><span class="line"><span class="comment">// 设置前景色 可以多个 随机替换文字颜色 默认黑色</span></span><br><span class="line"><span class="built_in">cap</span>.SetFrontColor(color.RGBA&#123;<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>&#125;)</span><br><span class="line"><span class="comment">// 设置背景色 可以多个 随机替换背景色 默认白色</span></span><br><span class="line"><span class="built_in">cap</span>.SetBkgColor(color.RGBA&#123;<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">0</span>, <span class="number">153</span>, <span class="number">0</span>, <span class="number">255</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置验证码个数，以及格式</span></span><br><span class="line">img,str := <span class="built_in">cap</span>.Create(<span class="number">4</span>,captcha.NUM)</span><br></pre></td></tr></table></figure>

<p>我们可以先来跑一下这个包给我们提供的示例代码，代码路径为：代码路径在<code>github.com/afocus/captcha/examples/main.go</code>,具体代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cap</span> = captcha.New()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err := <span class="built_in">cap</span>.SetFont(<span class="string">&quot;comic.ttf&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   //We can load font not only from localfile, but also from any []byte slice</span></span><br><span class="line"><span class="comment">       fontContenrs, err := ioutil.ReadFile(&quot;comic.ttf&quot;)</span></span><br><span class="line"><span class="comment">       if err != nil &#123;</span></span><br><span class="line"><span class="comment">           panic(err.Error())</span></span><br><span class="line"><span class="comment">       &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">       err = cap.AddFontFromBytes(fontContenrs)</span></span><br><span class="line"><span class="comment">       if err != nil &#123;</span></span><br><span class="line"><span class="comment">           panic(err.Error())</span></span><br><span class="line"><span class="comment">       &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cap</span>.SetSize(<span class="number">128</span>, <span class="number">64</span>)</span><br><span class="line"><span class="built_in">cap</span>.SetDisturbance(captcha.MEDIUM)</span><br><span class="line"><span class="built_in">cap</span>.SetFrontColor(color.RGBA&#123;<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>&#125;)</span><br><span class="line"><span class="built_in">cap</span>.SetBkgColor(color.RGBA&#123;<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">0</span>, <span class="number">153</span>, <span class="number">0</span>, <span class="number">255</span>&#125;)</span><br><span class="line"></span><br><span class="line">http.HandleFunc(<span class="string">&quot;/r&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    img, str := <span class="built_in">cap</span>.Create(<span class="number">6</span>, captcha.ALL)</span><br><span class="line">    png.Encode(w, img)</span><br><span class="line">    <span class="built_in">println</span>(str)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">http.HandleFunc(<span class="string">&quot;/c&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    str := r.URL.RawQuery</span><br><span class="line">    img := <span class="built_in">cap</span>.CreateCustom(str)</span><br><span class="line">    png.Encode(w, img)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">http.ListenAndServe(<span class="string">&quot;:8086&quot;</span>, <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>代码中共有两种生成图片的方式，一种是生成带验证码的图片，并返回验证码，一种是指定验证码内容，生成图片。</p>
</blockquote>
<p>运行这个代码， 在浏览器中访问，显示如下：</p>
<p><img src="assets%5C1565539693333.png" alt="1565539693333"></p>
<p>根据示例代码，来实现我们的生成验证码服务。具体实现如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取验证码操作对象</span></span><br><span class="line"><span class="built_in">cap</span> := captcha.New()</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置字体库</span></span><br><span class="line"><span class="keyword">if</span> err := <span class="built_in">cap</span>.SetFont(<span class="string">&quot;comic.ttf&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err.Error())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置验证码属性</span></span><br><span class="line"><span class="built_in">cap</span>.SetSize(<span class="number">128</span>, <span class="number">64</span>)</span><br><span class="line"><span class="built_in">cap</span>.SetDisturbance(captcha.MEDIUM)</span><br><span class="line"><span class="built_in">cap</span>.SetFrontColor(color.RGBA&#123;<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>&#125;)</span><br><span class="line"><span class="built_in">cap</span>.SetBkgColor(color.RGBA&#123;<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>&#125;, color.RGBA&#123;<span class="number">0</span>, <span class="number">153</span>, <span class="number">0</span>, <span class="number">255</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成图片</span></span><br><span class="line">img, str := <span class="built_in">cap</span>.Create(<span class="number">6</span>, captcha.ALL)</span><br><span class="line"><span class="comment">//获取到验证码,把验证码结合uuid写入redis中</span></span><br><span class="line">redisPool := model.InitRedis()</span><br><span class="line">redisConn := redisPool.Get()</span><br><span class="line">redisConn.Do(<span class="string">&quot;setex&quot;</span>,req.Uuid,<span class="number">60</span> * <span class="number">5</span>,str)</span><br><span class="line"></span><br><span class="line"><span class="comment">//把拿到的图片对象序列化成字节切片传递给web</span></span><br><span class="line">imgBuffer,_:=json.Marshal(img)</span><br><span class="line">rsp.Msg = imgBuffer</span><br></pre></td></tr></table></figure>

<h4 id="2-4-5web端接收数据并传递给浏览器"><a href="#2-4-5web端接收数据并传递给浏览器" class="headerlink" title="2.4.5web端接收数据并传递给浏览器"></a>2.4.5web端接收数据并传递给浏览器</h4><p>首先我们现在web端对路由做一个匹配，然后指定操作函数，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.GET(<span class="string">&quot;/imagecode/:uuid&quot;</span>,controller.GetImageCode)</span><br></pre></td></tr></table></figure>

<p>然后我们来实现GetImageCode函数。首先我们需要获取请求传过来的数据，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取数据</span></span><br><span class="line">uuid := ctx.Param(<span class="string">&quot;uuid&quot;</span>)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>gin获取前端传递的数据有不同的方法，具体如下：</p>
<p>获取路径中的参数为：ctx.Param(“name”)</p>
<p>获取get请求传递的数据，方法为：ctx.Query(“lastname”) ,ctx.DefaultQuery(“firstname”, “Guest”)</p>
<p>获取post请求传递的数据，方法为：ctx.PostForm(“message”),c.DefaultPostForm(“nick”, “anonymous”)</p>
<p>需要注意的是post这种获取方法必须是form data传递的才能获取到，如果传递的数据是json的话，我们就需要创建一个对应的结构体，给数据进行绑定，具体操作为：ctx.Bind()或者ctx.BindJSON()</p>
</blockquote>
<p>然后我们调用服务，把uuid传递给服务，并接收数据,代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//链接服务并调用</span></span><br><span class="line">    service := utils.GetGrpcService()</span><br><span class="line">    grpcClent := getImageCode.NewGetImageCodeService(<span class="string">&quot;go.micro.srv.getImageCode&quot;</span>,service.Client())</span><br><span class="line">    resp,err:=grpcClent.Call(context.TODO(),&amp;getImageCode.Request&#123;</span><br><span class="line">        Uuid:uuid,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">        resp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        resp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        ctx.JSON(<span class="number">500</span>,resp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里我们把连接服务的代码封装成一个函数，直接使用即可。</p>
</blockquote>
<p>得到数据之后对数据进行解析，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//解析返回数据为image,传回前端</span></span><br><span class="line">    <span class="keyword">var</span> img captcha.Image</span><br><span class="line">    json.Unmarshal(resp.Msg,&amp;img)</span><br><span class="line">    png.Encode(ctx.Writer,img)</span><br></pre></td></tr></table></figure>

<p>全部代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取验证码图片</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetImageCode</span><span class="params">(ctx*gin.Context)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    uuid := ctx.Param(<span class="string">&quot;uuid&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//链接服务并调用</span></span><br><span class="line">    service := utils.GetGrpcService()</span><br><span class="line">    grpcClent := getImageCode.NewGetImageCodeService(<span class="string">&quot;go.micro.srv.getImageCode&quot;</span>,service.Client())</span><br><span class="line">    resp,err:=grpcClent.Call(context.TODO(),&amp;getImageCode.Request&#123;</span><br><span class="line">        Uuid:uuid,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">        resp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        resp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        ctx.JSON(<span class="number">500</span>,resp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//解析返回数据为image,传回前端</span></span><br><span class="line">    <span class="keyword">var</span> img captcha.Image</span><br><span class="line">    json.Unmarshal(resp.Msg,&amp;img)</span><br><span class="line">    png.Encode(ctx.Writer,img)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这时候重启项目，访问注册线面，显示如下：</p>
<p><img src="assets%5C1565542977581.png" alt="1565542977581"></p>
<h3 id="2-5获取短信验证码"><a href="#2-5获取短信验证码" class="headerlink" title="2.5获取短信验证码"></a>2.5获取短信验证码</h3><h4 id="2-5-1接口定义"><a href="#2-5-1接口定义" class="headerlink" title="2.5.1接口定义"></a>2.5.1接口定义</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: GET</span><br><span class="line">#<span class="number">111</span>表示的是手机号</span><br><span class="line">url:api/v1<span class="number">.0</span>/smscode/:mobile</span><br><span class="line">url:api/v1<span class="number">.0</span>/smscode/<span class="number">111</span>?  text=<span class="number">248484</span>&amp;id=<span class="number">9</span>cd8faa9<span class="number">-5653</span><span class="number">-4</span>f7c-b653<span class="number">-0</span>a58a8a98c81</span><br><span class="line">data:no input data</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;ok&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">#注册失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;4001&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-5-2业务流程图"><a href="#2-5-2业务流程图" class="headerlink" title="2.5.2业务流程图"></a>2.5.2业务流程图</h4><p><img src="assets%5C1542886924797.png"></p>
<h4 id="2-5-3具体业务实现"><a href="#2-5-3具体业务实现" class="headerlink" title="2.5.3具体业务实现"></a>2.5.3具体业务实现</h4><p>由业务流程图可知，前端会传递uuid和电话号码，首先需要获取一下验证码输入是否正确，如果正确就发送短信，并对短信内容进行缓存，成功返回ok。首先，我们先来创建短信服务，命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> srv project/getSmscd</span></span><br></pre></td></tr></table></figure>

<p>然后根据设计文档中的传入传出参数修改proto文件并编译自动生成的proto文件，修改后的proto文件如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> go.micro.srv.getSmscd;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">GetSmscd</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> Call(Request) <span class="keyword">returns</span> (Response) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> phone = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> text = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">string</span> uuid = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后编译生成对应接口，接着修改main.go文件，具体的和上面两个服务类似，不做重复介绍，重点是我们具体业务的实现。首先我们还是要先验证图片验证码输入是否正确，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//校验验证码输入是否正确</span></span><br><span class="line">redisConn := model.InitRedis().Get()</span><br><span class="line"><span class="keyword">defer</span> redisConn.Close()</span><br><span class="line">code,err := redis.String(redisConn.Do(<span class="string">&quot;get&quot;</span>,req.Uuid))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> code != req.Text&#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后使用传输过来的电话号码进行短信发送，代码借鉴我们品优购的短信发送代码，内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//发送短信</span></span><br><span class="line">    <span class="comment">//初始化客户端  需要accessKey  需要开通申请</span></span><br><span class="line">    client, err := sdk.NewClientWithAccessKey(<span class="string">&quot;default&quot;</span>, <span class="string">&quot;LTAI01Pc2yYrheUc&quot;</span>, <span class="string">&quot;7diQBKg04TxpykIWli4VCVJUZbqmYX&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取6位数随机码</span></span><br><span class="line">    rnd := rand.New(rand.NewSource(time.Now().UnixNano()))</span><br><span class="line">    vcode := fmt.Sprintf(<span class="string">&quot;%06d&quot;</span>, rnd.Int31n(<span class="number">1000000</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化请求对象</span></span><br><span class="line">    request := requests.NewCommonRequest()</span><br><span class="line">    request.Method = <span class="string">&quot;POST&quot;</span><span class="comment">//设置请求方法</span></span><br><span class="line">    request.Scheme = <span class="string">&quot;https&quot;</span> <span class="comment">// https | http   //设置请求协议</span></span><br><span class="line">    request.Domain = <span class="string">&quot;dysmsapi.aliyuncs.com&quot;</span>  <span class="comment">//域名</span></span><br><span class="line">    request.Version = <span class="string">&quot;2017-05-25&quot;</span>            <span class="comment">//版本号</span></span><br><span class="line">    request.ApiName = <span class="string">&quot;SendSms&quot;</span>                <span class="comment">//api名称</span></span><br><span class="line">    request.QueryParams[<span class="string">&quot;PhoneNumbers&quot;</span>] = req.Phone  <span class="comment">//需要发送的电话号码</span></span><br><span class="line">    request.QueryParams[<span class="string">&quot;SignName&quot;</span>] = <span class="string">&quot;品优购&quot;</span>    <span class="comment">//签名名称   需要申请</span></span><br><span class="line">    request.QueryParams[<span class="string">&quot;TemplateCode&quot;</span>] = <span class="string">&quot;SMS_164275022&quot;</span>   <span class="comment">//模板号   需要申请</span></span><br><span class="line">    request.QueryParams[<span class="string">&quot;TemplateParam&quot;</span>] = <span class="string">`&#123;&quot;code&quot;:`</span>+vcode+<span class="string">`&#125;`</span>   <span class="comment">//发送短信验证码</span></span><br><span class="line"></span><br><span class="line">    response, err := client.ProcessCommonRequest(request)  <span class="comment">//发送短信</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>发送成功之后把数据存储到redis中，并返回结果，具体代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//校验是否发送成功,成功之后存储到redis中,失败返回错误信息</span></span><br><span class="line">    <span class="keyword">if</span> response.IsSuccess()&#123;</span><br><span class="line">        redisConn.Do(<span class="string">&quot;setex&quot;</span>,req.Phone+<span class="string">&quot;_code&quot;</span>,<span class="number">60</span> * <span class="number">5</span>,vcode)</span><br><span class="line">        rsp.Errno = utils.RECODE_OK</span><br><span class="line">        rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        rsp.Errno = utils.RECODE_SMSERR</span><br><span class="line">        rsp.Errmsg = utils.RecodeText(utils.RECODE_SMSERR)</span><br><span class="line">        <span class="keyword">return</span> errors.New(<span class="string">&quot;发送短信失败&quot;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>全部代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//校验验证码输入是否正确</span></span><br><span class="line">redisConn := model.InitRedis().Get()</span><br><span class="line"><span class="keyword">defer</span> redisConn.Close()</span><br><span class="line">code,err := redis.String(redisConn.Do(<span class="string">&quot;get&quot;</span>,req.Uuid))</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> code != req.Text&#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送短信</span></span><br><span class="line"><span class="comment">//初始化客户端  需要accessKey  需要开通申请</span></span><br><span class="line">client, err := sdk.NewClientWithAccessKey(<span class="string">&quot;default&quot;</span>, <span class="string">&quot;LTAI01Pc2yYrheUc&quot;</span>, <span class="string">&quot;7diQBKg04TxpykIWli4VCVJUZbqmYX&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取6位数随机码</span></span><br><span class="line">rnd := rand.New(rand.NewSource(time.Now().UnixNano()))</span><br><span class="line">vcode := fmt.Sprintf(<span class="string">&quot;%06d&quot;</span>, rnd.Int31n(<span class="number">1000000</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化请求对象</span></span><br><span class="line">request := requests.NewCommonRequest()</span><br><span class="line">request.Method = <span class="string">&quot;POST&quot;</span><span class="comment">//设置请求方法</span></span><br><span class="line">request.Scheme = <span class="string">&quot;https&quot;</span> <span class="comment">// https | http   //设置请求协议</span></span><br><span class="line">request.Domain = <span class="string">&quot;dysmsapi.aliyuncs.com&quot;</span>  <span class="comment">//域名</span></span><br><span class="line">request.Version = <span class="string">&quot;2017-05-25&quot;</span>            <span class="comment">//版本号</span></span><br><span class="line">request.ApiName = <span class="string">&quot;SendSms&quot;</span>                <span class="comment">//api名称</span></span><br><span class="line">request.QueryParams[<span class="string">&quot;PhoneNumbers&quot;</span>] = req.Phone  <span class="comment">//需要发送的电话号码</span></span><br><span class="line">request.QueryParams[<span class="string">&quot;SignName&quot;</span>] = <span class="string">&quot;品优购&quot;</span>    <span class="comment">//签名名称   需要申请</span></span><br><span class="line">request.QueryParams[<span class="string">&quot;TemplateCode&quot;</span>] = <span class="string">&quot;SMS_164275022&quot;</span>   <span class="comment">//模板号   需要申请</span></span><br><span class="line">request.QueryParams[<span class="string">&quot;TemplateParam&quot;</span>] = <span class="string">`&#123;&quot;code&quot;:`</span>+vcode+<span class="string">`&#125;`</span>   <span class="comment">//发送短信验证码</span></span><br><span class="line"></span><br><span class="line">response, err := client.ProcessCommonRequest(request)  <span class="comment">//发送短信</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//校验是否发送成功,成功之后存储到redis中,失败返回错误信息</span></span><br><span class="line"><span class="keyword">if</span> response.IsSuccess()&#123;</span><br><span class="line">    redisConn.Do(<span class="string">&quot;setex&quot;</span>,req.Phone+<span class="string">&quot;_code&quot;</span>,<span class="number">60</span> * <span class="number">5</span>,vcode)</span><br><span class="line">    rsp.Errno = utils.RECODE_OK</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_SMSERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_SMSERR)</span><br><span class="line">    <span class="keyword">return</span> errors.New(<span class="string">&quot;发送短信失败&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-5-4web端实现"><a href="#2-5-4web端实现" class="headerlink" title="2.5.4web端实现"></a>2.5.4web端实现</h4><p>后台服务实现之后我们接着来写一下web端代码，首先需要先匹配对应路由，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.GET(<span class="string">&quot;/smscode/:mobile&quot;</span>,controller.GetSmscd)</span><br></pre></td></tr></table></figure>

<p>接着我们来实现具体的控制器函数。</p>
<p>还是我们的四步骤，先获取数据，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取数据</span></span><br><span class="line">    phone := ctx.Param(<span class="string">&quot;mobile&quot;</span>)</span><br><span class="line">    text := ctx.Query(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">    uuid := ctx.Query(<span class="string">&quot;id&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>然后校验数据：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//校验电话号码格式</span></span><br><span class="line">    reg ,_:= regexp.Compile(<span class="string">`^1[3,4,5,7,8]\d&#123;9&#125;$`</span>)</span><br><span class="line">    result := reg.MatchString(phone)</span><br><span class="line">    <span class="keyword">if</span> !result&#123;</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_MOBILEERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_MOBILEERR)</span><br><span class="line">        ctx.JSON(<span class="number">500</span>,resp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//校验数据不能为空</span></span><br><span class="line">    <span class="keyword">if</span> text == <span class="string">&quot;&quot;</span> || uuid == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DATAERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        ctx.JSON(<span class="number">500</span>,resp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>然后远程调用，获取返回数据，具体代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//调用远程服务</span></span><br><span class="line">    grpcService := utils.GetGrpcService()</span><br><span class="line">    client := getSmscd.NewGetSmscdService(<span class="string">&quot;go.micro.srv.getSmscd&quot;</span>,grpcService.Client())</span><br><span class="line">    rsp,err:= client.Call(context.TODO(),&amp;getSmscd.Request&#123;</span><br><span class="line">        Text:text,</span><br><span class="line">        Uuid:uuid,</span><br><span class="line">        Phone:phone,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SMSERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SMSERR)</span><br><span class="line">        ctx.JSON(<span class="number">500</span>,resp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-6发送注册信息服务"><a href="#2-6发送注册信息服务" class="headerlink" title="2.6发送注册信息服务"></a>2.6发送注册信息服务</h3><h4 id="2-6-1接口定义"><a href="#2-6-1接口定义" class="headerlink" title="2.6.1接口定义"></a>2.6.1接口定义</h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: POST</span><br><span class="line">url:api/v1<span class="number">.0</span>/users</span><br><span class="line">#data:</span><br><span class="line">&#123;</span><br><span class="line">    mobile: <span class="string">&quot;123&quot;</span>, <span class="comment">//手机号</span></span><br><span class="line">    password: <span class="string">&quot;123&quot;</span>, <span class="comment">//密码</span></span><br><span class="line">    sms_code: <span class="string">&quot;123&quot;</span>   <span class="comment">//短信验证码</span></span><br><span class="line">&#125;</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="string">&quot;errmsg&quot;</span>:<span class="string">&quot;ok&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">#注册失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;errno&quot;</span>: <span class="string">&quot;4001&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="string">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-6-2业务流程图"><a href="#2-6-2业务流程图" class="headerlink" title="2.6.2业务流程图"></a>2.6.2业务流程图</h4><p><img src="assets%5Cclip_image002.jpg"></p>
<h4 id="2-6-3具体业务实现"><a href="#2-6-3具体业务实现" class="headerlink" title="2.6.3具体业务实现"></a>2.6.3具体业务实现</h4><p>创建服务，命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> srv project/postRet</span></span><br></pre></td></tr></table></figure>

<p>接着我们修改proto文件并编译，修改后的proto文件内容如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> go.micro.srv.postRet;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">PostRet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> Call(Request) <span class="keyword">returns</span> (Response) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> mobile = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> password = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">string</span> sms_code = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>具体的业务代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//从redis中获取短信验证码</span></span><br><span class="line">    redisConn := model.InitRedis().Get()</span><br><span class="line">    code,err := redis.String(redisConn.Do(<span class="string">&quot;get&quot;</span>,req.Mobile+<span class="string">&quot;_code&quot;</span>))</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//校验验证码是否正确</span></span><br><span class="line">    <span class="keyword">if</span> code != req.SmsCode&#123;</span><br><span class="line">        rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">        rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        <span class="keyword">return</span> errors.New(<span class="string">&quot;验证码不正确&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把用户数据插入到mysql中</span></span><br><span class="line">    db,err := model.InitDb()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        rsp.Errno = utils.RECODE_DBERR</span><br><span class="line">        rsp.Errmsg = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">        <span class="keyword">return</span> errors.New(<span class="string">&quot;数据库连接错误&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> user model.User</span><br><span class="line">    user.Name = req.Mobile</span><br><span class="line">    user.Mobile = req.Mobile</span><br><span class="line"></span><br><span class="line">    <span class="comment">//对密码做md5加密</span></span><br><span class="line">    m5 := md5.New()</span><br><span class="line">    m5.Write([]<span class="keyword">byte</span>(req.Password))</span><br><span class="line">    m5Pwd := hex.EncodeToString(m5.Sum(<span class="literal">nil</span>))</span><br><span class="line"></span><br><span class="line">    user.Password_hash = m5Pwd</span><br><span class="line">    err = db.Create(&amp;user).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        rsp.Errno = utils.RECODE_DBERR</span><br><span class="line">        rsp.Errmsg = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-6-4session中间件使用"><a href="#2-6-4session中间件使用" class="headerlink" title="2.6.4session中间件使用"></a>2.6.4session中间件使用</h4><p>首先我们来看一下gin中间件具体是什么？其实gin中间件功能很类似我们beego中的路由过滤器。不过功能更强大。我们先来看一个自定义中间件的简单示例：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Logger</span><span class="params">()</span> <span class="title">gin</span>.<span class="title">HandlerFunc</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">        t := time.Now()</span><br><span class="line">        <span class="comment">// 在路由之前调用上面代码</span></span><br><span class="line">        c.Next()</span><br><span class="line">        <span class="comment">//在路由之后调用</span></span><br><span class="line">        latency := time.Since(t)</span><br><span class="line">        fmt.Println(latency)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := gin.Default()</span><br><span class="line">    r.Use(Logger())</span><br><span class="line"></span><br><span class="line">    r.GET(<span class="string">&quot;/test&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">            c.Writer.Write([]<span class="keyword">byte</span>(<span class="string">&quot;hello world&quot;</span>))</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    r.Run(<span class="string">&quot;:8080&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>除了自定义中间件，gin还提供了一些框架中间件，地址为：<a href="https://github.com/gin-contrib/">https://github.com/gin-contrib/</a></p>
<p>这里我们选择使用session。首先我们需要下载session，命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go get -u -v github.com/gin-contrib/sessions</span></span><br></pre></td></tr></table></figure>

<p>然后我们来看一下sessions的简单使用。首先是做session的初始化，主要是做session容器的设置，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">store, _ := redis.NewStore(<span class="number">10</span>, <span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;localhost:6379&quot;</span>, <span class="string">&quot;&quot;</span>, []<span class="keyword">byte</span>(<span class="string">&quot;secret&quot;</span>))</span><br><span class="line">router.Use(sessions.Sessions(<span class="string">&quot;mysession&quot;</span>, store))</span><br></pre></td></tr></table></figure>

<p>然后我们就可以在下面的路由中去使用相应的sessions操作了，具体操作如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">s := sessions.Default(ctx)</span><br><span class="line">    s.Set(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;itcast&quot;</span>)</span><br><span class="line">    name := s.Get(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">    s.Delete(<span class="string">&quot;name&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>但是大家这时候发现，在服务中我们并没有使用gin的路由，也没有对应的gin.Context,所以在服务中实现session的添加比较复杂，我们可以把session操作放在web端来处理，具体操作我们接着往下看。</p>
<h4 id="2-6-5web端实现"><a href="#2-6-5web端实现" class="headerlink" title="2.6.5web端实现"></a>2.6.5web端实现</h4><p>首先是做路由匹配，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.POST(<span class="string">&quot;/users&quot;</span>,controller.PostRet)</span><br></pre></td></tr></table></figure>

<p>有请求之后，接着我们去实现对应控制器方法。首先是获取数据，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//确定容器</span></span><br><span class="line">    resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">    <span class="comment">//绑定数据</span></span><br><span class="line">    <span class="keyword">var</span> regUser RegisterUser</span><br><span class="line">    err := ctx.Bind(&amp;regUser)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DATAERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里面需要注意，gin里面获取post上传的formdata数据使用postForm，但是如果获取json格式数据，需要去绑定对应结构体，所以这里面我们需要先创建一个和json数据对应的结构体,结构体结构如下：</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> RegisterUser <span class="keyword">struct</span> &#123;</span><br><span class="line">    Mobile <span class="keyword">string</span> <span class="string">`json:&quot;mobile&quot;`</span></span><br><span class="line">    Password <span class="keyword">string</span>  <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">    SmsCode <span class="keyword">string</span>    <span class="string">`json:&quot;sms_code&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样我们久能获取数据了，然后需要对数据进行校验，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//校验数据</span></span><br><span class="line">    <span class="keyword">if</span> regUser.Mobile == <span class="string">&quot;&quot;</span> || regUser.Password == <span class="string">&quot;&quot;</span> || regUser.SmsCode == <span class="string">&quot;&quot;</span>&#123;</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DATAERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    reg,_ := regexp.Compile(<span class="string">`^1[3,4,5,7,8]\d&#123;9&#125;$`</span>)</span><br><span class="line">    <span class="keyword">if</span> !reg.MatchString(regUser.Mobile)&#123;</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DATAERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>然后进行远程服务调用：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//远程调用</span></span><br><span class="line">    grpcService := utils.GetGrpcService()</span><br><span class="line">    grpcClient := postRet.NewPostRetService(<span class="string">&quot;go.micro.srv.postRet&quot;</span>,grpcService.Client())</span><br><span class="line">    respData,err := grpcClient.Call(context.TODO(),&amp;postRet.Request&#123;Mobile:regUser.Mobile,Password:regUser.Password,SmsCode:regUser.SmsCode&#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DATAERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>根据返回值，设置session，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> respData.Errno == utils.RECODE_OK&#123;</span><br><span class="line">    s := sessions.Default(ctx)</span><br><span class="line">    s.Set(<span class="string">&quot;userName&quot;</span>,regUser.Mobile)</span><br><span class="line">    s.Save()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务相关知识3</title>
    <url>/2020/03/03/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/%E8%AE%B2%E4%B9%89/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%A1%B9%E7%9B%AE%E8%AE%B2%E4%B9%893/</url>
    <content><![CDATA[<h1 id="1-session功能实现"><a href="#1-session功能实现" class="headerlink" title="1.session功能实现"></a>1.session功能实现</h1><span id="more"></span>

<h2 id="1-1业务流程图"><a href="#1-1业务流程图" class="headerlink" title="1.1业务流程图"></a>1.1业务流程图</h2><p><img src="assets%5Cclip_image002-1542889467165.jpg" alt="111"></p>
<h2 id="1-2接口定义"><a href="#1-2接口定义" class="headerlink" title="1.2接口定义"></a>1.2接口定义</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: GET</span><br><span class="line">url:api/v1<span class="number">.0</span>/session</span><br><span class="line">data:no input data</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;OK&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;data&quot;</span>: &#123;<span class="attr">&quot;name&quot;</span> : <span class="string">&quot;13313331333&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">#注册失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1-3具体业务实现"><a href="#1-3具体业务实现" class="headerlink" title="1.3具体业务实现"></a>1.3具体业务实现</h2><p>session的处理，我们可以直接放在web端来实现，具体实现如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义返回数据容器</span></span><br><span class="line">resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">dataTmp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>)</span><br><span class="line"><span class="comment">//初始化session</span></span><br><span class="line">s := sessions.Default(ctx)</span><br><span class="line">userName := s.Get(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//对获取的session校验</span></span><br><span class="line"><span class="keyword">if</span> userName == <span class="literal">nil</span>&#123;</span><br><span class="line">    <span class="comment">//初始化返回值</span></span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SESSIONERR</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SESSIONERR)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">    resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">    dataTmp[<span class="string">&quot;name&quot;</span>] = userName.(<span class="keyword">string</span>)</span><br><span class="line">    resp[<span class="string">&quot;data&quot;</span>] = dataTmp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ctx.JSON(<span class="number">200</span>,resp)</span><br></pre></td></tr></table></figure>

<h1 id="2-用户信息展示"><a href="#2-用户信息展示" class="headerlink" title="2.用户信息展示"></a>2.用户信息展示</h1><h2 id="2-1业务流程图"><a href="#2-1业务流程图" class="headerlink" title="2.1业务流程图"></a>2.1业务流程图</h2><p><img src="assets%5Cclip_image002-1543151932045.jpg" alt="im"></p>
<h2 id="2-2接口定义"><a href="#2-2接口定义" class="headerlink" title="2.2接口定义"></a>2.2接口定义</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: GET</span><br><span class="line">url:api/v1<span class="number">.0</span>/user</span><br><span class="line">#data:</span><br><span class="line">no input data</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;user_id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;itcast&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;mobile&quot;</span>: <span class="string">&quot;110&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;real_name&quot;</span>: <span class="string">&quot;传智&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;id_card&quot;</span>: <span class="string">&quot;210112244556677&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;avatar_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:8888/group1/M00/00/00/Zciqq1n7It2ANn1dAADexS5wJKs808.png&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-3服务端实现"><a href="#2-3服务端实现" class="headerlink" title="2.3服务端实现"></a>2.3服务端实现</h2><p>首先我们根据接口定义来确定proto文件的参数，修改后的proto文件如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> go.micro.srv.getUserInfo;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">GetUserInfo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> Call(Request) <span class="keyword">returns</span> (Response) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">    UserData data = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">UserData</span></span>&#123;</span><br><span class="line">    <span class="built_in">int32</span> user_id = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">string</span> mobile = <span class="number">3</span>;</span><br><span class="line">    <span class="built_in">string</span> real_name = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">string</span> id_card = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">string</span> avatar_url = <span class="number">6</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后修改main.go文件，再详细的实现我们的业务方法，具体代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据用户名获取信息</span></span><br><span class="line">db ,err:= model.InitDb()</span><br><span class="line">user,err := model.GetUserInfo(db,req.Name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_DBERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data getUserInfo.UserData</span><br><span class="line"></span><br><span class="line">data.Name = user.Name</span><br><span class="line">data.Mobile = user.Mobile</span><br><span class="line">data.IdCard = user.Id_card</span><br><span class="line">data.RealName = user.Real_name</span><br><span class="line">data.AvatarUrl = user.Avatar_url</span><br><span class="line">data.UserId  = <span class="keyword">int32</span>(user.ID)</span><br><span class="line"></span><br><span class="line">rsp.Errno = utils.RECODE_OK</span><br><span class="line">rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">rsp.Data  = &amp;data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意函数的封装，封装的函数如下：</p>
</blockquote>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据用户名获取当前用户信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetUserInfo</span><span class="params">(db*gorm.DB,name <span class="keyword">string</span>)</span><span class="params">(User,error)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> user User</span><br><span class="line">    err := db.Where(<span class="string">&quot;name = ?&quot;</span>,name).First(&amp;user).Error</span><br><span class="line">    <span class="keyword">return</span> user,err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-4web端实现"><a href="#2-4web端实现" class="headerlink" title="2.4web端实现"></a>2.4web端实现</h2><p>服务端实现之后，接着我们来实现web端，首先我们要匹配相应的路由，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.GET(<span class="string">&quot;/user&quot;</span>,controller.GetUserInfo)</span><br></pre></td></tr></table></figure>

<p>然后实现具体的控制器函数，首先是从session中获取数据，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取登录信息</span></span><br><span class="line">    s := sessions.Default(ctx)</span><br><span class="line">    userName := s.Get(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line">    errResp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">    <span class="keyword">if</span> userName == <span class="literal">nil</span>&#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SESSIONERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SESSIONERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>然后调用远程服务，把用户名传到远程，并获取返回值，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//远程调用</span></span><br><span class="line">grpcService := utils.GetGrpcService()</span><br><span class="line">client := getUserInfo.NewGetUserInfoService(<span class="string">&quot;go.micro.srv.getUserInfo&quot;</span>,grpcService.Client())</span><br><span class="line">resp,err := client.Call(context.TODO(),&amp;getUserInfo.Request&#123;Name:userName.(<span class="keyword">string</span>)&#125;)</span><br></pre></td></tr></table></figure>

<p>根据返回值确定返回给前端的数据，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        resp.Errno = utils.RECODE_DBERR</span><br><span class="line">        resp.Errmsg = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br></pre></td></tr></table></figure>

<h1 id="3-退出登陆"><a href="#3-退出登陆" class="headerlink" title="3.退出登陆"></a>3.退出登陆</h1><h2 id="3-1业务流程图"><a href="#3-1业务流程图" class="headerlink" title="3.1业务流程图"></a>3.1业务流程图</h2><p><img src="assets%5Cclip_image002-1543150703766.jpg" alt="mg"></p>
<h2 id="3-2接口定义"><a href="#3-2接口定义" class="headerlink" title="3.2接口定义"></a>3.2接口定义</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: DELETE</span><br><span class="line">url:api/v1<span class="number">.0</span>/session</span><br><span class="line">#data:</span><br><span class="line">no input data</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;OK&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-3业务实现"><a href="#3-3业务实现" class="headerlink" title="3.3业务实现"></a>3.3业务实现</h2><p>退出登陆实现比较简单，直接删除session即可，首先我们来匹配一下路由，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.DELETE(<span class="string">&quot;/session&quot;</span>,controller.DeleteSession)</span><br></pre></td></tr></table></figure>

<p>然后在控制器实现删除session返回数据操作，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DeleteSession</span><span class="params">(ctx*gin.Context)</span></span>&#123;</span><br><span class="line">    resp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除session</span></span><br><span class="line">    s := sessions.Default(ctx)</span><br><span class="line">    s.Delete(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line">    err := s.Save()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SESSIONERR</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SESSIONERR)</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        resp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_OK</span><br><span class="line">        resp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>注意。不管是设置session还是删除session最后都需要调用save方法。</p>
</blockquote>
<h1 id="4-登陆业务实现"><a href="#4-登陆业务实现" class="headerlink" title="4.登陆业务实现"></a>4.登陆业务实现</h1><h2 id="4-1业务流程图"><a href="#4-1业务流程图" class="headerlink" title="4.1业务流程图"></a>4.1业务流程图</h2><p><img src="assets%5Cclip_image002-1543150684587.jpg" alt="im"></p>
<h2 id="4-2接口定义"><a href="#4-2接口定义" class="headerlink" title="4.2接口定义"></a>4.2接口定义</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: POST</span><br><span class="line">url:api/v1<span class="number">.0</span>/sessions</span><br><span class="line">#data:</span><br><span class="line">&#123;</span><br><span class="line">    mobile: <span class="string">&quot;133&quot;</span>, <span class="comment">//手机号</span></span><br><span class="line">    password: <span class="string">&quot;itcast&quot;</span><span class="comment">//密码</span></span><br><span class="line">&#125;</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;OK&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-3服务端实现"><a href="#4-3服务端实现" class="headerlink" title="4.3服务端实现"></a>4.3服务端实现</h2><p>首先是创建服务，代码如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> src project/login</span></span><br></pre></td></tr></table></figure>

<p>然后根据接口定义，修改proto参数，修改后的proto内容如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> go.micro.srv.login;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">Login</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> Call(Request) <span class="keyword">returns</span> (Response) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> mobile = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> password = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后编译proto文件，生成对应接口，修改Main.go文件，再具体实现登陆业务，登陆业务实现如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//初始化mysql连接    </span></span><br><span class="line">db,err := model.InitDb()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_DBERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_DBERR)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对传入的密码进行md5加密，然后调用封装的函数进行登陆校验，注意后面需要把用户名存入session,所以要把name传出</span></span><br><span class="line">m5 := md5.New()</span><br><span class="line">m5.Write([]<span class="keyword">byte</span>(req.Password))</span><br><span class="line">pwdHash := hex.EncodeToString(m5.Sum(<span class="literal">nil</span>))</span><br><span class="line">result,name := model.GetLoginInfo(db,req.Mobile,pwdHash)</span><br><span class="line"><span class="comment">//根据结果返回数据</span></span><br><span class="line"><span class="keyword">if</span> result&#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_OK</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">    rsp.Name = name</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_DATAERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br></pre></td></tr></table></figure>

<p>封装的函数如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据电话号和密码判断,登录是否成功</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetLoginInfo</span><span class="params">(db *gorm.DB,mobile <span class="keyword">string</span>,pwd <span class="keyword">string</span>)</span><span class="params">(<span class="keyword">bool</span>,<span class="keyword">string</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> user User</span><br><span class="line">    db.Where(<span class="string">&quot;mobile = ?&quot;</span>,mobile).First(&amp;user)</span><br><span class="line">    <span class="keyword">return</span> user.Password_hash == pwd,user.Name</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-4web端实现"><a href="#4-4web端实现" class="headerlink" title="4.4web端实现"></a>4.4web端实现</h2><p>处理完服务端接着我们来处理web端内容， 首先是做路由匹配，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.POST(<span class="string">&quot;/sessions&quot;</span>,controller.PostLogin)</span><br></pre></td></tr></table></figure>

<p>然后在具体控制器函数中实现登陆业务，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//登录处理</span></span><br><span class="line"><span class="keyword">type</span> UserLogin <span class="keyword">struct</span> &#123;</span><br><span class="line">    Mobile <span class="keyword">string</span> <span class="string">`json:&quot;mobile&quot;`</span></span><br><span class="line">    Password <span class="keyword">string</span> <span class="string">`json:&quot;password&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostLogin</span><span class="params">(ctx*gin.Context)</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义错误容器</span></span><br><span class="line">    errResp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    <span class="keyword">var</span> userLogin UserLogin</span><br><span class="line">    err := ctx.Bind(&amp;userLogin)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_REQERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_REQERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//远程服务调用</span></span><br><span class="line">    grpcService := utils.GetGrpcService()</span><br><span class="line">    client := login.NewLoginService(<span class="string">&quot;go.micro.srv.login&quot;</span>,grpcService.Client())</span><br><span class="line">    resp,err := client.Call(context.TODO(),&amp;login.Request&#123;Mobile:userLogin.Mobile,Password:userLogin.Password&#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_LOGINERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_LOGINERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果返回成功,存储session</span></span><br><span class="line">    <span class="keyword">if</span> resp.Errno == utils.RECODE_OK&#123;</span><br><span class="line">        s := sessions.Default(ctx)</span><br><span class="line">        s.Set(<span class="string">&quot;userName&quot;</span>,resp.Name)</span><br><span class="line">        s.Save()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="5-上传用户头像业务"><a href="#5-上传用户头像业务" class="headerlink" title="5.上传用户头像业务"></a>5.上传用户头像业务</h1><h2 id="5-1业务流程图"><a href="#5-1业务流程图" class="headerlink" title="5.1业务流程图"></a>5.1业务流程图</h2><p><img src="assets%5Cclip_image002-1543152066379.jpg" alt="im"></p>
<h2 id="5-2接口定义"><a href="#5-2接口定义" class="headerlink" title="5.2接口定义"></a>5.2接口定义</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: POST</span><br><span class="line">url:api/v1<span class="number">.0</span>/user/avatar</span><br><span class="line">#data:</span><br><span class="line">图片的二进制数据</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;avatar_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:8888/group1/M00/00/00/Zciqq1n6_L-AOB04AADexS5wJKs662.png&quot;</span> <span class="comment">//图片地址需要进行拼接</span></span><br><span class="line">  &#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="string">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="5-3服务端实现"><a href="#5-3服务端实现" class="headerlink" title="5.3服务端实现"></a>5.3服务端实现</h2><p>首先创建服务。命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> srv project/postAva</span></span><br></pre></td></tr></table></figure>

<p>然后根据接口定义确定proto文件内容，proto文件内容如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> go.micro.srv.postAvatar;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">PostAvatar</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> Call(Request) <span class="keyword">returns</span> (Response) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">bytes</span> file = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">string</span> fileExt = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">    ImgPath data = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">ImgPath</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> avatar_url = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里注意，我们把文件存储的时候需要获取文件格式信息，所系需要把文件格式传递过来，头像信息上传之后需要和当前用户绑定，所以需要把用户名传递过来。</p>
</blockquote>
<p>然后编译proto并修改main.go文件，再去handler中实现具体业务，业务代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//解析出来文件</span></span><br><span class="line">client ,_:= fdfs_client.NewFdfsClient(<span class="string">&quot;/etc/fdfs/client.conf&quot;</span>)</span><br><span class="line"></span><br><span class="line">uploadResp ,err := client.UploadByBuffer(req.File,req.FileExt)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    rsp.Errno = utils.RECODE_IOERR</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_IOERR)</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//给返回值赋值</span></span><br><span class="line">rsp.Errno = utils.RECODE_OK</span><br><span class="line">rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line"><span class="keyword">var</span> imgPath postAvatar.ImgPath</span><br><span class="line">imgPath.AvatarUrl = <span class="string">&quot;http://192.168.137.130:8888/&quot;</span>+uploadResp.RemoteFileId</span><br><span class="line"></span><br><span class="line">rsp.Data = &amp;imgPath</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br></pre></td></tr></table></figure>

<h2 id="5-4web端实现"><a href="#5-4web端实现" class="headerlink" title="5.4web端实现"></a>5.4web端实现</h2><p>具体实现，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostAvatar</span><span class="params">(ctx*gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义错误返回容器</span></span><br><span class="line">    errResp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取前段传递的文件</span></span><br><span class="line">    fileHeader ,err:= ctx.FormFile(<span class="string">&quot;avatar&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_REQERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_REQERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件大小及格式是否正确</span></span><br><span class="line">    <span class="keyword">if</span> fileHeader.Size &gt; <span class="number">500000</span>&#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DATAERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    fileExt:= path.Ext(fileHeader.Filename)</span><br><span class="line">    <span class="keyword">if</span> fileExt != <span class="string">&quot;.jpg&quot;</span> &amp;&amp; fileExt != <span class="string">&quot;.png&quot;</span> &amp;&amp; fileExt != <span class="string">&quot;.jpeg&quot;</span>&#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DATAERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取文件流,并写成字节格式</span></span><br><span class="line">    file ,_ :=fileHeader.Open()</span><br><span class="line">    buffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>,fileHeader.Size)</span><br><span class="line">    file.Read(buffer)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取用户名</span></span><br><span class="line">    s := sessions.Default(ctx)</span><br><span class="line">    userName := s.Get(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用远程服务</span></span><br><span class="line">    grpcService := utils.GetGrpcService()</span><br><span class="line">    client := postAva.NewPostAvatarService(<span class="string">&quot;go.micro.srv.postAvatar&quot;</span>,grpcService.Client())</span><br><span class="line">    resp ,err:= client.Call(context.TODO(),&amp;postAva.Request&#123;</span><br><span class="line">        FileExt:fileExt,</span><br><span class="line">        File:buffer,</span><br><span class="line">        Name:userName.(<span class="keyword">string</span>),</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_IOERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_IOERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="6-更新用户名"><a href="#6-更新用户名" class="headerlink" title="6.更新用户名"></a>6.更新用户名</h1><h2 id="6-1业务流程图"><a href="#6-1业务流程图" class="headerlink" title="6.1业务流程图"></a>6.1业务流程图</h2><p><img src="assets%5Cclip_image002-1543152217047.jpg" alt="im"></p>
<h2 id="6-2接口定义"><a href="#6-2接口定义" class="headerlink" title="6.2接口定义"></a>6.2接口定义</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: PUT</span><br><span class="line">url:api/v1<span class="number">.0</span>/user/name</span><br><span class="line">#data:</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;panda&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Panda&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="6-3服务端实现"><a href="#6-3服务端实现" class="headerlink" title="6.3服务端实现"></a>6.3服务端实现</h2><h2 id="6-4web端实现"><a href="#6-4web端实现" class="headerlink" title="6.4web端实现"></a>6.4web端实现</h2><h1 id="7-检查用户实名认证"><a href="#7-检查用户实名认证" class="headerlink" title="7.检查用户实名认证"></a>7.检查用户实名认证</h1><h2 id="7-1业务流程图"><a href="#7-1业务流程图" class="headerlink" title="7.1业务流程图"></a>7.1业务流程图</h2><p><img src="assets%5Cclip_image002-1543152417782.jpg" alt="im"></p>
<h2 id="7-2接口定义"><a href="#7-2接口定义" class="headerlink" title="7.2接口定义"></a>7.2接口定义</h2><figure class="highlight go"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: GET</span><br><span class="line">url:api/v1<span class="number">.0</span>/user/auth</span><br><span class="line">#data:</span><br><span class="line">no input data</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="string">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="string">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;user_id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Panda&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>: <span class="string">&quot;123123&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mobile&quot;</span>: <span class="string">&quot;110&quot;</span>,</span><br><span class="line">    <span class="string">&quot;real_name&quot;</span>: <span class="string">&quot;熊猫&quot;</span>,</span><br><span class="line">    <span class="string">&quot;id_card&quot;</span>: <span class="string">&quot;210112244556677&quot;</span>,</span><br><span class="line">    <span class="string">&quot;avatar_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1n7It2ANn1dAADexS5wJKs808.png&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="string">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7-3服务端实现"><a href="#7-3服务端实现" class="headerlink" title="7.3服务端实现"></a>7.3服务端实现</h2><h2 id="7-4web端实现"><a href="#7-4web端实现" class="headerlink" title="7.4web端实现"></a>7.4web端实现</h2><h1 id="8-更新用户实名认证"><a href="#8-更新用户实名认证" class="headerlink" title="8.更新用户实名认证"></a>8.更新用户实名认证</h1><h2 id="8-1业务流程图"><a href="#8-1业务流程图" class="headerlink" title="8.1业务流程图"></a>8.1业务流程图</h2><p><img src="assets%5Cclip_image002-1543152506873.jpg" alt="im"></p>
<h2 id="8-2接口定义"><a href="#8-2接口定义" class="headerlink" title="8.2接口定义"></a>8.2接口定义</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: POST</span><br><span class="line">url:api/v1<span class="number">.0</span>/user/auth</span><br><span class="line">#data:</span><br><span class="line">&#123;</span><br><span class="line">    real_name: <span class="string">&quot;熊猫&quot;</span>, </span><br><span class="line">    id_card: <span class="string">&quot;21011223344556677&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="8-3服务端实现"><a href="#8-3服务端实现" class="headerlink" title="8.3服务端实现"></a>8.3服务端实现</h2><h2 id="8-4web端实现"><a href="#8-4web端实现" class="headerlink" title="8.4web端实现"></a>8.4web端实现</h2><h1 id="9-获取当前用户已发布房源信息"><a href="#9-获取当前用户已发布房源信息" class="headerlink" title="9 获取当前用户已发布房源信息"></a>9 获取当前用户已发布房源信息</h1><p>获取用户已发布房源信息服务（商品相关）</p>
<h2 id="创建命令"><a href="#创建命令" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/GetUserHouses</span></span><br></pre></td></tr></table></figure>

<h2 id="流程与接口"><a href="#流程与接口" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543153060818.jpg" alt="mg"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: GET</span><br><span class="line">url:api/v1<span class="number">.0</span>/user/houses</span><br><span class="line">#data:</span><br><span class="line">no input data</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;houses&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;西三旗桥东&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;area_name&quot;</span>: <span class="string">&quot;昌平区&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-06 11:16:24&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;house_id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;img_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBJY-AL3m8AAS8K2x8TDE052.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;order_count&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;price&quot;</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="attr">&quot;room_count&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;上奥世纪中心&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;user_avatar&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBLFeALIEjAADexS5wJKs340.png&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;北清路郑上路&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;area_name&quot;</span>: <span class="string">&quot;顺义区&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-06 11:38:54&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;house_id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;img_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBKtmAC8y8AAZcKg5PznU817.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;order_count&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;price&quot;</span>: <span class="number">1000</span>,</span><br><span class="line">        <span class="attr">&quot;room_count&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;修正大厦302教室&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;user_avatar&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBLFeALIEjAADexS5wJKs340.png&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="服务端实现"><a href="#服务端实现" class="headerlink" title="服务端实现"></a>服务端实现</h2><p>根据接口定义，生成对应的proto文件，proto文件内容如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> go.micro.srv.getHouse;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">GetHouse</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> Call(Request) <span class="keyword">returns</span> (Response) </span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">    houses data = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">houses</span></span>&#123;</span><br><span class="line">    <span class="keyword">repeated</span> houseInfo houses = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">houseInfo</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> address = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">string</span> area_name = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">string</span> ctime = <span class="number">3</span>;</span><br><span class="line">    <span class="built_in">int32</span> house_id = <span class="number">4</span>;</span><br><span class="line">    <span class="built_in">string</span> img_url = <span class="number">5</span>;</span><br><span class="line">    <span class="built_in">int32</span> order_count = <span class="number">6</span>;</span><br><span class="line">    <span class="built_in">int32</span> price = <span class="number">7</span>;</span><br><span class="line">    <span class="built_in">int32</span> room_count = <span class="number">8</span>;</span><br><span class="line">    <span class="built_in">string</span> title = <span class="number">9</span>;</span><br><span class="line">    <span class="built_in">string</span> user_avatar = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后编译proto文件，接着去main.go文件中，删除不需要的部分，并添加consul服务发现，然后去hander里面处理具体的业务代码，具体代码内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *GetHouse)</span> <span class="title">Call</span><span class="params">(ctx context.Context, req *getHouse.Request, rsp *getHouse.Response)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="comment">//查询数据库,根据用户名获取房源信息</span></span><br><span class="line">    db,err :=model.InitDb()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//具体数据库操作，封装成函数，在下面展示</span></span><br><span class="line">    houses,user,areas,err :=model.GetHouses(db,req.Name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据返回数据，构造返回值</span></span><br><span class="line">    <span class="keyword">var</span> houseInfos getHouse.Houses</span><br><span class="line">    <span class="keyword">for</span> k,v := <span class="keyword">range</span> houses&#123;</span><br><span class="line">        <span class="keyword">var</span> house getHouse.HouseInfo</span><br><span class="line"></span><br><span class="line">        house.Address = v.Address</span><br><span class="line">        house.HouseId = <span class="keyword">int32</span>(v.ID)</span><br><span class="line">        house.Ctime = v.CreatedAt.Format(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>)</span><br><span class="line">        house.ImgUrl = v.Index_image_url</span><br><span class="line">        house.OrderCount = <span class="keyword">int32</span>(v.Order_count)</span><br><span class="line">        house.Price = <span class="keyword">int32</span>(v.Price)</span><br><span class="line">        house.RoomCount = <span class="keyword">int32</span>(v.Room_count)</span><br><span class="line">        house.Title = v.Title</span><br><span class="line">        house.UserAvatar = user.Avatar_url</span><br><span class="line">        house.AreaName = areas[k].Name</span><br><span class="line"></span><br><span class="line">        houseInfos.Houses = <span class="built_in">append</span>(houseInfos.Houses,&amp;house)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;houseInfos = &quot;</span>,houseInfos,<span class="string">&quot;areas = &quot;</span>,areas)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数据</span></span><br><span class="line">    rsp.Errno = utils.RECODE_OK</span><br><span class="line">    rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">    rsp.Data = &amp;houseInfos</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里我们把数据库操作封装到函数里面，函数实现如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据用户名获取当前用户的房源信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetHouses</span><span class="params">(db *gorm.DB, name <span class="keyword">string</span>)</span> <span class="params">([]House, User, []Area, error)</span></span> &#123;</span><br><span class="line">    <span class="comment">//查询当前用户对象</span></span><br><span class="line">    <span class="keyword">var</span> user User</span><br><span class="line">    err := db.Where(<span class="string">&quot;name = ?&quot;</span>, name).First(&amp;user).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, User&#123;&#125;, <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询当前用户对应的房屋</span></span><br><span class="line">    <span class="keyword">var</span> houses []House</span><br><span class="line">    err = db.Model(&amp;user).Related(&amp;houses).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>, User&#123;&#125;, <span class="literal">nil</span>, err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取各个房源对应的地址</span></span><br><span class="line">    <span class="keyword">var</span> areas []Area</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> houses &#123;</span><br><span class="line">        <span class="keyword">var</span> area Area</span><br><span class="line">        err = db.Model(&amp;v).Related(&amp;area).Error</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span>, User&#123;&#125;, <span class="literal">nil</span>, err</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        areas = <span class="built_in">append</span>(areas, area)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> houses, user, areas, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="web端实现"><a href="#web端实现" class="headerlink" title="web端实现"></a>web端实现</h2><p>根据设计文档，这里我们给对应请求添加路由，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.GET(<span class="string">&quot;/user/houses&quot;</span>,controller.GetUserHouses)</span><br></pre></td></tr></table></figure>

<p>然后到controller中实现对应请求方法，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取当前用户发布房源信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetUserHouses</span><span class="params">(ctx*gin.Context)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取用户名</span></span><br><span class="line">    s := sessions.Default(ctx)</span><br><span class="line">    userName := s.Get(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用远程服务</span></span><br><span class="line">    grpcService := utils.GetGrpcService()</span><br><span class="line">    client := getHouse.NewGetHouseService(utils.GetHouseName,grpcService.Client())</span><br><span class="line">    resp,err := client.Call(context.TODO(),&amp;getHouse.Request&#123;Name:userName.(<span class="keyword">string</span>)&#125;)</span><br><span class="line">    fmt.Println(<span class="string">&quot;resp = &quot;</span>,err)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        resp.Errno = utils.RECODE_SERVERERR</span><br><span class="line">        resp.Errmsg = utils.RecodeText(utils.RECODE_SERVERERR)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="10-发布房源信息"><a href="#10-发布房源信息" class="headerlink" title="10 发布房源信息"></a>10 发布房源信息</h1><p>发送（发布）房源信息服务（商品相关）</p>
<h2 id="创建命令-1"><a href="#创建命令-1" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/PostHouses</span></span><br></pre></td></tr></table></figure>

<h2 id="流程与接口-1"><a href="#流程与接口-1" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543153360870.jpg" alt="mg"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: POST</span><br><span class="line">url:api/v1<span class="number">.0</span>/houses</span><br><span class="line">#data:</span><br><span class="line">&#123;</span><br><span class="line"><span class="attr">&quot;title&quot;</span>:<span class="string">&quot;上奥世纪中心&quot;</span>,</span><br><span class="line"><span class="attr">&quot;price&quot;</span>:<span class="string">&quot;666&quot;</span>,</span><br><span class="line"><span class="attr">&quot;area_id&quot;</span>:<span class="string">&quot;5&quot;</span>,</span><br><span class="line"><span class="attr">&quot;address&quot;</span>:<span class="string">&quot;西三旗桥东建材城1号&quot;</span>,</span><br><span class="line"><span class="attr">&quot;room_count&quot;</span>:<span class="string">&quot;2&quot;</span>,</span><br><span class="line"><span class="attr">&quot;acreage&quot;</span>:<span class="string">&quot;60&quot;</span>,</span><br><span class="line"><span class="attr">&quot;unit&quot;</span>:<span class="string">&quot;2室1厅&quot;</span>,</span><br><span class="line"><span class="attr">&quot;capacity&quot;</span>:<span class="string">&quot;3&quot;</span>,</span><br><span class="line"><span class="attr">&quot;beds&quot;</span>:<span class="string">&quot;双人床2张&quot;</span>,</span><br><span class="line"><span class="attr">&quot;deposit&quot;</span>:<span class="string">&quot;200&quot;</span>,</span><br><span class="line"><span class="attr">&quot;min_days&quot;</span>:<span class="string">&quot;3&quot;</span>,</span><br><span class="line"><span class="attr">&quot;max_days&quot;</span>:<span class="string">&quot;0&quot;</span>,</span><br><span class="line"><span class="attr">&quot;facility&quot;</span>:[<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;12&quot;</span>,<span class="string">&quot;14&quot;</span>,<span class="string">&quot;16&quot;</span>,<span class="string">&quot;17&quot;</span>,<span class="string">&quot;18&quot;</span>,<span class="string">&quot;21&quot;</span>,<span class="string">&quot;22&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span></span><br><span class="line">  <span class="string">&quot;data&quot;</span> :&#123;</span><br><span class="line">        <span class="attr">&quot;house_id&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="服务端实现-1"><a href="#服务端实现-1" class="headerlink" title="服务端实现"></a>服务端实现</h2><p>创建服务，然后根据接口定义我们来修改服务的proto文件，proto内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> <span class="keyword">go</span>.micro.srv.postHouse;</span><br><span class="line"></span><br><span class="line">service PostHouse &#123;</span><br><span class="line">    rpc Call(Request) returns (Response) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">message Request &#123;</span><br><span class="line">    <span class="keyword">string</span> acreage = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">string</span> address = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">string</span> area_id = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">string</span> beds = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">string</span> capacity = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">string</span> deposit = <span class="number">6</span>;</span><br><span class="line">    repeated <span class="keyword">string</span> facility = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">string</span> min_days = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">string</span> max_days = <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">string</span> price = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">string</span> room_count = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">string</span> title = <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">string</span> unit = <span class="number">13</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">string</span> name = <span class="number">14</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Response &#123;</span><br><span class="line">    <span class="keyword">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">map</span>&lt;<span class="keyword">string</span>,<span class="keyword">int32</span>&gt; data = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改main.go文件，然后到handler中实现具体服务内容，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//发布房源,插入操作</span></span><br><span class="line">db,err := model.InitDb()</span><br><span class="line"><span class="comment">//向数据库中插入数据</span></span><br><span class="line"><span class="keyword">var</span> house model.House</span><br><span class="line">acrea,_ :=strconv.Atoi(req.Acreage)</span><br><span class="line">house.Acreage = acrea</span><br><span class="line">house.Address = req.Address</span><br><span class="line">areaId ,_ :=strconv.Atoi(req.AreaId)</span><br><span class="line">house.AreaId = <span class="keyword">uint</span>(areaId)</span><br><span class="line">house.Beds = req.Beds</span><br><span class="line"><span class="built_in">cap</span>,_ :=strconv.Atoi(req.Capacity)</span><br><span class="line">house.Capacity = <span class="built_in">cap</span></span><br><span class="line">dep ,_ :=strconv.Atoi(req.Deposit)</span><br><span class="line">house.Deposit = dep</span><br><span class="line">maxDays ,_ :=strconv.Atoi(req.MaxDays)</span><br><span class="line">house.Max_days = maxDays</span><br><span class="line">minDays,_ :=strconv.Atoi(req.MinDays)</span><br><span class="line">house.Min_days = minDays</span><br><span class="line">price ,_:= strconv.Atoi(req.Price)</span><br><span class="line">house.Price = price</span><br><span class="line">house.Title = req.Title</span><br><span class="line">house.Unit = req.Unit</span><br><span class="line"></span><br><span class="line">roomCount,_ :=strconv.Atoi(req.RoomCount)</span><br><span class="line">house.Room_count = roomCount</span><br><span class="line"><span class="comment">//在model中封装插入函数，具体实现请往下看</span></span><br><span class="line">houseId,err := model.InserHouse(db,req.Name,house,req.Facility)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置返回值</span></span><br><span class="line">rsp.Errno = utils.RECODE_OK</span><br><span class="line">rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">rsp.Data = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int32</span>&#123;<span class="string">&quot;house_id&quot;</span>:<span class="keyword">int32</span>(houseId)&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br></pre></td></tr></table></figure>

<p>model中插入房源函数实现，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//发布房源</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InserHouse</span><span class="params">(db*gorm.DB,name <span class="keyword">string</span>,house House,fids []<span class="keyword">string</span>)</span><span class="params">(<span class="keyword">uint</span>,error)</span></span>&#123;</span><br><span class="line">    <span class="comment">//根据用户名获取用户Id</span></span><br><span class="line">    <span class="keyword">var</span> user User</span><br><span class="line">    user.Name = name</span><br><span class="line">    err := db.Where(<span class="string">&quot;name = ?&quot;</span>,name).Find(&amp;user).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>, err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//关联当前用户</span></span><br><span class="line">    house.UserId = <span class="keyword">uint</span>(user.ID)</span><br><span class="line">    <span class="comment">//查询所有家具放到house里面</span></span><br><span class="line">    <span class="keyword">for</span> _,v := <span class="keyword">range</span> fids&#123;</span><br><span class="line">        id ,_:=strconv.Atoi(v)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> fac Facility</span><br><span class="line">        err := db.Where(<span class="string">&quot;id = ?&quot;</span>,id).Find(&amp;fac).Error</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>,err</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        house.Facilities = <span class="built_in">append</span>(house.Facilities,&amp;fac)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> house.ID, db.Create(&amp;house).Error</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="web端实现-1"><a href="#web端实现-1" class="headerlink" title="web端实现"></a>web端实现</h2><p>根据接口文档定义，给对应请求添加路由对应，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.POST(<span class="string">&quot;/houses&quot;</span>,controller.PostHouses)</span><br></pre></td></tr></table></figure>

<p>然后到controller中实现具体操作，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> HouseInfo <span class="keyword">struct</span> &#123;</span><br><span class="line">    Title <span class="keyword">string</span> <span class="string">`json:&quot;title&quot;`</span></span><br><span class="line">    Acreage <span class="keyword">string</span> <span class="string">`json:&quot;acreage&quot;`</span></span><br><span class="line">    Address <span class="keyword">string</span>     <span class="string">`json:&quot;address&quot;`</span></span><br><span class="line">    AreaId <span class="keyword">string</span>  <span class="string">`json:&quot;area_id&quot;`</span></span><br><span class="line">    Beds <span class="keyword">string</span>    <span class="string">`json:&quot;beds&quot;`</span></span><br><span class="line">    Capacity <span class="keyword">string</span> <span class="string">`json:&quot;capacity&quot;`</span></span><br><span class="line">    Deposit <span class="keyword">string</span> <span class="string">`json:&quot;deposit&quot;`</span></span><br><span class="line">    Facility []<span class="keyword">string</span> <span class="string">`json:&quot;facility&quot;`</span></span><br><span class="line">    MaxDays <span class="keyword">string</span> <span class="string">`json:&quot;max_days&quot;`</span></span><br><span class="line">    MinDays <span class="keyword">string</span> <span class="string">`json:&quot;min_days&quot;`</span></span><br><span class="line">    Price <span class="keyword">string</span>   <span class="string">`json:&quot;price&quot;`</span></span><br><span class="line">    RoomCount <span class="keyword">string</span> <span class="string">`json:&quot;room_count&quot;`</span></span><br><span class="line">    Unit <span class="keyword">string</span>    <span class="string">`json:&quot;unit&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发布房源</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostHouses</span><span class="params">(ctx*gin.Context)</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义错误容器</span></span><br><span class="line">    errResp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取前端传递过来的数据</span></span><br><span class="line">    <span class="keyword">var</span> houseInfo HouseInfo</span><br><span class="line">    err := ctx.Bind(&amp;houseInfo)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_REQERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_REQERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;houseInfo = &quot;</span>,houseInfo)</span><br><span class="line">    <span class="comment">//获取当前用户名</span></span><br><span class="line">    s := sessions.Default(ctx)</span><br><span class="line">    userName := s.Get(<span class="string">&quot;userName&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//远程服务调用</span></span><br><span class="line">    grpcService := utils.GetGrpcService()</span><br><span class="line">    client := postHouse.NewPostHouseService(utils.PostHouseName,grpcService.Client())</span><br><span class="line">    resp ,err:=client.Call(context.TODO(),&amp;postHouse.Request&#123;</span><br><span class="line">        Name:userName.(<span class="keyword">string</span>),</span><br><span class="line">        Acreage:houseInfo.Acreage,</span><br><span class="line">        Address:houseInfo.Address,</span><br><span class="line">        AreaId:houseInfo.AreaId,</span><br><span class="line">        Beds:houseInfo.Beds,</span><br><span class="line">        Capacity:houseInfo.Capacity,</span><br><span class="line">        Deposit:houseInfo.Deposit,</span><br><span class="line">        Facility:houseInfo.Facility,</span><br><span class="line">        MaxDays:houseInfo.MaxDays,</span><br><span class="line">        MinDays:houseInfo.MinDays,</span><br><span class="line">        Price:houseInfo.Price,</span><br><span class="line">        RoomCount:houseInfo.RoomCount,</span><br><span class="line">        Title:houseInfo.Title,</span><br><span class="line">        Unit:houseInfo.Unit,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数据</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SERVERERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SERVERERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="11-上传房屋图片"><a href="#11-上传房屋图片" class="headerlink" title="11 上传房屋图片"></a>11 上传房屋图片</h1><p>发送（上传）房屋图片服务（商品相关）</p>
<h2 id="创建命令-2"><a href="#创建命令-2" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/PostHousesImage</span></span><br></pre></td></tr></table></figure>

<h2 id="流程与接口-2"><a href="#流程与接口-2" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543153464298.jpg" alt="im"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: POST</span><br><span class="line">#<span class="number">3</span>表示房源id</span><br><span class="line">url:api/v1<span class="number">.0</span>/houses/<span class="number">3</span>/images </span><br><span class="line">url:api/v1<span class="number">.0</span>/houses/:id/images </span><br><span class="line"></span><br><span class="line">#data:</span><br><span class="line">图片二进制数据</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBLmWAHlsrAAaInSze-cQ719.jpg&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="服务端实现-2"><a href="#服务端实现-2" class="headerlink" title="服务端实现"></a>服务端实现</h2><p>创建服务，根据接口定义，修改proto文件，proto文件内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> <span class="keyword">go</span>.micro.srv.uploadHouseImage;</span><br><span class="line"></span><br><span class="line">service UploadHouseImage &#123;</span><br><span class="line">    rpc Call(Request) returns (Response) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Request &#123;</span><br><span class="line">    <span class="keyword">int32</span> house_id = <span class="number">1</span>;</span><br><span class="line">    bytes houseBuffer = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">string</span> fileExt = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Response &#123;</span><br><span class="line">    <span class="keyword">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">map</span>&lt;<span class="keyword">string</span>,<span class="keyword">string</span>&gt;data = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改main.go文件，添加consul服务发现，然后实现hander中具体的业务，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取fastDFS操作对象</span></span><br><span class="line">fdfsClient,err:= fdfs_client.NewFdfsClient(<span class="string">&quot;/etc/fdfs/client.conf&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过字节切片上传文件到fastDFS</span></span><br><span class="line">fdfsResp,err := fdfsClient.UploadByBuffer(req.HouseBuffer,req.FileExt)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//把数据存储到数据库,这里把数据库操作封装成函数，具体代码往下看</span></span><br><span class="line">db,err := model.InitDb()</span><br><span class="line">err = model.UploadHouseImage(db,<span class="keyword">uint</span>(req.HouseId),utils.NginxPath+fdfsResp.RemoteFileId)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回数据</span></span><br><span class="line">rsp.Errno = utils.RECODE_OK</span><br><span class="line">rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">rsp.Data = <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;<span class="string">&quot;url&quot;</span>:utils.NginxPath+fdfsResp.RemoteFileId&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br></pre></td></tr></table></figure>

<p>models中上传房屋图片的操作代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//上传房屋图片</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UploadHouseImage</span><span class="params">(db*gorm.DB,houseId <span class="keyword">uint</span>,imgUrl <span class="keyword">string</span>)</span><span class="title">error</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> house House</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询对应 房屋信息</span></span><br><span class="line">    err := db.First(&amp;house,houseId).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> house.Index_image_url == <span class="string">&quot;&quot;</span>&#123;</span><br><span class="line">        err = db.Model(&amp;house).Update(<span class="string">&quot;index_image_url&quot;</span>,imgUrl).Error</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> err</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> houseImage HouseImage</span><br><span class="line">        houseImage.HouseId = houseId</span><br><span class="line">        <span class="keyword">return</span> db.Create(&amp;houseImage).Error</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="web端实现-2"><a href="#web端实现-2" class="headerlink" title="web端实现"></a>web端实现</h2><p>根据接口文档，给请求添加对应路由，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.POST(<span class="string">&quot;/houses/:id/images&quot;</span>,controller.PostHousesImage)</span><br></pre></td></tr></table></figure>

<p>接着到controller中实现具体代码，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostHousesImage</span><span class="params">(ctx*gin.Context)</span></span>&#123;</span><br><span class="line">    errResp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>)</span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    houseId := ctx.Param(<span class="string">&quot;id&quot;</span>)</span><br><span class="line">    <span class="comment">//这里我们发现，已经操作上传文件两次了，可以把上传文件操作封装成函数，代码在下面</span></span><br><span class="line">    fileBuffer,fileExt := UploadFile(ctx,errResp,<span class="string">&quot;house_image&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> fileBuffer == <span class="literal">nil</span> &#123;</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用远程服务</span></span><br><span class="line">    id,_ := strconv.Atoi(houseId)</span><br><span class="line">    grpcService := utils.GetGrpcService()</span><br><span class="line">    client := uploadHouseImage.NewUploadHouseImageService(utils.UploadHouseImage,grpcService.Client())</span><br><span class="line">    resp,err := client.Call(context.TODO(),&amp;uploadHouseImage.Request&#123;</span><br><span class="line">        HouseId:<span class="keyword">int32</span>(id),</span><br><span class="line">        FileExt:fileExt,</span><br><span class="line">        HouseBuffer:fileBuffer,</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="comment">//返回数据</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SERVERERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SERVERERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上传文件的函数封装，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">UploadFile</span><span class="params">(ctx*gin.Context,errResp <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>,fileName <span class="keyword">string</span>)</span><span class="params">([]<span class="keyword">byte</span>,<span class="keyword">string</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    fileHeader,err := ctx.FormFile(fileName)</span><br><span class="line">    <span class="comment">//校验数据</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_DATAERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_DATAERR)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>,<span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//大小校验</span></span><br><span class="line">    <span class="keyword">if</span> fileHeader.Size &gt; <span class="number">500000</span>&#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_MOREBIG</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_MOREBIG)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>,<span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//格式校验</span></span><br><span class="line">    fileExt := path.Ext(fileHeader.Filename)</span><br><span class="line">    <span class="keyword">if</span> fileExt != <span class="string">&quot;.jpg&quot;</span> &amp;&amp; fileExt != <span class="string">&quot;.png&quot;</span> &amp;&amp; fileExt != <span class="string">&quot;.jepg&quot;</span>&#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_FORMATERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_FORMATERR)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span>,<span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    file,_ := fileHeader.Open()</span><br><span class="line">    buffer := <span class="built_in">make</span>([]<span class="keyword">byte</span>,fileHeader.Size)</span><br><span class="line">    file.Read(buffer)</span><br><span class="line">    <span class="keyword">return</span> buffer,fileExt[<span class="number">1</span>:]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="12-获取房源详细信息"><a href="#12-获取房源详细信息" class="headerlink" title="12 获取房源详细信息"></a>12 获取房源详细信息</h1><p>获取房屋详细信息服务（商品相关）</p>
<h2 id="创建命令-3"><a href="#创建命令-3" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/GetHouseInfo</span></span><br></pre></td></tr></table></figure>

<h2 id="流程与接口-3"><a href="#流程与接口-3" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543153705596.jpg" alt="im"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: GET</span><br><span class="line">#<span class="number">1</span>表示房源id</span><br><span class="line">url:api/v1<span class="number">.0</span>/houses/<span class="number">1</span></span><br><span class="line">url:api/v1<span class="number">.0</span>/houses/:id</span><br><span class="line">#data:</span><br><span class="line">no input data</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;house&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;acreage&quot;</span>: <span class="number">80</span>,</span><br><span class="line">      <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;西三旗桥东&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;beds&quot;</span>: <span class="string">&quot;2双人床&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;capacity&quot;</span>: <span class="number">3</span>,</span><br><span class="line">      <span class="attr">&quot;comments&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;comment&quot;</span>: <span class="string">&quot;评论的内容&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-12 12:30:30&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;user_name&quot;</span>: <span class="string">&quot;评论人的姓名&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;comment&quot;</span>: <span class="string">&quot;评论的内容&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-12 12:30:30&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;user_name&quot;</span>: <span class="string">&quot;评论人的姓名&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;comment&quot;</span>: <span class="string">&quot;评论的内容&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-12 12:30:30&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;user_name&quot;</span>: <span class="string">&quot;评论人的姓名&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;deposit&quot;</span>: <span class="number">200</span>,</span><br><span class="line">      <span class="attr">&quot;facilities&quot;</span>: [<span class="number">9</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">16</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">23</span>],</span><br><span class="line">      <span class="attr">&quot;hid&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;img_urls&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBJY-AL3m8AAS8K2x8TDE052.jpg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBJZmAYqGWAAaInSze-cQ230.jpg&quot;</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;max_days&quot;</span>: <span class="number">30</span>,</span><br><span class="line">      <span class="attr">&quot;min_days&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;price&quot;</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">&quot;room_count&quot;</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;上奥世纪中心&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;unit&quot;</span>: <span class="string">&quot;3室3厅&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;user_avatar&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBLFeALIEjAADexS5wJKs340.png&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;user_id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">&quot;user_name&quot;</span>: <span class="string">&quot;Panda&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;user_id&quot;</span>: <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="服务端实现-3"><a href="#服务端实现-3" class="headerlink" title="服务端实现"></a>服务端实现</h2><p>创建服务，然后根据接口定义，修改proto文件，proto文件内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> <span class="keyword">go</span>.micro.srv.getHouseDetail;</span><br><span class="line"></span><br><span class="line">service GetHouseDetail &#123;</span><br><span class="line">    rpc Call(Request) returns (Response) &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">message Request &#123;</span><br><span class="line">    <span class="keyword">int32</span> houseId = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message Response &#123;</span><br><span class="line">    <span class="keyword">string</span> errno = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">string</span> errmsg = <span class="number">2</span>;</span><br><span class="line">    data data = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message data&#123;</span><br><span class="line">    houseInfo house = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int32</span> user_id = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message houseInfo &#123;</span><br><span class="line">    <span class="keyword">int32</span> acreage = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">string</span> address = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">string</span> beds = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int32</span> capacity = <span class="number">4</span>;</span><br><span class="line">    repeated commentInfo comments = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">int32</span> deposit = <span class="number">6</span>;</span><br><span class="line">    repeated <span class="keyword">int32</span> facilities = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">int32</span> hid = <span class="number">8</span>;</span><br><span class="line">    repeated <span class="keyword">string</span> img_urls = <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">int32</span> max_days = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int32</span> min_days = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">int32</span> price = <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">int32</span> room_count = <span class="number">13</span>;</span><br><span class="line">    <span class="keyword">string</span> title = <span class="number">14</span>;</span><br><span class="line">    <span class="keyword">string</span> unit = <span class="number">15</span>;</span><br><span class="line">    <span class="keyword">string</span> user_avatar = <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">int32</span> user_id = <span class="number">17</span>;</span><br><span class="line">    <span class="keyword">string</span> user_name = <span class="number">18</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">message commentInfo&#123;</span><br><span class="line">    <span class="keyword">string</span> comment = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">string</span> ctime = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">string</span> user_name = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改main.go文件，然后去hander中实现具体业务，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//从redis数据库中获取数据</span></span><br><span class="line"><span class="keyword">var</span> data getHouseDetail.Data</span><br><span class="line">redisConn := model.InitRedis().Get()</span><br><span class="line">houseBuffer, _ := redis.Bytes(redisConn.Do(<span class="string">&quot;get&quot;</span>, <span class="string">&quot;houseId_&quot;</span>+strconv.Itoa(<span class="keyword">int</span>(req.HouseId))))</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(houseBuffer) == <span class="number">0</span> &#123;</span><br><span class="line">    <span class="comment">//如果查不到数据,就从数据库获取</span></span><br><span class="line">    <span class="comment">// 获取数据库实例</span></span><br><span class="line">    db, err := model.InitDb()</span><br><span class="line">    <span class="comment">//把具体的操作封装成函数</span></span><br><span class="line">    house, orders, orderUsers, user, facs, imgs, err := model.GetDetail(db, req.HouseId)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取评论数据</span></span><br><span class="line">    <span class="keyword">var</span> comments []*getHouseDetail.CommentInfo</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> k, v := <span class="keyword">range</span> orders &#123;</span><br><span class="line">        <span class="keyword">var</span> commment getHouseDetail.CommentInfo</span><br><span class="line">        commment.Ctime = v.UpdatedAt.Format(<span class="string">&quot;2006:01:02 15:04:05&quot;</span>)</span><br><span class="line">        commment.UserName = orderUsers[k].Name</span><br><span class="line">        commment.Comment = v.Comment</span><br><span class="line"></span><br><span class="line">        comments = <span class="built_in">append</span>(comments, &amp;commment)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取家具数据</span></span><br><span class="line">    <span class="keyword">var</span> fids []<span class="keyword">int32</span></span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> facs &#123;</span><br><span class="line">        fids = <span class="built_in">append</span>(fids, <span class="keyword">int32</span>(v.ID))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取图片</span></span><br><span class="line">    <span class="keyword">var</span> imgPaths []<span class="keyword">string</span></span><br><span class="line">    imgPaths = <span class="built_in">append</span>(imgPaths, house.Index_image_url)</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> imgs &#123;</span><br><span class="line">        imgPaths = <span class="built_in">append</span>(imgPaths, v.Url)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置返回数据</span></span><br><span class="line">    <span class="keyword">var</span> houseInfo getHouseDetail.HouseInfo</span><br><span class="line">    houseInfo.Acreage = <span class="keyword">int32</span>(house.Acreage)</span><br><span class="line">    houseInfo.Address = house.Address</span><br><span class="line">    houseInfo.Beds = house.Beds</span><br><span class="line">    houseInfo.Capacity = <span class="keyword">int32</span>(house.Capacity)</span><br><span class="line">    houseInfo.Comments = comments</span><br><span class="line">    houseInfo.Deposit = <span class="keyword">int32</span>(house.Deposit)</span><br><span class="line">    houseInfo.Facilities = fids</span><br><span class="line">    houseInfo.Hid = <span class="keyword">int32</span>(house.ID)</span><br><span class="line">    houseInfo.ImgUrls = imgPaths</span><br><span class="line">    houseInfo.MinDays = <span class="keyword">int32</span>(house.Min_days)</span><br><span class="line">    houseInfo.MaxDays = <span class="keyword">int32</span>(house.Max_days)</span><br><span class="line">    houseInfo.Price = <span class="keyword">int32</span>(house.Price)</span><br><span class="line">    houseInfo.RoomCount = <span class="keyword">int32</span>(house.Room_count)</span><br><span class="line">    houseInfo.Title = house.Title</span><br><span class="line">    houseInfo.Unit = house.Unit</span><br><span class="line">    houseInfo.UserAvatar = user.Avatar_url</span><br><span class="line">    houseInfo.UserId = <span class="keyword">int32</span>(house.UserId)</span><br><span class="line">    houseInfo.UserName = user.Name</span><br><span class="line"></span><br><span class="line">    data.House = &amp;houseInfo</span><br><span class="line">    data.UserId = <span class="keyword">int32</span>(user.ID)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把查询到的数据存储到redis中</span></span><br><span class="line">    buffer,err := json.Marshal(data)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    redisConn.Do(<span class="string">&quot;set&quot;</span>,<span class="string">&quot;houseId_&quot;</span>+strconv.Itoa(<span class="keyword">int</span>(house.ID)),buffer)</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//如果查到数据,就直接解析数据</span></span><br><span class="line">    err := json.Unmarshal(houseBuffer,data)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回数据</span></span><br><span class="line">rsp.Errno = utils.RECODE_OK</span><br><span class="line">rsp.Errmsg = utils.RecodeText(utils.RECODE_OK)</span><br><span class="line">rsp.Data = &amp;data</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br></pre></td></tr></table></figure>

<p>model中封装的函数具体内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//根据房屋id获取房屋信息,获取评论,用户信息,家具信息,房屋图片</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetDetail</span><span class="params">(db*gorm.DB,houseId <span class="keyword">int32</span>)</span><span class="params">(House,[]OrderHouse,[]User,User,[]Facility,[]HouseImage,error)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> house House</span><br><span class="line">    <span class="keyword">var</span> orders []OrderHouse</span><br><span class="line">    <span class="keyword">var</span> orderUsers []User</span><br><span class="line">    <span class="keyword">var</span> user User</span><br><span class="line">    <span class="keyword">var</span> facs []Facility</span><br><span class="line">    <span class="keyword">var</span> imgs []HouseImage</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    house.ID = <span class="keyword">uint</span>(houseId)</span><br><span class="line">    err := db.Where(&amp;house).First(&amp;house).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> house,orders,orderUsers,user,facs,imgs,err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取评论信息</span></span><br><span class="line">    err = db.Model(&amp;house).Related(&amp;orders).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> house,orders,orderUsers,user,facs,imgs,err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取评论用户信息</span></span><br><span class="line">    <span class="keyword">for</span> _,v := <span class="keyword">range</span> orders&#123;</span><br><span class="line">        <span class="keyword">var</span> orderUser User</span><br><span class="line">        err := db.Model(&amp;v).Related(&amp;orderUser).Error</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> house,orders,orderUsers,user,facs,imgs,err</span><br><span class="line">        &#125;</span><br><span class="line">        orderUsers = <span class="built_in">append</span>(orderUsers,orderUser)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取用户信息</span></span><br><span class="line">    err = db.Model(&amp;house).Related(&amp;user).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> house,orders,orderUsers,user,facs,imgs,err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取家具信息</span></span><br><span class="line">    err = db.Model(&amp;house).Related(&amp;facs,<span class="string">&quot;Facilities&quot;</span>).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> house,orders,orderUsers,user,facs,imgs,err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取房屋图片</span></span><br><span class="line">    err = db.Model(&amp;house).Related(&amp;imgs).Error</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> house,orders,orderUsers,user,facs,imgs,err</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> house,orders,orderUsers,user,facs,imgs,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="web端实现-3"><a href="#web端实现-3" class="headerlink" title="web端实现"></a>web端实现</h2><p>根据接口定义，给请求设置对应路由，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">r1.GET(<span class="string">&quot;/houses/:id&quot;</span>,controller.GetHouseInfo)</span><br></pre></td></tr></table></figure>

<p>然后去controller中实现对应业务，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取房屋详细信息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetHouseInfo</span><span class="params">(ctx*gin.Context)</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取数据</span></span><br><span class="line">    errResp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;)</span><br><span class="line">    houseId := ctx.Param(<span class="string">&quot;id&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//校验数据</span></span><br><span class="line">    id,err := strconv.Atoi(houseId)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_REQERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_REQERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用远程服务</span></span><br><span class="line">    grpcService := utils.GetGrpcService()</span><br><span class="line">    client := getDetail.NewGetHouseDetailService(utils.GetDetail,grpcService.Client())</span><br><span class="line">    resp,err := client.Call(context.TODO(),&amp;getDetail.Request&#123;HouseId:<span class="keyword">int32</span>(id)&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数据</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(err)</span><br><span class="line">        errResp[<span class="string">&quot;errno&quot;</span>] = utils.RECODE_SERVERERR</span><br><span class="line">        errResp[<span class="string">&quot;errmsg&quot;</span>] = utils.RecodeText(utils.RECODE_SERVERERR)</span><br><span class="line">        ctx.JSON(<span class="number">200</span>,errResp)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ctx.JSON(<span class="number">200</span>,resp)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="13-获取首页动画图片"><a href="#13-获取首页动画图片" class="headerlink" title="13 获取首页动画图片"></a>13 获取首页动画图片</h1><p>获取首页轮播图片服务（首页相关）</p>
<h2 id="创建命令-4"><a href="#创建命令-4" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/GetIndex</span></span><br></pre></td></tr></table></figure>

<h2 id="流程与接口-4"><a href="#流程与接口-4" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543154107047.jpg" alt="im"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">Request:</span></span><br><span class="line">method: GET</span><br><span class="line">url:api/v1.0/house/index</span><br><span class="line"><span class="meta">#</span><span class="bash">data:</span></span><br><span class="line">no input data</span><br><span class="line"><span class="meta">#</span><span class="bash">Response</span></span><br><span class="line"><span class="meta">#</span><span class="bash">返回成功：</span></span><br><span class="line">&#123;</span><br><span class="line">  &quot;errno&quot;: &quot;0&quot;,</span><br><span class="line">  &quot;errmsg&quot;: &quot;成功&quot;,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">        &quot;houses&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;house_id&quot;:    this.Id,</span><br><span class="line">        &quot;title&quot;:       this.Title,</span><br><span class="line">        &quot;price&quot;:       this.Price,</span><br><span class="line">        &quot;area_name&quot;:   this.Area.Name,</span><br><span class="line">        &quot;img_url&quot;:     utils.AddDomain2Url(this.Index_image_url),</span><br><span class="line">        &quot;room_count&quot;:  this.Room_count,</span><br><span class="line">        &quot;order_count&quot;: this.Order_count,</span><br><span class="line">        &quot;address&quot;:     this.Address,</span><br><span class="line">        &quot;user_avatar&quot;: utils.AddDomain2Url(this.User.Avatar_url),</span><br><span class="line">        &quot;ctime&quot;:       this.Ctime.Format(&quot;2006-01-02 15:04:05&quot;),</span><br><span class="line">    &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;house_id&quot;:    this.Id,</span><br><span class="line">        &quot;title&quot;:       this.Title,</span><br><span class="line">        &quot;price&quot;:       this.Price,</span><br><span class="line">        &quot;area_name&quot;:   this.Area.Name,</span><br><span class="line">        &quot;img_url&quot;:     utils.AddDomain2Url(this.Index_image_url),</span><br><span class="line">        &quot;room_count&quot;:  this.Room_count,</span><br><span class="line">        &quot;order_count&quot;: this.Order_count,</span><br><span class="line">        &quot;address&quot;:     this.Address,</span><br><span class="line">        &quot;user_avatar&quot;: utils.AddDomain2Url(this.User.Avatar_url),</span><br><span class="line">        &quot;ctime&quot;:       this.Ctime.Format(&quot;2006-01-02 15:04:05&quot;),</span><br><span class="line">    &#125;</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">返回失败：</span></span><br><span class="line">&#123;</span><br><span class="line">    &quot;errno&quot;: &quot;400x&quot;,   //状态码</span><br><span class="line">    &quot;errmsg&quot;:&quot;状态错误信息&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="14-搜索房源"><a href="#14-搜索房源" class="headerlink" title="14 搜索房源"></a>14 搜索房源</h1><p>获取（搜索）房源服务（商品相关）</p>
<h2 id="创建命令-5"><a href="#创建命令-5" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/GetHouses</span></span><br></pre></td></tr></table></figure>

<h2 id="流程与接口-5"><a href="#流程与接口-5" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543154391621.jpg" alt="im"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: GET</span><br><span class="line">#adi表示地区编号</span><br><span class="line">#sd表示起始日期</span><br><span class="line">#ed表示结束日期</span><br><span class="line">#sk表示查询方式</span><br><span class="line">#p表示页码</span><br><span class="line">url:api/v1<span class="number">.0</span>/houses?aid=<span class="number">5</span>&amp;sd=<span class="number">2017</span><span class="number">-11</span><span class="number">-12</span>&amp;ed=<span class="number">2017</span><span class="number">-11</span><span class="number">-30</span>&amp;sk=new</span><br><span class="line">#data:</span><br><span class="line">no input data</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;current_page&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;houses&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;西三旗桥东&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;area_name&quot;</span>: <span class="string">&quot;昌平区&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-06 11:16:24&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;house_id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;img_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBJY-AL3m8AAS8K2x8TDE052.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;order_count&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;price&quot;</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="attr">&quot;room_count&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;上奥世纪中心13号楼&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;user_avatar&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBLFeALIEjAADexS5wJKs340.png&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;西三旗桥东&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;area_name&quot;</span>: <span class="string">&quot;昌平区&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-06 11:16:24&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;house_id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;img_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBJY-AL3m8AAS8K2x8TDE052.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;order_count&quot;</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">&quot;price&quot;</span>: <span class="number">100</span>,</span><br><span class="line">        <span class="attr">&quot;room_count&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;上奥世纪中心18号楼&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;user_avatar&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBLFeALIEjAADexS5wJKs340.png&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;total_page&quot;</span>: <span class="number">1</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="15-发布订单"><a href="#15-发布订单" class="headerlink" title="15 发布订单"></a>15 发布订单</h1><p>发送（发布）订单服务（订单相关）</p>
<h2 id="创建命令-6"><a href="#创建命令-6" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/PostOrders</span></span><br></pre></td></tr></table></figure>

<h2 id="流程与接口-6"><a href="#流程与接口-6" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543154867892.jpg" alt="im"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: POST</span><br><span class="line">url:api/v1<span class="number">.0</span>/orders</span><br><span class="line">#data:</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;house_id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;start_date&quot;</span>: <span class="string">&quot;2017-11-11 21:23:49&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;end_date&quot;</span>: <span class="string">&quot;2017-11-12 21:23:49&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;order_id&quot;</span>:<span class="string">&quot;1&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="16-请求查看房东-租客订单信息"><a href="#16-请求查看房东-租客订单信息" class="headerlink" title="16 请求查看房东/租客订单信息"></a>16 请求查看房东/租客订单信息</h1><p>获取房东/租户订单信息服务（订单相关）</p>
<h2 id="创建命令-7"><a href="#创建命令-7" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/GetUserOrder</span></span><br></pre></td></tr></table></figure>

<h2 id="流程与接口-7"><a href="#流程与接口-7" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543155051108.jpg" alt="im"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: GET</span><br><span class="line">url:api/v1<span class="number">.0</span>/user/orders?role=custom 备注:role=custom为租客查看订单信息</span><br><span class="line">url:api/v1<span class="number">.0</span>/user/orders?role=landlord 备注:role=landlord为房东查看被预定订单信息</span><br><span class="line">#data:</span><br><span class="line">no input data</span><br><span class="line"></span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;data&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;orders&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;amount&quot;</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">&quot;comment&quot;</span>: <span class="string">&quot;哈哈拒接&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-11 21:23:49&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;days&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;end_date&quot;</span>: <span class="string">&quot;2017-11-29 16:00:00&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;img_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBJY-AL3m8AAS8K2x8TDE052.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;order_id&quot;</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">&quot;start_date&quot;</span>: <span class="string">&quot;2017-11-28 16:00:00&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;REJECTED&quot;</span>,<span class="comment">//WAIT_ACCPET,WAIT_COMMENT,REJECTED,COMPLETE,CANCELED</span></span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;上奥世纪中心&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;amount&quot;</span>: <span class="number">1500</span>,</span><br><span class="line">        <span class="attr">&quot;comment&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-11 01:32:10&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;days&quot;</span>: <span class="number">15</span>,</span><br><span class="line">        <span class="attr">&quot;end_date&quot;</span>: <span class="string">&quot;2017-11-24 16:00:00&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;img_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBJY-AL3m8AAS8K2x8TDE052.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;order_id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">&quot;start_date&quot;</span>: <span class="string">&quot;2017-11-10 16:00:00&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;WAIT_COMMENT&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;上奥世纪中心&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;amount&quot;</span>: <span class="number">300</span>,</span><br><span class="line">        <span class="attr">&quot;comment&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ctime&quot;</span>: <span class="string">&quot;2017-11-10 01:46:00&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;days&quot;</span>: <span class="number">3</span>,</span><br><span class="line">        <span class="attr">&quot;end_date&quot;</span>: <span class="string">&quot;2017-11-11 16:00:00&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;img_url&quot;</span>: <span class="string">&quot;http://101.200.170.171:9998/group1/M00/00/00/Zciqq1oBJY-AL3m8AAS8K2x8TDE052.jpg&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;order_id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">&quot;start_date&quot;</span>: <span class="string">&quot;2017-11-09 16:00:00&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;WAIT_COMMENT&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;title&quot;</span>: <span class="string">&quot;上奥世纪中心&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="17-房东同意-拒绝订单"><a href="#17-房东同意-拒绝订单" class="headerlink" title="17 房东同意/拒绝订单"></a>17 房东同意/拒绝订单</h1><p>更新房东同意/拒绝订单（订单相关）</p>
<h2 id="创建命令-8"><a href="#创建命令-8" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/PutOrders</span></span><br></pre></td></tr></table></figure>

<h2 id="流程与接口-8"><a href="#流程与接口-8" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543155208535.jpg" alt="im"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: PUT</span><br><span class="line">#<span class="number">4</span>表示订单id</span><br><span class="line">url:api/v1<span class="number">.0</span>/orders/<span class="number">4</span>/status</span><br><span class="line">url:api/v1<span class="number">.0</span>/orders/:id/status</span><br><span class="line">#data:</span><br><span class="line">#<span class="string">&quot;accept&quot;</span>表示接受</span><br><span class="line">#<span class="string">&quot;reject&quot;</span>表示拒绝</span><br><span class="line">&#123;action: <span class="string">&quot;accept&quot;</span>&#125;   </span><br><span class="line"></span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="18-用户评价订单信息"><a href="#18-用户评价订单信息" class="headerlink" title="18 用户评价订单信息"></a>18 用户评价订单信息</h1><p>更新用户评价订单信息（订单相关）</p>
<h2 id="创建命令-9"><a href="#创建命令-9" class="headerlink" title="创建命令"></a>创建命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> sss/PutComment</span> </span><br></pre></td></tr></table></figure>

<h2 id="流程与接口-9"><a href="#流程与接口-9" class="headerlink" title="流程与接口"></a>流程与接口</h2><p><img src="assets%5Cclip_image002-1543156498014.jpg" alt="im"></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#Request:</span><br><span class="line">method: PUT</span><br><span class="line">#<span class="number">2</span>表示订单id0</span><br><span class="line">url:api/v1<span class="number">.0</span>/orders/<span class="number">2</span>/comment </span><br><span class="line">url:api/v1<span class="number">.0</span>/orders/:id/comment </span><br><span class="line">#data:</span><br><span class="line">&#123;</span><br><span class="line">    order_id: <span class="string">&quot;2&quot;</span>, </span><br><span class="line">    comment: <span class="string">&quot;烂房子！&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">#Response</span><br><span class="line">#返回成功：</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;errmsg&quot;</span>: <span class="string">&quot;成功&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#返回失败：</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;errno&quot;</span>: <span class="string">&quot;400x&quot;</span>,   <span class="comment">//状态码</span></span><br><span class="line">    <span class="attr">&quot;errmsg&quot;</span>:<span class="string">&quot;状态错误信息&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务相关知识1</title>
    <url>/2020/03/03/golang/%E5%BE%AE%E6%9C%8D%E5%8A%A1/%E8%AE%B2%E4%B9%89/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E8%AE%B2%E4%B9%891/</url>
    <content><![CDATA[<h1 id="1-微服务（micro-services）"><a href="#1-微服务（micro-services）" class="headerlink" title="1. 微服务（micro services）"></a>1. 微服务（micro services）</h1><p><img src=".%5Cassets%5C1563802988667.png" alt="1563802988667"></p>
<p>​    近几年,微服这个词闯入了我们的视线范围。在百度与谷歌中随便搜一搜也有几千万条的结果。那么，什么是微服务呢？微服务的概念是怎么产生的呢？<br>​    我们首先来了解一下Go语言与微服务的千丝万缕与来龙去脉。</p>
<span id="more"></span>

<h2 id="1-1-什么是微服务？"><a href="#1-1-什么是微服务？" class="headerlink" title="1.1 什么是微服务？"></a>1.1 什么是微服务？</h2><blockquote>
<p>服务拆分原则：高内聚低耦合</p>
</blockquote>
<p>​       在介绍微服务时，首先得先理解什么是微服务，顾名思义，微服务得从两个方面去理解，什么是”微”、什么是”服务”？</p>
<p>​       微（micro）狭义来讲就是体积小，著名的”2 pizza 团队”很好的诠释了这一解释（2 pizza 团队最早是亚马逊 CEO Bezos提出来的，意思是说单个服务的设计，所有参与人从设计、开发、测试、运维所有人加起来 只需要2个披萨就够了 ）。 </p>
<p>​       服务（service）一定要区别于系统，服务一个或者一组相对较小且独立的功能单元，是用户可以感知最小功能集。</p>
<p> 那么广义上来讲，微服务是一种分布式系统解决方案，推动细粒度服务的使用，这些服务协同工作。</p>
<h2 id="1-2-微服务这个概念的由来"><a href="#1-2-微服务这个概念的由来" class="headerlink" title="1.2 微服务这个概念的由来"></a>1.2 微服务这个概念的由来</h2><p>​       据说，早在19xx,非IT行业提出的概念，在威尼斯附近的软件架构师讨论会上，就有人提出了微服务架构设计的概念，用它来描述与会者所见的一种通用的架构设计风格。时隔一年之后，在同一个讨论会上，大家决定将这种架构设计风格用微服务架构来表示。</p>
<p>​       起初，对微服务的概念，没有一个明确的定义，大家只能从各自的角度说出了微服务的理解和看法。</p>
<p>​       在2014年3月，詹姆斯·刘易斯（James Lewis）与马丁·福勒（Martin Fowler）所发表的一篇博客中，总结了微服务架构设计的一些共同特点，这应该是一个对微服务比较全面的描述。</p>
<p>​       原文链接       <a href="https://martinfowler.com/articles/microservices.html">https://martinfowler.com/articles/microservices.html</a>   </p>
<p>​       这篇文章中认为：<strong>“简而言之，微服务架构风格是将单个应用程序作为一组小型服务开发的方法，每个服务程序都在自己的进程中运行，并与轻量级机制（通常是HTTP资源API）进行通信。这些服务是围绕业务功能构建的。可以通过全自动部署机器独立部署。这些服务器可以用不同的编程语言编写，使用不同的数据存储技术，并尽量不用集中式方式进行管理”</strong></p>
<p>​    在这里我们可能会混淆一个点，那就是微服务和微服务架构，这是两个不同的概念，而我们平时说到的微服务已经包含了这两个概念了，我们需要把它们说清楚以免学习中纠结。微服务架构是一种设计方法，而微服务这是指使用这种方法而设计的一个应用。所以我们必要对微服务的概念做出一个比较明确的定义。</p>
<p>​       <strong>微服务架构</strong>是将复杂的系统使用组件化的方式进行拆分，并使用轻量级通讯方式进行整合的一种设计方法。</p>
<p>​       <strong>微服务</strong>是通过这种架构设计方法拆分出来的一个独立的组件化的小应用。</p>
<p>​       微服务架构定义的精髓，可以用一句话来描述，那就是“<strong>分而治之，合而用之</strong>”。将复杂的系统进行拆分的方法，就是“分而治之”。分而治之，可以让复杂的事情变的简单，这很符合我们平时处理问题的方法。 使用轻量级通讯等方式进行整合的设计，就是“合而用之”的方法，合而用之可以让微小的力量变动强大。</p>
<h2 id="1-3-微服务和单体式架构区别"><a href="#1-3-微服务和单体式架构区别" class="headerlink" title="1.3 微服务和单体式架构区别"></a>1.3 微服务和单体式架构区别</h2><p>​        和微服务架构相反的就是单体式架构，我们来看看单体式架构设计的缺点，就更能体会微服务的好处了。单体架构在规模比较小的情况下工作情况良好，但是随着系统规模的扩大，它暴露出来的问题也越来越多，主要有以下几点：</p>
<p><strong>复杂性逐渐变高</strong></p>
<blockquote>
<p>中软国际   boss计费系统   十几年了     移动联通缴费平台   几个亿</p>
<p>自己封装函数    代码冗余度特别大</p>
</blockquote>
<p>比如有几十万行代码的大项目，代码越多复杂性越高，越难解决遇到的问题。</p>
<p><strong>技术债务逐渐上升</strong></p>
<blockquote>
<p>离职证明  留下了64个bug未解决就离职了</p>
</blockquote>
<p>​        公司的人员流动是再正常不过的事情，有的员工在离职之前，疏于代码质量的自我管束，导致留下来很多坑，由于单体项目代码量庞大的惊人，留下的坑很难被发觉，这就给新来的员工带来很大的烦恼，人员流动越大所留下的坑越多，也就是所谓的技术债务越来越多。</p>
<p><strong>耦合度太高，维护成本大</strong></p>
<p>​        当应用程序的功能越来越多、团队越来越大时，沟通成本、管理成本显著增加。当出现 bug 时，可能引起 bug 的原因组合越来越多，导致分析、定位和修复的成本增加；并且在对全局功能缺乏深度理解的情况下，容易在修复 bug 时引入新的 bug。</p>
<p><strong>持续交付周期长</strong></p>
<p>​       构建和部署时间会随着功能的增多而增加，任何细微的修改都会触发部署流水线。新人培养周期长：新成员了解背景、熟悉业务和配置环境的时间越来越长。</p>
<p><strong>技术选型成本高</strong></p>
<p>​        单块架构倾向于采用统一的技术平台或方案来解决所有问题，如果后续想引入新的技术或框架，成本和风险都很大。</p>
<p><strong>可扩展性差</strong></p>
<p>​         随着功能的增加，垂直扩展的成本将会越来越大；而对于水平扩展而言，因为所有代码都运行在同一个进程，没办法做到针对应用程序的部分功能做独立的扩展。</p>
<p>了解了单体式结构的缺点之后，我们来看看<strong>微服务架构的解决方案：</strong></p>
<ol>
<li><p><strong>单一职责</strong></p>
<p>微服务架构中的每个服务，都是具有业务逻辑的，符合高内聚、低耦合原则以及单一职责原则的单元，不同的服务通过“管道”的方式灵活组合，从而构建出庞大的系统。</p>
</li>
<li><p><strong>轻量级通信</strong></p>
<p>  服务之间通过轻量级的通信机制实现互通互联，而所谓的轻量级，通常指语言无关、平台无关的交互方式。</p>
<p> <img src="assets%5C1564056754698.png" alt="1564056754698"></p>
<p>对于轻量级通信的格式而言，我们熟悉的 XML 和 JSON，它们是语言无关、平台无关的；对于通信的协议而言，通常基于 HTTP，能让服务间的通信变得标准化、无状态化。使用轻量级通信机制，可以让团队选择更适合的语言、工具或者平台来开发服务本身。</p>
</li>
<li><p><strong>独立性</strong></p>
<p>每个服务在应用交付过程中，独立地开发、测试和部署。</p>
<p>在单体式架构中所有功能都在同一个代码库，功能的开发不具有独立性；当不同小组完成多个功能后，需要经过集成和回归测试，测试过程也不具有独立性；当测试完成后，应用被构建成一个包，如果某个功能存在 bug，将导致整个部署失败或者回滚。</p>
<p><img src="assets%5C1564058423216.png" alt="1564058423216"></p>
<p> 在微服务架构中，每个服务都是独立的业务单元，与其他服务高度解耦，只需要改变当前服务本身，就可以完成独立的开发、测试和部署。</p>
<p><img src="assets%5C1564061722380.png" alt="1564061722380"></p>
</li>
<li><p><strong>进程隔离</strong></p>
<p> 单块架构中，整个系统运行在同一个进程中，当应用进行部署时，必须停掉当前正在运行的应用，部署完成后再重启进程，无法做到独立部署。</p>
<p>在微服务架构中，应用程序由多个服务组成，每个服务都是高度自治的独立业务实体，可以运行在独立的进程中，不同的服务能非常容易地部署到不同的主机上。</p>
</li>
</ol>
<p>微服务这么多好处，就没有缺点吗？当然不是这样的，事务都有两面性，我们来看看微服务的不足之处。</p>
<ol>
<li><p><strong>运维要求比较高</strong></p>
<p>对于单体架构来讲，我们只需要维护好这一个项目就可以了，但是对于微服务架构来讲，由于项目是由多个微服务构成的，每个模块出现问题都会造成整个项目运行出现异常，想要知道是哪个模块造成的问题往往是不容易的，因为我们无法一步一步通过debug的方式来跟踪，这就对运维人员提出了很高的要求。</p>
</li>
<li><p><strong>分布式的复杂性</strong></p>
<p>对于单体架构来说，分布式是用来优化项目的，可有可无，但是对于微服务来说，分布式几乎是必会用的技术，由于分布式本身的复杂性，导致微服务架构也变得复杂起来。</p>
<blockquote>
<p>bug不好调试</p>
</blockquote>
</li>
<li><p><strong>接口成本高</strong></p>
<p>比如我们的前面的电商项目每个模块做成微服务的话，用户微服务是要被订单微服务和购物车微服务所调用的，一旦用户微服务的接口发生大的变动，那么所有依赖它的微服务都要做相应的调整，由于微服务可能非常多，那么调整接口所造成的成本将会明显提高。</p>
</li>
<li><p><strong>重复劳动</strong></p>
<p>对于单体架构来讲，如果某段业务被多个模块所共同使用，我们便可以抽象成一个工具类，被所有模块直接调用，但是微服务却无法这样做，因为这个微服务的工具类是不能被其它微服务所直接调用的，从而我们便不得不在每个微服务上都建这么一个工具类，从而导致代码的重复。</p>
</li>
<li><p><strong>业务不好分离</strong></p>
<p>程序员的业务理解程度</p>
</li>
</ol>
<p><strong>既然微服务也有这么多的缺点，那为什么还要用微服务架构呢？</strong></p>
<ol>
<li><p><strong>开发简单</strong></p>
<p>微服务架构将复杂系统进行拆分之后，让每个微服务应用都开发变得非常简单，没有太多的累赘。对于每一个开发者来说，这无疑是一种解脱，因为再也不用进行繁重的劳动了，每天都在一种轻松愉快的氛围中工作，其效率也会整备地提高</p>
</li>
<li><p><strong>能够快速相应需求变化</strong></p>
<p>一般的需求变化都来自于局部功能的改变，这种变化将落实到每个微服务上，二每个微服务的功能相对来说都非常简单，更改起来非常容易，所以微服务非常适合敏捷开发方法，能够快速的影响业务的需求变化。</p>
</li>
<li><p><strong>随时随地更新</strong></p>
</li>
<li><p>不停服更新</p>
<p>一方面，微服务的部署和更新并不会影响全局系统的正常运行；另一方面，使用多实例的部署方法，可以做到一个服务的重启和更新在不易察觉的情况下进行。所以每个服务任何时候都可以进行更新部署。</p>
</li>
<li><p><strong>系统更加稳定可靠</strong></p>
<p>微服务运行在一个高可用的分布式环境之中，有配套的监控和调度管理机制，并且还可以提供自由伸缩的管理，充分保障了系统的稳定可靠性</p>
</li>
</ol>
<p><strong>单体式和微服务对比</strong></p>
<table>
<thead>
<tr>
<th>新功能开发</th>
<th>需要时间</th>
<th>容易开发和实现</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>传统单体架构</td>
<td>分布式微服务化架构</td>
</tr>
<tr>
<td>部署</td>
<td>不经常而且容易部署</td>
<td>经常发布，部署复杂</td>
</tr>
<tr>
<td>隔离性</td>
<td>故障影响范围大</td>
<td>故障影响范围小</td>
</tr>
<tr>
<td>架构设计</td>
<td>初期技术选型难度大</td>
<td>设计逻辑难度大</td>
</tr>
<tr>
<td>系统性能</td>
<td>相对时间快，吞吐量小</td>
<td>相对时间慢，吞吐量大</td>
</tr>
<tr>
<td>系统运维</td>
<td>运维难度简单</td>
<td>运维难度复杂</td>
</tr>
<tr>
<td>新人上手</td>
<td>学习曲线大（应用逻辑）</td>
<td>学习曲线大（架构逻辑）</td>
</tr>
<tr>
<td>技术</td>
<td>技术单一而且封闭</td>
<td>技术多样而且容易开发</td>
</tr>
<tr>
<td>测试和差错</td>
<td>简单</td>
<td>复杂（每个服务都要进行单独测试，还需要集群测试）</td>
</tr>
<tr>
<td>系统扩展性</td>
<td>扩展性差</td>
<td>扩展性好</td>
</tr>
<tr>
<td>系统管理</td>
<td>重点在于开发成本</td>
<td>重点在于服务治理和调度</td>
</tr>
</tbody></table>
<h1 id="2-RPC协议"><a href="#2-RPC协议" class="headerlink" title="2. RPC协议"></a>2. RPC协议</h1><p>​        简单了解了微服务定义和优缺点之后，在我们正式学习微服务框架之前，需要首先了解一下RPC协议。为什么要了解RPC协议？RPC协议具体是什么呢？</p>
<h2 id="2-1-RPC的概念"><a href="#2-1-RPC的概念" class="headerlink" title="2.1 RPC的概念"></a>2.1 RPC的概念</h2><p>​        **RPC(Remote Procedure Call Protocol)**，是远程过程调用的缩写，通俗的说就是调用远处的一个函数。与之相对应的是本地函数调用，我们先来看一下本地函数调用。当我们写下如下代码的时候：</p>
<p>规则</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">result := Add(<span class="number">1</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p>我们知道，我们传入了1，2两个参数，调用了本地代码中的一个Add函数，得到result这个返回值。这时参数，返回值，代码段都在一个进程空间内，这是本地函数调用。</p>
<p><strong>那有没有办法，我们能够调用一个跨进程（所以叫”远程”，典型的事例，这个进程部署在另一台服务器上）的函数呢?</strong></p>
<p><img src="assets%5C1564372623923.png" alt="1564372623923"></p>
<p>这也是RPC主要实现的功能。</p>
<h2 id="2-2-为什么微服务需要RPC"><a href="#2-2-为什么微服务需要RPC" class="headerlink" title="2.2 为什么微服务需要RPC"></a>2.2 为什么微服务需要RPC</h2><p>我们使用微服务化的一个好处就是，不限定服务的提供方使用什么技术选型，能够实现公司跨团队的技术解耦，如下图：</p>
<p><img src="assets%5C1564373553013.png" alt="1564373553013"></p>
<p>这样的话，<strong>如果没有统一的服务框架，RPC框架</strong>，各个团队的服务提供方就需要各自实现一套序列化、反序列化、网络框架、连接池、收发线程、超时处理、状态机等“业务之外”的重复技术劳动，造成整体的低效。所以，<strong>统一RPC框架</strong>把上述“业务之外”的技术劳动统一处理，是服务化首要解决的问题。</p>
<h2 id="2-3-RPC入门"><a href="#2-3-RPC入门" class="headerlink" title="2.3 RPC入门"></a>2.3 RPC入门</h2><blockquote>
<p>protobuf    </p>
</blockquote>
<p>在互联网时代，RPC已经和IPC(进程间通信)一样成为一个不可或缺的基础构件。因此Go语言的标准库也提供了一个简单的RPC实现，我们将以此为入口学习RPC的常见用法。</p>
<h3 id="2-3-1-RPC版的”hello-world”"><a href="#2-3-1-RPC版的”hello-world”" class="headerlink" title="2.3.1 RPC版的”hello world”"></a>2.3.1 RPC版的”hello world”</h3><p>Go语言的RPC包的路径为net/rpc，也就是放在了net包目录下面。因此我们可以猜测该RPC包是建立在net包基础之上的。接着我们尝试基于rpc实现一个类似的例子。我们先构造一个HelloService类型，其中的Hello方法用于实现打印功能：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> HelloService <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(p *HelloService)</span><span class="title">Hello</span><span class="params">(request <span class="keyword">string</span>,reply    *<span class="keyword">string</span>)</span><span class="title">error</span></span>&#123;</span><br><span class="line">*reply = <span class="string">&quot;hello:&quot;</span> + request</span><br><span class="line"><span class="keyword">return</span>    <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>Hello方法方法必须满足Go语言的RPC规则：方法只能有两个可序列化的参数，其中第二个参数是指针类型，并且返回一个error类型，同时必须是公开的方法。</p>
<p>golang 中的类型比如：channel（通道）、complex（复数类型）、func（函数）均不能进行 序列化</p>
</blockquote>
<p>然后就可以将HelloService类型的对象注册为一个RPC服务：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//rpc注册服务  </span></span><br><span class="line">    <span class="comment">//注册rpc服务，维护一个hash表，key值是服务名称，value值是服务的地址</span></span><br><span class="line">    rpc.RegisterName(<span class="string">&quot;HelloService&quot;</span>,<span class="built_in">new</span>(HelloService))</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置服务监听</span></span><br><span class="line">    listener,err := net.Listen(<span class="string">&quot;tcp&quot;</span>,<span class="string">&quot;:1234&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//接受传输的数据</span></span><br><span class="line">    conn,err := listener.Accept()</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//rpc调用,并返回执行后的数据</span></span><br><span class="line">    <span class="comment">//1.read，获取服务名称和方法名，获取请求数据</span></span><br><span class="line">    <span class="comment">//2.调用对应服务里面的方法，获取传出数据</span></span><br><span class="line">    <span class="comment">//3.write，把数据返回给client</span></span><br><span class="line">    rpc.ServeConn(conn)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>其中rpc.Register函数调用会将对象类型中所有满足RPC规则的对象方法注册为RPC函数，所有注册的方法会放在“HelloService”服务空间之下。然后我们建立一个唯一的TCP链接，并且通过rpc.ServeConn函数在该TCP链接上为对方提供RPC服务。</p>
</blockquote>
<p>下面是客户端请求HelloService服务的代码：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//用rpc连接</span></span><br><span class="line">    client,err := rpc.Dial(<span class="string">&quot;tcp&quot;</span>,<span class="string">&quot;localhost:1234&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> reply <span class="keyword">string</span></span><br><span class="line">    <span class="comment">//调用服务中的函数</span></span><br><span class="line">    err = client.Call(<span class="string">&quot;HelloService.Hello&quot;</span>,<span class="string">&quot;world&quot;</span>,&amp;reply)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;收到的数据为,&quot;</span>,reply)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>首选是通过rpc.Dial拨号RPC服务，然后通过client.Call调用具体的RPC方法。在调用client.Call时，第一个参数是用点号链接的RPC服务名字和方法名字，第二和第三个参数分别我们定义RPC方法的两个参数。</p>
</blockquote>
<h3 id="2-3-2-跨语言的RPC"><a href="#2-3-2-跨语言的RPC" class="headerlink" title="2.3.2 跨语言的RPC"></a>2.3.2 跨语言的RPC</h3><p>​        标准库的RPC默认采用Go语言特有的gob编码。因此，其它语言调用Go语言实现的RPC服务将比较困难。跨语言是互联网时代RPC的一个首要条件，这里我们再来实现一个跨语言的RPC。得益于RPC的框架设计，Go语言的RPC其实也是很容易实现跨语言支持的。</p>
<p>​        这里我们将尝试通过官方自带的net/rpc/jsonrpc扩展实现一个跨语言RPC。</p>
<p>​        首先是基于json编码重新实现RPC服务：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//注册rpc服务</span></span><br><span class="line">    rpc.RegisterName(<span class="string">&quot;HelloService&quot;</span>,<span class="built_in">new</span>(HelloService))</span><br><span class="line">    <span class="comment">//设置监听</span></span><br><span class="line">    listener,err := net.Listen(<span class="string">&quot;tcp&quot;</span>,<span class="string">&quot;:1234&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>&#123;</span><br><span class="line">        <span class="comment">//接收连接</span></span><br><span class="line">        conn,err := listener.Accept()</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="built_in">panic</span>(err)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//给当前连接提供针对json格式的rpc服务</span></span><br><span class="line">        <span class="keyword">go</span> rpc.ServeCodec(jsonrpc.NewServerCodec(conn))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>代码中最大的变化是用rpc.ServeCodec函数替代了rpc.ServeConn函数，传入的参数是针对服务端的json编解码器。</p>
</blockquote>
<p>然后是实现json版本的客户端：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//简历tcp连接</span></span><br><span class="line">    conn,err := net.Dial(<span class="string">&quot;tcp&quot;</span>,<span class="string">&quot;localhost:1234&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err !=<span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//简历基于json编解码的rpc服务</span></span><br><span class="line">    client := rpc.NewClientWithCodec(jsonrpc.NewClientCodec(conn))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> reply <span class="keyword">string</span></span><br><span class="line">    <span class="comment">//调用rpc服务方法</span></span><br><span class="line">    err = client.Call(<span class="string">&quot;HelloService.Hello&quot;</span>,<span class="string">&quot; world&quot;</span>,&amp;reply)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;收到的数据为:&quot;</span>,reply)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>先手工调用net.Dial函数建立TCP链接，然后基于该链接建立针对客户端的json编解码器。</p>
</blockquote>
<p>在确保客户端可以正常调用RPC服务的方法之后，我们可以用命令来查看一下客户端发给服务端的到底是什么数据。这里我们使用 ==nc -l 1234==  这条命令 模拟服务器监听1234端口接收的数据，然后重新运行客户端，将会发现nc输出了以下的信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;&quot;method&quot;:&quot;HelloService.Hello&quot;,&quot;params&quot;:[&quot;hello&quot;],&quot;id&quot;:0&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>nc常用有两种一种是连接到指定ip和端口</p>
<p> nc hostname port</p>
<p>另外一种是监听端口，等待连接</p>
<p>nc  -l   port</p>
</blockquote>
<p>这是一个json编码的数据，其中method部分对应要调用的rpc服务和方法组合成的名字，params部分的第一个元素为参数，id是由调用端维护的一个唯一的调用编号。</p>
<p>请求的json数据对象在内部对应两个结构体：客户端是clientRequest，服务端是serverRequest。clientRequest和serverRequest结构体的内容基本是一致的：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> clientRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">    Method <span class="keyword">string</span>         <span class="string">`json:&quot;method&quot;`</span></span><br><span class="line">    Params []<span class="keyword">interface</span>&#123;&#125;  <span class="string">`json:&quot;params&quot;`</span></span><br><span class="line">    Id     <span class="keyword">uint64</span>         <span class="string">`json:&quot;id&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> serverRequest <span class="keyword">struct</span> &#123;</span><br><span class="line">    Method <span class="keyword">string</span>           <span class="string">`json:&quot;method&quot;`</span></span><br><span class="line">    Params *json.RawMessage <span class="string">`json:&quot;params&quot;`</span></span><br><span class="line">    Id     *json.RawMessage <span class="string">`json:&quot;id&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>了解了客户端需要发送哪些数据之后，我们可以再来看看服务器接收到客户端传输的数据之后会返回哪些数据，还是用我们的nc命令。操作如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo -e &#x27;&#123;&quot;method&quot;:&quot;HelloService.Hello&quot;,&quot;params&quot;:[&quot;hello&quot;],&quot;id&quot;:1&#125;&#x27;| nc localhost 1234</span><br></pre></td></tr></table></figure>

<p>返回的数据如下：</p>
<p><img src="assets%5C1564396573015.png" alt="1564396573015"></p>
<blockquote>
<p>其中id对应输入的id参数，result为返回的结果，error部分在出问题时表示错误信息。对于顺序调用来说，id不是必须的。但是Go语言的RPC框架支持异步调用，当返回结果的顺序和调用的顺序不一致时，可以通过id来识别对应的调用。</p>
</blockquote>
<p>返回的json数据也是对应内部的两个结构体：客户端是clientResponse，服务端是serverResponse。两个结构体的内容同样也是类似的：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> clientResponse <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id     <span class="keyword">uint64</span>           <span class="string">`json:&quot;id&quot;`</span></span><br><span class="line">    Result *json.RawMessage <span class="string">`json:&quot;result&quot;`</span></span><br><span class="line">    Error  <span class="keyword">interface</span>&#123;&#125;      <span class="string">`json:&quot;error&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> serverResponse <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id     *json.RawMessage <span class="string">`json:&quot;id&quot;`</span></span><br><span class="line">    Result <span class="keyword">interface</span>&#123;&#125;      <span class="string">`json:&quot;result&quot;`</span></span><br><span class="line">    Error  <span class="keyword">interface</span>&#123;&#125;      <span class="string">`json:&quot;error&quot;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>因此无论采用何种语言，只要遵循同样的json结构，以同样的流程就可以和Go语言编写的RPC服务进行通信。这样我们就解用json简单实现了跨语言的RPC。</p>
<p>但是一般在开发的时候除了用json做跨语言的RPC服务之外，现在很多公司还会选用<strong>protobuf</strong>做跨语言的RPC服务。那什么是<strong>ProtoBuf</strong>呢?接下来我们详细了解一下。</p>
<h3 id="2-3-4-RPC协议封装"><a href="#2-3-4-RPC协议封装" class="headerlink" title="2.3.4 RPC协议封装"></a>2.3.4 RPC协议封装</h3><p>上面的代码服务名都是写死的，不够灵活（容易写错），这里我们对RPC的服务端和客户端再次进行一次封装，来屏蔽掉服务名，具体代码如下</p>
<h5 id="服务端封装"><a href="#服务端封装" class="headerlink" title="服务端封装"></a>服务端封装</h5><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//抽离服务名称</span></span><br><span class="line"><span class="keyword">var</span> serverName = <span class="string">&quot;LoginService&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义一个父类</span></span><br><span class="line"><span class="keyword">type</span> RPCDesign <span class="keyword">interface</span> &#123;</span><br><span class="line">    Hello(<span class="keyword">string</span>,*<span class="keyword">string</span>)error</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现工厂函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">RegisterRPCServer</span><span class="params">(srv RPCDesign)</span><span class="title">error</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rpc.RegisterName(serverName,srv)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>封装之后的服务端实现如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> RpcServer <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//5 + 3i    chan   func    complex</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *RpcServer)</span> <span class="title">Hello</span><span class="params">(req <span class="keyword">string</span>, resp *<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    *resp += req + <span class="string">&quot;你好&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//设置监听</span></span><br><span class="line">    listener, err := net.Listen(<span class="string">&quot;tcp&quot;</span>, <span class="string">&quot;:8899&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;设置监听错误&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> listener.Close()</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;开始监听....&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> &#123;</span><br><span class="line">        <span class="comment">//接收链接</span></span><br><span class="line">        conn, err := listener.Accept()</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">&quot;获取连接失败&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">        fmt.Println(conn.RemoteAddr().String() + <span class="string">&quot;连接成功&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//rpc表  注册rpc服务</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> err = RegisterRPCServer(<span class="built_in">new</span>(RpcServer)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">&quot;注册rpc服务失败&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把rpc服务和套接字绑定</span></span><br><span class="line">        <span class="comment">//rpc.ServeConn(conn)</span></span><br><span class="line">        rpc.ServeCodec(jsonrpc.NewServerCodec(conn))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="客户端封装"><a href="#客户端封装" class="headerlink" title="客户端封装"></a>客户端封装</h5><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> RPCClient <span class="keyword">struct</span> &#123;</span><br><span class="line">    rpcClient *rpc.Client</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRpcClient</span><span class="params">(addr <span class="keyword">string</span>)</span><span class="params">(RPCClient)</span></span>&#123;</span><br><span class="line">    conn,err := net.Dial(<span class="string">&quot;tcp&quot;</span>,addr)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;链接服务器失败&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> RPCClient&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//套接字和rpc服务绑定</span></span><br><span class="line">    client := rpc.NewClientWithCodec(jsonrpc.NewClientCodec(conn))</span><br><span class="line">    <span class="keyword">return</span> RPCClient&#123;rpcClient:client&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this*RPCClient)</span><span class="title">CallFunc</span><span class="params">(req <span class="keyword">string</span>,resp*<span class="keyword">string</span>)</span><span class="title">error</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> this.rpcClient.Call(serverName+<span class="string">&quot;.Hello&quot;</span>,req,resp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>封装之后客户端实现</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">    <span class="comment">//初始化对象  与服务名有关的内容完全封装起来了</span></span><br><span class="line">    client := NewRpcClient(<span class="string">&quot;127.0.0.1:8899&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调用成员函数</span></span><br><span class="line">    <span class="keyword">var</span> temp <span class="keyword">string</span></span><br><span class="line">    client.CallFunc(<span class="string">&quot;xiaoming&quot;</span>,&amp;temp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    fmt.Println(temp)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="3-ProtoBuf认识与使用"><a href="#3-ProtoBuf认识与使用" class="headerlink" title="3. ProtoBuf认识与使用"></a>3. ProtoBuf认识与使用</h1><h2 id="3-1-protobuf简介"><a href="#3-1-protobuf简介" class="headerlink" title="3.1 protobuf简介"></a>3.1 protobuf简介</h2><p>Protobuf是Protocol Buffers的简称，它是Google公司开发的一种数据描述语言，是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做<strong>数据存储</strong>或 <strong>RPC 数据交换格式</strong>。可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。目前提供了 C++、Java、Python 三种语言的 API。</p>
<p>Protobuf刚开源时的定位类似于XML、JSON等数据描述语言，通过附带工具生成代码并实现将结构化数据序列化的功能。这里我们更关注的是Protobuf作为接口规范的描述语言，可以作为设计安全的跨语言RPC接口的基础<br>工具。</p>
<blockquote>
<p>需要了解两点</p>
<ol>
<li>protobuf是类似与json一样的数据描述语言（数据格式）</li>
<li>protobuf非常适合于RPC数据交换格式</li>
</ol>
</blockquote>
<p>接着我们来看一下protobuf的优势和劣势：</p>
<p>**优势： **</p>
<p>1：序列化后体积相比Json和XML很小，适合网络传输 </p>
<p>2：支持跨平台多语言 </p>
<p>3：消息格式升级和兼容性还不错 </p>
<p>4：序列化反序列化速度很快，快于Json的处理速度</p>
<p><strong>劣势：</strong></p>
<p>1：应用不够广(相比xml和json)</p>
<p>2：二进制格式导致可读性差</p>
<p>3：缺乏自描述</p>
<p>我们先安装一下protobuf，然后通过例子来看一下protobuf的具体作用。</p>
<h2 id="3-2-protobuf的安装"><a href="#3-2-protobuf的安装" class="headerlink" title="3.2 protobuf的安装"></a>3.2 protobuf的安装</h2><ol>
<li><p>下载 protobuf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">方法一:===&gt; git clone https://github.com/protocolbuffers/protobuf.git</span><br><span class="line"></span><br><span class="line">方法二:===&gt; 或者将准备好的压缩包进行拖入</span><br><span class="line">    解压到$GOPATH/src/github.com/protocolbuffers/下面</span><br><span class="line">    Unzip protobuf.zip</span><br></pre></td></tr></table></figure></li>
<li><p>安装（ubuntu）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">(1)安装依赖工具（联网）</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install autoconf automake libtool curl make g++ unzip libffi-dev -y</span></span><br><span class="line"></span><br><span class="line">(2)进入protobuf文件</span><br><span class="line">cd protobuf/</span><br><span class="line"></span><br><span class="line">(3)进行安装检测 并生成自动安装脚本</span><br><span class="line">./autogen.sh</span><br><span class="line">./configure</span><br><span class="line"></span><br><span class="line">(4)进行编译C代码</span><br><span class="line">make</span><br><span class="line"></span><br><span class="line">(5)进行安装</span><br><span class="line">sudo make install</span><br><span class="line"></span><br><span class="line">(6)刷新linux共享库关系</span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure></li>
<li><p>测试protobuf编译工具</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">protoc -h</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果正常输出 相关指令 没有报任何error，为安装成功</p>
</blockquote>
</li>
<li><p>安装protobuf的go语言插件</p>
<blockquote>
<p>由于protobuf并没直接支持go语言需要我们手动安装相关插件</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">(1)下载</span><br><span class="line">方法一:===&gt; go get -v -u github.com/golang/protobuf/proto</span><br><span class="line">方法二:===&gt;或者将 github.com-golang-protobuf.zip拖入 进行解压到 $GOPATH/src/github.com/golang</span><br><span class="line"></span><br><span class="line">(2)进入到文件夹内进行编译</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> <span class="variable">$GOPATH</span>/src/github.com/golang/protobuf/protoc-gen-go</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> go build</span></span><br><span class="line"></span><br><span class="line">(3)将生成的 protoc-gen-go可执行文件，放在/bin目录下</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo cp protoc-gen-go /bin/</span></span><br><span class="line"></span><br><span class="line">(4)尝试补齐protoc-gen-go 如果可以补齐代表成功，如果执行不报错 代表工具成功</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="3-3-protobuf-简单语法"><a href="#3-3-protobuf-简单语法" class="headerlink" title="3.3 protobuf 简单语法"></a>3.3 protobuf 简单语法</h2><p>参考文档（需翻墙）：<a href="https://developers.google.com/protocol-buffers/docs/proto3">https://developers.google.com/protocol-buffers/docs/proto3</a></p>
<p>首先让我们看一个非常简单的例子。</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;                         <span class="comment">//指定版本信息，不指定会报错</span></span><br><span class="line"><span class="keyword">package</span> pb;                        <span class="comment">//后期生成go文件的包名</span></span><br><span class="line"><span class="comment">//message为关键字，作用为定义一种消息类型</span></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//    名字</span></span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//    年龄</span></span><br><span class="line">    <span class="built_in">int32</span>  age = <span class="number">2</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="built_in">int32</span> age = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>protobuf消息的定义（或者称为描述）通常都写在一个以 .proto 结尾的文件中。</li>
<li>该文件的第一行指定正在使用<code>proto3</code>语法：如果不这样做，协议缓冲区编译器将假定正在使用proto2。这也必须是文件的第一个非空的非注释行。</li>
<li>第二行package指明当前是pb包（生成go文件之后和Go的包名保持一致）</li>
<li>最后message关键字定义一个Person消息体，类似于go语言中的结构体，是包含一系列类型数据的集合。许多标准的简单数据类型都可以作为字段类型，包括<code>bool</code>，<code>int32</code>， <code>float</code>，<code>double</code>，和<code>string</code>。也可以使用其他message类型作为字段类型。</li>
<li>在message中有一个字符串类型的value成员，该成员编码时用1代替名字。我们知道，在json中是通过成员的名字来绑定对应的数据，但是Protobuf编码却是通过成员的唯一编号来绑定对应的数据，因此Protobuf编码后数据的体积会比较小，能够快速传输，缺点是不利于阅读。</li>
</ul>
</blockquote>
<p><strong>message的格式说明</strong></p>
<p>消息由至少一个字段组合而成，类似于Go语言中的结构体，每个字段都有一定的格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//注释格式 注释尽量也写在内容上方</span><br><span class="line">（字段修饰符）数据类型 字段名称 = 唯一的编号标签值;</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li>唯一的编号标签：代表每个字段的一个唯一的编号标签，在同一个消息里不可以重复。这些编号标签用与在消息二进制格式中标识你的字段，并且消息一旦定义就不能更改。需要说明的是标签在1到15范围的采用一个字节进行编码，所以通常将标签1到15用于频繁发生的消息字段。编号标签大小的范围是1到2的29次。19000-19999是官方预留的值，不能使用。</li>
<li>注释格式：向.proto文件添加注释，可以使用C/C++/java/Go风格的双斜杠（//） 语法格式或者<code>/*.....*/</code></li>
</ul>
</blockquote>
<p>**message常见的数据类型与go中类型对比 **</p>
<table>
<thead>
<tr>
<th>.proto类型</th>
<th>Go类型</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>double</td>
<td>float64</td>
<td>64位浮点数</td>
</tr>
<tr>
<td>float</td>
<td>float32</td>
<td>32位浮点数</td>
</tr>
<tr>
<td>int32</td>
<td>int32</td>
<td>使用可变长度编码。编码负数效率低下——如果你的字段可能有负值，请改用sint32。</td>
</tr>
<tr>
<td>int64</td>
<td>int64</td>
<td>使用可变长度编码。编码负数效率低下——如果你的字段可能有负值，请改用sint64。</td>
</tr>
<tr>
<td>uint32</td>
<td>uint32</td>
<td>使用可变长度编码。</td>
</tr>
<tr>
<td>uint64</td>
<td>uint64</td>
<td>使用可变长度编码。</td>
</tr>
<tr>
<td>sint32</td>
<td>int32</td>
<td>使用可变长度编码。符号整型值。这些比常规int32s编码负数更有效。</td>
</tr>
<tr>
<td>sint64</td>
<td>int64</td>
<td>使用可变长度编码。符号整型值。这些比常规int64s编码负数更有效。</td>
</tr>
<tr>
<td>fixed32</td>
<td>uint32</td>
<td>总是四字节。如果值通常大于228，则比uint 32更有效</td>
</tr>
<tr>
<td>fixed64</td>
<td>uint64</td>
<td>总是八字节。如果值通常大于256，则比uint64更有效</td>
</tr>
<tr>
<td>sfixed32</td>
<td>int32</td>
<td>总是四字节。</td>
</tr>
<tr>
<td>sfixed64</td>
<td>int64</td>
<td>总是八字节。</td>
</tr>
<tr>
<td>bool</td>
<td>bool</td>
<td>布尔类型</td>
</tr>
<tr>
<td>string</td>
<td>string</td>
<td>字符串必须始终包含UTF - 8编码或7位ASCII文本</td>
</tr>
<tr>
<td>bytes</td>
<td>[]byte</td>
<td>可以包含任意字节序列</td>
</tr>
</tbody></table>
<h3 id="3-3-1protobuf高级用法"><a href="#3-3-1protobuf高级用法" class="headerlink" title="3.3.1protobuf高级用法"></a>3.3.1protobuf高级用法</h3><p>protobuf除了上面的简单类型还有一些复杂的用法，如下：</p>
<p><strong>message嵌套</strong></p>
<p>messsage除了能放简单数据类型外，还能存放另外的message类型，如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;                         <span class="comment">//指定版本信息，不指定会报错</span></span><br><span class="line"><span class="keyword">package</span> pb;                        <span class="comment">//后期生成go文件的包名</span></span><br><span class="line"><span class="comment">//message为关键字，作用为定义一种消息类型</span></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//    名字</span></span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//    年龄</span></span><br><span class="line">    <span class="built_in">int32</span>  age = <span class="number">2</span> ;</span><br><span class="line">    <span class="comment">//定义一个message</span></span><br><span class="line">    <span class="class"><span class="keyword">message</span> <span class="title">PhoneNumber</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> number = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">int64</span> type = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    PhoneNumber phone = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>repeated关键字</strong></p>
<p>repeadted关键字类似与go中的切片，编译之后对应的也是go的切片，用法如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;                         <span class="comment">//指定版本信息，不指定会报错</span></span><br><span class="line"><span class="keyword">package</span> pb;                        <span class="comment">//后期生成go文件的包名</span></span><br><span class="line"><span class="comment">//message为关键字，作用为定义一种消息类型</span></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//    名字</span></span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//    年龄</span></span><br><span class="line">    <span class="built_in">int32</span>  age = <span class="number">2</span> ;</span><br><span class="line">    <span class="comment">//定义一个message</span></span><br><span class="line">    <span class="class"><span class="keyword">message</span> <span class="title">PhoneNumber</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> number = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">int64</span> type = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">repeated</span> PhoneNumber phone = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>默认值</strong></p>
<p>解析数据时，如果编码的消息不包含特定的单数元素，则解析对象对象中的相应字段将设置为该字段的默认值。不同类型的默认值不同，具体如下：</p>
<ul>
<li>对于字符串，默认值为空字符串。</li>
<li>对于字节，默认值为空字节。</li>
<li>对于bools，默认值为false。</li>
<li>对于数字类型，默认值为零。</li>
<li>对于枚举，默认值是第<strong>一个定义的枚举值</strong>，该<strong>值</strong>必须为0。</li>
<li>repeated字段默认值是空列表</li>
<li>message字段的默认值为空对象</li>
</ul>
<p><strong>enum关键字</strong></p>
<p>在定义消息类型时，可能会希望其中一个字段有一个预定义的值列表。比如说，电话号码字段有个类型，这个类型可以是，home,work,mobile。我们可以通过enum在消息定义中添加每个可能值的常量来非常简单的执行此操作。实例如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;                         <span class="comment">//指定版本信息，不指定会报错</span></span><br><span class="line"><span class="keyword">package</span> pb;                        <span class="comment">//后期生成go文件的包名</span></span><br><span class="line"><span class="comment">//message为关键字，作用为定义一种消息类型</span></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//    名字</span></span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//    年龄</span></span><br><span class="line">    <span class="built_in">int32</span>  age = <span class="number">2</span> ;</span><br><span class="line">    <span class="comment">//定义一个message</span></span><br><span class="line">    <span class="class"><span class="keyword">message</span> <span class="title">PhoneNumber</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> number = <span class="number">1</span>;</span><br><span class="line">    PhoneType type = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">repeated</span> PhoneNumber phone = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//enum为关键字，作用为定义一种枚举类型</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">PhoneType</span> </span>&#123;</span><br><span class="line">    MOBILE = <span class="number">0</span>;</span><br><span class="line">    HOME = <span class="number">1</span>;</span><br><span class="line">    WORK = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如上，enum的第一个常量映射为0，每个枚举定义<strong>必须</strong>包含一个映射到零的常量作为其第一个元素。这是因为：</p>
<ul>
<li>必须有一个零值，以便我们可以使用0作为数字默认值。</li>
<li>零值必须是第一个元素，以便与proto2语义兼容，其中第一个枚举值始终是默认值。</li>
</ul>
</blockquote>
<p>enum还可以为不同的枚举常量指定相同的值来定义别名。如果想要使用这个功能必须讲<code>allow_alias</code>选项设置为true，负责编译器将报错。示例如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;                         <span class="comment">//指定版本信息，不指定会报错</span></span><br><span class="line"><span class="keyword">package</span> pb;                        <span class="comment">//后期生成go文件的包名</span></span><br><span class="line"><span class="comment">//message为关键字，作用为定义一种消息类型</span></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//    名字</span></span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//    年龄</span></span><br><span class="line">    <span class="built_in">int32</span>  age = <span class="number">2</span> ;</span><br><span class="line">    <span class="comment">//定义一个message</span></span><br><span class="line">    <span class="class"><span class="keyword">message</span> <span class="title">PhoneNumber</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> number = <span class="number">1</span>;</span><br><span class="line">        PhoneType type = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">repeated</span> PhoneNumber phone = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//enum为关键字，作用为定义一种枚举类型</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">PhoneType</span> </span>&#123;</span><br><span class="line">    <span class="comment">//如果不设置将报错</span></span><br><span class="line">    <span class="keyword">option</span> allow_alias = <span class="literal">true</span>;</span><br><span class="line">    MOBILE = <span class="number">0</span>;</span><br><span class="line">    HOME = <span class="number">1</span>;</span><br><span class="line">    WORK = <span class="number">2</span>;</span><br><span class="line">    Personal = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>oneof关键字</strong></p>
<p>如果有一个包含许多字段的消息，并且最多只能同时设置其中的一个字段，则可以使用oneof功能，示例如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//    名字</span></span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//    年龄</span></span><br><span class="line">    <span class="built_in">int32</span>  age = <span class="number">2</span> ;</span><br><span class="line">    <span class="comment">//定义一个message</span></span><br><span class="line">    <span class="class"><span class="keyword">message</span> <span class="title">PhoneNumber</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> number = <span class="number">1</span>;</span><br><span class="line">        PhoneType type = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">repeated</span> PhoneNumber phone = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">oneof</span> data&#123;</span><br><span class="line">        <span class="built_in">string</span> school = <span class="number">5</span>;</span><br><span class="line">        <span class="built_in">int32</span> score = <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>定义RPC服务</strong></p>
<p>如果需要将message与RPC一起使用，则可以在<code>.proto</code>文件中定义RPC服务接口，protobuf编译器将根据你选择的语言生成RPC接口代码。示例如下：</p>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line"><span class="comment">//定义RPC服务</span></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> Hello (Person)<span class="keyword">returns</span> (Person)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>大部分protobuf的语法就是这样，其他想学习的可以参考官方文档，语法写完之后，让我们编译一下，然后通过代码试用一下。</p>
<h2 id="3-4-protobuf基本编译"><a href="#3-4-protobuf基本编译" class="headerlink" title="3.4 protobuf基本编译"></a>3.4 protobuf基本编译</h2><p>protobuf编译是通过编译器protoc进行的，通过这个编译器，我们可以把.proto文件生成<strong>go</strong>,Java,Python,C++, Ruby, JavaNano, Objective-C,或者C# 代码，生成命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">protoc --proto_path=IMPORT_PATH --go_out=DST_DIR  path/to/file.proto</span><br></pre></td></tr></table></figure>

<blockquote>
<ol>
<li>–proto_path=IMPORT_PATH，IMPORT_PATH是 .proto 文件所在的路径，如果忽略则默认当前目录。如果有多个目录则可以多次调用–proto_path，它们将会顺序的被访问并执行导入。</li>
<li>–go_out=DST_DIR， 指定了生成的go语言代码文件放入的文件夹</li>
<li>允许使用 <code>protoc --go_out=./   *.proto</code> 的方式一次性编译多个 .proto 文件</li>
<li>go语言编译时，protobuf 编译器会把 .proto 文件编译成 .pd.go 文件</li>
</ol>
</blockquote>
<p>一般在使用的时候我们都是使用下面这种简单的命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">protoc --go_out=./ *.proto</span><br></pre></td></tr></table></figure>

<blockquote>
<p>编译当前文件夹下的所有.proto文件，并把生成的go文件放置在当前文件夹下。</p>
</blockquote>
<p>我们先来编译一个最简单的的proto文件，编译之后会得到一个如下一个go文件，如下：</p>
<p><img src="assets%5C1564628074411.png" alt="1564628074411"></p>
<blockquote>
<p>message被对应的编译成go语言中的结构体，同时还为String类型自动生成了一组方法，其中ProtoMessage方法表示这是一个实现了proto.Message接口的方法。此外Protobuf还为每个成员生成了一个Get方法，Get方法不仅可以处理空指针类型，而且可以和Proto2的方法保持一致.</p>
</blockquote>
<p>然后我们给这个<code>.proto</code>文件中添加一个RPC服务，再次进行编译，发现生成的go文件没有发生变化。这是因为世界上的RPC实现有很多种，protoc编译器并不知道该如何为HelloService服务生成代码。不过在protoc-gen-go内部已经集成了一个叫grpc的插件，可以针对grpc生成代码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">protoc --go_out=plugins=grpc:. *.proto</span><br></pre></td></tr></table></figure>

<p>在生成的代码中多了一些类似HelloServiceServer、HelloServiceClient的新类型。如下：</p>
<p><img src="assets%5C1564652925915.png" alt="1564652925915"></p>
<p>和我们优化之后的RPC服务有点相似，但是又不太一样，接下来就让我们来学习一下grpc框架吧。</p>
<h1 id="4-GRPC框架"><a href="#4-GRPC框架" class="headerlink" title="4. GRPC框架"></a>4. GRPC框架</h1><p>GRPC是Google公司基于<strong>Protobuf</strong>开发的跨语言的<strong>开源RPC框架</strong>。GRPC基于<strong>HTTP/2</strong>协议设计，可以基于一个HTTP/2链接提供多个服务，对于移动设备更加友好。目前提供 C、Java 和 Go 语言版本，分别是：grpc, grpc-java, grpc-go. 其中 C 版本支持 C, C++, Node.js, Python, Ruby, Objective-C, PHP 和 C# 支持.</p>
<p>在 gRPC里客户端应用可以像调用本地对象一样直接调用另一台不同的机器上服务端应用的方法，使得您能够更容易地创建分布式应用和服务。与许多 RPC系统类似， gRPC也是基于以下理念：</p>
<ul>
<li><p>定义一个服务，指定其能够被远程调用的方法（包含参数和返回类型）。</p>
</li>
<li><p>在服务端实现这个接口，并运行一个 gRPC服务器来处理客户端调用。</p>
</li>
</ul>
<p>在客户端拥有一个存根能够像服务端一样的方法。 gRPC客户端和服务端可以在多种环境中运行和交互 -从 google内部的服务器到你自己的笔记本，并且可以用任何 gRPC支持的语言 来编写。</p>
<p>所以，你可以很容易地用 Java创建一个 gRPC服务端，用 Go、 Python、Ruby来创建客户端。此外， Google最新 API将有 gRPC版本的接口，使你很容易地将 Google的功能集成到你的应用里。</p>
<p><strong>参考资料</strong></p>
<p>gRPC 官方文档中文版:<a href="http://doc.oschina.net/grpc?t=60133">http://doc.oschina.net/grpc?t=60133</a></p>
<p>gRPC官网：<a href="https://grpc.io/">https://grpc.io</a></p>
<p>再详细了解使用GRPC之前先来了解一下上面定义中的一些关键词。</p>
<p>首先我们来看一下<strong>HTTP/2</strong>是什么内容？</p>
<p>其实本质上就是http2.0版本，http目前为止主要有四个版本，分别为http1.0、http1.1、http2.0、https。</p>
<p>http1.0是最原始的版本，不支持持久连接，效率也比较低</p>
<p>http1.1针对http1.0版本做了优化，可以连接一次，多次使用，效率比http1.0高</p>
<p>http2.0实现了多路复用，对http1.1再次进行了优化。http2.0也被称为下一代http协议，是在2013年8月进行首次测试，所以现在用的不是很广。</p>
<p>https其实是在http协议上多加了一层SSL协议，具体如下图：</p>
<p><img src="assets%5C1564539159120.png" alt="1564539159120"></p>
<blockquote>
<p>所以本质上，http1.0、http1.1、http2.0都可以添加SSL协议。</p>
</blockquote>
<h2 id="4-1-grpc环境安装"><a href="#4-1-grpc环境安装" class="headerlink" title="4.1 grpc环境安装"></a>4.1 grpc环境安装</h2><ol>
<li><p>官方推荐安装方法：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">go get -u -v google.golang.org/grpc</span><br></pre></td></tr></table></figure>

<blockquote>
<p>但是由于一些原因，大部分同学不能直接访问google官网，所以只能曲线救国了</p>
</blockquote>
</li>
<li><p>通过github下载各种依赖库，然后配置。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/grpc/grpc-go.git      $GOPATH/src/google.golang.org/grpc</span><br><span class="line">git clone https://github.com/golang/net.git        $GOPATH/src/golang.org/x/net</span><br><span class="line">git clone https://github.com/golang/text.git       $GOPATH/src/golang.org/x/text</span><br><span class="line">git clone https://github.com/google/go-genproto.git  $GOPATH/src/google.golang.org/genproto</span><br><span class="line"></span><br><span class="line">cd $GOPATH/src/</span><br><span class="line">go install google.golang.org/grpc</span><br></pre></td></tr></table></figure>

<blockquote>
<p>网络畅通可以用上述方法，但如果网速较慢，我们也可以选择离线安装方法。</p>
</blockquote>
</li>
<li><p>用<code>x.zip</code>和<code>google.golang.org.zip</code>两个离线包来安装。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">将x.zip 解压到 <span class="variable">$GOPATH</span>/src/golang.org/x 目录下</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> unzip x.zip -d <span class="variable">$GOPATH</span>/src/golang.org/x</span></span><br><span class="line"><span class="meta">#</span><span class="bash">将google.golang.org.zip 解压到 <span class="variable">$GOPATH</span>/src/google.golang.org 目录下</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> unzip google.golang.org.zip -d <span class="variable">$GOPATH</span>/src/google.golang.org</span></span><br><span class="line"><span class="meta">#</span><span class="bash">然后进入到<span class="variable">$GOPATH</span>/src/google.golang.org/grpc下面执行go install</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> go install</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="4-2-GRPC使用"><a href="#4-2-GRPC使用" class="headerlink" title="4.2 GRPC使用"></a>4.2 GRPC使用</h2><pre><code>   如果从Protobuf的角度看，GRPC只不过是一个针对service接口生成代码的生成器。接着我们来学习一下GRPC的用法。这里我们创建一个简单的proto文件，定义一个HelloService接口：
</code></pre>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;                 <span class="comment">//指定版本信息</span></span><br><span class="line"><span class="keyword">package</span> pb;                        <span class="comment">//后期生成go文件的包名</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="comment">//   名字</span></span><br><span class="line">    <span class="built_in">string</span> name = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//   年龄</span></span><br><span class="line">    <span class="built_in">int32</span>  age = <span class="number">2</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义RPC服务</span></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">rpc</span> Hello (Person)<span class="keyword">returns</span> (Person)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>对proto文件进行编译：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> protoc --go_out=plugins=grpc:. *.proto</span></span><br></pre></td></tr></table></figure>

<p>GRPC插件会为服务端和客户端生成不同的接口：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">//客户端接口</span></span><br><span class="line"><span class="keyword">type</span> HelloServiceClient <span class="keyword">interface</span> &#123;</span><br><span class="line">    Hello(ctx context.Context, in *Person, opts ...grpc.CallOption) (*Person, error)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//服务器接口</span></span><br><span class="line"><span class="keyword">type</span> HelloServiceServer <span class="keyword">interface</span> &#123;</span><br><span class="line">    Hello(context.Context, *Person) (*Person, error)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们接着可以基于他们给的服务端接口重新实现HelloService服务：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> HelloService <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this*HelloService)</span><span class="title">Hello</span><span class="params">(ctx context.Context, person *pb.Person)</span> <span class="params">(*pb.Person, error)</span></span>&#123;</span><br><span class="line">    reply := &amp;pb.Person&#123;</span><br><span class="line">        Name:<span class="string">&quot;zhangsan&quot;</span> + person.Name,</span><br><span class="line">        Age:<span class="number">18</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> reply,<span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>GRPC的启动流程和RPC的启动流程类似，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//获取grpc服务端对象</span></span><br><span class="line">    grpcServer := grpc.NewServer()</span><br><span class="line">    <span class="comment">//注册grpc服务</span></span><br><span class="line">    pb.RegisterHelloServiceServer(grpcServer,<span class="built_in">new</span>(HelloService))</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置服务端监听</span></span><br><span class="line">    lis,err := net.Listen(<span class="string">&quot;tcp&quot;</span>,<span class="string">&quot;:1234&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在指定端口上提供grpc服务</span></span><br><span class="line">    grpcServer.Serve(lis)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后我们就可以通过客户端来连接GRPC服务了：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//和grpc服务建立连接</span></span><br><span class="line">    conn,err := grpc.Dial(<span class="string">&quot;localhost:1234&quot;</span>,grpc.WithInsecure())</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">    client := pb.NewHelloServiceClient(conn)</span><br><span class="line">    reply,err := client.Hello(context.Background(),&amp;pb.Person&#123;Name:<span class="string">&quot;lisi&quot;</span>,Age:<span class="number">100</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;reply,&quot;</span>,reply)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="5-go-micro框架"><a href="#5-go-micro框架" class="headerlink" title="5. go-micro框架"></a>5. go-micro框架</h1><p>在了解go-micro之前，我们先来了解一下什么是micro。</p>
<p>Micro是一个专注于简化分布式系统开发的微服务生态系统。由开源库和工具组成。主要包含以下几种库：</p>
<ul>
<li><p><strong>go-micro：</strong> 用于编写微服务的可插入Go-RPC框架;    <strong>服务发现</strong>，客户端/服务器rpc，pub/sub等，是整个Micro的核心。</p>
<blockquote>
<p>默认使用mdns做服务发现，可以在插件中替换成consul,etcd,k8s等</p>
<p>组播   广播</p>
</blockquote>
</li>
<li><p><strong>go-plugins：</strong> go-micro的插件，包括etcd，kubernetes(k8s)，nats，rabbitmq，grpc等 </p>
</li>
<li><p><strong>micro：</strong> 一个包含传统入口点的微服务工具包;    API网关，CLI，Slack    Bot，Sidecar和Web    UI。</p>
</li>
</ul>
<p>其他各种库和服务可以在<strong>github.com/micro</strong>找到。</p>
<p>我们主要使用的框架也是go-micro，在使用之前我们先来了解一下<strong>服务发现</strong>是个什么东西？有什么作用？</p>
<h2 id="5-1-服务发现"><a href="#5-1-服务发现" class="headerlink" title="5.1 服务发现"></a>5.1 服务发现</h2><p>我们在做微服务开发的时候，客户端的一个接口可能需要调用N个服务，客户端必须知道所有服务的网络位置（ip+port），如下图所示</p>
<p><img src="assets%5C1538379054131.png"></p>
<p>以往的做法是把服务的地址放在配置文件活数据库中，这样就有以下几个问题：</p>
<ul>
<li>需要配置N个服务的网络位置，加大配置的复杂性</li>
<li>服务的网络位置变化，需要改变每个调用者的配置</li>
<li>集群的情况下，难以做负载（反向代理的方式除外）</li>
</ul>
<p>总结起来一句话：<strong>服务多了，配置很麻烦，问题一大堆</strong></p>
<p>所以现在就选择<strong>服务发现</strong>来解决这些问题。我们来看一下，服务发现如何解决这个问题，具体设计如下：</p>
<p><img src="assets%5C1538379597103.png"></p>
<p>与之前解决方法不同的是，加了个服务发现模块。服务端把当前自己的网络位置注册到服务发现模块（这里注册的意思就是告诉），服务发现就以K-V的方式记录下，K一般是服务名，V就是IP:PORT。服务发现模块定时的轮询查看这些服务能不能访问的了（这就是健康检查）。客户端在调用服务A-N的时候，就跑去服务发现模块问下它们的网络位置，然后再调用它们的服务。这样的方式是不是就可以解决上面的问题了呢？客户端完全不需要记录这些服务的网络位置，客户端和服务端完全解耦！</p>
<p>常见的服务发现框架有：Etcd、Eureka、<strong>Consul</strong>、Zookeeper</p>
<p>这里我们选择go-micro默认的服务发现框架consul来做一个详细介绍。</p>
<h2 id="5-2-了解consul并使用"><a href="#5-2-了解consul并使用" class="headerlink" title="5.2 了解consul并使用"></a>5.2 了解consul并使用</h2><p>Consul是HashiCorp公司推出的开源工具，用于实现分布式系统的服务发现与配置。包含多个组件,但是作为一个整体,为你的基础设施提供服务发现和服务配置的工具.他提供以下<strong>关键特性</strong>:    </p>
<p><strong>服务发现</strong>：consul通过DNS或者HTTP接口使服务注册和服务发现变的很容易，一些外部服务，例如saas提供的也可以一样注册。</p>
<p><strong>健康检查</strong>：健康检测使consul可以快速的告警在集群中的操作。和服务发现的集成，可以防止服务转发到故障的服务上面。(心跳机制)</p>
<p><strong>键/值存储</strong>：一个用来存储动态配置的系统。提供简单的HTTP接口，可以在任何地方操作。</p>
<p><strong>多数据中心</strong>：无需复杂的配置，即可支持任意数量的区域。</p>
<blockquote>
<p>官方建议：最好是三台或者三台以上的consul在运行，同名服务最好是三台或三台以上，默认可以搭建集群</p>
</blockquote>
<h3 id="5-2-1-consul安装"><a href="#5-2-1-consul安装" class="headerlink" title="5.2.1 consul安装"></a>5.2.1 consul安装</h3><p>​    Consul用Golang实现，因此具有天然可移植性 (支持 Linux、windows和macOS)。安装包仅包含一个可执行文件。 Consul安装非常简单，只需要下载对应系统的软件包并解压后就可使用。</p>
<p>安装步骤如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这里以 ubuntu系统为例：</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://releases.hashicorp.com/consul/1.5.2/consul_1.5.2_linux_amd64.zip</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> unzip consul_1.5.2_linux_amd64.zip</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo mv consul /usr/<span class="built_in">local</span>/bin/</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>教室网速原因，用老师给的离线包解压即可</p>
<p>其他系统版本可以在这里下载：<a href="https://www.consul.io/downloads.html">https://www.consul.io/downloads.html</a></p>
</blockquote>
<p>安装验证：</p>
<p>安装 Consul后，通过执行 consul命令，你可以看到命令列表的输出</p>
<p><img src="assets%5C1538380442745.png"></p>
<blockquote>
<p>没有报错就成功了</p>
</blockquote>
<h3 id="5-2-2-consul的命令行"><a href="#5-2-2-consul的命令行" class="headerlink" title="5.2.2 consul的命令行"></a>5.2.2 consul的命令行</h3><p>consul安装好之后，我们来使用一下吧。首先我们来看一下consul都有哪些命令。使用命令<code>consul -h</code>可以查看consul支持的所有参数，而且每个参数里面还支持其他参数，下面我们来具体看看。</p>
<p><strong>agent：</strong>指令是consul的核心，它运行agent来维护成员的重要信息、运行检查、服务宣布、查询处理等等。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">==&gt; Usage: consul agent [options]</span><br><span class="line">  Starts the Consul agent and runs until an interrupt is received. The</span><br><span class="line">  agent represents a single node in a cluster.</span><br><span class="line">Options:</span><br><span class="line">  -advertise=addr                  Sets the advertise address to use</span><br><span class="line">  -advertise-wan=addr              Sets address to advertise on wan instead of</span><br><span class="line">                                   advertise addr</span><br><span class="line">  -bootstrap                       Sets server to bootstrap mode</span><br><span class="line">  -bind=0.0.0.0                    指定consul所在机器的IP地址 默认0.0.0.0</span><br><span class="line">  -http-port=8500                  设置web访问端口,默认8500</span><br><span class="line">  -bootstrap-expect=0              Sets server to expect bootstrap mode.</span><br><span class="line">  -client=127.0.0.1                表明哪些机器可以访问consul,默认市127.0.0.1,如设置所有机器访问,则设置0.0.0.0 </span><br><span class="line">  -config-file=foo                 Path to a JSON file to read configuration</span><br><span class="line">                                   from. This can be specified multiple times.</span><br><span class="line">  -config-dir=foo                  所有主动注册服务的描述信息 </span><br><span class="line">                                   files from. This will read every file ending</span><br><span class="line">                                   in &quot;.json&quot; as configuration in this</span><br><span class="line">                                   directory in alphabetical order. This can be</span><br><span class="line">                                   specified multiple times.</span><br><span class="line">  -data-dir=path                   储存所有注册过来的server机器的详细信息  </span><br><span class="line">  -dev                             开发者模式,直接以默认配置启动,  </span><br><span class="line">  -recursor=1.2.3.4                Address of an upstream DNS server.</span><br><span class="line">                                   Can be specified multiple times.</span><br><span class="line">  -dc=east-aws                     Datacenter of the agent (deprecated: use</span><br><span class="line">                                   &#x27;datacenter&#x27; instead).</span><br><span class="line">  -datacenter=east-aws             Datacenter of the agent.</span><br><span class="line">  -encrypt=key                     Provides the gossip encryption key</span><br><span class="line">  -join=1.2.3.4                    Address of an agent to join at start time.</span><br><span class="line">                                   Can be specified multiple times.</span><br><span class="line">  -join-wan=1.2.3.4                Address of an agent to join -wan at start</span><br><span class="line">                                   time. Can be specified multiple times.</span><br><span class="line">  -retry-join=1.2.3.4              Address of an agent to join at start time</span><br><span class="line">                                   with retries enabled. Can be specified</span><br><span class="line">                                   multiple times.</span><br><span class="line">  -retry-interval=30s              Time to wait between join attempts.</span><br><span class="line">  -retry-max=0                     Maximum number of join attempts. Defaults to</span><br><span class="line">                                   0, which will retry indefinitely.</span><br><span class="line">  -retry-join-ec2-region           EC2 Region to use for discovering servers to</span><br><span class="line">                                   join.</span><br><span class="line">  -retry-join-ec2-tag-key          EC2 tag key to filter on for server</span><br><span class="line">                                   discovery</span><br><span class="line">  -retry-join-ec2-tag-value        EC2 tag value to filter on for server</span><br><span class="line">                                   discovery</span><br><span class="line">  -retry-join-gce-project-name     Google Compute Engine project to discover</span><br><span class="line">                                   servers in</span><br><span class="line">  -retry-join-gce-zone-pattern     Google Compute Engine region or zone to</span><br><span class="line">                                   discover servers in (regex pattern)</span><br><span class="line">  -retry-join-gce-tag-value        Google Compute Engine tag value to filter</span><br><span class="line">                                   for server discovery</span><br><span class="line">  -retry-join-gce-credentials-file Path to credentials JSON file to use with</span><br><span class="line">                                   Google Compute Engine</span><br><span class="line">  -retry-join-wan=1.2.3.4          Address of an agent to join -wan at start</span><br><span class="line">                                   time with retries enabled. Can be specified</span><br><span class="line">                                   multiple times.</span><br><span class="line">  -retry-interval-wan=30s          Time to wait between join -wan attempts.</span><br><span class="line">  -retry-max-wan=0                 Maximum number of join -wan attempts.</span><br><span class="line">                                   Defaults to 0, which will retry</span><br><span class="line">                                   indefinitely.</span><br><span class="line">  -log-level=info                  Log level of the agent.</span><br><span class="line">  -node=hostname                   服务发现的名字  </span><br><span class="line">  -node-meta=key:value             An arbitrary metadata key/value pair for</span><br><span class="line">                                   this node.</span><br><span class="line">                                   This can be specified multiple times.</span><br><span class="line">  -protocol=N                      Sets the protocol version. Defaults to</span><br><span class="line">                                   latest.</span><br><span class="line">  -rejoin                          consul启动的时候,加入到的集群  Ignores a previous leave and attempts to</span><br><span class="line">                                   rejoin the cluster.</span><br><span class="line">  -server                          以服务的方式开启集群,允许其他的consul连接到开启的cousul(集群),如果不加表示以客户端的方式开启,不能被连接</span><br><span class="line">  -syslog                          Enables logging to syslog</span><br><span class="line">  -ui                              可以使用web页面查看服务发现的详情</span><br><span class="line">  -ui-dir=path                     Path to directory containing the Web UI</span><br><span class="line">                                   resources</span><br><span class="line">  -pid-file=path                   Path to file to store agent PID</span><br></pre></td></tr></table></figure>

<p>** info：**指令提供了各种操作时可以用到的debug信息，对于client和server，info有返回不同的子系统信息，目前有以下几个KV信息：agent(提供agent信息)，consul(提供consul库的信息)，raft(提供raft库的信息)，serf_lan(提供LAN gossip pool),serf_wan(提供WAN gossip pool)</p>
<p><strong>leave：</strong>指令触发一个优雅的离开动作并关闭agent，节点离开后不会尝试重新加入集群中。运行在server状态的节点，节点会被优雅的删除，这是很严重的，在某些情况下一个不优雅的离开会影响到集群的可用性。</p>
<p><strong>members：</strong>指令输出consul agent目前所知道的所有的成员以及它们的状态，节点的状态只有alive、left、failed三种状态。</p>
<blockquote>
<p>-detailed：输出每个节点更详细的信息。<br>-rpc-addr：一个rpc地址，agent可以链接上来发送命令，如果没有指定，默认是127.0.0.1:8400。<br>-status：过滤出符合正则规则的节点</p>
</blockquote>
<p><strong>reload：</strong>指令可以重新加载agent的配置文件。SIGHUP指令在重新加载配置文件时使用，任何重新加载的错误都会写在agent的log文件中，并不会打印到屏幕。</p>
<h3 id="5-2-3-consul简单使用"><a href="#5-2-3-consul简单使用" class="headerlink" title="5.2.3 consul简单使用"></a>5.2.3 consul简单使用</h3><p>首先我们要运行consul，运行有两种模式，分别是==server==和==client==，通过下面的命令开启：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">consul agent -server</span><br><span class="line"></span><br><span class="line">consul agent </span><br></pre></td></tr></table></figure>

<p>每个数据中心至少必须拥有一个server。一个client是一个非常轻量级的进程.用于注册服务,运行健康检查和转发对server的查询.agent必须在集群中的每个主机上运行.</p>
<p>接着我们以server的模式启动一个consul：</p>
<h4 id="server模式启动"><a href="#server模式启动" class="headerlink" title="server模式启动"></a>server模式启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> consul agent -server -bootstrap-expect 1 -data-dir /tmp/consul -node=n1 -<span class="built_in">bind</span>=192.168.1.5 -ui -rejoin -config-dir=/etc/consul.d/ -client 0.0.0.0</span></span><br></pre></td></tr></table></figure>

<p><img src="assets%5C1561950926758.png"></p>
<blockquote>
<p>需要先在/etc/下面创建consul.d目录</p>
<ul>
<li><code>-server</code> ： 定义agent运行在server模式</li>
<li><code>-bootstrap-expect</code> ：在一个datacenter中期望提供的server节点数目，当该值提供的时候，consul一直等到达到指定sever数目的时候才会引导整个集群，该标记不能和bootstrap共用</li>
<li><code>-bind</code>：该地址用来在集群内部的通讯，集群内的所有节点到地址都必须是可达的，默认是0.0.0.0</li>
<li><code>-node</code>：节点在集群中的名称，在一个集群中必须是唯一的，默认是该节点的主机名</li>
<li><code>-ui</code>： 启动web界面  :8500</li>
<li><code>-rejoin</code>：使consul忽略先前的离开，在再次启动后仍旧尝试加入集群中。</li>
<li><code>-config-dir</code>：配置文件目录，里面所有以.json结尾的文件都会被加载</li>
<li><code>-client</code>：consul服务侦听地址，这个地址提供HTTP、DNS、RPC等服务，默认是127.0.0.1所以不对外提供服务，如果你要对外提供服务改成0.0.0.0</li>
<li><code>data-dir</code>：提供一个目录用来存放agent的状态，所有的agent允许都需要该目录，该目录必须是稳定的，系统重启后都继续存在</li>
</ul>
</blockquote>
<h4 id="client模式启动"><a href="#client模式启动" class="headerlink" title="client模式启动"></a><strong>client模式启动</strong></h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> consul agent -data-dir /tmp/consul -node=n2 -<span class="built_in">bind</span>=192.168.137.82 -config-dir /etc/consul.d -rejoin -join 192.168.137.81</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>运行cosnul agent以client模式，-join 加入到已有的集群中去。</p>
</blockquote>
<h4 id="查看consul成员"><a href="#查看consul成员" class="headerlink" title="查看consul成员"></a><strong>查看consul成员</strong></h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> consul members</span></span><br><span class="line"><span class="meta">#</span><span class="bash">节点  网络地址                状态     类型     版本   协议       数据中心  分管部分</span> </span><br><span class="line">Node  Address                Status  Type    Build  Protocol  DC   Segment</span><br><span class="line"></span><br><span class="line">n1    192.168.137.130:8301   alive   server  1.1.0  2         dc1  &lt;all&gt;</span><br><span class="line">n3    192.168.137.81:8301    alive   client  1.1.0  2         dc1  &lt;default&gt;</span><br></pre></td></tr></table></figure>

<h4 id="停止agent"><a href="#停止agent" class="headerlink" title="停止agent"></a><strong>停止agent</strong></h4><p>你可以使用Ctrl-C 优雅的关闭Agent. 中断Agent之后你可以看到他离开了集群并关闭.</p>
<p>​    在退出中,Consul提醒其他集群成员,这个节点离开了.如果你强行杀掉进程.集群的其他成员应该能检测到这个节点失效了.当一个成员离开,他的服务和检测也会从目录中移除.当一个成员失效了,他的健康状况被简单的标记为危险,但是不会从目录中移除.Consul会自动尝试对失效的节点进行重连.允许他从某些网络条件下恢复过来.离开的节点则不会再继续联系.</p>
<p>​    此外,如果一个agent作为一个服务器,一个优雅的离开是很重要的,可以避免引起潜在的可用性故障影响达成一致性协议.<br>consul优雅的退出：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> consul leave</span></span><br></pre></td></tr></table></figure>

<h4 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a><strong>注册服务</strong></h4><p>搭建好conusl集群后，用户或者程序就能到consul中去查询或者注册服务。可以通过提供服务定义文件或者调用HTTP API来注册一个服务.</p>
<p>这里我们使用定义服务文件来注册一个服务:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;service&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Faceid&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;tags&quot;</span>: [<span class="string">&quot;rails&quot;</span>],</span><br><span class="line">    <span class="attr">&quot;port&quot;</span>: <span class="number">9000</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>服务定义文件在我们的配置目录下面，<code>/etc/consul.d/</code>，文件都是以.json结尾。</p>
</blockquote>
<p>注册完服务之后，我们重启consul，</p>
<p><img src="assets%5C1565103071456.png" alt="1565103071456"></p>
<blockquote>
<p>红圈里面的就是表示agent从配置文件中载入了服务定义,并且成功注册到服务目录.</p>
<p>如果需要注册多个服务，就需要创建多个服务定义文件。</p>
</blockquote>
<h4 id="查询服务"><a href="#查询服务" class="headerlink" title="查询服务"></a><strong>查询服务</strong></h4><p>一旦agent启动并且服务同步了.我们可以通过DNS或者HTTP的API来查询服务.这里我们通过HTTP来查询服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -s 127.0.0.1:8500/v1/catalog/service/faceid</span></span><br></pre></td></tr></table></figure>

<p>得到一串json数据，不过格式不够清晰，拷贝到在线json格式解析器中，如下所示：</p>
<p><img src="assets%5C1565106650464.png" alt="1565106650464"></p>
<p>我们还可以打开web页面，查看注册的服务。默认consul对应的端口是8500，在浏览器输入地址<code>localhost:8500</code></p>
<p><img src="assets%5C1565106804694.png" alt="1565106804694"></p>
<p>也能看到我们注册的服务。</p>
<h4 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a><strong>健康检查</strong></h4><p>健康检查是服务发现的关键组件.预防使用到不健康的服务.和服务注册类似,一个检查可以通过检查定义或HTTP API请求来注册.我们将使用和检查定义来注册检查.和服务类似,因为这是建立检查最常用的方式.</p>
<p>在/etc/consul.d/目录下面创建文件web2.json,内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;service&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;web&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;tags&quot;</span>: [<span class="string">&quot;extract&quot;</span>, <span class="string">&quot;verify&quot;</span>, <span class="string">&quot;compare&quot;</span>, <span class="string">&quot;idcard&quot;</span>],</span><br><span class="line">    <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;192.168.1.5&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;port&quot;</span>: <span class="number">9000</span>,</span><br><span class="line">    <span class="attr">&quot;check&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;api&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;HTTP API on port 9000&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;http&quot;</span>: <span class="string">&quot;http://localhost:9000&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;interval&quot;</span>: <span class="string">&quot;5s&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;timeout&quot;</span>: <span class="string">&quot;1s&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这时候我们没有开启这个服务，所以这个时候健康检查会出错。打开web界面，如下</p>
</blockquote>
<p>consul做健康检查的必须是<strong>Script、HTTP、TCP、TTL</strong>中的一种。</p>
<p><strong>Script类型需要提供Script脚本和interval变量。</strong>具体配置如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">  <span class="attr">&quot;check&quot;</span>: &#123;  </span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;mem-util&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Memory utilization&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;script&quot;</span>: <span class="string">&quot;/usr/local/bin/check_mem.py&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span>: <span class="string">&quot;1s&quot;</span>  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<blockquote>
<p>通过执行外部应用进行健康检查：这种外部程序具有退出代码，并可能产生一些输出；脚本按照指预置时间间隔来调用（比如，每30秒调用一次），类似于Nagios插件系统，脚本输出限制在4K以内，输出大于4K将截断。默认情况下，脚本超时时间为30秒——可通过timeout来配置。</p>
</blockquote>
<p><strong>HTTP类型必须提供http和Interval字段。</strong>具体代码如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">  <span class="attr">&quot;check&quot;</span>: &#123;  </span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;api&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;HTTP API on port 5000&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;http&quot;</span>: <span class="string">&quot;http://localhost:5000/health&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span>: <span class="string">&quot;1s&quot;</span>  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>这种检查将按照预设的时间间隔创建一个HTTP “get”请求。HTTP响应代码来标示服务所处状态：任何2xx代码视为正常，429表示警告——有很多请求；其他值表示失败。</p>
<p>这种类型的检查应使用curl或外部程序来处理HTTP操作。默认情况下，HTTP Checks中，请求超时时间等于调用请求的间隔时间，最大10秒。有可能使用客制的HTTP check，可以自由配置timeout时间，输出限制在4K以内，输出大于4K将截断。</p>
</blockquote>
<p><strong>TCP类型需要提供tcp和Interval字段。</strong>具体代码如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">  <span class="attr">&quot;check&quot;</span>: &#123;  </span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;ssh&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;SSH TCP on port 22&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;tcp&quot;</span>: <span class="string">&quot;localhost:22&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;interval&quot;</span>: <span class="string">&quot;10s&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;timeout&quot;</span>: <span class="string">&quot;1s&quot;</span>  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>这种检查将按照预设的时间间隔与指定的IP/Hostname和端口创建一个TCP连接。服务的状态依赖于TCP连接是否成功——如果连接成功，则状态是“success”；否则状态是“critical”。如果一个Hostname解析为一个IPv4和一个IPv6，将尝试连接这两个地址，第一次连接成功则服务状态是“success”。默认情况下，TCP checks中，请求超时时间等于调用请求的间隔时间，最大10秒。也是可以自由配置的。</p>
</blockquote>
<p><strong>TTL（</strong>Timeto Live生存时间<strong>）类型只需提供ttl</strong>，具体配置如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">  <span class="attr">&quot;check&quot;</span>: &#123;  </span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;web-app&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Web App Status&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;notes&quot;</span>: <span class="string">&quot;Web app does a curl internally every 10 seconds&quot;</span>,  </span><br><span class="line">    <span class="attr">&quot;ttl&quot;</span>: <span class="string">&quot;30s&quot;</span>  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>

<blockquote>
<p>这种checks为给定TTL保留了最后一种状态，checks的状态必须通过HTTP接口周期性更新，如果外部接口没有更新状态，那么状态就会被认定为不正常。 TTL checks同时会将其最后已知状态更新至磁盘，这允许Agent通过重启后恢复到已知的状态。通过TTL端上一次check来维持健康状态的有效性。</p>
</blockquote>
<p>我们也可以通过页面来查看,在浏览器输入网址：<a href="http://192.68.130.137:8500/">http://192.68.130.137:8500</a></p>
<p><img src="assets%5C1565107450324.png" alt="1565107450324"></p>
<p>其他更多consul功能，我们可以参考<a href="http://www.liangxiansen.cn/2017/04/06/consul/">http://www.liangxiansen.cn/2017/04/06/consul/</a></p>
<h3 id="5-2-4-consul和grpc结合使用"><a href="#5-2-4-consul和grpc结合使用" class="headerlink" title="5.2.4 consul和grpc结合使用"></a>5.2.4 consul和grpc结合使用</h3><p>学完了consul命令行的使用，接着我们来看一下，在代码中如何通过，这里我们用grpc和consul结合使用。</p>
<p>我们操作consul使用的是github.com/hashicorp/consul/包，我们先来下载一下，命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> go get -u -v github.com/hashicorp/consul</span></span><br></pre></td></tr></table></figure>

<p>然后我们先注册一个服务到consul上：</p>
<h4 id="把grpc服务注册到consul上"><a href="#把grpc服务注册到consul上" class="headerlink" title="把grpc服务注册到consul上"></a><strong>把grpc服务注册到consul上</strong></h4><p>代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//初始化consul配置</span></span><br><span class="line">    consulConfig := api.DefaultConfig()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取consul操作对象</span></span><br><span class="line">    registry,_ := api.NewClient(consulConfig)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册服务,服务的常规配置</span></span><br><span class="line">    registerService := api.AgentServiceRegistration&#123;</span><br><span class="line">        ID:<span class="string">&quot;1&quot;</span>,</span><br><span class="line">        Tags:[]<span class="keyword">string</span>&#123;<span class="string">&quot;testHello&quot;</span>&#125;,</span><br><span class="line">        Name:<span class="string">&quot;HelloService&quot;</span>,</span><br><span class="line">        Port:<span class="number">8080</span>,</span><br><span class="line">        Address:<span class="string">&quot;192.168.137.130&quot;</span>,</span><br><span class="line">        Check:&amp;api.AgentServiceCheck&#123;</span><br><span class="line">            TCP:<span class="string">&quot;192.168.137.130:8080&quot;</span>,</span><br><span class="line">            Timeout:<span class="string">&quot;5s&quot;</span>,</span><br><span class="line">            Interval:<span class="string">&quot;5s&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//注册服务到consul上</span></span><br><span class="line">    registry.Agent().ServiceRegister(&amp;registerService)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取grpc服务端对象</span></span><br><span class="line">    grpcServer := grpc.NewServer()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册grpc服务</span></span><br><span class="line">    pb.RegisterHelloServiceServer(grpcServer,<span class="built_in">new</span>(HelloService))</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置服务端监听</span></span><br><span class="line">    lis,err := net.Listen(<span class="string">&quot;tcp&quot;</span>,<span class="string">&quot;:1234&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//在指定端口上提供grpc服务</span></span><br><span class="line">    grpcServer.Serve(lis)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a><strong>服务发现</strong></h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//初始化consul配置, 客户端服务器需要一致</span></span><br><span class="line">    consulConfig := api.DefaultConfig()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取consul操作对象</span></span><br><span class="line">    registerClient,_ := api.NewClient(consulConfig)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取地址</span></span><br><span class="line">    serviceEntry,_,_ :=registerClient.Health().Service(<span class="string">&quot;HelloService&quot;</span>,<span class="string">&quot;testHello&quot;</span>,<span class="literal">false</span>,&amp;api.QueryOptions&#123;&#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//和grpc服务建立连接</span></span><br><span class="line">    conn,err := grpc.Dial(serviceEntry[<span class="number">0</span>].Service.Address+<span class="string">&quot;:&quot;</span>+strconv.Itoa(serviceEntry[<span class="number">0</span>].Service.Port),grpc.WithInsecure())</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">defer</span> conn.Close()</span><br><span class="line"></span><br><span class="line">    client := pb.NewHelloServiceClient(conn)</span><br><span class="line">    reply, err := client.Hello(context.Background(),&amp;pb.Person&#123;Name:<span class="string">&quot;lisi&quot;</span>,Age:<span class="number">100</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;reply,&quot;</span>,reply)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>使用到的函数</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">#service:服务名</span><br><span class="line">#tag:外名,别名</span><br><span class="line">#passingOnly:是否通过健康检查,一般为<span class="literal">true</span></span><br><span class="line">#q:查询参数,通常为<span class="literal">nil</span></span><br><span class="line">#<span class="keyword">return</span>:</span><br><span class="line">#		ServiceEntry:存储服务的切片(服务的集群)</span><br><span class="line">#		QueryMeta:额外查询返回的值</span><br><span class="line">#		error:错误信息</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(h *Health)</span> <span class="title">Service</span><span class="params">(service, tag <span class="keyword">string</span>, passingOnly <span class="keyword">bool</span>, q *QueryOptions)</span> <span class="params">([]*ServiceEntry, *QueryMeta, error)</span></span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
<h4 id="注销服务"><a href="#注销服务" class="headerlink" title="注销服务"></a><strong>注销服务</strong></h4><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="comment">//初始化consul配置,客户端服务器需要一致</span></span><br><span class="line">    consulConfig := api.DefaultConfig()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取consul操作对象</span></span><br><span class="line">    registerClient,_ := api.NewClient(consulConfig)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//注销服务</span></span><br><span class="line">     client.Agent().ServiceDeregister(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>etcd、  zookeeper</p>
</blockquote>
<h2 id="5-3-go-micro安装"><a href="#5-3-go-micro安装" class="headerlink" title="5.3 go-micro安装"></a>5.3 go-micro安装</h2><p>做了这么久的铺垫，接着让我们来进入主题，go-micro的学习，首先我们先来安装一下go-micro开发环境。安装步骤如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装go-micro</span></span><br><span class="line">go get -u -v github.com/micro/go-micro</span><br><span class="line"><span class="meta">#</span><span class="bash">安装工具集</span></span><br><span class="line">go get -u -v github.com/micro/micro</span><br><span class="line"><span class="meta">#</span><span class="bash">安装protobuf插件</span></span><br><span class="line">go get -u github.com/golang/protobuf/&#123;proto,protoc-gen-go&#125;</span><br><span class="line">go get -u github.com/micro/protoc-gen-micro</span><br></pre></td></tr></table></figure>

<p>或者通过docker镜像安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> docker pull microhq/micro</span></span><br></pre></td></tr></table></figure>

<p>安装之后输入micro命令，显示如下就证明安装成功</p>
<p><img src="assets%5C1565108115509.png" alt="1565108115509"></p>
<p>接着我们来看一下go-micro的使用。</p>
<h2 id="5-4-go-micro使用"><a href="#5-4-go-micro使用" class="headerlink" title="5.4 go-micro使用"></a>5.4 go-micro使用</h2><p>首先我们先来创建一个go micro框架的项目，我们使用micro命令，可以创建微服务，web项目等，具体用法如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">new        Create a new Micro service by specifying a directory path relative to your $GOPATH</span><br><span class="line"><span class="meta">#</span><span class="bash">创建    通过指定相对于<span class="variable">$GOPATH</span>的目录路径，创建一个新的微服务。</span></span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line"><span class="meta">#</span><span class="bash">用法</span></span><br><span class="line">micro new [command options][arguments...]</span><br><span class="line"><span class="meta">#</span><span class="bash">指定服务的命名空间</span></span><br><span class="line">--namespace &quot;go.micro&quot;    Namespace for the service e.g com.example</span><br><span class="line"><span class="meta">#</span><span class="bash">服务类型，可以是微服务srv,或者web项目,或者api等</span>                        </span><br><span class="line">--type &quot;srv&quot;            Type of service e.g api, fnc, srv, web</span><br><span class="line"><span class="meta">#</span><span class="bash">服务的正式完整定义</span>                        </span><br><span class="line">--fqdn                     FQDN of service e.g com.example.srv.service (defaults to namespace.type.alias)</span><br><span class="line"><span class="meta">#</span><span class="bash">别名是在指定时作为组合名的一部分使用的短名称  别名</span>                        </span><br><span class="line">--alias                 Alias is the short name used as part of combined name if specified</span><br></pre></td></tr></table></figure>

<p>我们常用的就是创建微服务和web项目，如下：</p>
<p><strong>创建一个web项目</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">micro new --type &quot;web&quot; micro/rpc/web</span><br><span class="line">Creating service go.micro.web.web in /home/itcast/go/src/micro/rpc/web</span><br><span class="line">.</span><br><span class="line"><span class="meta">#</span><span class="bash">主函数</span></span><br><span class="line">├── main.go </span><br><span class="line"><span class="meta">#</span><span class="bash">插件文件</span></span><br><span class="line">├── plugin.go</span><br><span class="line"><span class="meta">#</span><span class="bash">被调用处理函数</span></span><br><span class="line">├── handler</span><br><span class="line">│   └── handler.go</span><br><span class="line"><span class="meta">#</span><span class="bash">前端页面</span></span><br><span class="line">├── html</span><br><span class="line">│   └── index.html</span><br><span class="line"><span class="meta">#</span><span class="bash">docker生成文件</span></span><br><span class="line">├── Dockerfile</span><br><span class="line">├── Makefile</span><br><span class="line">└── README.md</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">编译后将web端呼叫srv端的客户端连接内容修改为srv的内容</span></span><br><span class="line"><span class="meta">#</span><span class="bash">需要进行调通</span></span><br></pre></td></tr></table></figure>

<p>打开我们web项目下的main.go文件，内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/micro/go-log&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/micro/go-web&quot;</span></span><br><span class="line">    <span class="string">&quot;micro/rpc/web/handler&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 创建1个web服务</span></span><br><span class="line">        service := web.NewService(</span><br><span class="line">           <span class="comment">//注册服务名</span></span><br><span class="line">                web.Name(<span class="string">&quot;go.micro.web.web&quot;</span>),</span><br><span class="line">            <span class="comment">//服务的版本号</span></span><br><span class="line">                web.Version(<span class="string">&quot;latest&quot;</span>),</span><br><span class="line">                <span class="comment">//！添加端口</span></span><br><span class="line">                web.Address(<span class="string">&quot;:8080&quot;</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="comment">//服务进行初始化</span></span><br><span class="line">        <span class="keyword">if</span> err := service.Init(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//处理请求  / 的路由   //当前这个web微服务的 html文件进行映射</span></span><br><span class="line">    service.Handle(<span class="string">&quot;/&quot;</span>, http.FileServer(http.Dir(<span class="string">&quot;html&quot;</span>)))</span><br><span class="line"></span><br><span class="line">    <span class="comment">//处理请求 /example/call  的路由   这个相应函数 在当前项目下的handler</span></span><br><span class="line">    service.HandleFunc(<span class="string">&quot;/example/call&quot;</span>, handler.ExampleCall)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//运行服务</span></span><br><span class="line">        <span class="keyword">if</span> err := service.Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>接着我们再来看一下我们重点需要操作的文件，handle.go,内容如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> handler</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;context&quot;</span></span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;net/http&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&quot;github.com/micro/go-micro/client&quot;</span></span><br><span class="line">    <span class="comment">//将srv中的proto的文件导入进来进行通信的使用</span></span><br><span class="line">    example <span class="string">&quot;micro/rpc/srv/proto/example&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">//相应请求的业务函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ExampleCall</span><span class="params">(w http.ResponseWriter, r *http.Request)</span></span> &#123;</span><br><span class="line">    <span class="comment">// 将传入的请求解码为json</span></span><br><span class="line">    <span class="keyword">var</span> request <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> err := json.NewDecoder(r.Body).Decode(&amp;request); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        http.Error(w, err.Error(), <span class="number">500</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用服务</span></span><br><span class="line">    <span class="comment">//替换掉原有的服务名</span></span><br><span class="line">    <span class="comment">//通过服务名和</span></span><br><span class="line">    exampleClient := example.NewExampleService(<span class="string">&quot;go.micro.srv.srv&quot;</span>, client.DefaultClient)</span><br><span class="line">    rsp, err := exampleClient.Call(context.TODO(), &amp;example.Request&#123;</span><br><span class="line">        Name: request[<span class="string">&quot;name&quot;</span>].(<span class="keyword">string</span>),</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        http.Error(w, err.Error(), <span class="number">500</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// we want to augment the response</span></span><br><span class="line">    response := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">interface</span>&#123;&#125;&#123;</span><br><span class="line">        <span class="string">&quot;msg&quot;</span>: rsp.Msg,</span><br><span class="line">        <span class="string">&quot;ref&quot;</span>: time.Now().UnixNano(),</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// encode and write the response as json</span></span><br><span class="line">    <span class="keyword">if</span> err := json.NewEncoder(w).Encode(response); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        http.Error(w, err.Error(), <span class="number">500</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>创建微服务</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">micro new --<span class="built_in">type</span> <span class="string">&quot;srv&quot;</span> t1/t1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="string">&quot;srv&quot;</span> 是表示当前创建的微服务类型</span></span><br><span class="line"><span class="meta">#</span><span class="bash">micro是相对于go/src下的文件夹名称 可以根据项目进行设置</span> </span><br><span class="line"><span class="meta">#</span><span class="bash">srv是当前创建的微服务的文件名</span></span><br><span class="line">Creating service go.micro.srv.srv in /home/itcast/go/src/t1/t1</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line"><span class="meta">#</span><span class="bash">主函数存放位置</span></span><br><span class="line">├── main.go</span><br><span class="line"><span class="meta">#</span><span class="bash">插件</span></span><br><span class="line">├── plugin.go</span><br><span class="line"><span class="meta">#</span><span class="bash">服务提供函数的实现</span></span><br><span class="line">├── handler</span><br><span class="line">│   └── example.go</span><br><span class="line"><span class="meta">#</span><span class="bash">订阅服务</span></span><br><span class="line">├── subscriber</span><br><span class="line">│   └── example.go</span><br><span class="line"><span class="meta">#</span><span class="bash">proto协议</span></span><br><span class="line">├── proto/example</span><br><span class="line">│   └── example.proto</span><br><span class="line"><span class="meta">#</span><span class="bash">docker生成文件</span></span><br><span class="line">├── Dockerfile</span><br><span class="line"><span class="meta">#</span><span class="bash">编译文件</span></span><br><span class="line">├── Makefile</span><br><span class="line">└── README.md</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">插件提示，已安装，可忽略</span></span><br><span class="line">download protobuf for micro:</span><br><span class="line"></span><br><span class="line">brew install protobuf</span><br><span class="line">go get -u github.com/golang/protobuf/&#123;proto,protoc-gen-go&#125;</span><br><span class="line">go get -u github.com/micro/protoc-gen-micro</span><br><span class="line"></span><br><span class="line">compile the proto file example.proto:</span><br><span class="line"></span><br><span class="line">cd /home/itcast/go/src/micro/rpc/srv</span><br><span class="line">protoc --proto_path=. --go_out=. --micro_out=. proto/example/example.proto</span><br></pre></td></tr></table></figure>

<p>我们来看一下微服务中的main.go文件：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">        <span class="string">&quot;github.com/micro/go-micro/util/log&quot;</span></span><br><span class="line">        <span class="string">&quot;github.com/micro/go-micro&quot;</span></span><br><span class="line">        <span class="string">&quot;t1/t1/handler&quot;</span></span><br><span class="line">        <span class="string">&quot;t1/t1/subscriber&quot;</span></span><br><span class="line"></span><br><span class="line">        t1 <span class="string">&quot;t1/t1/proto/t1&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// 创建一个micro服务</span></span><br><span class="line">        service := micro.NewService(</span><br><span class="line">                micro.Name(<span class="string">&quot;go.micro.srv.t1&quot;</span>),</span><br><span class="line">                micro.Version(<span class="string">&quot;latest&quot;</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化服务</span></span><br><span class="line">        service.Init()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册服务</span></span><br><span class="line">        t1.RegisterT1Handler(service.Server(), <span class="built_in">new</span>(handler.T1))</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册一个发布器</span></span><br><span class="line">        micro.RegisterSubscriber(<span class="string">&quot;go.micro.srv.t1&quot;</span>, service.Server(), <span class="built_in">new</span>(subscriber.T1))</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册一个函数到发布器</span></span><br><span class="line">        micro.RegisterSubscriber(<span class="string">&quot;go.micro.srv.t1&quot;</span>, service.Server(), subscriber.Handler)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 运行服务</span></span><br><span class="line">        <span class="keyword">if</span> err := service.Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>默认情况下，go micro框架使用的是自己封装的rpc通信，这里我们可以替换成grpc，代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">        <span class="string">&quot;github.com/micro/go-micro/util/log&quot;</span></span><br><span class="line">        <span class="string">&quot;github.com/micro/go-micro&quot;</span></span><br><span class="line">        <span class="string">&quot;t1/t1/handler&quot;</span></span><br><span class="line">        <span class="string">&quot;t1/t1/subscriber&quot;</span></span><br><span class="line">        <span class="string">&quot;github.com/micro/go-grpc&quot;</span><span class="comment">//go micro内嵌了grpc框架</span></span><br><span class="line">        t1 <span class="string">&quot;t1/t1/proto/t1&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// 创建一个micro服务</span></span><br><span class="line">        service := grpc.NewService(</span><br><span class="line">                micro.Name(<span class="string">&quot;go.micro.srv.t1&quot;</span>),</span><br><span class="line">                micro.Version(<span class="string">&quot;latest&quot;</span>),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化服务</span></span><br><span class="line">        service.Init()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册服务</span></span><br><span class="line">        t1.RegisterT1Handler(service.Server(), <span class="built_in">new</span>(handler.T1))</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册一个发布器</span></span><br><span class="line">        micro.RegisterSubscriber(<span class="string">&quot;go.micro.srv.t1&quot;</span>, service.Server(), <span class="built_in">new</span>(subscriber.T1))</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册一个函数到发布器</span></span><br><span class="line">        micro.RegisterSubscriber(<span class="string">&quot;go.micro.srv.t1&quot;</span>, service.Server(), subscriber.Handler)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 运行服务</span></span><br><span class="line">        <span class="keyword">if</span> err := service.Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>服务发现：</strong></p>
<p>在go-micro包中，共有4种注册实现consul、gossip、mdns、memory，前两个都是基于hashicorp公司的协议，mdns则是基于组网广播实现，memory则是本地实现。</p>
<p>consul 依赖hashicorp的组件，但是功能强大、完整<br>gossip 基于SWIM协议广播，零依赖<br>mdns 轻量、零依赖，但是对环境有要求，某些环境不支持mdns的无法正常使用<br>memory 本地解决方案，不可跨主机访问<br>另外在go-plugins中有其它注册实现，比如etcd、eureka、k8s、nats、zk等等</p>
<p>大体解释下接口中每个方法的作用</p>
<ul>
<li>Init 初始化</li>
<li>Options 获取配置选项</li>
<li>Register 注册服务</li>
<li>Deregister 卸载服务</li>
<li>GetService 获取指定服务</li>
<li>ListServices 列出所有服务</li>
<li>Watch watcher 负责侦听变动</li>
<li>String 注册信息转成字符串描述</li>
</ul>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">        <span class="string">&quot;github.com/micro/go-micro/util/log&quot;</span></span><br><span class="line">        <span class="string">&quot;github.com/micro/go-micro&quot;</span></span><br><span class="line">        <span class="string">&quot;t1/t1/handler&quot;</span></span><br><span class="line">        <span class="string">&quot;t1/t1/subscriber&quot;</span></span><br><span class="line">        <span class="string">&quot;github.com/micro/go-grpc&quot;</span></span><br><span class="line">        <span class="string">&quot;github.com/micro/go-micro/registry/consul&quot;</span></span><br><span class="line">        <span class="string">&quot;github.com/micro/go-micro/registry&quot;</span></span><br><span class="line">        t1 <span class="string">&quot;t1/t1/proto/t1&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">//初始化服务发现</span></span><br><span class="line">        reg := consul.NewRegistry(<span class="function"><span class="keyword">func</span><span class="params">(options *registry.Options)</span></span> &#123;</span><br><span class="line">                options.Addrs = []<span class="keyword">string</span>&#123;</span><br><span class="line">                        <span class="string">&quot;192.168.137.130:8500&quot;</span>,</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个micro服务</span></span><br><span class="line">        service := grpc.NewService(</span><br><span class="line">                micro.Name(<span class="string">&quot;go.micro.srv.t1&quot;</span>),</span><br><span class="line">                micro.Version(<span class="string">&quot;latest&quot;</span>),</span><br><span class="line">                micro.Registry(reg),</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化服务</span></span><br><span class="line">        service.Init()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册服务</span></span><br><span class="line">        t1.RegisterT1Handler(service.Server(), <span class="built_in">new</span>(handler.T1))</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册一个发布器</span></span><br><span class="line">        micro.RegisterSubscriber(<span class="string">&quot;go.micro.srv.t1&quot;</span>, service.Server(), <span class="built_in">new</span>(subscriber.T1))</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 注册一个函数到发布器</span></span><br><span class="line">        micro.RegisterSubscriber(<span class="string">&quot;go.micro.srv.t1&quot;</span>, service.Server(), subscriber.Handler)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 运行服务</span></span><br><span class="line">        <span class="keyword">if</span> err := service.Run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">                log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>AJAX使用</title>
    <url>/2020/03/03/HTML/AJAX/</url>
    <content><![CDATA[<p>ajax的简单使用</p>
<span id="more"></span>



<ol>
<li>Ajax的概念<br> 局部刷新技术,不是一门新技术,是浏览器端的技术<br> 2.Ajax的作用<br> 可以实现在当前结果页中显示其他请求的响应内容</li>
<li>Ajax的使用<br> 3.1.    ajax的基本流程<br> -创建ajax引擎对象<br> -复写onreadyStatementChange函数<br> –判断ajax状态码<pre><code> --判断响应状态码
     ---获取响应内容
     ---处理响应内容(js操作文档结构)
</code></pre>
 –发送请求<br> 3.2.    ajax的状态码<br> ajax的状态码<br> readyState:0 ,1 , 2 , 3 , 4<br> (其中4:表示响应内容被成功接收)<br> 响应状态码<br> |_status<pre><code> |__200:一切okj
 |__404:资源未找到
 |__405:该请求不支持get或者post的请求
 |__500:内部服务器错误
</code></pre>
3.3. ajax的异步同步<br> ajax.open(method,url,async)<br> async:设置同步或者是异步代码执行,默认异步<pre><code> |__true:同步
 |__false:异步
</code></pre>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">  <span class="comment">//get</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getDate</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//1.创建ajax引擎对象</span></span><br><span class="line">    <span class="keyword">var</span> ajax;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest)&#123;</span><br><span class="line">      ajax = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject)&#123;</span><br><span class="line">      ajax = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;msxml2.XMLHTTP&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//2.复写onreadystatementchange函数</span></span><br><span class="line">    ajax.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">//判断Ajax的状态码</span></span><br><span class="line">      <span class="keyword">if</span> (ajax.readyState==<span class="number">4</span> &amp;&amp; ajax.status==<span class="number">200</span>)&#123;</span><br><span class="line">        <span class="comment">//5.获取响应内容</span></span><br><span class="line">        <span class="keyword">var</span> result = ajax.responseText;</span><br><span class="line">        <span class="comment">//6.获取元素对象</span></span><br><span class="line">        <span class="keyword">var</span> showdiv = <span class="built_in">document</span>.getElementById(<span class="string">&quot;showDiv&quot;</span>);</span><br><span class="line">        showdiv.innerHTML=result;</span><br><span class="line">        alert(result)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3.打开请求</span></span><br><span class="line">    <span class="comment">//同步与异步,默认异步</span></span><br><span class="line">    ajax.open(<span class="string">&quot;get&quot;</span>,<span class="string">&quot;AjaxServlet&quot;</span>);</span><br><span class="line">    <span class="comment">//4.发送请求</span></span><br><span class="line">    ajax.send(<span class="literal">null</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">  <span class="comment">//post</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getReq</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//创建ajax引擎对象</span></span><br><span class="line">    <span class="keyword">var</span> ajax;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest)&#123;</span><br><span class="line">      ajax = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject)&#123;</span><br><span class="line">      ajax = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;msxml2.XMLHTTP&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//复写onreadyStatementChange函数</span></span><br><span class="line">    ajax.onreadystatechange =<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">//判断ajax状态码</span></span><br><span class="line">      <span class="comment">//判断响应状态码</span></span><br><span class="line">      <span class="keyword">if</span> (ajax.readyState==<span class="number">4</span>&amp;&amp;ajax.status==<span class="number">200</span>)&#123;</span><br><span class="line">        <span class="comment">//获取响应内容</span></span><br><span class="line">        <span class="keyword">var</span> result = ajax.responseText;</span><br><span class="line">        <span class="comment">//处理响应内容</span></span><br><span class="line">        alert(result);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">      <span class="comment">//发送请求</span></span><br><span class="line">    ajax.open(<span class="string">&quot;post&quot;</span>,<span class="string">&quot;AjaxPostServlet&quot;</span>);</span><br><span class="line">    ajax.setRequestHeader(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">    ajax.send(<span class="string">&quot;name=张三&amp;pwd=123&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>html</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>03_SHELL编程之条件判断和流程控制</title>
    <url>/2021/01/03/linux/03_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h1 id="本节课程目标"><a href="#本节课程目标" class="headerlink" title="本节课程目标"></a>本节课程目标</h1><ul>
<li>熟悉条件判断语句，如判断整数、判断字符串等</li>
<li>熟悉流程控制语句基本语法，如if…else…</li>
</ul>
<span id="more"></span>

<h1 id="一、条件判断语法结构"><a href="#一、条件判断语法结构" class="headerlink" title="一、条件判断语法结构"></a>一、条件判断语法结构</h1><p><strong>思考：何为真(==true==)？何为假(==false==)？</strong></p>
<p>##1. ==条件判断语法格式==</p>
<ul>
<li>格式1： ==<strong>test</strong>== 条件表达式</li>
<li>格式2： <strong>[</strong> 条件表达式 ]   </li>
<li>格式3： <strong>[[</strong> 条件表达式 ]]  支持正则 =~</li>
</ul>
<p><strong>特别说明：</strong></p>
<p>1）==[==  亲亲，我两边都有空格，不空打死你呦  ==]== :imp:</p>
<p>2）==[[==  亲亲，我两边都有空格，不空打死你呦  ==]]==:imp:</p>
<ol start="3">
<li> 更多判断，<code>man test</code>去查看，很多的参数都用来进行条件判断</li>
</ol>
<h2 id="2-条件判断相关参数"><a href="#2-条件判断相关参数" class="headerlink" title="2. 条件判断相关参数"></a>2. 条件判断相关参数</h2><p>问：你要判断什么？</p>
<p>答：我要判断文件类型，判断文件新旧，判断字符串是否相等，判断权限等等…</p>
<h3 id="㈠-判断文件类型"><a href="#㈠-判断文件类型" class="headerlink" title="㈠ ==判断文件类型=="></a>㈠ ==判断文件类型==</h3><table>
<thead>
<tr>
<th>判断参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>==-e==</td>
<td>判断文件是否存在（任何类型文件）</td>
</tr>
<tr>
<td>-f</td>
<td>判断文件是否存在==并且==是一个普通文件</td>
</tr>
<tr>
<td>-d</td>
<td>判断文件是否存在并且是一个目录</td>
</tr>
<tr>
<td>-L</td>
<td>判断文件是否存在并且是一个软连接文件</td>
</tr>
<tr>
<td>-b</td>
<td>判断文件是否存在并且是一个块设备文件</td>
</tr>
<tr>
<td>-S</td>
<td>判断文件是否存在并且是一个套接字文件</td>
</tr>
<tr>
<td>-c</td>
<td>判断文件是否存在并且是一个字符设备文件</td>
</tr>
<tr>
<td>-p</td>
<td>判断文件是否存在并且是一个命名管道文件</td>
</tr>
<tr>
<td>==-s==</td>
<td>判断文件是否存在并且是一个非空文件（有内容）</td>
</tr>
</tbody></table>
<p><strong>举例说明：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">test <span class="literal">-e</span> file					只要文件存在条件为真</span><br><span class="line">[ -<span class="type">d</span> /<span class="type">shell01</span>/<span class="type">dir1</span> ]		 	判断目录是否存在，存在条件为真</span><br><span class="line">[ ! -<span class="type">d</span> /<span class="type">shell01</span>/<span class="type">dir1</span> ]		判断目录是否存在,不存在条件为真</span><br><span class="line">[[ -<span class="type">f</span> /<span class="type">shell01</span>/<span class="number">1</span><span class="type">.sh</span> ]]		判断文件是否存在，并且是一个普通的文件</span><br></pre></td></tr></table></figure>

<h3 id="㈡-判断文件权限"><a href="#㈡-判断文件权限" class="headerlink" title="㈡ 判断文件权限"></a>㈡ 判断文件权限</h3><table>
<thead>
<tr>
<th>判断参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-r</td>
<td>当前用户对其是否可读</td>
</tr>
<tr>
<td>-w</td>
<td>当前用户对其是否可写</td>
</tr>
<tr>
<td>-x</td>
<td>当前用户对其是否可执行</td>
</tr>
<tr>
<td>-u</td>
<td>是否有suid，高级权限冒险位</td>
</tr>
<tr>
<td>-g</td>
<td>是否sgid，高级权限强制位</td>
</tr>
<tr>
<td>-k</td>
<td>是否有t位，高级权限粘滞位</td>
</tr>
</tbody></table>
<h3 id="㈢-判断文件新旧"><a href="#㈢-判断文件新旧" class="headerlink" title="㈢ 判断文件新旧"></a>㈢ 判断文件新旧</h3><p>说明：这里的新旧指的是==文件的修改时间==。</p>
<table>
<thead>
<tr>
<th>判断参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>file1 -nt  file2</td>
<td>比较file1是否比file2新</td>
</tr>
<tr>
<td>file1 -ot  file2</td>
<td>比较file1是否比file2旧</td>
</tr>
<tr>
<td>file1 -ef  file2</td>
<td>比较是否为同一个文件，或者用于判断硬连接，是否指向同一个inode</td>
</tr>
</tbody></table>
<h3 id="㈣-判断整数"><a href="#㈣-判断整数" class="headerlink" title="㈣ 判断整数"></a>㈣ 判断整数</h3><table>
<thead>
<tr>
<th>判断参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-eq</td>
<td>相等</td>
</tr>
<tr>
<td>-ne</td>
<td>不等</td>
</tr>
<tr>
<td>-gt</td>
<td>大于</td>
</tr>
<tr>
<td>-lt</td>
<td>小于</td>
</tr>
<tr>
<td>-ge</td>
<td>大于等于</td>
</tr>
<tr>
<td>-le</td>
<td>小于等于</td>
</tr>
</tbody></table>
<h3 id="㈤-判断字符串"><a href="#㈤-判断字符串" class="headerlink" title="㈤ ==判断字符串=="></a>㈤ ==判断字符串==</h3><table>
<thead>
<tr>
<th>判断参数</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-z</td>
<td>判断是否为==空==字符串，字符串长度为0则成立</td>
</tr>
<tr>
<td>-n</td>
<td>判断是否为==非空==字符串，字符串长度不为0则成立</td>
</tr>
<tr>
<td>string1 = string2</td>
<td>判断字符串是否相等</td>
</tr>
<tr>
<td>string1 != string2</td>
<td>判断字符串是否相不等</td>
</tr>
</tbody></table>
<h3 id="㈥-多重条件判断"><a href="#㈥-多重条件判断" class="headerlink" title="㈥ ==多重条件判断=="></a>㈥ ==多重条件判断==</h3><table>
<thead>
<tr>
<th>判断符号</th>
<th>含义</th>
<th>举例</th>
</tr>
</thead>
<tbody><tr>
<td>-a 和 &amp;&amp;</td>
<td>逻辑与</td>
<td>[ 1 -eq 1 -a 1 -ne 0 ]     [ 1 -eq 1 ] &amp;&amp; [ 1 -ne 0 ]</td>
</tr>
<tr>
<td>-o 和 ||</td>
<td>逻辑或</td>
<td>[ 1 -eq 1 -o 1 -ne 1 ]</td>
</tr>
</tbody></table>
<p><strong>==特别说明：==</strong></p>
<p>&amp;&amp;    前面的表达式==为真==，才会执行后面的代码</p>
<p>||     前面的表达式==为假==，才会执行后面的代码</p>
<p>;         ==只==用于==分割==命令或表达式</p>
<h4 id="①-举例说明"><a href="#①-举例说明" class="headerlink" title="① 举例说明"></a>① 举例说明</h4><ul>
<li>数值比较</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ $(id -u) -eq 0 ] &amp;&amp; echo &quot;the user is admin&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="variable">$</span> [ <span class="variable">$</span>(<span class="type">id</span> -<span class="type">u</span>) -<span class="type">ne</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;the user is not admin&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="variable">$</span> [ <span class="variable">$</span>(<span class="type">id</span> -<span class="type">u</span>) -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;the user is admin&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;the user is not admin&quot;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># uid=`id -u`</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># test $uid -eq 0 &amp;&amp; echo this is admin</span></span><br><span class="line">this is admin</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ $(id -u) -ne 0 ]  || echo this is admin</span></span><br><span class="line">this is admin</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ $(id -u) -eq 0 ]  &amp;&amp; echo this is admin || echo this is not admin</span></span><br><span class="line">this is admin</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># su - stu1</span></span><br><span class="line">[<span class="type">stu1</span>@<span class="type">server</span> ~]<span class="variable">$</span> [ <span class="variable">$</span>(<span class="type">id</span> -<span class="type">u</span>) -<span class="type">eq</span> <span class="number">0</span> ]  &amp;&amp; <span class="built_in">echo</span> this is admin || <span class="built_in">echo</span> this is not admin</span><br><span class="line">this is not admin</span><br></pre></td></tr></table></figure>

<ul>
<li>类C风格的数值比较</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">注意：在(( ))中，=表示赋值；==表示判断</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># ((1==2));echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># ((1&lt;2));echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># ((2&gt;=1));echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># ((2!=1));echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># ((`id -u`==0));echo $?</span></span><br><span class="line"> </span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># ((a=123));echo $a</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># unset a</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># ((a==123));echo $?</span></span><br></pre></td></tr></table></figure>

<ul>
<li>字符串比较</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">注意：双引号引起来，看作一个整体；= 和 == 在 [ 字符串 ] 比较中都表示判断</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># a=&#x27;hello world&#x27;;b=world</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ $a = $b ];echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ &quot;$a&quot; = &quot;$b&quot; ];echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ &quot;$a&quot; != &quot;$b&quot; ];echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ &quot;$a&quot; !== &quot;$b&quot; ];echo $?        错误</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ &quot;$a&quot; == &quot;$b&quot; ];echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># test &quot;$a&quot; != &quot;$b&quot;;echo $?</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test  表达式</span><br><span class="line">[ 表达式 ]</span><br><span class="line">[[ 表达式 ]]</span><br><span class="line"></span><br><span class="line">思考：[ ] 和 [[ ]] 有什么区别？</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># a=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># test -z $a;echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># a=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># test -z $a;echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># test -n $a;echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># test -n &quot;$a&quot;;echo $?</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [ &#x27;&#x27; = $a ];echo $?</span></span><br><span class="line"><span class="literal">-bash</span>: [: : <span class="type">unary</span> <span class="type">operator</span> <span class="type">expected</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="comment"># [[ &#x27;&#x27; = $a ]];echo $?</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ 1 -eq 0 -a 1 -ne 0 ];echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [ 1 -eq 0 &amp;&amp; 1 -ne 0 ];echo $?</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># [[ 1 -eq 0 &amp;&amp; 1 -ne 0 ]];echo $?</span></span><br></pre></td></tr></table></figure>

<h4 id="②-逻辑运算符总结"><a href="#②-逻辑运算符总结" class="headerlink" title="② 逻辑运算符总结"></a>② 逻辑运算符总结</h4><ol>
<li>符号;和&amp;&amp;和||都可以用来分割命令或者表达式</li>
<li>分号（;）完全不考虑前面的语句是否正确执行，都会执行;号后面的内容</li>
<li><code>&amp;&amp;</code>符号，需要考虑&amp;&amp;前面的语句的正确性，前面语句正确执行才会执行&amp;&amp;后的内容；反之亦然</li>
<li><code>||</code>符号，需要考虑||前面的语句的非正确性，前面语句执行错误才会执行||后内容；反之亦然</li>
<li>如果&amp;&amp;和||一起出现，从左往右依次看，按照以上原则</li>
</ol>
<h1 id="二、流程控制语句"><a href="#二、流程控制语句" class="headerlink" title="二、流程控制语句"></a>二、流程控制语句</h1><p><strong>关键词：==选择==（人生漫漫长路，我该何去何从:vertical_traffic_light:）</strong></p>
<h2 id="1-基本语法结构"><a href="#1-基本语法结构" class="headerlink" title="1. 基本语法结构"></a>1. 基本语法结构</h2><h3 id="㈠-if结构"><a href="#㈠-if结构" class="headerlink" title="㈠ ==if结构=="></a>㈠ ==if结构==</h3><p><strong>箴言1：只要正确，就要一直向前冲:v:</strong></p>
<p><strong>==F==</strong>:表示false，为假</p>
<p><strong>==T==</strong>:表示true，为真</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="type">condition</span> ];then</span><br><span class="line">		command</span><br><span class="line">		command</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> test 条件;then</span><br><span class="line">	命令</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ 条件 ]];then</span><br><span class="line">	命令</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">[ 条件 ] &amp;&amp; command</span><br></pre></td></tr></table></figure>

<p><img src="./%E6%B5%81%E7%A8%8B%E5%88%A4%E6%96%AD1.png" alt="流程判断1"></p>
<h3 id="㈡-if…else结构"><a href="#㈡-if…else结构" class="headerlink" title="㈡ ==if…else结构=="></a>㈡ ==if…else结构==</h3><p><strong>箴言2：分叉路口，二选一</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="type">condition</span> ];then</span><br><span class="line">		command1</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		command2</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">[ 条件 ] &amp;&amp; command1 || command2</span><br></pre></td></tr></table></figure>

<p><img src="/%E6%B5%81%E7%A8%8B%E5%88%A4%E6%96%AD2.png" alt="流程判断2"></p>
<p><strong>小试牛刀：</strong></p>
<p>==让用户自己输入==字符串，==如果==用户输入的是hello，请打印world，==否则==打印“请输入hello”</p>
<ol>
<li><code>read定义变量</code></li>
<li>if….else…</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&#x27;请输入一个字符串:&#x27;</span> str</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$str</span>&quot;</span> = <span class="string">&#x27;hello&#x27;</span> ];then</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;world&#x27;</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;请输入hello!&#x27;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span> <span class="comment">#!/bin/env bash</span></span><br><span class="line">  <span class="number">2</span></span><br><span class="line">  <span class="number">3</span> read <span class="literal">-p</span> <span class="string">&quot;请输入一个字符串:&quot;</span> str</span><br><span class="line">  <span class="number">4</span> <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$str</span>&quot;</span> = <span class="string">&quot;hello&quot;</span> ]</span><br><span class="line">  <span class="number">5</span> then</span><br><span class="line">  <span class="number">6</span>     <span class="built_in">echo</span> world</span><br><span class="line">  <span class="number">7</span> <span class="keyword">else</span></span><br><span class="line">  <span class="number">8</span>     <span class="built_in">echo</span> <span class="string">&quot;请输入hello!&quot;</span></span><br><span class="line">  <span class="number">9</span> fi</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;该脚本需要传递参数&quot;</span></span><br><span class="line">  <span class="number">1</span> <span class="keyword">if</span> [ <span class="variable">$1</span> = <span class="type">hello</span> ];then</span><br><span class="line">  <span class="number">2</span>         <span class="built_in">echo</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line">  <span class="number">3</span> <span class="keyword">else</span></span><br><span class="line">  <span class="number">4</span>         <span class="built_in">echo</span> <span class="string">&quot;请输入hello&quot;</span></span><br><span class="line">  <span class="number">5</span> fi</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"></span><br><span class="line">A=hello</span><br><span class="line">B=world</span><br><span class="line">C=hello</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;<span class="variable">$A</span>&quot;</span> ];then</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$B</span>&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$C</span>&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&#x27;请输入一个字符串:&#x27;</span> str;</span><br><span class="line"> [ <span class="string">&quot;<span class="variable">$str</span>&quot;</span> = <span class="string">&#x27;hello&#x27;</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;world&#x27;</span> ||  <span class="built_in">echo</span> <span class="string">&#x27;请输入hello!&#x27;</span></span><br></pre></td></tr></table></figure>



<h3 id="㈢-if…elif…else结构"><a href="#㈢-if…elif…else结构" class="headerlink" title="㈢ ==if…elif…else结构=="></a>㈢ ==if…elif…else结构==</h3><p><strong>箴言3：选择很多，能走的只有一条</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="type">condition1</span> ];then</span><br><span class="line">		command1  	结束</span><br><span class="line">	elif [ <span class="type">condition2</span> ];then</span><br><span class="line">		command2   	结束</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		command3</span><br><span class="line">fi</span><br><span class="line">注释：</span><br><span class="line">如果条件<span class="number">1</span>满足，执行命令<span class="number">1</span>后结束；如果条件<span class="number">1</span>不满足，再看条件<span class="number">2</span>，如果条件<span class="number">2</span>满足执行命令<span class="number">2</span>后结束；如果条件<span class="number">1</span>和条件<span class="number">2</span>都不满足执行命令<span class="number">3</span>结束.</span><br></pre></td></tr></table></figure>

<p><img src="/%E6%B5%81%E7%A8%8B%E5%88%A4%E6%96%AD3.png" alt="流程判断3"></p>
<h3 id="㈣-层层嵌套结构"><a href="#㈣-层层嵌套结构" class="headerlink" title="㈣ 层层嵌套结构"></a>㈣ 层层嵌套结构</h3><p><strong>箴言4：多次判断，带你走出人生迷雾。</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ <span class="type">condition1</span> ];then</span><br><span class="line">		command1		</span><br><span class="line">		<span class="keyword">if</span> [ <span class="type">condition2</span> ];then</span><br><span class="line">			command2</span><br><span class="line">		fi</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">		<span class="keyword">if</span> [ <span class="type">condition3</span> ];then</span><br><span class="line">			command3</span><br><span class="line">		elif [ <span class="type">condition4</span> ];then</span><br><span class="line">			command4</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			command5</span><br><span class="line">		fi</span><br><span class="line">fi</span><br><span class="line">注释：</span><br><span class="line">如果条件<span class="number">1</span>满足，执行命令<span class="number">1</span>；如果条件<span class="number">2</span>也满足执行命令<span class="number">2</span>，如果不满足就只执行命令<span class="number">1</span>结束；</span><br><span class="line">如果条件<span class="number">1</span>不满足，不看条件<span class="number">2</span>；直接看条件<span class="number">3</span>，如果条件<span class="number">3</span>满足执行命令<span class="number">3</span>；如果不满足则看条件<span class="number">4</span>，如果条件<span class="number">4</span>满足执行命令<span class="number">4</span>；否则执行命令<span class="number">5</span></span><br></pre></td></tr></table></figure>

<p><img src="/%E6%B5%81%E7%A8%8B%E5%88%A4%E6%96%AD4.png" alt="流程判断4"></p>
<h2 id="2-应用案例"><a href="#2-应用案例" class="headerlink" title="2. 应用案例"></a>2. 应用案例</h2><h3 id="㈠-判断两台主机是否ping通"><a href="#㈠-判断两台主机是否ping通" class="headerlink" title="㈠ 判断两台主机是否ping通"></a>㈠ 判断两台主机是否ping通</h3><p><strong>需求：</strong>判断==当前主机==是否和==远程主机==是否ping通</p>
<h4 id="①-思路"><a href="#①-思路" class="headerlink" title="① 思路"></a>① 思路</h4><ol>
<li>使用哪个命令实现  <code>ping -c次数</code></li>
<li>根据命令的==执行结果状态==来判断是否通<code>$?</code></li>
<li>根据逻辑和语法结构来编写脚本(条件判断或者流程控制)</li>
</ol>
<h4 id="②-落地实现"><a href="#②-落地实现" class="headerlink" title="② 落地实现"></a>② 落地实现</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment"># 该脚本用于判断当前主机是否和远程指定主机互通</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 交互式定义变量，让用户自己决定ping哪个主机</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要ping的主机的IP:&quot;</span> ip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用ping程序判断主机是否互通</span></span><br><span class="line">ping <span class="literal">-c1</span> <span class="variable">$ip</span> &amp;&gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;当前主机和远程主机<span class="variable">$ip</span>是互通的&quot;</span></span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> 	<span class="built_in">echo</span> <span class="string">&quot;当前主机和远程主机<span class="variable">$ip</span>不通的&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">逻辑运算符</span><br><span class="line">test <span class="variable">$</span>? <span class="operator">-eq</span> <span class="number">0</span> &amp;&amp;  <span class="built_in">echo</span> <span class="string">&quot;当前主机和远程主机<span class="variable">$ip</span>是互通的&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;当前主机和远程主机<span class="variable">$ip</span>不通的&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="㈡-判断一个进程是否存在"><a href="#㈡-判断一个进程是否存在" class="headerlink" title="㈡ 判断一个进程是否存在"></a>㈡ 判断一个进程是否存在</h3><p><strong>需求：</strong>判断web服务器中httpd进程是否存在</p>
<h4 id="①-思路-1"><a href="#①-思路-1" class="headerlink" title="① 思路"></a>① 思路</h4><ol>
<li>查看进程的相关命令   ps   pgrep</li>
<li>根据命令的返回状态值来判断进程是否存在</li>
<li>根据逻辑用脚本语言实现</li>
</ol>
<h4 id="②-落地实现-1"><a href="#②-落地实现-1" class="headerlink" title="② 落地实现"></a>② 落地实现</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment"># 判断一个程序(httpd)的进程是否存在</span></span><br><span class="line">pgrep httpd &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;当前httpd进程不存在&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;当前httpd进程存在&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line">test <span class="variable">$</span>? <span class="operator">-eq</span> <span class="number">0</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;当前httpd进程存在&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;当前httpd进程不存在&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="③-补充命令"><a href="#③-补充命令" class="headerlink" title="③ 补充命令"></a>③ 补充命令</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">pgrep命令：以名称为依据从运行进程队列中查找进程，并显示查找到的进程id</span><br><span class="line">选项</span><br><span class="line"><span class="literal">-o</span>：仅显示找到的最小（起始）进程号;</span><br><span class="line"><span class="literal">-n</span>：仅显示找到的最大（结束）进程号；</span><br><span class="line"><span class="literal">-l</span>：显示进程名称；</span><br><span class="line"><span class="literal">-P</span>：指定父进程号；pgrep <span class="literal">-p</span> <span class="number">4764</span>  查看父进程下的子进程id</span><br><span class="line"><span class="literal">-g</span>：指定进程组；</span><br><span class="line"><span class="literal">-t</span>：指定开启进程的终端；</span><br><span class="line"><span class="literal">-u</span>：指定进程的有效用户ID。</span><br></pre></td></tr></table></figure>

<h3 id="㈢-判断一个服务是否正常"><a href="#㈢-判断一个服务是否正常" class="headerlink" title="㈢ 判断一个服务是否正常"></a>㈢ 判断一个服务是否正常</h3><p><strong>需求：</strong>判断门户网站是否能够正常访问</p>
<h4 id="①-思路-2"><a href="#①-思路-2" class="headerlink" title="① 思路"></a>① 思路</h4><ol>
<li>可以判断进程是否存在，用/etc/init.d/httpd status判断状态等方法</li>
<li>最好的方法是==直接去访问==一下，通过访问成功和失败的返回值来判断<ul>
<li>Linux环境，==wget==  curl  elinks -dump</li>
</ul>
</li>
</ol>
<h4 id="②-落地实现-2"><a href="#②-落地实现-2" class="headerlink" title="② 落地实现"></a>② 落地实现</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment"># 判断门户网站是否能够正常提供服务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">web_server=www.itcast.cn</span><br><span class="line"><span class="comment">#访问网站</span></span><br><span class="line"><span class="built_in">wget</span> <span class="literal">-P</span> /shell/ <span class="variable">$web_server</span> &amp;&gt;/dev/null</span><br><span class="line">[ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;当前网站服务是ok&quot;</span> &amp;&amp; <span class="built_in">rm</span> <span class="operator">-f</span> /shell/index.* || <span class="built_in">echo</span> <span class="string">&quot;当前网站服务不ok，请立刻处理&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>##3. 课堂练习</p>
<h3 id="㈠-判断用户是否存在"><a href="#㈠-判断用户是否存在" class="headerlink" title="㈠ 判断用户是否存在"></a>㈠ 判断用户是否存在</h3><p><strong>需求1：</strong>输入一个用户，用脚本判断该用户是否存在</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"> <span class="comment">#!/bin/env bash</span></span><br><span class="line">  <span class="number">2</span> read <span class="literal">-p</span> <span class="string">&quot;请输入一个用户名：&quot;</span> user_name</span><br><span class="line">  <span class="number">3</span> id <span class="variable">$user_name</span> &amp;&gt;/dev/null</span><br><span class="line">  <span class="number">4</span> <span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">  <span class="number">6</span>     <span class="built_in">echo</span> <span class="string">&quot;该用户存在！&quot;</span></span><br><span class="line">  <span class="number">7</span> <span class="keyword">else</span></span><br><span class="line">  <span class="number">8</span>     <span class="built_in">echo</span> <span class="string">&quot;用户不存在！&quot;</span></span><br><span class="line">  <span class="number">9</span> fi</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 判断 用户（id） 是否存在</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;输入壹个用户：&quot;</span> id</span><br><span class="line">id <span class="variable">$id</span> &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;该用户存在&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;该用户不存在&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要查询的用户名:&quot;</span> username</span><br><span class="line">grep <span class="literal">-w</span> <span class="variable">$username</span> /etc/passwd &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ]</span><br><span class="line">then</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;该用户已存在&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;该用户不存在&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要检查的用户名：&quot;</span> name</span><br><span class="line">id <span class="variable">$name</span> &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ]</span><br><span class="line">then</span><br><span class="line"><span class="built_in">echo</span> 用户<span class="string">&quot;<span class="variable">$name</span>&quot;</span>已经存在</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> 用户<span class="string">&quot;<span class="variable">$name</span>&quot;</span>不存在</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment">#判断用户是否存在</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请写出用户名&quot;</span> id</span><br><span class="line">id <span class="variable">$id</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;用户存在&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;用户不存在&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&#x27;请输入用户名:&#x27;</span> username</span><br><span class="line">id <span class="variable">$username</span> &amp;&gt;/dev/null</span><br><span class="line">[ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;用户存在&#x27;</span> || <span class="built_in">echo</span> <span class="string">&#x27;不存在&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="㈡-判断软件包是否安装"><a href="#㈡-判断软件包是否安装" class="headerlink" title="㈡ 判断软件包是否安装"></a>㈡ 判断软件包是否安装</h3><p><strong>需求2：</strong>用脚本判断一个软件包是否安装，如果没安装则安装它（假设本地yum已配合）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="㈢-判断当前主机的内核版本"><a href="#㈢-判断当前主机的内核版本" class="headerlink" title="㈢ 判断当前主机的内核版本"></a>㈢ 判断当前主机的内核版本</h3><p><strong>需求3：</strong>判断当前内核主版本是否为2，且次版本是否大于等于6；如果都满足则输出当前内核版本</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">思路：</span><br><span class="line"><span class="number">1</span>. 先查看内核的版本号	uname <span class="literal">-r</span></span><br><span class="line"><span class="number">2</span>. 先将内核的版本号保存到一个变量里，然后再根据需求截取出该变量的一部分：主版本和次版本</span><br><span class="line"><span class="number">3</span>. 根据需求进步判断</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">kernel=`uname <span class="literal">-r</span>`</span><br><span class="line">var1=`echo <span class="variable">$kernel</span>|cut <span class="literal">-d</span>. <span class="literal">-f1</span>`</span><br><span class="line">var2=`echo <span class="variable">$kernel</span>|cut <span class="literal">-d</span>. <span class="literal">-f2</span>`</span><br><span class="line">test <span class="variable">$var1</span> <span class="operator">-eq</span> <span class="number">2</span> <span class="literal">-a</span> <span class="variable">$var2</span> <span class="operator">-ge</span> <span class="number">6</span> &amp;&amp; <span class="built_in">echo</span> <span class="variable">$kernel</span> || <span class="built_in">echo</span> <span class="string">&quot;当前内核版本不符合要求&quot;</span></span><br><span class="line">或者</span><br><span class="line">[ <span class="variable">$var1</span> -<span class="type">eq</span> <span class="number">2</span> -<span class="type">a</span> <span class="variable">$var2</span> -<span class="type">ge</span> <span class="number">6</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="variable">$kernel</span> || <span class="built_in">echo</span> <span class="string">&quot;当前内核版本不符合要求&quot;</span></span><br><span class="line">或者</span><br><span class="line">[[ <span class="variable">$var1</span> -<span class="type">eq</span> <span class="number">2</span> &amp;&amp; <span class="variable">$var2</span> -<span class="type">ge</span> <span class="number">6</span> ]] &amp;&amp; <span class="built_in">echo</span> <span class="variable">$kernel</span> || <span class="built_in">echo</span> <span class="string">&quot;当前内核版本不符合要求&quot;</span></span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">kernel=`uname <span class="literal">-r</span>`</span><br><span class="line">test <span class="variable">$</span>&#123;kernel:<span class="number">0</span>:<span class="number">1</span>&#125; <span class="operator">-eq</span> <span class="number">2</span> <span class="literal">-a</span> <span class="variable">$</span>&#123;kernel:<span class="number">2</span>:<span class="number">1</span>&#125; <span class="operator">-ge</span> <span class="number">6</span> &amp;&amp; <span class="built_in">echo</span> <span class="variable">$kernel</span> || <span class="built_in">echo</span> <span class="string">&#x27;不符合要求&#x27;</span></span><br><span class="line"></span><br><span class="line">其他命令参考：</span><br><span class="line">uname <span class="literal">-r</span>|grep ^<span class="number">2</span>.[<span class="number">6</span>-<span class="number">9</span>] || <span class="built_in">echo</span> <span class="string">&#x27;不符合要求&#x27;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>04_SHELL编程之循环语句</title>
    <url>/2021/01/04/linux/04_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<p>#本机课程目标</p>
<ul>
<li>掌握for循环语句的基本语法结构</li>
<li>掌握while和until循环语句的基本语法结构</li>
</ul>
<span id="more"></span>

<h1 id="一、-for循环语句"><a href="#一、-for循环语句" class="headerlink" title="一、==for循环语句=="></a>一、==for循环语句==</h1><p><strong>关键词：爱的魔力转圈圈</strong>:innocent:</p>
<h2 id="1-for循环语法结构"><a href="#1-for循环语法结构" class="headerlink" title="1. for循环语法结构"></a>1. for循环语法结构</h2><h3 id="㈠-列表-循环"><a href="#㈠-列表-循环" class="headerlink" title="㈠ ==列表==循环"></a>㈠ ==列表==循环</h3><blockquote>
<p>列表for循环：用于将一组命令执行**==已知的次数==**</p>
</blockquote>
<ul>
<li><strong>基本语法格式</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> &#123;list&#125;</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">          command </span><br><span class="line">          command</span><br><span class="line">          …</span><br><span class="line">     done</span><br><span class="line">或者</span><br><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> a b c</span><br><span class="line">     <span class="keyword">do</span></span><br><span class="line">         command</span><br><span class="line">         command</span><br><span class="line">     done</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>举例说明</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for var in &#123;1..10&#125;;do echo $var;done</span></span><br><span class="line"><span class="comment"># for var in 1 2 3 4 5;do echo $var;done</span></span><br><span class="line"><span class="comment"># for var in `seq 10`;do echo $var;done</span></span><br><span class="line"><span class="comment"># for var in $(seq 10);do echo $var;done</span></span><br><span class="line"><span class="comment"># for var in &#123;0..10..2&#125;;do echo $var;done</span></span><br><span class="line"><span class="comment"># for var in &#123;2..10..2&#125;;do echo $var;done</span></span><br><span class="line"><span class="comment"># for var in &#123;10..1&#125;;do echo $var;done</span></span><br><span class="line"><span class="comment"># for var in &#123;10..1..-2&#125;;do echo $var;done</span></span><br><span class="line"><span class="comment"># for var in `seq 10 -2 1`;do echo $var;done</span></span><br></pre></td></tr></table></figure>

<h3 id="㈡-不带列表循环"><a href="#㈡-不带列表循环" class="headerlink" title="㈡ 不带列表循环"></a>㈡ 不带列表循环</h3><blockquote>
<p> 不带列表的for循环执行时由<strong>用户指定参数和参数的个数</strong></p>
</blockquote>
<ul>
<li><strong>基本语法格式</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> variable</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        command </span><br><span class="line">        command</span><br><span class="line">        …</span><br><span class="line">   done</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>举例说明</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> var</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;脚本后面有<span class="variable">$</span>#个参数&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="㈢-类C风格的for循环"><a href="#㈢-类C风格的for循环" class="headerlink" title="㈢ 类C风格的for循环"></a>㈢ 类C风格的for循环</h3><ul>
<li><strong>基本语法结构</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(( expr1;expr2;expr3 ))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		command</span><br><span class="line">		command</span><br><span class="line">		…</span><br><span class="line">	done</span><br><span class="line"><span class="keyword">for</span> (( i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">	done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">expr1：定义变量并赋初值</span><br><span class="line">expr2：决定是否进行循环（条件）</span><br><span class="line">expr3：决定循环变量如何改变，决定循环什么时候退出</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>举例说明</strong></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># for ((i=1;i&lt;=5;i++));do echo $i;done</span></span><br><span class="line"><span class="comment"># for ((i=1;i&lt;=10;i+=2));do echo $i;done</span></span><br><span class="line"><span class="comment"># for ((i=2;i&lt;=10;i+=2));do echo $i;done</span></span><br></pre></td></tr></table></figure>

<h2 id="2-应用案例"><a href="#2-应用案例" class="headerlink" title="2. 应用案例"></a>2. 应用案例</h2><h3 id="㈠-脚本-计算-1-100奇数和"><a href="#㈠-脚本-计算-1-100奇数和" class="headerlink" title="㈠ 脚本==计算==1-100奇数和"></a>㈠ 脚本==计算==1-100奇数和</h3><h4 id="①-思路"><a href="#①-思路" class="headerlink" title="① 思路"></a>① 思路</h4><ol>
<li>定义一个变量来保存奇数的和   ==sum===0</li>
<li>找出1-100的奇数，保存到另一个变量里  ==i===遍历出来的奇数</li>
<li>从1-100中找出奇数后，再相加，然后将和赋值给变量  循环变量  for</li>
<li>遍历完毕后，将sum的值打印出来</li>
</ol>
<h4 id="②-落地实现（条条大路通罗马）"><a href="#②-落地实现（条条大路通罗马）" class="headerlink" title="② 落地实现（条条大路通罗马）"></a>② 落地实现（条条大路通罗马）</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment"># 计算1-100的奇数和</span></span><br><span class="line"><span class="comment"># 定义变量来保存奇数和</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#for循环遍历1-100的奇数，并且相加，把结果重新赋值给sum</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">100</span>..<span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	let sum=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"><span class="comment">#打印所有奇数的和</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和是:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法<span class="number">1</span>：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">100</span>..<span class="number">2</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	sum=<span class="variable">$</span>[<span class="variable">$i</span>+<span class="variable">$sum</span>]</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line">方法<span class="number">2</span>：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i+=<span class="number">2</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	let sum=<span class="variable">$i</span>+<span class="variable">$sum</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line">方法<span class="number">3</span>：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line">	let sum=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line">	fi</span><br><span class="line">或者</span><br><span class="line">test <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] <span class="operator">-ne</span> <span class="number">0</span> &amp;&amp; let sum=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line">方法<span class="number">4</span>：</span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">	<span class="keyword">continue</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	let sum=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line">	fi</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	test <span class="variable">$</span>[<span class="variable">$i</span>%<span class="number">2</span>] <span class="operator">-eq</span> <span class="number">0</span> &amp;&amp; <span class="keyword">continue</span> || let sum=sum+<span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-100的奇数和是:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="③-循环控制语句"><a href="#③-循环控制语句" class="headerlink" title="③ 循环控制语句"></a>③ 循环控制语句</h4><p><strong>循环体：</strong> ==do….done==之间的内容</p>
<ul>
<li>continue：继续；表示==循环体==内下面的代码不执行，重新开始下一次循环</li>
<li>break：打断；马上停止执行本次循环，执行==循环体==后面的代码</li>
<li>exit：表示直接跳出程序</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server ~]# cat for5.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">for i in &#123;1..5&#125;</span><br><span class="line">do</span><br><span class="line">	test $i -eq 2 &amp;&amp; break || touch /tmp/file$i</span><br><span class="line">done</span><br><span class="line">echo hello hahahah</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="㈡-判断所输整数是否为质数"><a href="#㈡-判断所输整数是否为质数" class="headerlink" title="㈡ 判断所输整数是否为质数"></a>㈡ 判断所输整数是否为质数</h3><p><strong>质数(素数)：</strong>==只能==被1和它本身==整除==的数叫质数。<br>2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97</p>
<h4 id="①-思路-1"><a href="#①-思路-1" class="headerlink" title="① 思路"></a>① 思路</h4><ol>
<li>让用户输入一个数，保存到一个变量里   <code>read -p &quot;请输入一个正整数:&quot; num</code></li>
<li>如果能被其他数整除就不是质数——&gt;<code>$num%$i </code>是否等于0    <code>$i=2到$num-1</code></li>
<li>如果输入的数是1或者2取模根据上面判断又不符合，所以先排除1和2</li>
<li>测试序列从2开始，输入的数是4——&gt;得出结果<code>$num</code>不能和<code>$i</code>相等，并且<code>$num</code>不能小于<code>$i</code></li>
</ol>
<h4 id="②-落地实现"><a href="#②-落地实现" class="headerlink" title="② 落地实现"></a>② 落地实现</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment">#定义变量来保存用户所输入数字</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入一个正整数字:&quot;</span> number</span><br><span class="line"></span><br><span class="line"><span class="comment">#先排除用户输入的数字1和2</span></span><br><span class="line">[ <span class="variable">$number</span> -<span class="type">eq</span> <span class="number">1</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>不是质数&quot;</span> &amp;&amp; <span class="keyword">exit</span></span><br><span class="line">[ <span class="variable">$number</span> -<span class="type">eq</span> <span class="number">2</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>是质数&quot;</span> &amp;&amp; <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#循环判断用户所输入的数字是否质数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="number">2</span> <span class="variable">$</span>[<span class="variable">$number</span>-<span class="number">1</span>]`</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	 [ <span class="variable">$</span>[<span class="variable">$number</span>%<span class="variable">$i</span>] -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>不是质数&quot;</span> &amp;&amp; <span class="keyword">exit</span></span><br><span class="line">	done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>是质数&quot;</span></span><br><span class="line"></span><br><span class="line">优化思路：没有必要全部产生<span class="number">2</span>~<span class="variable">$</span>[<span class="variable">$number</span>-<span class="number">1</span>]序列，只需要产生一半即可。</span><br><span class="line"></span><br><span class="line">更好解决办法：类C风格完美避开了生成序列的坑</span><br><span class="line"><span class="keyword">for</span> (( i=<span class="number">2</span>;i&lt;=<span class="variable">$</span>[<span class="variable">$number</span>-<span class="number">1</span>];i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        [ <span class="variable">$</span>[<span class="variable">$number</span>%<span class="variable">$i</span>] -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>不是质数&quot;</span> &amp;&amp; <span class="keyword">exit</span></span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$number</span>是质数&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="㈢-批量创建用户"><a href="#㈢-批量创建用户" class="headerlink" title="㈢ 批量创建用户"></a>㈢ 批量创建用户</h3><p><strong>需求：</strong>批量加5个新用户，以u1到u5命名，并统一加一个新组，组名为class,统一改密码为123</p>
<h4 id="①-思路-2"><a href="#①-思路-2" class="headerlink" title="① 思路"></a>① 思路</h4><ol>
<li>添加用户的命令    <code>useradd -G class</code></li>
<li>判断class组是否存在  <code>grep -w ^class /etc/group</code> 或者<code>groupadd class</code></li>
<li>根据题意，判断该脚本循环5次来添加用户  <code>for</code></li>
<li>给用户设置密码，应该放到循环体里面</li>
</ol>
<h4 id="②-落地实现-1"><a href="#②-落地实现-1" class="headerlink" title="② 落地实现"></a>② 落地实现</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment">#判断class组是否存在</span></span><br><span class="line">grep <span class="literal">-w</span> ^<span class="class"><span class="keyword">class</span> /<span class="title">etc</span>/<span class="title">group</span> &amp;&gt;/<span class="title">dev</span>/<span class="title">null</span></span></span><br><span class="line"><span class="class"><span class="title">test</span> $? -<span class="title">ne</span> 0 &amp;&amp; <span class="title">groupadd</span> <span class="title">class</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">#循环创建用户</span></span><br><span class="line"><span class="class"><span class="title">for</span> ((<span class="title">i</span>=1;<span class="title">i</span>&lt;=5;<span class="title">i</span>++))</span></span><br><span class="line"><span class="class"><span class="title">do</span></span></span><br><span class="line"><span class="class">	<span class="title">useradd</span> -<span class="title">G</span> <span class="title">class</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class">	<span class="title">echo</span> 123|<span class="title">passwd</span> --<span class="title">stdin</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class"><span class="title">done</span></span></span><br><span class="line"><span class="class">#用户创建信息保存日志文件</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">方法一：</span></span><br><span class="line"><span class="class">#!/<span class="title">bin</span>/<span class="title">bash</span></span></span><br><span class="line"><span class="class">#判断<span class="title">class</span>组是否存在</span></span><br><span class="line"><span class="class"><span class="title">grep</span> -<span class="title">w</span> <span class="title">class</span> /<span class="title">etc</span>/<span class="title">group</span> &amp;&gt;/<span class="title">dev</span>/<span class="title">null</span></span></span><br><span class="line"><span class="class">[ $? -<span class="title">ne</span> 0 ] &amp;&amp; <span class="title">groupadd</span> <span class="title">class</span></span></span><br><span class="line"><span class="class">#批量创建5个用户</span></span><br><span class="line"><span class="class"><span class="title">for</span> <span class="title">i</span> <span class="title">in</span></span> &#123;<span class="number">1</span>..<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	useradd <span class="literal">-G</span> <span class="class"><span class="keyword">class</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class">	<span class="title">echo</span> 123|<span class="title">passwd</span> --<span class="title">stdin</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class"><span class="title">done</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">方法二：</span></span><br><span class="line"><span class="class">#!/<span class="title">bin</span>/<span class="title">bash</span></span></span><br><span class="line"><span class="class">#判断<span class="title">class</span>组是否存在</span></span><br><span class="line"><span class="class"><span class="title">cut</span> -<span class="title">d</span>: -<span class="title">f1</span> /<span class="title">etc</span>/<span class="title">group</span>|<span class="title">grep</span> -<span class="title">w</span> <span class="title">class</span> &amp;&gt;/<span class="title">dev</span>/<span class="title">null</span></span></span><br><span class="line"><span class="class">[ $? -<span class="title">ne</span> 0 ] &amp;&amp; <span class="title">groupadd</span> <span class="title">class</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">#循环增加用户，循环次数5次，<span class="title">for</span>循环,给用户设定密码</span></span><br><span class="line"><span class="class"><span class="title">for</span> ((<span class="title">i</span>=1;<span class="title">i</span>&lt;=5;<span class="title">i</span>++))</span></span><br><span class="line"><span class="class"><span class="title">do</span></span></span><br><span class="line"><span class="class">	<span class="title">useradd</span> <span class="title">u</span>$<span class="title">i</span> -<span class="title">G</span> <span class="title">class</span></span></span><br><span class="line"><span class="class">	<span class="title">echo</span> 123|<span class="title">passwd</span> --<span class="title">stdin</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class"><span class="title">done</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">方法三：</span></span><br><span class="line"><span class="class">#!/<span class="title">bin</span>/<span class="title">bash</span></span></span><br><span class="line"><span class="class"><span class="title">grep</span> -<span class="title">w</span> <span class="title">class</span> /<span class="title">etc</span>/<span class="title">group</span> &amp;&gt;/<span class="title">dev</span>/<span class="title">null</span></span></span><br><span class="line"><span class="class"><span class="title">test</span> $? -<span class="title">ne</span> 0 &amp;&amp; <span class="title">groupadd</span> <span class="title">class</span></span></span><br><span class="line"><span class="class">或者</span></span><br><span class="line"><span class="class"><span class="title">groupadd</span> <span class="title">class</span> &amp;&gt;/<span class="title">dev</span>/<span class="title">null</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">for</span> ((<span class="title">i</span>=1;<span class="title">i</span>&lt;=5;<span class="title">i</span>++))</span></span><br><span class="line"><span class="class"><span class="title">do</span></span></span><br><span class="line"><span class="class"><span class="title">useradd</span> -<span class="title">G</span> <span class="title">class</span> <span class="title">u</span>$<span class="title">i</span> &amp;&amp; <span class="title">echo</span> 123|<span class="title">passwd</span> --<span class="title">stdin</span> <span class="title">u</span>$<span class="title">i</span></span></span><br><span class="line"><span class="class"><span class="title">done</span></span></span><br><span class="line"><span class="class"></span></span><br></pre></td></tr></table></figure>

<h2 id="3-课堂练习"><a href="#3-课堂练习" class="headerlink" title="3. 课堂练习"></a>3. 课堂练习</h2><h3 id="㈠-批量创建用户"><a href="#㈠-批量创建用户" class="headerlink" title="㈠ 批量创建用户"></a>㈠ 批量创建用户</h3><p>**需求1:**批量新建5个用户stu1~stu5，要求这几个用户的家目录都在/rhome.</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#判断/rhome是否存在</span></span><br><span class="line">[ -<span class="type">f</span> /<span class="type">rhome</span> ] &amp;&amp; <span class="built_in">mv</span> /rhome /rhome.bak</span><br><span class="line">test ! <span class="literal">-d</span> /rhome &amp;&amp; mkdir /rhome</span><br><span class="line">或者</span><br><span class="line">[ -<span class="type">f</span> /<span class="type">rhome</span> ] &amp;&amp; <span class="built_in">mv</span> /rhome /rhome.bak || [ ! -<span class="type">d</span> /<span class="type">rhome</span> ] &amp;&amp; mkdir /rhome </span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户，循环5次</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	useradd <span class="literal">-d</span> /rhome/stu<span class="variable">$i</span> stu<span class="variable">$i</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="number">123</span>|passwd -<span class="literal">-stdin</span> stu<span class="variable">$i</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h3 id="㈡-局域网内脚本检查主机网络通讯"><a href="#㈡-局域网内脚本检查主机网络通讯" class="headerlink" title="㈡ 局域网内脚本检查主机网络通讯"></a>㈡ 局域网内脚本检查主机网络通讯</h3><p><strong>需求2：</strong></p>
<p>写一个脚本，局域网内，把能ping通的IP和不能ping通的IP分类，并保存到两个文本文件里</p>
<p>以10.1.1.1~10.1.1.10为例</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span>~<span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">ip=<span class="number">10.1</span>.<span class="number">1</span></span><br><span class="line"><span class="comment">#循环去ping主机的IP</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	ping <span class="literal">-c1</span> <span class="variable">$ip</span>.<span class="variable">$i</span> &amp;&gt;/dev/null</span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is ok&quot;</span> &gt;&gt; /tmp/ip_up.txt</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is down&quot;</span> &gt;&gt; /tmp/ip_down.txt</span><br><span class="line">	fi</span><br><span class="line">	或者</span><br><span class="line">	[ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is ok&quot;</span> &gt;&gt; /tmp/ip_up.txt || <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is down&quot;</span> &gt;&gt; /tmp/ip_down.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell03</span>]<span class="comment"># time ./ping.sh         </span></span><br><span class="line"></span><br><span class="line">real    <span class="number">0</span>m24.<span class="number">129</span>s</span><br><span class="line">user    <span class="number">0</span>m0.<span class="number">006</span>s</span><br><span class="line">sys     <span class="number">0</span>m0.<span class="number">005</span>s</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>延伸扩展：shell脚本并发</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">并行执行：</span><br><span class="line">&#123;程序&#125;&amp;表示将程序放到后台并行执行，如果需要等待程序执行完毕再进行下面内容，需要加wait</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">ip=<span class="number">10.1</span>.<span class="number">1</span></span><br><span class="line"><span class="comment">#循环去ping主机的IP</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">        ping <span class="literal">-c1</span> <span class="variable">$ip</span>.<span class="variable">$i</span> &amp;&gt;/dev/null</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is ok&quot;</span> &gt;&gt; /tmp/ip_up.txt</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>.<span class="variable">$i</span> is down&quot;</span> &gt;&gt; /tmp/ip_down.txt</span><br><span class="line">        fi</span><br><span class="line">&#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;ip is ok....&quot;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># time ./ping.sh </span></span><br><span class="line">ip is ok...</span><br><span class="line"></span><br><span class="line">real    <span class="number">0</span>m3.<span class="number">091</span>s</span><br><span class="line">user    <span class="number">0</span>m0.<span class="number">001</span>s</span><br><span class="line">sys     <span class="number">0</span>m0.<span class="number">008</span>s</span><br></pre></td></tr></table></figure>

<h3 id="㈢-判断闰年"><a href="#㈢-判断闰年" class="headerlink" title="㈢ 判断闰年"></a>㈢ 判断闰年</h3><p><strong>需求3：</strong></p>
<p>输入一个年份，判断是否是润年（能被4整除但不能被100整除，或能被400整除的年份即为闰年）</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;Please input year:(2017)&quot;</span> year</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>[<span class="variable">$year</span>%<span class="number">4</span>] -<span class="type">eq</span> <span class="number">0</span> -<span class="type">a</span> <span class="variable">$</span>[<span class="variable">$year</span>%<span class="number">100</span>] -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$year</span> is leap year&quot;</span></span><br><span class="line">elif [ <span class="variable">$</span>[<span class="variable">$year</span>%<span class="number">400</span>] -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$year</span> is leap year&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$year</span> is not leap year&quot;</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<p>##4. 总结</p>
<ul>
<li>FOR循环语法结构</li>
<li>FOR循环可以结合==条件判断和流程控制语句==<ul>
<li>do ……done  循环体</li>
<li>循环体里可以是命令集合，再加上条件判断以及流程控制</li>
</ul>
</li>
<li>控制循环语句<ul>
<li>continue  继续，跳过本次循环，继续下一次循环</li>
<li>break       打断，跳出循环，==执行==循环体外的代码</li>
<li>exit          退出，直接退出程序</li>
</ul>
</li>
</ul>
<p>#二、**==while循环语句==**</p>
<p><strong>特点：</strong>==条件为真就进入循环；条件为假就退出循环==</p>
<p>##1. while循环语法结构</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> 表达式</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		command...</span><br><span class="line">	done</span><br><span class="line">	</span><br><span class="line"><span class="keyword">while</span>  [ <span class="number">1</span> -<span class="type">eq</span> <span class="number">1</span> ] 或者 (( <span class="number">1</span> &gt; <span class="number">2</span> ))</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">     command</span><br><span class="line">     command</span><br><span class="line">     ...</span><br><span class="line"> done</span><br></pre></td></tr></table></figure>

<p><strong>循环打印1-5数字</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FOR</span>循环打印：</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>循环打印：</span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">5</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">	let i++</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h2 id="2-应用案例-1"><a href="#2-应用案例-1" class="headerlink" title="2. 应用案例"></a>2. 应用案例</h2><h3 id="㈠-脚本计算1-50偶数和"><a href="#㈠-脚本计算1-50偶数和" class="headerlink" title="㈠ 脚本计算1-50偶数和"></a>㈠ 脚本计算1-50偶数和</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">0</span>;i&lt;=<span class="number">50</span>;i+=<span class="number">2</span>))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	let sum=<span class="variable">$sum</span>+<span class="variable">$i</span>  (let sum=sum+i)</span><br><span class="line">done</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-50的偶数和为:<span class="variable">$sum</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line">i=<span class="number">2</span></span><br><span class="line"><span class="comment">#循环打印1-50的偶数和并且计算后重新赋值给sum</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">50</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	let sum=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line">	let i+=<span class="number">2</span>  或者 <span class="variable">$</span>[<span class="variable">$i</span>+<span class="number">2</span>]</span><br><span class="line">done</span><br><span class="line"><span class="comment">#打印sum的值</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1-50的偶数和为:<span class="variable">$sum</span>&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="㈡-脚本同步系统时间"><a href="#㈡-脚本同步系统时间" class="headerlink" title="㈡ 脚本同步系统时间"></a>㈡ 脚本同步系统时间</h3><h4 id="①-具体需求"><a href="#①-具体需求" class="headerlink" title="① 具体需求"></a>① 具体需求</h4><ol>
<li>写一个脚本，==30秒==同步一次系统时间，时间同步服务器10.1.1.1</li>
<li>如果同步失败，则进行邮件报警,每次失败都报警</li>
<li>如果同步成功,也进行邮件通知,但是==成功100次==才通知一次</li>
</ol>
<h4 id="②-思路"><a href="#②-思路" class="headerlink" title="② 思路"></a>② 思路</h4><ol>
<li><p>每隔30s同步一次时间，该脚本是一个死循环   while 循环</p>
</li>
<li><p>同步失败发送邮件   1) ntpdate 10.1.1.1  2) rdate -s 10.1.1.1</p>
</li>
<li><p>同步成功100次发送邮件   定义变量保存成功次数 </p>
</li>
</ol>
<h4 id="③-落地实现"><a href="#③-落地实现" class="headerlink" title="③ 落地实现"></a>③ 落地实现</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment"># 该脚本用于时间同步</span></span><br><span class="line">NTP=<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	ntpdate <span class="variable">$NTP</span> &amp;&gt;/dev/null</span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;system date failed&quot;</span> |mail <span class="literal">-s</span> <span class="string">&quot;check system date&quot;</span>  root@localhost</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		let count++</span><br><span class="line">		<span class="keyword">if</span> [ <span class="variable">$count</span> -<span class="type">eq</span> <span class="number">100</span> ];then</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;systemc date success&quot;</span> |mail <span class="literal">-s</span> <span class="string">&quot;check system date&quot;</span>  root@localhost &amp;&amp; count=<span class="number">0</span></span><br><span class="line">		fi</span><br><span class="line">	fi</span><br><span class="line"><span class="built_in">sleep</span> <span class="number">30</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line">ntp_server=<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	rdate <span class="literal">-s</span> <span class="variable">$ntp</span><span class="literal">-server</span> &amp;&gt;/dev/null</span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;system date failed&quot;</span> |mail <span class="literal">-s</span> <span class="string">&#x27;check system date&#x27;</span>  root@localhost	</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		let count++</span><br><span class="line">		<span class="keyword">if</span> [ <span class="variable">$</span>[<span class="variable">$count</span>%<span class="number">100</span>] -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">		<span class="built_in">echo</span> <span class="string">&quot;system date successfull&quot;</span> |mail <span class="literal">-s</span> <span class="string">&#x27;check system date&#x27;</span>  root@localhost &amp;&amp; count=<span class="number">0</span></span><br><span class="line">		fi</span><br><span class="line">	fi</span><br><span class="line"><span class="built_in">sleep</span> <span class="number">3</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">以上脚本还有更多的写法，课后自己完成</span><br></pre></td></tr></table></figure>

<p>#三、until循环</p>
<p><strong>特点</strong>：==条件为假就进入循环；条件为真就退出循环==</p>
<h2 id="1-until语法结构"><a href="#1-until语法结构" class="headerlink" title="1. until语法结构"></a>1. until语法结构</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">until expression   [ 1 -eq 1 ]  (( 1 &gt;= 1 ))</span><br><span class="line">	do</span><br><span class="line">		command</span><br><span class="line">		command</span><br><span class="line">		...</span><br><span class="line">	done</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>打印1-5数字</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">5</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">	let i++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">until</span> [ <span class="variable">$i</span> -<span class="type">gt</span> <span class="number">5</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">	let i++</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h2 id="2-应用案例-2"><a href="#2-应用案例-2" class="headerlink" title="2. 应用案例"></a>2. 应用案例</h2><p>###㈠ 具体需求</p>
<ol>
<li>使用until语句批量创建10个用户，要求stu1—stu5用户的UID分别为1001—1005；</li>
<li>stu6~stu10用户的家目录分别在/rhome/stu6—/rhome/stu10</li>
</ol>
<h3 id="㈡-思路"><a href="#㈡-思路" class="headerlink" title="㈡ 思路"></a>㈡ 思路</h3><ol>
<li>创建用户语句  <code>useradd -u|useradd -d</code></li>
<li>使用循环语句(until)批量创建用户  <code>until循环语句结构</code></li>
<li>判断用户前5个和后5个  <code>条件判断语句</code></li>
</ol>
<h3 id="㈢-落地实现"><a href="#㈢-落地实现" class="headerlink" title="㈢ 落地实现"></a>㈢ 落地实现</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#！/bin/env bash</span></span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">d</span> /<span class="type">rhome</span> ];then</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;/rhome目录已存在&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    mkdir /rhome</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;/rhome不存在，已完成创建&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">until</span> [ <span class="variable">$i</span> -<span class="type">gt</span> <span class="number">10</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">5</span> ];then</span><br><span class="line">                useradd <span class="literal">-u</span> <span class="variable">$</span>[<span class="number">1000</span>+<span class="variable">$i</span>] stu<span class="variable">$i</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="number">123</span>|passwd -<span class="literal">-stdin</span> stu<span class="variable">$i</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                useradd <span class="literal">-d</span> /rhome/stu<span class="variable">$i</span> stu<span class="variable">$i</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="number">123</span>|passwd -<span class="literal">-stdin</span> stu<span class="variable">$i</span></span><br><span class="line">        fi</span><br><span class="line">let i++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">==================================================</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">until</span> [ <span class="variable">$i</span> -<span class="type">gt</span> <span class="number">10</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">5</span> ];then</span><br><span class="line">		useradd <span class="literal">-u</span> <span class="variable">$</span>[<span class="number">1000</span>+<span class="variable">$i</span>] stu<span class="variable">$i</span> &amp;&amp; <span class="built_in">echo</span> <span class="number">123</span>|passwd -<span class="literal">-stdin</span> stu<span class="variable">$i</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		[ ! -<span class="type">d</span> /<span class="type">rhome</span> ] &amp;&amp; mkdir /rhome</span><br><span class="line">		useradd <span class="literal">-d</span> /rhome/stu<span class="variable">$i</span> stu<span class="variable">$i</span> &amp;&amp; <span class="built_in">echo</span> <span class="number">123</span>|passwd -<span class="literal">-stdin</span> stu<span class="variable">$i</span>		</span><br><span class="line">	fi</span><br><span class="line">let i++</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h1 id="四、课后作业"><a href="#四、课后作业" class="headerlink" title="四、课后作业"></a>四、课后作业</h1><ol>
<li>判断/tmp/run目录是否存在，如果不存在就建立，如果存在就删除目录里所有文件</li>
<li> 输入一个路径，判断路径是否存在，而且输出是文件还是目录，如果是链接文件，还得输出是  有效的连接还是无效的连接 </li>
<li>交互模式要求输入一个ip，然后脚本判断这个IP 对应的主机是否 能ping 通，输出结果类似于：<br>Server  10.1.1.20 is Down! 最后要求把结果邮件到本地管理员root@localhost mail01@localhost</li>
<li>写一个脚本/home/program，要求当给脚本输入参数hello时，脚本返回world,给脚本输入参数world时，脚本返回hello。而脚本没有参数或者参数错误时，屏幕上输出“usage:/home/program hello or world”</li>
<li>写一个脚本自动搭建nfs服务</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>git</title>
    <url>/2021/02/09/linux/git/</url>
    <content><![CDATA[<h1 id="git简介"><a href="#git简介" class="headerlink" title="git简介"></a>git简介</h1><h2 id="git是什么"><a href="#git是什么" class="headerlink" title="git是什么"></a>git是什么</h2><p>​    Git是目前世界上最先进的分布式版本控制系统（没有之一）。</p>
<p>什么是分布式版本控制系统？</p>
<p>​    分布式的版本控制就是每个人都可以创建一个独立的代码仓库用于管理，各种版本控制的操作都可以在本地完成。每个人修改的代码都可以推送合并到另外一个代码仓库中。</p>
<span id="more"></span>

<h2 id="git-命令操作"><a href="#git-命令操作" class="headerlink" title="git 命令操作"></a>git 命令操作</h2><ol>
<li><p>本地库初始化</p>
<p>​    git init ：初始化一个本地仓库</p>
</li>
<li><p>设置签名</p>
<p><strong>形式</strong>：</p>
<p>​    <em>用户名</em>：wanzengming</p>
<p>​    <em>Email地址</em>：<a href="mailto:&#x77;&#97;&#x6e;&#103;&#122;&#x65;&#x6e;&#103;&#x6d;&#105;&#x6e;&#103;&#64;&#x6e;&#x61;&#x6d;&#x65;&#x2e;&#99;&#x6f;&#x6d;">&#x77;&#97;&#x6e;&#103;&#122;&#x65;&#x6e;&#103;&#x6d;&#105;&#x6e;&#103;&#64;&#x6e;&#x61;&#x6d;&#x65;&#x2e;&#99;&#x6f;&#x6d;</a></p>
<p>​    <em>作用</em>：区分不同开发人员身份</p>
<p> <strong>命令</strong>：</p>
<p>​    <em>项目级别</em> ：仅在当前本地库范围内有效</p>
<pre><code>git config user.name wangzengming
git config user.email wangzengming@name.com
</code></pre>
<p>​        <em>信息保存位置</em>：./git/config中</p>
<p><em>系统用户级别</em>：登录当前操作系统的用户范围</p>
<pre><code>git config  --global user.name wangzengming
git config  --global user.email wangzengming@name.com
</code></pre>
<p>​        <em>信息保存位置</em>：~/.gitconfig中</p>
<p>​    优先级：就近原则</p>
</li>
</ol>
<p>git status ：查看git状态</p>
<p>git add ：暂存区–&gt;工作区</p>
<p>git commit  ：暂存区–&gt;本地库</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建V2ray VPN</title>
    <url>/2020/04/05/linux/%E6%90%AD%E5%BB%BAV2ray%20VPN/</url>
    <content><![CDATA[<p>V2Ray是一个优秀的开源网络代理工具，可以帮助你畅爽体验互联网，目前已经全平台支持Windows、Mac、Android、IOS、Linux等操作系统的使用。相对起Shadowsocks来说属于后起之秀，在混淆能力、兼容性、速度上有着独到的优点。</p>
<span id="more"></span>

<h3 id="1-服务器安装"><a href="#1-服务器安装" class="headerlink" title="1.服务器安装"></a>1.服务器安装</h3><p>连接远程服务器</p>
<p>进入root账户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure>

<p>运行脚本,进行安装便可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@wzm-pc ~]# bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br><span class="line">........... V2Ray 一键安装脚本 &amp; 管理脚本 by 233v2.com ..........</span><br><span class="line">帮助说明: https://233v2.com/post/1/</span><br><span class="line">搭建教程: https://233v2.com/post/2/</span><br><span class="line"></span><br><span class="line"> 1. 安装</span><br><span class="line"> 2. 卸载</span><br><span class="line"></span><br><span class="line">请选择 [1-2]:</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>快速管理命令：<br><code>v2ray info</code> 查看 V2Ray 配置信息</p>
<p><code>v2ray config</code> 修改 V2Ray 配置</p>
<p><code>v2ray link</code> 生成 V2Ray 配置文件链接</p>
<p><code>v2ray infolink</code> 生成 V2Ray 配置信息链接</p>
<p><code>v2ray qr</code> 生成 V2Ray 配置二维码链接</p>
<p><code>v2ray ss</code> 修改 Shadowsocks 配置</p>
<p><code>v2ray ssinfo</code> 查看 Shadowsocks 配置信息</p>
<p><code>v2ray ssqr</code> 生成 Shadowsocks 配置二维码链接</p>
<p><code>v2ray status</code> 查看 V2Ray 运行状态</p>
<p><code>v2ray start</code> 启动 V2Ray</p>
<p><code>v2ray stop</code> 停止 V2Ray</p>
<p><code>v2ray restart</code> 重启 V2Ray</p>
<p><code>v2ray log</code> 查看 V2Ray 运行日志</p>
<p><code>v2ray update</code> 更新 V2Ray</p>
<p><code>v2ray update.sh</code> 更新 V2Ray 管理脚本</p>
<p><code>v2ray uninstall</code> 卸载 V2Ray</p>
<h3 id="2-客户端配置"><a href="#2-客户端配置" class="headerlink" title="2. 客户端配置"></a>2. 客户端配置</h3><p><strong>V2RayW Win</strong><br><a href="https://mianao.info/go/aHR0cHM6Ly9naXRodWIuY29tL0Nlbm1yZXYvVjJSYXlX">下载：https://github.com/Cenmrev/V2RayW</a></p>
<p><strong>V2RayN Win</strong><br><a href="https://mianao.info/go/aHR0cHM6Ly9naXRodWIuY29tLzJkdXN0L3YycmF5Tg">下载：https://github.com/2dust/v2rayN</a></p>
<p><strong>V2RayX MAC</strong><br><a href="https://mianao.info/go/aHR0cHM6Ly9naXRodWIuY29tL0Nlbm1yZXYvVjJSYXlY">下载：https://github.com/Cenmrev/V2RayX</a></p>
<p>考虑到部分电脑软件只支持http协议，本地监测的端口有socks和http这俩。</p>
<ul>
<li>127.0.1.1+1081是socks。</li>
<li>127.0.2.1+1082是http。</li>
</ul>
<p>使用方法：</p>
<p>手机配置更简单，我用的 v2rayNG 直接扫描生成的二维码就好了。</p>
<p>一般协议的安装配置到此就结束了，可以直接去使用了。</p>
<h3 id="3-使用-Cloudflare-中转-V2Ray-WebSocket-的流量"><a href="#3-使用-Cloudflare-中转-V2Ray-WebSocket-的流量" class="headerlink" title="3.使用 Cloudflare 中转 V2Ray WebSocket 的流量"></a>3.使用 Cloudflare 中转 V2Ray WebSocket 的流量</h3><p>首先你得有域名，免费的可以到这里申请 <a href="https://mianao.info/go/aHR0cDovL3d3dy5mcmVlbm9tLmNvbS96aC9pbmRleC5odG1s">http://www.freenom.com/zh/index.html</a> 会更改DNS，设置A记录就好了</p>
<p>安装时传输协议选择 WebSocket (即选择 3 )，V2Ray 端口选择 80，其他就默认。等待安装完成之后生成二维码或者配置参数。</p>
<p>输入 v2ray status 看看 V2Ray 有没有在运行，如果没有，使用 netstat -lp 看看是什么程序占用了 80 / http ，解决占用程序，然后使用 v2ray start 启动 V2Ray。</p>
<p>在 Cloudflare 注册登录加入域名解析，Crypto 那里设置 SSL 为 Flexible，DNS 那里添加一个 A 记录指向服务器 IP ，Status 那里的图标务必为橙色状态，即是 DNS and HTTP proxy(CDN)。</p>
<p>V2Ray 配置信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">地址 (Address) = 域名</span><br><span class="line">端口 (Port) = 443</span><br><span class="line">用户ID (User ID) = 用户ID</span><br><span class="line">额外ID (Alter Id) = 233</span><br><span class="line">传输协议 (Network) = ws (WebSocket)</span><br><span class="line">伪装类型 (header type) = none</span><br><span class="line">TLS = 打开</span><br></pre></td></tr></table></figure>

<p>Linux</p>
<p>Copy</p>
<p><strong>备注：</strong><br>\1. 以上使用 Cloudflare 中转 V2Ray 的 WebSocket 流量，由于 Cloudflare 实现了 TLS ，所以 V2Ray 配置信息请以上面的内容为准。<br>这种方式比较简单的利用了 Cloudflare 的 TLS，服务器和客户端两端的配置也相对很简单，而且，可以用多个域名来指向一个服务器，那就不怕封了。<br>\2. 在服务器端也可以实现 TLS。先在 DNS 那里修改之前添加的 IP 记录，将 Status 那里的图标点一下让它变成灰色状态，即是 DNS only. 然后在 Crypto 那里设置 SSL 为 Full。<br>如果当前 V2Ray 端口为 80，输入 v2ray config 回车，选择修改端口即可，修改的端口随便输入，只要不是 80 或者 443 即可。<br>再次输入 v2ray config 回车，选择修改传输协议，选择 WebSocket + TLS ，即是选择 4。按提示输入域名，域名解析 Y ，自动配置 TLS 也是 Y ，后面还会安装 Caddy 按回车继续，等待配置自动完成，生成配置二维码。<br>等配置完成后，Cloudflare 的 DNS，将 Status 那里的图标点一下让它变成橙色状态，即是 DNS and HTTP proxy(CDN)。<br>这样全部实现 TLS 配置就结束了，可以打开客户端试试。这种方式是两端都是 TLS ，但域名只能绑定一个。<br>如有问题可以先用命令: <code>systemctl status caddy</code> 或者 <code>service caddy status</code>，检查一下 Caddy 的运行状态。</p>
<p><strong>以上两种方法各有优缺点，我选择的是第一种。</strong><br>\3. 这两种方法因为都是在 cloudflare 解析，所以不同地区速度不一样，像我用的美国 vps，最高下载速度也就 1.5M 左右。可以根据自己的情况更换 dns 商家。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>新linux配置</title>
    <url>/2020/04/05/linux/%E6%96%B0linux%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="进入root权限下"><a href="#进入root权限下" class="headerlink" title="进入root权限下"></a>进入root权限下</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo -i</span><br></pre></td></tr></table></figure>



<h1 id="更换yum源"><a href="#更换yum源" class="headerlink" title="更换yum源"></a>更换yum源</h1><span id="more"></span>

<ol>
<li><p>wget工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y wget</span><br></pre></td></tr></table></figure></li>
<li><p>进入yum源配置文件所在文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /etc/yum.repos.d/</span><br></pre></td></tr></table></figure></li>
<li><p>备份本地yum源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv CentOS-Base.repo CentOS-Base.repo_bak</span><br></pre></td></tr></table></figure></li>
<li><p>获取国内yum源（阿里、163二选一）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">or</span><br><span class="line">wget -O CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br></pre></td></tr></table></figure></li>
<li><p>或 centos8使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-8.repo</span><br></pre></td></tr></table></figure></li>
<li><p>清理yum缓存 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure></li>
<li><p>重建缓存 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum makecache </span><br></pre></td></tr></table></figure></li>
<li><p>更新</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y update </span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="修改克隆虚拟机的静态IP"><a href="#修改克隆虚拟机的静态IP" class="headerlink" title="修改克隆虚拟机的静态IP"></a>修改克隆虚拟机的静态IP</h1><p>修改虚拟机的静态IP</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[wzm@hadoop101 opt]$ ifconfig</span><br><span class="line">[wzm@hadoop101 opt]$vim /etc/sysconfig/network-scripts/ifcfg-ens33</span><br><span class="line">[wzm@hadoop101 opt]$</span><br><span class="line"></span><br><span class="line">BOOTPROTO=&quot;static&quot; # 使用静态IP地址，默认为dhcp </span><br><span class="line">IPADDR=&quot;19.37.33.66&quot; # 设置的静态IP地址</span><br><span class="line">NETMASK=&quot;255.255.255.0&quot; # 子网掩码 </span><br><span class="line">GATEWAY=&quot;19.37.33.1&quot; # 网关地址 </span><br><span class="line">DNS1=&quot;192.168.241.2&quot; # DNS服务器（此设置没有用到，所以我的里面没有添加）</span><br><span class="line">ONBOOT=yes  #设置网卡启动方式为 开机启动 </span><br><span class="line"></span><br><span class="line">[wzm@hadoop101 opt]$systemctl start network</span><br><span class="line">[wzm@hadoop101 opt]$ service network restart；</span><br></pre></td></tr></table></figure>

<h1 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//永久性的修改主机名称，重启后能保持修改后的。</span><br><span class="line">hostnamectl set-hostname xxx    </span><br><span class="line"></span><br><span class="line">//删除hostname</span><br><span class="line">hostnamectl set-hostname &quot;&quot;</span><br><span class="line">hostnamectl set-hostname &quot;&quot; --static</span><br><span class="line">hostnamectl set-hostname &quot;&quot; --pretty</span><br></pre></td></tr></table></figure>

<h1 id="手动更新-etc-host"><a href="#手动更新-etc-host" class="headerlink" title="手动更新/etc/host"></a>手动更新/etc/host</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line">127.0.0.1  qqmm</span><br><span class="line">::1        qqmm</span><br></pre></td></tr></table></figure>

<h1 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld.service            #停止firewall</span><br><span class="line">systemctl disable firewalld.service        #禁止firewall开机启动</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line"><span class="meta">#</span><span class="bash"> 命令含义</span></span><br><span class="line">--zone #作用域</span><br><span class="line">--add-port=80/tcp #添加端口，格式为：端口/通讯协议</span><br><span class="line">--permanent #永久生效，没有此参数重启后失效</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">　重启防火墙</span></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">　其他常用命令：</span></span><br><span class="line">firewall-cmd --state               ##查看防火墙状态，是否是running</span><br><span class="line">firewall-cmd --reload  ##重新载入配置，比如添加规则之后，需要执行此命令</span><br><span class="line">firewall-cmd --get-zones                      ##列出支持的zone</span><br><span class="line">firewall-cmd --get-services  ##列出支持的服务，在列表中的服务是放行的</span><br><span class="line">firewall-cmd --query-service ftp   ##查看ftp服务是否支持，返回yes或者no</span><br><span class="line">firewall-cmd --add-service=ftp      ##临时开放ftp服务</span><br><span class="line">firewall-cmd --add-service=ftp --permanent    ##永久开放ftp服务</span><br><span class="line">firewall-cmd --remove-service=ftp --permanent  ##永久移除ftp服务</span><br><span class="line">firewall-cmd --add-port=80/tcp --permanent    ##永久添加80端口 </span><br><span class="line">iptables -L -n           ##查看规则，这个命令是和iptables的相同的</span><br><span class="line">man firewall-cmd                              ##查看帮助</span><br></pre></td></tr></table></figure>

<h1 id="创建与配置-用户"><a href="#创建与配置-用户" class="headerlink" title="创建与配置 用户"></a>创建与配置 用户</h1><p>创建用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">1.新建用户</span> </span><br><span class="line">adduser testuser //新建testuser 用户 </span><br><span class="line">passwd testuser //给testuser 用户设置密码</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">2.建工作组</span> </span><br><span class="line">groupadd testgroup //新建test工作组</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">3.新建用户同时增加工作组</span> </span><br><span class="line">useradd -g testgroup testuser //新建testuser用户并增加到testgroup工作组</span><br><span class="line"><span class="meta">#</span><span class="bash"> 注：：-g 所属组 -d 家目录 -s 所用的SHELL</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">4.给已有的用户增加工作组</span></span><br><span class="line">usermod -G groupname username</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">5.临时关闭 在/etc/shadow文件中属于该用户的行的第二个字段（密码）前面加上就可以了。想恢复该用户，去掉即可 ，或者使用如下命令关闭用户账号：</span>  </span><br><span class="line">passwd testuser –l  //重新释放：  passwd testuser –u</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">6.永久性删除用户账号</span></span><br><span class="line">usermod –r testuser //（强制删除该用户的主目录和主目录下的所有文件和子目录）</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">7.显示用户信息</span></span><br><span class="line">id user </span><br><span class="line">cat /etc/passwd | grep user</span><br><span class="line">补充:查看用户和用户组的方法 </span><br><span class="line">用户列表文件：/etc/passwd </span><br><span class="line">用户组列表文件：/etc/group </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看系统中有哪些用户：</span></span><br><span class="line">cut -d : -f 1 /etc/passwd </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看可以登录系统的用户：</span></span><br><span class="line">cat /etc/passwd | grep -v /sbin/nologin | cut -d : -f 1 </span><br><span class="line">查看用户操作：w命令(需要root权限) </span><br><span class="line">查看某一用户：w 用户名 </span><br><span class="line">查看登录用户：who  &lt;br&gt;查看用户登录历史记录：last</span><br></pre></td></tr></table></figure>

<p>配置 用户具有root权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.将sudoers文件的权限修改成可编辑</span></span><br><span class="line">chmod -v u+w /etc/sudoers</span><br><span class="line">chown     username        file|dir    ##更改文件的所有人</span><br><span class="line">chgrp     groupname    file|dir    ##更改所有组</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">2.使用vim编辑sudoers文件</span></span><br><span class="line">vim /etc/sudoers</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">3.在sudoes文件中添加如下的内容</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 找到root       ALL=(ALL)           ALL</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 然后添加temp_user     ALL=(ALL)       ALL</span></span><br><span class="line"></span><br><span class="line">root       ALL=(ALL)           ALL</span><br><span class="line">summer     ALL=(ALL)       ALL</span><br><span class="line"><span class="meta">#</span><span class="bash"> 如需新用户使用sudo时不用输密码，把最后一个ALL改为NOPASSWD:ALL即可。</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">4.将sudoers文件的权限修改成不可编辑</span></span><br><span class="line">chmod -v u-w /etc/sudoers</span><br></pre></td></tr></table></figure>

<h1 id="配置文件安装目录"><a href="#配置文件安装目录" class="headerlink" title="配置文件安装目录"></a>配置文件安装目录</h1><p>养成良好的目录安装习惯,方便日后管理软件</p>
<p>（1）在/opt目录下创建module、software文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[wzm@hadoop101 opt]$ sudo mkdir module</span><br><span class="line">[wzm@hadoop101 opt]$ sudo mkdir software</span><br></pre></td></tr></table></figure>

<p>（2）修改module、software文件夹的所有者cd</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[wzm@hadoop101 opt]$ sudo chown wzm:wzm module/ software/</span><br><span class="line">[wzm@hadoop101 opt]$ ll</span><br><span class="line">总用量 8</span><br><span class="line">drwxr-xr-x. 2 wzm wzm 4096 1月  17 14:37 module</span><br><span class="line">drwxr-xr-x. 2 wzm wzm 4096 1月  17 14:38 software</span><br></pre></td></tr></table></figure>

<h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><p>前往官网<code>https://github.com/git/git/releases</code>下载tar.gz压缩包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/git/git/archive/v2.30.1.tar.gz</span><br></pre></td></tr></table></figure>

<p>解压包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -xzvf v2.30.1.tar.gz</span><br></pre></td></tr></table></figure>

<p>进入文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd git-2.30.1</span><br></pre></td></tr></table></figure>

<p>安装编译所需依赖</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure>

<p>提示，安装编译源码所需依赖的时候，yum自动帮你安装了git，这时候你需要先卸载这个旧版的git。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum -y remove git</span><br></pre></td></tr></table></figure>

<p>编译git源码</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">make prefix=/usr/local/git all</span><br></pre></td></tr></table></figure>

<p> 安装git至<code>/usr/local/git</code>路径</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">make prefix=/usr/local/git install</span><br></pre></td></tr></table></figure>

<p> 配置环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/profile </span><br></pre></td></tr></table></figure>

<p> 在底部加上</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export PATH=$PATH:/usr/local/git/bin</span><br></pre></td></tr></table></figure>

<p>( 输入 :wq! 保存修改)</p>
<p>10、刷新环境变量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>

<p>11、查看Git是否安装完成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>

<p>至此，从github上下载最新的源码编译后安装git完成。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title>01_SHELL编程前奏_小工具</title>
    <url>/2021/01/01/linux/01_SHELL%E7%BC%96%E7%A8%8B%E5%89%8D%E5%A5%8F_%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="本节课程目标"><a href="#本节课程目标" class="headerlink" title="本节课程目标"></a>本节课程目标</h1><ul>
<li>了解shell中的通配符</li>
<li>熟悉grep、cut、sort等小工具和shell中的通配符的使用</li>
</ul>
<p>#一、文本处理工具</p>
<span id="more"></span>

<h2 id="1-grep工具"><a href="#1-grep工具" class="headerlink" title="1. grep工具"></a>1. grep工具</h2><blockquote>
<p>grep是**==行==**过滤工具；用于根据关键字进行行过滤</p>
</blockquote>
<h3 id="语法和选项"><a href="#语法和选项" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># grep [选项] &#x27;关键字&#x27; 文件名</span></span><br></pre></td></tr></table></figure>

<p><strong>常见选项：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">OPTIONS:</span><br><span class="line">    <span class="literal">-i</span>: 不区分大小写</span><br><span class="line">    <span class="literal">-v</span>: 查找不包含指定内容的行,反向选择</span><br><span class="line">    <span class="literal">-w</span>: 按单词搜索</span><br><span class="line">    <span class="literal">-o</span>: 打印匹配关键字</span><br><span class="line">    <span class="literal">-c</span>: 统计匹配到的行数</span><br><span class="line">    <span class="literal">-n</span>: 显示行号</span><br><span class="line">    <span class="literal">-r</span>: 逐层遍历目录查找</span><br><span class="line">    <span class="literal">-A</span>: 显示匹配行及后面多少行	</span><br><span class="line">    <span class="literal">-B</span>: 显示匹配行及前面多少行</span><br><span class="line">    <span class="literal">-C</span>: 显示匹配行前后多少行</span><br><span class="line">    <span class="literal">-l</span>：只列出匹配的文件名</span><br><span class="line">    <span class="literal">-L</span>：列出不匹配的文件名</span><br><span class="line">    <span class="literal">-e</span>: 使用正则匹配</span><br><span class="line">    <span class="literal">-E</span>:使用扩展正则匹配</span><br><span class="line">    ^key:以关键字开头</span><br><span class="line">    key<span class="variable">$</span>:以关键字结尾</span><br><span class="line">    ^<span class="variable">$</span>:匹配空行</span><br><span class="line">    -<span class="literal">-color</span>=auto ：可以将找到的关键词部分加上颜色的显示</span><br></pre></td></tr></table></figure>

<p><strong>颜色显示（别名设置）：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">临时设置：</span><br><span class="line"><span class="comment"># alias grep=&#x27;grep --color=auto&#x27;			//只针对当前终端和当前用户生效</span></span><br><span class="line"></span><br><span class="line">永久设置：</span><br><span class="line"><span class="number">1</span>）全局（针对所有用户生效）</span><br><span class="line">vim /etc/bashrc</span><br><span class="line">alias grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br><span class="line">source /etc/bashrc</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）局部（针对具体的某个用户）</span><br><span class="line">vim ~/.bashrc</span><br><span class="line">alias grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure>

<p><strong>举例说明：</strong></p>
<p>==说明：不要直接使用/etc/passwd文件，将其拷贝到/tmp下做实验！==</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># grep -i root passwd						忽略大小写匹配包含root的行</span></span><br><span class="line"><span class="comment"># grep -w ftp passwd 						精确匹配ftp单词</span></span><br><span class="line"><span class="comment"># grep -w hello passwd 						精确匹配hello单词;自己添加包含hello的行到文件</span></span><br><span class="line"><span class="comment"># grep -wo ftp passwd 						打印匹配到的关键字ftp</span></span><br><span class="line"><span class="comment"># grep -n root passwd 						打印匹配到root关键字的行好</span></span><br><span class="line"><span class="comment"># grep -ni root passwd 						忽略大小写匹配统计包含关键字root的行</span></span><br><span class="line"><span class="comment"># grep -nic root passwd						忽略大小写匹配统计包含关键字root的行数</span></span><br><span class="line"><span class="comment"># grep -i ^root passwd 						忽略大小写匹配以root开头的行</span></span><br><span class="line"><span class="comment"># grep bash$ passwd 							匹配以bash结尾的行</span></span><br><span class="line"><span class="comment"># grep -n ^$ passwd 							匹配空行并打印行号</span></span><br><span class="line"><span class="comment"># grep ^# /etc/vsftpd/vsftpd.conf		匹配以#号开头的行</span></span><br><span class="line"><span class="comment"># grep -v ^# /etc/vsftpd/vsftpd.conf	匹配不以#号开头的行</span></span><br><span class="line"><span class="comment"># grep -A 5 mail passwd 				 	匹配包含mail关键字及其后5行</span></span><br><span class="line"><span class="comment"># grep -B 5 mail passwd 				 	匹配包含mail关键字及其前5行</span></span><br><span class="line"><span class="comment"># grep -C 5 mail passwd 					匹配包含mail关键字及其前后5行</span></span><br></pre></td></tr></table></figure>

<h2 id="2-cut工具"><a href="#2-cut工具" class="headerlink" title="2. cut工具"></a>2. cut工具</h2><blockquote>
<p>cut是**==列==**截取工具，用于列的截取</p>
</blockquote>
<h3 id="语法和选项-1"><a href="#语法和选项-1" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cut 选项  文件名</span></span><br></pre></td></tr></table></figure>

<p><strong>常见选项：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="literal">-c</span>:	以字符为单位进行分割,截取</span><br><span class="line"><span class="literal">-d</span>:	自定义分隔符，默认为制表符\t</span><br><span class="line"><span class="operator">-f</span>:	与<span class="literal">-d</span>一起使用，指定截取哪个区域</span><br></pre></td></tr></table></figure>

<p><strong>举例说明:</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cut -d: -f1 1.txt 			以:冒号分割，截取第1列内容</span></span><br><span class="line"><span class="comment"># cut -d: -f1,6,7 1.txt 	以:冒号分割，截取第1,6,7列内容</span></span><br><span class="line"><span class="comment"># cut -c4 1.txt 				截取文件中每行第4个字符</span></span><br><span class="line"><span class="comment"># cut -c1-4 1.txt 			截取文件中每行的1-4个字符</span></span><br><span class="line"><span class="comment"># cut -c4-10 1.txt 			截取文件中每行的4-10个字符</span></span><br><span class="line"><span class="comment"># cut -c5- 1.txt 				从第5个字符开始截取后面所有字符</span></span><br></pre></td></tr></table></figure>

<p><strong>课堂练习：</strong><br>用小工具列出你当系统的运行级别。5/3</p>
<ol>
<li>如何查看系统运行级别<ul>
<li>命令<code>runlevel</code></li>
<li>文件<code>/etc/inittab</code></li>
</ul>
</li>
<li>如何过滤运行级别</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">runlevel |cut <span class="literal">-c3</span></span><br><span class="line">runlevel | cut <span class="literal">-d</span> <span class="string">&#x27; &#x27;</span> <span class="literal">-f2</span></span><br><span class="line">grep <span class="literal">-v</span> <span class="string">&#x27;^#&#x27;</span> /etc/inittab | cut <span class="literal">-d</span>: <span class="literal">-f2</span></span><br><span class="line">grep <span class="string">&#x27;^id&#x27;</span> /etc/inittab |cut <span class="literal">-d</span>: <span class="literal">-f2</span></span><br><span class="line">grep <span class="string">&quot;initdefault:<span class="variable">$</span>&quot;</span> /etc/inittab | cut <span class="literal">-c4</span></span><br><span class="line">grep <span class="literal">-v</span> ^<span class="comment"># /etc/inittab |cut -c4</span></span><br><span class="line">grep <span class="string">&#x27;id:&#x27;</span> /etc/inittab |cut <span class="literal">-d</span>: <span class="literal">-f2</span></span><br><span class="line">cut <span class="literal">-d</span><span class="string">&#x27;:&#x27;</span> <span class="literal">-f2</span> /etc/inittab |grep <span class="literal">-v</span> ^<span class="comment">#</span></span><br><span class="line">cut <span class="literal">-c4</span> /etc/inittab |tail <span class="literal">-1</span></span><br><span class="line">cut <span class="literal">-d</span>: <span class="literal">-f2</span> /etc/inittab |tail <span class="literal">-1</span></span><br></pre></td></tr></table></figure>

<h2 id="3-sed"><a href="#3-sed" class="headerlink" title="3. sed"></a>3. sed</h2><blockquote>
<p> sed是一种流编辑器，它一次处理一行内容。处理时，把当前处理的行存储在临时缓冲区中，称为“模式空间”，接着用sed命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。接着处理下一行，这样不断重复，直到文件末尾。文件内容并没有改变，除非你使用重定向存储输出。</p>
</blockquote>
<h3 id="语法和选项-2"><a href="#语法和选项-2" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed [选项参数]  ‘command’  filename</span><br></pre></td></tr></table></figure>
<p><strong>选项</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="literal">-e</span> ：直接在指令列模式上进行sed的动作编辑。</span><br><span class="line"><span class="literal">-a</span> ：新增，a的后面可以接字串，在下一行出现</span><br><span class="line"><span class="literal">-d</span> : 删除</span><br><span class="line"><span class="literal">-s</span> ：查找并替换</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>举例说明</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sed &#x27;2a mei nv&#x27; sed.txt  			将“mei nv”这个单词插入到sed.txt第二行下，打印。</span></span><br><span class="line"><span class="comment"># sed &#x27;/wo/d&#x27; sed.txt 		     	删除sed.txt文件所有包含wo的行</span></span><br><span class="line"><span class="comment"># sed &#x27;s/wo/ni/g&#x27; sed.txt 			将sed.txt文件中wo替换为ni,‘g’表示global，全部替换</span></span><br><span class="line"><span class="comment"># sed -e &#x27;2d&#x27; -e &#x27;s/wo/ni/g&#x27; sed.txt  将sed.txt文件中的第二行删除并将wo替换为ni</span></span><br></pre></td></tr></table></figure>
<h2 id="4-awk"><a href="#4-awk" class="headerlink" title="4. awk"></a>4. awk</h2><blockquote>
<p>一个强大的文本分析工具，把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行分析处理。</p>
</blockquote>
<h3 id="语法和选项-3"><a href="#语法和选项-3" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">awk [选项参数] ‘pattern1&#123;action1&#125;  pattern2&#123;action2&#125;...’ filename	</span><br></pre></td></tr></table></figure>

<ul>
<li>pattern：表示AWK在数据中查找的内容，就是匹配模式</li>
<li>action：在找到匹配内容时所执行的一系列命令    </li>
</ul>
<p><strong>选项</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="operator">-F</span> ：指定输入文件折分隔符</span><br><span class="line"><span class="literal">-v</span> ：赋值一个用户定义变量</span><br></pre></td></tr></table></figure>

<p><strong>举例说明</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">搜索passwd文件以root关键字开头的所有行，并输出该行的第<span class="number">7</span>列。</span><br><span class="line"><span class="comment"># awk -F: &#x27;/^root/&#123;print $7&#125;&#x27; passwd </span></span><br><span class="line"></span><br><span class="line">搜索passwd文件以root关键字开头的所有行，并输出该行的第<span class="number">1</span>列和第<span class="number">7</span>列，中间以“，”号分割。</span><br><span class="line"><span class="comment"># awk -F: &#x27;/^root/&#123;print $1&quot;,&quot;$7&#125;&#x27; passwd </span></span><br><span class="line"></span><br><span class="line">只显示/etc/passwd的第一列和第七列，以逗号分割，且在所有行前面添加列名user，shell在最后一行添加<span class="string">&quot;dahaige，/bin/zuishuai&quot;</span>。  </span><br><span class="line"><span class="comment"># awk -F : &#x27;BEGIN&#123;print &quot;user, shell&quot;&#125; &#123;print $1&quot;,&quot;$7&#125; END&#123;print &quot;dahaige,/bin/zuishuai&quot;&#125;&#x27; passwd</span></span><br><span class="line">注意：<span class="keyword">BEGIN</span> 在所有数据读取行之前执行；<span class="keyword">END</span> 在所有数据执行之后执行。</span><br><span class="line"></span><br><span class="line">将passwd文件中的用户id增加数值<span class="number">1</span>并输出</span><br><span class="line"><span class="comment"># awk -v i=1 -F: &#x27;&#123;print $3+i&#125;&#x27; passwd</span></span><br></pre></td></tr></table></figure>
<h2 id="5-sort工具"><a href="#5-sort工具" class="headerlink" title="5. sort工具"></a>5. sort工具</h2><blockquote>
<p>sort工具用于排序;它将文件的每一行作为一个单位，从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。</p>
</blockquote>
<h3 id="语法和选项-4"><a href="#语法和选项-4" class="headerlink" title="语法和选项"></a>语法和选项</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="literal">-u</span> ：去除重复行</span><br><span class="line"><span class="literal">-r</span> ：降序排列，默认是升序</span><br><span class="line"><span class="literal">-o</span> : 将排序结果输出到文件中,类似重定向符号&gt;</span><br><span class="line"><span class="literal">-n</span> ：以数字排序，默认是按字符排序</span><br><span class="line"><span class="literal">-t</span> ：分隔符</span><br><span class="line"><span class="literal">-k</span> ：第N列</span><br><span class="line"><span class="literal">-b</span> ：忽略前导空格。</span><br><span class="line"><span class="literal">-R</span> ：随机排序，每次运行的结果均不同</span><br></pre></td></tr></table></figure>

<p><strong>举例说明</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sort -n -t: -k3 1.txt 			按照用户的uid进行升序排列</span></span><br><span class="line"><span class="comment"># sort -nr -t: -k3 1.txt 			按照用户的uid进行降序排列</span></span><br><span class="line"><span class="comment"># sort -n 2.txt 						按照数字排序</span></span><br><span class="line"><span class="comment"># sort -nu 2.txt 						按照数字排序并且去重</span></span><br><span class="line"><span class="comment"># sort -nr 2.txt </span></span><br><span class="line"><span class="comment"># sort -nru 2.txt </span></span><br><span class="line"><span class="comment"># sort -nru 2.txt </span></span><br><span class="line"><span class="comment"># sort -n 2.txt -o 3.txt 			按照数字排序并将结果重定向到文件</span></span><br><span class="line"><span class="comment"># sort -R 2.txt </span></span><br><span class="line"><span class="comment"># sort -u 2.txt </span></span><br></pre></td></tr></table></figure>

<h2 id="6-uniq工具"><a href="#6-uniq工具" class="headerlink" title="6. uniq工具"></a>6. uniq工具</h2><blockquote>
<p>uniq用于去除**==连续==<strong>的</strong>==重复==**行</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">常见选项：</span><br><span class="line"><span class="literal">-i</span>: 忽略大小写</span><br><span class="line"><span class="literal">-c</span>: 统计重复行次数</span><br><span class="line"><span class="literal">-d</span>:只显示重复行</span><br><span class="line"></span><br><span class="line">举例说明：</span><br><span class="line"><span class="comment"># uniq 2.txt </span></span><br><span class="line"><span class="comment"># uniq -d 2.txt </span></span><br><span class="line"><span class="comment"># uniq -dc 2.txt </span></span><br></pre></td></tr></table></figure>

<h2 id="7-tee工具"><a href="#7-tee工具" class="headerlink" title="7. tee工具"></a>7. tee工具</h2><blockquote>
<p>tee工具是从标准输入读取并写入到标准输出和文件，即：双向覆盖重定向（屏幕输出|文本输入）</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">选项：</span><br><span class="line"><span class="literal">-a</span> 双向追加重定向</span><br><span class="line"></span><br><span class="line"><span class="comment"># echo hello world</span></span><br><span class="line"><span class="comment"># echo hello world|tee file1</span></span><br><span class="line"><span class="comment"># cat file1 </span></span><br><span class="line"><span class="comment"># echo 999|tee -a file1</span></span><br><span class="line"><span class="comment"># cat file1 </span></span><br></pre></td></tr></table></figure>

<h2 id="8-diff工具"><a href="#8-diff工具" class="headerlink" title="8. diff工具"></a>8. diff工具</h2><blockquote>
<p>diff工具用于逐行比较文件的不同</p>
</blockquote>
<p>注意：diff描述两个文件不同的方式是告诉我们==怎样改变第一个==文件之后==与第二个文件匹配==。</p>
<h3 id="语法和选项-5"><a href="#语法和选项-5" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">diff</span> [选项] 文件<span class="number">1</span> 文件<span class="number">2</span></span><br></pre></td></tr></table></figure>

<p><strong>常用选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>-b</td>
<td>不检查空格</td>
<td></td>
</tr>
<tr>
<td>-B</td>
<td>不检查空白行</td>
<td></td>
</tr>
<tr>
<td>-i</td>
<td>不检查大小写</td>
<td></td>
</tr>
<tr>
<td>-w</td>
<td>忽略所有的空格</td>
<td></td>
</tr>
<tr>
<td>–normal</td>
<td>正常格式显示(默认)</td>
<td></td>
</tr>
<tr>
<td>-c</td>
<td>上下文格式显示</td>
<td></td>
</tr>
<tr>
<td>-u</td>
<td>合并格式显示</td>
<td></td>
</tr>
</tbody></table>
<p><strong>举例说明：</strong></p>
<ul>
<li>比较两个==普通文件==异同，文件准备：</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># cat file1</span></span><br><span class="line">aaaa</span><br><span class="line"><span class="number">111</span></span><br><span class="line">hello world</span><br><span class="line"><span class="number">222</span></span><br><span class="line"><span class="number">333</span></span><br><span class="line">bbb</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment">#</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># cat file2</span></span><br><span class="line">aaa</span><br><span class="line">hello</span><br><span class="line"><span class="number">111</span></span><br><span class="line"><span class="number">222</span></span><br><span class="line">bbb</span><br><span class="line"><span class="number">333</span></span><br><span class="line">world</span><br></pre></td></tr></table></figure>

<p>1）正常显示</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">diff</span>目的：file1如何改变才能和file2匹配</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff file1 file2</span></span><br><span class="line"><span class="number">1</span>c1,<span class="number">2</span>					第一个文件的第<span class="number">1</span>行需要改变(c=change)才能和第二个文件的第<span class="number">1</span>到<span class="number">2</span>行匹配			</span><br><span class="line">&lt; aaaa				小于号<span class="string">&quot;&lt;&quot;</span>表示左边文件(file1)文件内容</span><br><span class="line">---					---表示分隔符</span><br><span class="line">&gt; aaa					大于号<span class="string">&quot;&gt;&quot;</span>表示右边文件(file2)文件内容</span><br><span class="line">&gt; hello</span><br><span class="line"><span class="number">3</span>d3					第一个文件的第<span class="number">3</span>行删除(d=delete)后才能和第二个文件的第<span class="number">3</span>行匹配</span><br><span class="line">&lt; hello world</span><br><span class="line"><span class="number">5</span>d4					第一个文件的第<span class="number">5</span>行删除后才能和第二个文件的第<span class="number">4</span>行匹配</span><br><span class="line">&lt; <span class="number">333</span></span><br><span class="line"><span class="number">6</span>a6,<span class="number">7</span>					第一个文件的第<span class="number">6</span>行增加(a=add)内容后才能和第二个文件的第<span class="number">6</span>到<span class="number">7</span>行匹配</span><br><span class="line">&gt; <span class="number">333</span>					需要增加的内容在第二个文件里是<span class="number">333</span>和world</span><br><span class="line">&gt; world</span><br></pre></td></tr></table></figure>

<p>2）上下文格式显示</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff -c file1 file2</span></span><br><span class="line">前两行主要列出需要比较的文件名和文件的时间戳；文件名前面的符号***表示file1，---表示file2</span><br><span class="line">*** file1       <span class="number">2019</span><span class="literal">-04</span><span class="literal">-16</span> <span class="number">16</span>:<span class="number">26</span>:<span class="number">05.748650262</span> +<span class="number">0800</span></span><br><span class="line">--- file2       <span class="number">2019</span><span class="literal">-04</span><span class="literal">-16</span> <span class="number">16</span>:<span class="number">26</span>:<span class="number">30.470646030</span> +<span class="number">0800</span></span><br><span class="line">***************	我是分隔符</span><br><span class="line">*** <span class="number">1</span>,<span class="number">6</span> ****		以***开头表示file1文件，<span class="number">1</span>,<span class="number">6</span>表示<span class="number">1</span>到<span class="number">6</span>行</span><br><span class="line">! aaaa				!表示该行需要修改才与第二个文件匹配</span><br><span class="line">  <span class="number">111</span></span><br><span class="line">- hello world		-表示需要删除该行才与第二个文件匹配</span><br><span class="line">  <span class="number">222</span></span><br><span class="line">- <span class="number">333</span>					-表示需要删除该行才与第二个文件匹配</span><br><span class="line">  bbb</span><br><span class="line">--- <span class="number">1</span>,<span class="number">7</span> ----		以---开头表示file2文件，<span class="number">1</span>,<span class="number">7</span>表示<span class="number">1</span>到<span class="number">7</span>行</span><br><span class="line">! aaa					表示第一个文件需要修改才与第二个文件匹配</span><br><span class="line">! hello				表示第一个文件需要修改才与第二个文件匹配</span><br><span class="line">  <span class="number">111</span></span><br><span class="line">  <span class="number">222</span></span><br><span class="line">  bbb</span><br><span class="line">+ <span class="number">333</span>					表示第一个文件需要加上该行才与第二个文件匹配</span><br><span class="line">+ world				表示第一个文件需要加上该行才与第二个文件匹配</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>3）合并格式显示</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff -u file1 file2</span></span><br><span class="line">前两行主要列出需要比较的文件名和文件的时间戳；文件名前面的符号---表示file1，+++表示file2</span><br><span class="line">--- file1       <span class="number">2019</span><span class="literal">-04</span><span class="literal">-16</span> <span class="number">16</span>:<span class="number">26</span>:<span class="number">05.748650262</span> +<span class="number">0800</span></span><br><span class="line">+++ file2       <span class="number">2019</span><span class="literal">-04</span><span class="literal">-16</span> <span class="number">16</span>:<span class="number">26</span>:<span class="number">30.470646030</span> +<span class="number">0800</span></span><br><span class="line"><span class="selector-tag">@</span><span class="selector-tag">@</span> <span class="literal">-1</span>,<span class="number">6</span> +<span class="number">1</span>,<span class="number">7</span> <span class="selector-tag">@</span><span class="selector-tag">@</span></span><br><span class="line"><span class="literal">-aaaa</span></span><br><span class="line">+aaa</span><br><span class="line">+hello</span><br><span class="line"> <span class="number">111</span></span><br><span class="line"><span class="literal">-hello</span> world</span><br><span class="line"> <span class="number">222</span></span><br><span class="line"><span class="literal">-333</span></span><br><span class="line"> bbb</span><br><span class="line">+<span class="number">333</span></span><br><span class="line">+world</span><br></pre></td></tr></table></figure>

<ul>
<li>比较两个==目录不同==</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">默认情况下也会比较两个目录里相同文件的内容</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">tmp</span>]<span class="comment"># diff dir1 dir2</span></span><br><span class="line"><span class="built_in">diff</span> dir1/file1 dir2/file1</span><br><span class="line"><span class="number">0</span>a1</span><br><span class="line">&gt; hello</span><br><span class="line">Only <span class="keyword">in</span> dir1: file3</span><br><span class="line">Only <span class="keyword">in</span> dir2: test1</span><br><span class="line">如果只需要比较两个目录里文件的不同，不需要进一步比较文件内容，需要加<span class="literal">-q</span>选项</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">tmp</span>]<span class="comment"># diff -q dir1 dir2</span></span><br><span class="line">Files dir1/file1 and dir2/file1 differ</span><br><span class="line">Only <span class="keyword">in</span> dir1: file3</span><br><span class="line">Only <span class="keyword">in</span> dir2: test1</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>其他小技巧：</strong></p>
<p>有时候我们需要以一个文件为标准，去修改其他文件，并且修改的地方较多时，我们可以通过打补丁的方式完成。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>）先找出文件不同，然后输出到一个文件</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff -uN file1 file2 &gt; file.patch</span></span><br><span class="line"><span class="literal">-u</span>:上下文模式</span><br><span class="line"><span class="literal">-N</span>:将不存在的文件当作空文件</span><br><span class="line"><span class="number">2</span>）将不同内容打补丁到文件</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># patch file1 file.patch</span></span><br><span class="line">patching file file1</span><br><span class="line"><span class="number">3</span>）测试验证</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># diff file1 file2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment">#</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="9-paste工具"><a href="#9-paste工具" class="headerlink" title="9. paste工具"></a>9. paste工具</h2><blockquote>
<p>paste工具用于合并文件行</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">常用选项：</span><br><span class="line"><span class="literal">-d</span>：自定义间隔符，默认是tab</span><br><span class="line"><span class="literal">-s</span>：串行处理，非并行</span><br></pre></td></tr></table></figure>

<h2 id="10-tr工具"><a href="#10-tr工具" class="headerlink" title="10. tr工具"></a>10. tr工具</h2><blockquote>
<p> tr用于字符转换，替换和删除；主要用于 删除文件中控制字符 或进行 字符转换</p>
</blockquote>
<h3 id="语法和选项-6"><a href="#语法和选项-6" class="headerlink" title="语法和选项"></a>语法和选项</h3><p><strong>语法：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">用法<span class="number">1</span>：命令的执行结果交给tr处理，其中string1用于查询，string2用于转换处理</span><br><span class="line"><span class="comment"># commands|tr  &#x27;string1&#x27;  &#x27;string2&#x27;</span></span><br><span class="line">用法<span class="number">2</span>：tr处理的内容来自文件，记住要使用<span class="string">&quot;&lt;&quot;</span>标准输入</span><br><span class="line"><span class="comment"># tr  &#x27;string1&#x27;  &#x27;string2&#x27; &lt; filename</span></span><br><span class="line"></span><br><span class="line">用法<span class="number">3</span>：匹配string1进行相应操作，如删除操作</span><br><span class="line"><span class="comment"># tr options &#x27;string1&#x27; &lt; filename</span></span><br></pre></td></tr></table></figure>

<p><strong>常用选项：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="literal">-d</span> 删除字符串<span class="number">1</span>中所有输入字符。</span><br><span class="line"><span class="literal">-s</span> 删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串</span><br></pre></td></tr></table></figure>

<p><strong>常匹配字符串：</strong></p>
<table>
<thead>
<tr>
<th>字符串</th>
<th>含义</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>==a-z==或[:lower:]</td>
<td>匹配所有小写字母</td>
<td>[a-zA-Z0-9]</td>
</tr>
<tr>
<td>==A-Z==或[:upper:]</td>
<td>匹配所有大写字母</td>
<td></td>
</tr>
<tr>
<td>==0-9==或[:digit:]</td>
<td>匹配所有数字</td>
<td></td>
</tr>
<tr>
<td>[:alnum:]</td>
<td>匹配所有字母和数字</td>
<td></td>
</tr>
<tr>
<td>[:alpha:]</td>
<td>匹配所有字母</td>
<td></td>
</tr>
<tr>
<td>[:blank:]</td>
<td>所有水平空白</td>
<td></td>
</tr>
<tr>
<td>[:punct:]</td>
<td>匹配所有标点符号</td>
<td></td>
</tr>
<tr>
<td>[:space:]</td>
<td>所有水平或垂直的空格</td>
<td></td>
</tr>
<tr>
<td>[:cntrl:]</td>
<td>所有控制字符</td>
<td>\f Ctrl-L        走行换页<br/>\n Ctrl-J      换行</td>
</tr>
<tr>
<td>\r Ctrl-M        回车</td>
<td></td>
<td></td>
</tr>
<tr>
<td>\t Ctrl-I      tab键</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><strong>举例说明：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">shell01</span>]<span class="comment"># cat 3.txt 	自己创建该文件用于测试</span></span><br><span class="line">ROOT:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:<span class="number">2</span>:<span class="number">2</span>:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>:x:<span class="number">4</span>:<span class="number">7</span>:<span class="built_in">lp</span>:/var/spool/lpd:/sbin/nologin</span><br><span class="line">sync:x:<span class="number">5</span>:<span class="number">0</span>:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:<span class="number">6</span>:<span class="number">0</span>:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:<span class="number">7</span>:<span class="number">0</span>:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:<span class="number">8</span>:<span class="number">12</span>:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">uucp:x:<span class="number">10</span>:<span class="number">14</span>:uucp:/var/spool/uucp:/sbin/nologin</span><br><span class="line">boss02:x:<span class="number">516</span>:<span class="number">511</span>::/home/boss02:/bin/bash</span><br><span class="line">vip:x:<span class="number">517</span>:<span class="number">517</span>::/home/vip:/bin/bash</span><br><span class="line">stu1:x:<span class="number">518</span>:<span class="number">518</span>::/home/stu1:/bin/bash</span><br><span class="line">mailnull:x:<span class="number">47</span>:<span class="number">47</span>::/var/spool/mqueue:/sbin/nologin</span><br><span class="line">smmsp:x:<span class="number">51</span>:<span class="number">51</span>::/var/spool/mqueue:/sbin/nologin</span><br><span class="line">aaaaaaaaaaaaaaaaaaaa</span><br><span class="line">bbbbbb111111122222222222233333333cccccccc</span><br><span class="line">hello world <span class="number">888</span></span><br><span class="line"><span class="number">666</span></span><br><span class="line"><span class="number">777</span></span><br><span class="line"><span class="number">999</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># tr -d &#x27;[:/]&#x27; &lt; 3.txt 				删除文件中的:和/</span></span><br><span class="line"><span class="comment"># cat 3.txt |tr -d &#x27;[:/]&#x27;			删除文件中的:和/</span></span><br><span class="line"><span class="comment"># tr &#x27;[0-9]&#x27; &#x27;@&#x27; &lt; 3.txt 			将文件中的数字替换为@符号</span></span><br><span class="line"><span class="comment"># tr &#x27;[a-z]&#x27; &#x27;[A-Z]&#x27; &lt; 3.txt 		将文件中的小写字母替换成大写字母</span></span><br><span class="line"><span class="comment"># tr -s &#x27;[a-z]&#x27; &lt; 3.txt 			匹配小写字母并将重复的压缩为一个</span></span><br><span class="line"><span class="comment"># tr -s &#x27;[a-z0-9]&#x27; &lt; 3.txt 		匹配小写字母和数字并将重复的压缩为一个</span></span><br><span class="line"><span class="comment"># tr -d &#x27;[:digit:]&#x27; &lt; 3.txt 		删除文件中的数字</span></span><br><span class="line"><span class="comment"># tr -d &#x27;[:blank:]&#x27; &lt; 3.txt 		删除水平空白</span></span><br><span class="line"><span class="comment"># tr -d &#x27;[:space:]&#x27; &lt; 3.txt 		删除所有水平和垂直空白</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="小试牛刀"><a href="#小试牛刀" class="headerlink" title="小试牛刀"></a>小试牛刀</h4><ol>
<li>使用小工具分别截取当前主机IP；截取NETMASK；截取广播地址；截取MAC地址</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d &#x27;[a-zA-Z ]&#x27;|cut -d: -f2,3,4</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span>:<span class="number">10.1</span>.<span class="number">1.255</span>:<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d &#x27;[a-zA-Z ]&#x27;|cut -d: -f2,3,4|tr &#x27;:&#x27; &#x27;\n&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;HWaddr&#x27;|cut -d: -f2-|cut -d&#x27; &#x27; -f4</span></span><br><span class="line"><span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">25</span>:AE:<span class="number">54</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;HW&#x27;|tr -s &#x27; &#x27;|cut -d&#x27; &#x27; -f5</span></span><br><span class="line"><span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:B4:<span class="number">9</span>E:<span class="number">4</span>E</span><br><span class="line"></span><br><span class="line"><span class="comment"># ifconfig eth1|grep Bcast|cut -d: -f2|cut -d&#x27; &#x27; -f1</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep Bcast|cut -d: -f2|tr -d &#x27;[ a-zA-Z]&#x27;</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep Bcast|tr -d &#x27;[:a-zA-Z]&#x27;|tr &#x27; &#x27; &#x27;@&#x27;|tr -s &#x27;@&#x27;|tr &#x27;@&#x27; &#x27;\n&#x27;|grep -v ^$</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d [:alpha:]|tr &#x27;[ :]&#x27; &#x27;\n&#x27;|grep -v ^$</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep HWaddr|cut -d &#x27; &#x27; -f11</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep HWaddr|tr -s &#x27; &#x27;|cut -d&#x27; &#x27; -f5</span></span><br><span class="line"><span class="comment"># ifconfig eth1|grep HWaddr|tr -s &#x27; &#x27;|cut -d&#x27; &#x27; -f5</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep &#x27;Bcast&#x27;|tr -d &#x27;a-zA-Z:&#x27;|tr &#x27; &#x27; &#x27;\n&#x27;|grep -v &#x27;^$&#x27;</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>将系统中所有普通用户的用户名、密码和默认shell保存到一个文件中，要求用户名密码和默认shell之间用tab键分割</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># grep &#x27;bash$&#x27; passwd |grep -v &#x27;root&#x27;|cut -d: -f1,2,7|tr &#x27;:&#x27; &#x27;\t&#x27; |tee abc.txt</span></span><br></pre></td></tr></table></figure>

<h1 id="二、bash的特性"><a href="#二、bash的特性" class="headerlink" title="二、bash的特性"></a>二、bash的特性</h1><p>##1、命令和文件自动补全</p>
<p>Tab只能补全==命令和文件== （RHEL6/Centos6）</p>
<p>##2、常见的快捷键</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">^c   			终止前台运行的程序</span><br><span class="line">^z	  			将前台运行的程序挂起到后台</span><br><span class="line">^d   			退出 等价<span class="keyword">exit</span></span><br><span class="line">^l   			清屏 </span><br><span class="line">^a |home  	光标移到命令行的最前端</span><br><span class="line">^e |<span class="keyword">end</span>  	光标移到命令行的后端</span><br><span class="line">^u   			删除光标前所有字符</span><br><span class="line">^k   			删除光标后所有字符</span><br><span class="line">^r	 			搜索历史命令</span><br></pre></td></tr></table></figure>

<p>##3 、==常用的通配符（重点）==</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">*:	匹配<span class="number">0</span>或多个任意字符</span><br><span class="line">?:	匹配任意单个字符</span><br><span class="line">[<span class="type">list</span>]:	匹配[<span class="type">list</span>]中的任意单个字符,或者一组单个字符   [<span class="type">a</span>-<span class="type">z</span>]</span><br><span class="line">[!<span class="type">list</span>]: 匹配除list中的任意单个字符</span><br><span class="line">&#123;string1,string2,...&#125;：匹配string1,string2或更多字符串</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># rm -f file*</span></span><br><span class="line"><span class="comment"># cp *.conf  /dir1</span></span><br><span class="line"><span class="comment"># touch file&#123;1..5&#125;</span></span><br></pre></td></tr></table></figure>

<p>##4、==bash中的引号（重点）==</p>
<ul>
<li>双引号””   :会把引号的内容当成整体来看待，允许通过$符号引用其他变量值</li>
<li>单引号’’     :会把引号的内容当成整体来看待，禁止引用其他变量值，shell中特殊符号都被视为普通字符</li>
<li>反撇号``  :反撇号和$()一样，引号或括号里的命令会优先执行，如果存在嵌套，反撇号不能用</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo &quot;$(hostname)&quot;</span></span><br><span class="line">server</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo &#x27;$(hostname)&#x27;</span></span><br><span class="line"><span class="variable">$</span>(hostname)</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo &quot;hello world&quot;</span></span><br><span class="line">hello world</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo &#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo $(date +%F)</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11</span><span class="literal">-22</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo `echo $(date +%F)`</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11</span><span class="literal">-22</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo `date +%F`</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11</span><span class="literal">-22</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo `echo `date +%F``</span></span><br><span class="line">date +%F</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span>  <span class="type">dir1</span>]<span class="comment"># echo $(echo `date +%F`)</span></span><br><span class="line"><span class="number">2018</span><span class="literal">-11</span><span class="literal">-22</span></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>02_SHELL编程之变量定义</title>
    <url>/2021/01/02/linux/02_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%8F%98%E9%87%8F%E5%AE%9A%E4%B9%89/</url>
    <content><![CDATA[<h1 id="SHELL编程模块课程目标"><a href="#SHELL编程模块课程目标" class="headerlink" title="SHELL编程模块课程目标"></a>SHELL编程模块课程目标</h1><ul>
<li><p>① Shell的基本语法结构</p>
<p>如：变量定义、条件判断、循环语句(for、until、while)、分支语句、函数和数组等； </p>
<p>② 基本正则表达式的运用;</p>
<p>③ 文件处理三剑客：grep、sed、awk工具的使用；</p>
<p>④ 使用shell脚本完成一些较复杂的任务，如：服务搭建、批量处理等。</p>
<p><em><strong>说明：以上内容仅仅是基本要求，还有很多更深更难的语法需要扩充学习。</strong></em></p>
</li>
<li><p><strong>本节目标</strong></p>
<ul>
<li>==熟练掌握shell变量的定义和获取（重点）==</li>
<li>==能够进行shell简单的四则运算==</li>
</ul>
</li>
</ul>
<span id="more"></span>

<h1 id="一、SHELL介绍"><a href="#一、SHELL介绍" class="headerlink" title="一、SHELL介绍"></a>一、SHELL介绍</h1><p><strong>前言：</strong></p>
<p>计算机只能认识（识别）机器语言(0和1)，如（11000000 这种）。但是，我们的程序猿们不能直接去写01这样的代码，所以，要想将程序猿所开发的代码在计算机上运行，就必须找”人”（工具）来==翻译成机器语言==，这个”人”(工具)就是我们常常所说的**==编译器==<strong>或者</strong>==解释器==**。</p>
<p><img src="/%E7%BC%96%E8%AF%91%E5%92%8C%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80%E5%8C%BA%E5%88%AB.png" alt="编译和解释型语言区别"></p>
<p>##1. 编程语言分类</p>
<ul>
<li><strong>编译型语言：</strong></li>
</ul>
<p>​    ==程序在执行之前需要一个专门的编译过程==，把程序编译成为机器语言文件，运行时不需要重新翻译，直接使用编译的结果就行了。程序执行效率高，依赖编译器，跨平台性差些。如C、C++</p>
<ul>
<li><strong>解释型语言：</strong></li>
</ul>
<p>​    程序不需要编译，程序在运行时由**==解释器==**翻译成机器语言，每执行一次都要翻译一次。因此效率比较低。比如Python/JavaScript/ Perl /ruby/==Shell==等都是解释型语言。</p>
<p><img src="./pictures/%E8%AF%AD%E8%A8%80%E5%88%86%E7%B1%BB.png" alt="语言分类.png"></p>
<ul>
<li><strong>总结</strong></li>
</ul>
<p>编译型语言比解释型语言==速度较快==，但是不如解释型语言==跨平台性好==。如果做底层开发或者大型应用程序或者操作系开发一==般都用编译型语言==；如果是一些服务器脚本及一些辅助的接口，对速度要求不高、对各个平台的==兼容性有要求==的话则一般都用==解释型语言==。</p>
<p>##2. shell简介</p>
<p><img src="/00_shell%E4%BB%8B%E7%BB%8D.png" alt="00_shell介绍"></p>
<p><strong>总结：</strong></p>
<ul>
<li>==shell就是人机交互的一个桥梁==</li>
<li>shell的种类</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># cat /etc/shells </span></span><br><span class="line">/bin/sh				<span class="comment">#是bash的一个快捷方式</span></span><br><span class="line">/bin/bash			<span class="comment">#bash是大多数Linux默认的shell，包含的功能几乎可以涵盖shell所有的功能</span></span><br><span class="line">/sbin/nologin		<span class="comment">#表示非交互，不能登录操作系统</span></span><br><span class="line">/bin/dash			<span class="comment">#小巧，高效，功能相比少一些</span></span><br><span class="line"></span><br><span class="line">/bin/csh				<span class="comment">#具有C语言风格的一种shell，具有许多特性，但也有一些缺陷</span></span><br><span class="line">/bin/tcsh			<span class="comment">#是csh的增强版，完全兼容csh</span></span><br></pre></td></tr></table></figure>

<p><strong>思考：终端和shell有什么关系？</strong></p>
<p><img src="./01_shell%E4%BB%8B%E7%BB%8D.png" alt="01_shell介绍"></p>
<p>##3. shell脚本</p>
<h3 id="㈠-什么是shell脚本？"><a href="#㈠-什么是shell脚本？" class="headerlink" title="㈠ 什么是shell脚本？"></a>㈠ 什么是shell脚本？</h3><ul>
<li>一句话概括</li>
</ul>
<p>简单来说就是将==需要执行的命令==保存到文本中，==按照顺序执行==。它是解释型的，意味着不需要编译。</p>
<ul>
<li>准确叙述</li>
</ul>
<p><strong>若干命令 + 脚本的基本格式 + 脚本特定语法 + 思想= shell脚本</strong></p>
<h3 id="㈡-什么时候用到脚本"><a href="#㈡-什么时候用到脚本" class="headerlink" title="㈡ 什么时候用到脚本?"></a>㈡ 什么时候用到脚本?</h3><p><strong>重复化</strong>、复杂化的工作，通过把工作的命令写成脚本，以后仅仅需要执行脚本就能完成这些工作。</p>
<h3 id="㈢-shell脚本能干啥"><a href="#㈢-shell脚本能干啥" class="headerlink" title="㈢ shell脚本能干啥?"></a>㈢ shell脚本能干啥?</h3><p> ①自动化软件部署    LAMP/LNMP/Tomcat…    </p>
<p> ②自动化管理        系统初始化脚本、批量更改主机密码、推送公钥…</p>
<p> ③==自动化分析处理==     统计网站访问量</p>
<p> ④==自动化备份==        数据库备份、日志转储…</p>
<p> ⑤自动化监控脚本</p>
<h3 id="㈣-如何学习shell脚本？"><a href="#㈣-如何学习shell脚本？" class="headerlink" title="㈣ 如何学习shell脚本？"></a>㈣ 如何学习shell脚本？</h3><ol>
<li>尽可能记忆更多的命令(记忆命令使用功能和场景)</li>
<li>掌握脚本的标准的格式（指定魔法字节、使用标准的执行方式运行脚本）</li>
<li>必须==<strong>熟悉掌握</strong>==脚本的基本语法（重点)</li>
</ol>
<h3 id="㈤-学习shell脚本的秘诀"><a href="#㈤-学习shell脚本的秘诀" class="headerlink" title="㈤ 学习shell脚本的秘诀"></a>㈤ 学习shell脚本的秘诀</h3><p>多看（看懂）——&gt;模仿（多练）——&gt;多思考（多写）</p>
<h3 id="㈥-shell脚本的基本写法"><a href="#㈥-shell脚本的基本写法" class="headerlink" title="㈥ shell脚本的基本写法"></a>㈥ shell脚本的基本写法</h3><p>1）<strong>脚本第一行</strong>，魔法字符==<strong>#!</strong>==指定解释器【==必写==】</p>
<p><code>#!/bin/bash</code>  表示以下内容使用bash解释器解析</p>
<p><strong>==注意：==</strong><br>如果直接将解释器路径写死在脚本里，可能在某些系统就会存在找不到解释器的兼容性问题，所以可以使用:<code>#!/bin/env 解释器</code></p>
<p>2）<strong>脚本第二部分</strong>，注释(#号)说明，对脚本的基本信息进行描述【可选】</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下内容是对脚本的基本信息的描述</span></span><br><span class="line"><span class="comment"># Name: 名字</span></span><br><span class="line"><span class="comment"># Desc:描述describe</span></span><br><span class="line"><span class="comment"># Path:存放路径</span></span><br><span class="line"><span class="comment"># Usage:用法</span></span><br><span class="line"><span class="comment"># Update:更新时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#下面就是脚本的具体内容</span></span><br><span class="line">commands</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>3）<strong>脚本第三部分</strong>，脚本要实现的具体代码内容</p>
<h3 id="㈦-shell脚本的执行方法"><a href="#㈦-shell脚本的执行方法" class="headerlink" title="㈦ shell脚本的执行方法"></a>㈦ shell脚本的执行方法</h3><ul>
<li>标准脚本执行方法（建议）</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>) 编写人生第一个shell脚本</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># cat first_shell.sh</span></span><br><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下内容是对脚本的基本信息的描述</span></span><br><span class="line"><span class="comment"># Name: first_shell.sh</span></span><br><span class="line"><span class="comment"># Desc: num1</span></span><br><span class="line"><span class="comment"># Path: /shell01/first_shell.sh</span></span><br><span class="line"><span class="comment"># Usage:/shell01/first_shell.sh</span></span><br><span class="line"><span class="comment"># Update:2019-05-05</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) 脚本增加可执行权限</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># chmod +x first_shell.sh</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) 标准方式执行脚本</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># pwd</span></span><br><span class="line">/shell01</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># /shell01/first_shell.sh</span></span><br><span class="line">或者</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># ./first_shell.sh</span></span><br><span class="line"></span><br><span class="line">注意：标准执行方式脚本必须要有可执行权限。</span><br></pre></td></tr></table></figure>

<ul>
<li>非标准的执行方法（不建议）</li>
</ul>
<ol>
<li>直接在命令行指定解释器执行</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># bash first_shell.sh</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># sh first_shell.sh</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># bash -x first_shell.sh</span></span><br><span class="line">+ <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line">+ <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line">+ <span class="built_in">echo</span> <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line"><span class="literal">-x</span>:一般用于排错，查看脚本的执行过程</span><br><span class="line"><span class="literal">-n</span>:用来查看脚本的语法是否有问题</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>使用<code>source</code>命令读取脚本文件,执行文件里的代码</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell01</span>]<span class="comment"># source first_shell.sh</span></span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure>

<p><strong>小试牛刀：</strong>写一个木有灵魂的脚本，要求如下：</p>
<ol>
<li><p>删除/tmp/目录下的所有文件</p>
</li>
<li><p>然后在/tmp目录里创建3个目录，分别是dir1~dir3     </p>
</li>
<li><p>拷贝/etc/hosts文件到刚创建的dir1目录里       </p>
</li>
<li><p>最后打印”==报告首长，任务已于2019-05-05 10:10:10时间完成==”内容   </p>
<p><code>echo &quot;报告首长，任务已于$(date +&#39;%F %T&#39;)&quot;</code></p>
</li>
</ol>
<h1 id="二、变量的定义"><a href="#二、变量的定义" class="headerlink" title="二、变量的定义"></a>二、变量的定义</h1><h2 id="1-变量是什么？"><a href="#1-变量是什么？" class="headerlink" title="1. 变量是什么？"></a>1. 变量是什么？</h2><p>一句话概括：变量是用来临时保存数据的，该数据是可以变化的数据。</p>
<h2 id="2-什么时候需要定义变量？"><a href="#2-什么时候需要定义变量？" class="headerlink" title="2. 什么时候需要定义变量？"></a>2. 什么时候需要定义变量？</h2><ul>
<li>如果某个内容需要多次使用，并且在代码中<strong>重复出现</strong>，那么可以用变量代表该内容。这样在修改内容的时候，仅仅需要修改变量的值。</li>
<li>在代码运作的过程中，可能会把某些命令的执行结果保存起来，后续代码需要使用这些结果，就可以直接使用这个变量。</li>
</ul>
<h2 id="3-变量如何定义？"><a href="#3-变量如何定义？" class="headerlink" title="3.变量如何定义？"></a>3.变量如何定义？</h2><p><strong>变量名=====变量值</strong></p>
<p>变量名：用来临时保存数据的</p>
<p>变量值：就是临时的可变化的数据</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=hello			定义变量A</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A			调用变量A，要给钱的，不是人民币是美元&quot;$&quot;</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;A&#125;		还可以这样调用，不管你的姿势多优雅，总之要给钱</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=world			因为是变量所以可以变，移情别恋是常事</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A			不管你是谁，只要调用就要给钱</span></span><br><span class="line">world</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset A			不跟你玩了，取消变量</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A			从此，我单身了，你可以给我介绍任何人</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="4-变量的定义规则"><a href="#4-变量的定义规则" class="headerlink" title="4. 变量的定义规则"></a>4. 变量的定义规则</h2><p>虽然可以给变量（变量名）赋予任何值；但是，对于==变量名==也是要求的！:unamused:</p>
<h3 id="㈠-变量名区分大小写"><a href="#㈠-变量名区分大小写" class="headerlink" title="㈠ 变量名区分大小写"></a>㈠ 变量名区分大小写</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># a=world</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $a</span></span><br><span class="line">world</span><br></pre></td></tr></table></figure>

<h3 id="㈡-变量名不能有特殊符号"><a href="#㈡-变量名不能有特殊符号" class="headerlink" title="㈡ 变量名不能有特殊符号"></a>㈡ 变量名不能有特殊符号</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># *A=hello</span></span><br><span class="line"><span class="literal">-bash</span>: *A=hello: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># ?A=hello</span></span><br><span class="line"><span class="literal">-bash</span>: ?A=hello: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># @A=hello</span></span><br><span class="line"><span class="literal">-bash</span>: @A=hello: command not found</span><br><span class="line"></span><br><span class="line">特别说明：对于有空格的字符串给变量赋值时，要用引号引起来</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=hello world</span></span><br><span class="line"><span class="literal">-bash</span>: world: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=&quot;hello world&quot;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=&#x27;hello world&#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="㈢-变量名不能以数字开头"><a href="#㈢-变量名不能以数字开头" class="headerlink" title="㈢ 变量名不能以数字开头"></a>㈢ 变量名不能以数字开头</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># 1A=hello</span></span><br><span class="line"><span class="literal">-bash</span>: <span class="number">1</span>A=hello: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A1=hello</span></span><br><span class="line">注意：不能以数字开头并不代表变量名中不能包含数字呦。</span><br></pre></td></tr></table></figure>

<h3 id="㈣-等号两边不能有任何空格"><a href="#㈣-等号两边不能有任何空格" class="headerlink" title="㈣ 等号两边不能有任何空格"></a>㈣ 等号两边不能有任何空格</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A =123</span></span><br><span class="line"><span class="literal">-bash</span>: A: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A= 123</span></span><br><span class="line"><span class="literal">-bash</span>: <span class="number">123</span>: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A = 123</span></span><br><span class="line"><span class="literal">-bash</span>: A: command not found</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>

<h3 id="㈤-变量名尽量做到见名知意"><a href="#㈤-变量名尽量做到见名知意" class="headerlink" title="㈤ 变量名尽量做到见名知意"></a>㈤ 变量名尽量做到见名知意</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">NTP_IP=<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="built_in">DIR</span>=/u01/app1</span><br><span class="line">TMP_FILE=/var/log/<span class="number">1</span>.log</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">说明：一般变量名使用大写（小写也可以），不要同一个脚本中变量全是a,b,c等不容易阅读</span><br></pre></td></tr></table></figure>

<h2 id="5-变量的定义方式有哪些？"><a href="#5-变量的定义方式有哪些？" class="headerlink" title="5. 变量的定义方式有哪些？"></a>5. 变量的定义方式有哪些？</h2><h3 id="㈠-基本方式"><a href="#㈠-基本方式" class="headerlink" title="㈠ 基本方式"></a>㈠ 基本方式</h3><blockquote>
<p>直接赋值给一个变量</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=1234567</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line"><span class="number">1234567</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;A:2:4&#125;		表示从A变量中第3个字符开始截取，截取4个字符</span></span><br><span class="line"><span class="number">3456</span></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line"><span class="variable">$</span>变量名 和 <span class="variable">$</span>&#123;变量名&#125;的异同</span><br><span class="line">相同点：都可以调用变量</span><br><span class="line">不同点：<span class="variable">$</span>&#123;变量名&#125;可以只截取变量的一部分，而<span class="variable">$</span>变量名不可以</span><br></pre></td></tr></table></figure>

<h3 id="㈡-命令执行结果赋值给变量"><a href="#㈡-命令执行结果赋值给变量" class="headerlink" title="㈡ 命令执行结果赋值给变量"></a>㈡ 命令执行结果赋值给变量</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># B=`date +%F`</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $B</span></span><br><span class="line"><span class="number">2019</span><span class="literal">-04</span><span class="literal">-16</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># C=$(uname -r)</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $C</span></span><br><span class="line"><span class="number">2.6</span>.<span class="number">32</span><span class="literal">-696</span>.el6.x86_64</span><br></pre></td></tr></table></figure>

<h3 id="㈢-交互式定义变量-read"><a href="#㈢-交互式定义变量-read" class="headerlink" title="㈢ ==交互式定义变量(read)=="></a>㈢ ==交互式定义变量(read)==</h3><p><strong>目的：</strong>让==用户自己==给变量赋值，比较灵活。</p>
<p><strong>语法：</strong><code>read [选项] 变量名</code></p>
<p><strong>常见选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>释义</th>
</tr>
</thead>
<tbody><tr>
<td>-p</td>
<td>定义提示用户的信息</td>
</tr>
<tr>
<td>-n</td>
<td>定义字符数（限制变量值的长度）</td>
</tr>
<tr>
<td>-s</td>
<td>不显示（不显示用户输入的内容）</td>
</tr>
<tr>
<td>-t</td>
<td>定义超时时间，默认单位为秒（限制用户输入变量值的超时时间）</td>
</tr>
</tbody></table>
<p><strong>举例说明：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">用法<span class="number">1</span>：用户自己定义变量值</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># read name</span></span><br><span class="line">harry</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $name</span></span><br><span class="line">harry</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># read -p &quot;Input your name:&quot; name</span></span><br><span class="line">Input your name:tom</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $name</span></span><br><span class="line">tom</span><br><span class="line"></span><br><span class="line">用法<span class="number">2</span>：变量值来自文件</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># cat 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span> <span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># read ip mask &lt; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $ip</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $mask</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br></pre></td></tr></table></figure>

<h3 id="㈣-定义有类型的变量-declare"><a href="#㈣-定义有类型的变量-declare" class="headerlink" title="㈣ 定义有类型的变量(==declare==)"></a>㈣ 定义有类型的变量(==declare==)</h3><p><strong>目的：</strong>给变量做一些限制，固定变量的类型，比如：整型、只读</p>
<p><strong>用法：</strong><code>declare 选项 变量名=变量值</code></p>
<p><strong>常用选项：</strong></p>
<table>
<thead>
<tr>
<th>选项</th>
<th>释义</th>
<th>举例</th>
</tr>
</thead>
<tbody><tr>
<td>==-i==</td>
<td>将变量看成整数</td>
<td>declare -i A=123</td>
</tr>
<tr>
<td>==-r==</td>
<td>定义只读变量</td>
<td>declare -r B=hello</td>
</tr>
<tr>
<td>-a</td>
<td>定义普通数组；查看普通数组</td>
<td></td>
</tr>
<tr>
<td>-A</td>
<td>定义关联数组；查看关联数组</td>
<td></td>
</tr>
<tr>
<td>-x</td>
<td>将变量通过环境导出</td>
<td>declare -x AAA=123456 等于 export AAA=123456</td>
</tr>
</tbody></table>
<p><strong>举例说明：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># declare -i A=123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># A=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $A</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># declare -r B=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $B</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># B=world</span></span><br><span class="line"><span class="literal">-bash</span>: B: readonly variable</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset B</span></span><br><span class="line"><span class="literal">-bash</span>: unset: B: cannot unset: readonly variable</span><br></pre></td></tr></table></figure>

<h2 id="6-变量的分类"><a href="#6-变量的分类" class="headerlink" title="6. 变量的分类"></a>6. 变量的分类</h2><h3 id="㈠-本地变量"><a href="#㈠-本地变量" class="headerlink" title="㈠ 本地变量"></a>㈠ 本地变量</h3><ul>
<li>**==本地变量==**：当前用户自定义的变量。当前进程中有效，其他进程及当前进程的子进程无效。</li>
</ul>
<h3 id="㈡-环境变量"><a href="#㈡-环境变量" class="headerlink" title="㈡ 环境变量"></a>㈡ 环境变量</h3><ul>
<li><strong>环境变量</strong>：当前进程有效，并且能够被<strong>子进程</strong>调用。<ul>
<li><code>env</code>查看当前用户的环境变量</li>
<li><code>set</code>查询当前用户的所有变量(临时变量与环境变量) </li>
<li><code>export 变量名=变量值</code>    或者  <code>变量名=变量值；export 变量名</code></li>
</ul>
</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># export A=hello		临时将一个本地变量（临时变量）变成环境变量</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># env|grep ^A</span></span><br><span class="line">A=hello</span><br><span class="line"></span><br><span class="line">永久生效：</span><br><span class="line">vim /etc/profile 或者 ~/.bashrc</span><br><span class="line">export A=hello</span><br><span class="line">或者</span><br><span class="line">A=hello</span><br><span class="line">export A</span><br><span class="line"></span><br><span class="line">说明：系统中有一个变量PATH，环境变量</span><br><span class="line">export PATH=/usr/local/mysql/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>

<h3 id="㈢-全局变量"><a href="#㈢-全局变量" class="headerlink" title="㈢ 全局变量"></a>㈢ 全局变量</h3><ul>
<li><p><strong>全局变量</strong>：全局所有的用户和程序都能调用，且继承，新建的用户也默认能调用.</p>
</li>
<li><p><strong>解读相关配置文件</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th>文件名</th>
<th>说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>$HOME/.bashrc</td>
<td>当前用户的bash信息,用户==登录==时读取</td>
<td>定义别名、umask、函数等</td>
</tr>
<tr>
<td>$HOME/.bash_profile</td>
<td>当前用户的环境变量，用户==登录==时读取</td>
<td></td>
</tr>
<tr>
<td>$HOME/.bash_logout</td>
<td>当前用户==退出==当前shell时最后读取</td>
<td>定义用户退出时执行的程序等</td>
</tr>
<tr>
<td>/etc/bashrc</td>
<td>全局的bash信息，所有用户都生效</td>
<td></td>
</tr>
<tr>
<td>/etc/profile</td>
<td>全局环境变量信息</td>
<td>系统和所有用户都生效</td>
</tr>
<tr>
<td>$HOME/.bash_history</td>
<td>用户的历史命令</td>
<td>history -w   保存历史记录         history -c  清空历史记录</td>
</tr>
</tbody></table>
<p><strong>说明：</strong>以上文件修改后，都需要重新==source==让其生效或者退出重新登录。</p>
<ul>
<li><strong>用户登录</strong>系统<strong>读取</strong>相关==文件的顺序==<ol>
<li><code>/etc/profile</code></li>
<li><code>$HOME/.bash_profile</code></li>
<li><code>$HOME/.bashrc</code></li>
<li><code>/etc/bashrc</code></li>
<li><code>$HOME/.bash_logout</code></li>
</ol>
</li>
</ul>
<h3 id="㈣-系统变量"><a href="#㈣-系统变量" class="headerlink" title="㈣ ==系统变量=="></a>㈣ ==系统变量==</h3><ul>
<li><strong>系统变量(内置bash中变量)</strong> ： shell本身已经固定好了它的名字和作用.</li>
</ul>
<table>
<thead>
<tr>
<th>内置变量</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>==$?==</td>
<td>上一条命令执行后返回的状态；状态值为0表示执行正常，==非0==表示执行异常或错误</td>
</tr>
<tr>
<td>$0</td>
<td>当前执行的程序或脚本名</td>
</tr>
<tr>
<td>==$#==</td>
<td>脚本后面接的参数的==个数==</td>
</tr>
<tr>
<td>==$*==</td>
<td>脚本后面==所有参数==，参数当成一个整体输出，每一个变量参数之间以空格隔开</td>
</tr>
<tr>
<td>==$@==</td>
<td>脚本后面==所有参数==，参数是独立的，也是全部输出</td>
</tr>
<tr>
<td>==$1~$9==</td>
<td>脚本后面的==位置参数==，$1表示第1个位置参数，依次类推</td>
</tr>
<tr>
<td>${10}~${n}</td>
<td>扩展位置参数,第10个位置变量必须用{}大括号括起来(2位数字以上扩起来)</td>
</tr>
<tr>
<td>==$$==</td>
<td>当前所在进程的进程号，如<code>echo $$</code></td>
</tr>
<tr>
<td>$！</td>
<td>后台运行的最后一个进程号 (当前终端）</td>
</tr>
<tr>
<td>!$</td>
<td>调用最后一条命令历史中的==参数==</td>
</tr>
</tbody></table>
<ul>
<li>进一步了解位置参数<code>$1~$&#123;n&#125;</code></li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#了解shell内置变量中的位置参数含义</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$0</span> = <span class="variable">$0</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$</span># = <span class="variable">$</span>#&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$</span>* = <span class="variable">$</span>*&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$</span>@ = <span class="variable">$</span>@&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$1</span> = <span class="variable">$1</span>&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$2</span> = <span class="variable">$2</span>&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$3</span> = <span class="variable">$3</span>&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$11</span> = <span class="variable">$</span>&#123;11&#125;&quot;</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\<span class="variable">$12</span> = <span class="variable">$</span>&#123;12&#125;&quot;</span> </span><br></pre></td></tr></table></figure>

<ul>
<li>进一步了解$*和​$@的区别</li>
</ul>
<p><code>$*</code>：表示将变量看成一个整体<br><code>$@</code>：表示变量是独立的</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$</span>@&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;======我是分割线=======&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$</span>*&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># bash 3.sh a b c</span></span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br><span class="line">======我是分割线=======</span><br><span class="line">a b c</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h1 id="三、简单四则运算"><a href="#三、简单四则运算" class="headerlink" title="三、简单四则运算"></a>三、简单四则运算</h1><p>算术运算：默认情况下，shell就只能支持简单的==整数==运算</p>
<p>运算内容：加(+)、减(-)、乘(*)、除(/)、求余数（%）</p>
<h2 id="1-四则运算符号"><a href="#1-四则运算符号" class="headerlink" title="1. 四则运算符号"></a>1. 四则运算符号</h2><table>
<thead>
<tr>
<th>表达式</th>
<th>举例</th>
</tr>
</thead>
<tbody><tr>
<td>$((  ))</td>
<td>echo $((1+1))</td>
</tr>
<tr>
<td>$[ ]</td>
<td>echo $[10-5]</td>
</tr>
<tr>
<td>expr</td>
<td>expr 10 / 5</td>
</tr>
<tr>
<td>let</td>
<td>n=1;let n+=1  等价于  let n=n+1</td>
</tr>
</tbody></table>
<h2 id="2-了解i-和-i"><a href="#2-了解i-和-i" class="headerlink" title="2.了解i++和++i"></a>2.了解i++和++i</h2><ul>
<li>对变量的值的影响</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># i=1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># let i++</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $i</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># j=1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># let ++j</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $j</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>

<ul>
<li>对==表达式==的值的影响</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset i j</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># i=1;j=1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># let x=i++         先赋值，再运算</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># let y=++j         先运算，再赋值</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $i</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $j</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $x</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $y</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure>



<h1 id="四、扩展补充"><a href="#四、扩展补充" class="headerlink" title="四、扩展补充"></a>四、扩展补充</h1><h2 id="1-数组定义"><a href="#1-数组定义" class="headerlink" title="1. 数组定义"></a>1. 数组定义</h2><h3 id="㈠-数组分类"><a href="#㈠-数组分类" class="headerlink" title="㈠ 数组分类"></a>㈠ 数组分类</h3><ul>
<li>普通数组：只能使用整数作为数组索引(元素的下标)</li>
<li>关联数组：可以使用字符串作为数组索引(元素的下标)</li>
</ul>
<h3 id="㈡-普通数组定义"><a href="#㈡-普通数组定义" class="headerlink" title="㈡ 普通数组定义"></a>㈡ 普通数组定义</h3><ul>
<li>一次赋予一个值</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">数组名[索引下标]=值</span><br><span class="line">array[<span class="number">0</span>]=v1</span><br><span class="line">array[<span class="number">1</span>]=v2</span><br><span class="line">array[<span class="number">2</span>]=v3</span><br><span class="line">array[<span class="number">3</span>]=v4</span><br></pre></td></tr></table></figure>

<ul>
<li>一次赋予多个值</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">数组名=(值<span class="number">1</span> 值<span class="number">2</span> 值<span class="number">3</span> ...)</span><br><span class="line">array=(var1 var2 var3 var4)</span><br><span class="line"></span><br><span class="line">array1=(`cat /etc/passwd`)			将文件中每一行赋值给array1数组</span><br><span class="line">array2=(`ls /root`)</span><br><span class="line">array3=(harry amy jack <span class="string">&quot;Miss Hou&quot;</span>)</span><br><span class="line">array4=(<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="string">&quot;hello world&quot;</span> [<span class="number">10</span>]=linux)</span><br></pre></td></tr></table></figure>

<h3 id="㈢-数组的读取"><a href="#㈢-数组的读取" class="headerlink" title="㈢ 数组的读取"></a>㈢ 数组的读取</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$</span>&#123;数组名[元素下标]&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;array[<span class="number">0</span>]&#125;			获取数组里第一个元素</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;array[*]&#125;			获取数组里的所有元素</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;<span class="comment">#array[*]&#125;			获取数组里所有元素个数</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;!array[<span class="selector-tag">@</span>]&#125;    	获取数组元素的索引下标</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>&#123;array[<span class="selector-tag">@</span>]:<span class="number">1</span>:<span class="number">2</span>&#125;    访问指定的元素；<span class="number">1</span>代表从下标为<span class="number">1</span>的元素开始获取；<span class="number">2</span>代表获取后面几个元素</span><br><span class="line"></span><br><span class="line">查看普通数组信息：</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># declare -a</span></span><br></pre></td></tr></table></figure>

<h3 id="㈣-关联数组定义"><a href="#㈣-关联数组定义" class="headerlink" title="㈣ 关联数组定义"></a>㈣ 关联数组定义</h3><h4 id="①首先声明关联数组"><a href="#①首先声明关联数组" class="headerlink" title="①首先声明关联数组"></a>①首先声明关联数组</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">declare <span class="literal">-A</span> asso_array1</span><br><span class="line">declare <span class="literal">-A</span> asso_array2</span><br><span class="line">declare <span class="literal">-A</span> asso_array3</span><br></pre></td></tr></table></figure>

<h4 id="②-数组赋值"><a href="#②-数组赋值" class="headerlink" title="② 数组赋值"></a>② 数组赋值</h4><ul>
<li>一次赋一个值</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">数组名[索引<span class="type">or</span>下标]=变量值</span><br><span class="line"><span class="comment"># asso_array1[linux]=one</span></span><br><span class="line"><span class="comment"># asso_array1[java]=two</span></span><br><span class="line"><span class="comment"># asso_array1[php]=three</span></span><br></pre></td></tr></table></figure>

<ul>
<li>一次赋多个值</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># asso_array2=([name1]=harry [name2]=jack [name3]=amy [name4]=&quot;Miss Hou&quot;)</span></span><br></pre></td></tr></table></figure>

<ul>
<li>查看关联数组</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># declare -A</span></span><br><span class="line">declare <span class="literal">-A</span> asso_array1=<span class="string">&#x27;([php]=&quot;three&quot; [java]=&quot;two&quot; [linux]=&quot;one&quot; )&#x27;</span></span><br><span class="line">declare <span class="literal">-A</span> asso_array2=<span class="string">&#x27;([name3]=&quot;amy&quot; [name2]=&quot;jack&quot; [name1]=&quot;harry&quot; [name4]=&quot;Miss Hou&quot; )&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>获取关联数组值</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># echo $&#123;asso_array1[linux]&#125;</span></span><br><span class="line">one</span><br><span class="line"><span class="comment"># echo $&#123;asso_array1[php]&#125;</span></span><br><span class="line">three</span><br><span class="line"><span class="comment"># echo $&#123;asso_array1[*]&#125;</span></span><br><span class="line">three two one</span><br><span class="line"><span class="comment"># echo $&#123;!asso_array1[*]&#125;</span></span><br><span class="line">php java linux</span><br><span class="line"><span class="comment"># echo $&#123;#asso_array1[*]&#125;</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="comment"># echo $&#123;#asso_array2[*]&#125;</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="comment"># echo $&#123;!asso_array2[*]&#125;</span></span><br><span class="line">name3 name2 name1 name4</span><br></pre></td></tr></table></figure>

<ul>
<li>其他定义方式</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># declare -A books</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># let books[linux]++</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># declare -A|grep books</span></span><br><span class="line">declare <span class="literal">-A</span> books=<span class="string">&#x27;([linux]=&quot;1&quot; )&#x27;</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># let books[linux]++</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># declare -A|grep books</span></span><br><span class="line">declare <span class="literal">-A</span> books=<span class="string">&#x27;([linux]=&quot;2&quot; )&#x27;</span></span><br></pre></td></tr></table></figure>



<h2 id="2-其他变量定义"><a href="#2-其他变量定义" class="headerlink" title="2. 其他变量定义"></a>2. 其他变量定义</h2><ul>
<li>取出一个目录下的目录和文件：<code>dirname</code>和 <code>basename</code> </li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># A=/root/Desktop/shell/mem.txt </span></span><br><span class="line"><span class="comment"># echo $A</span></span><br><span class="line">/root/Desktop/shell/mem.txt</span><br><span class="line"><span class="comment"># dirname $A   取出目录</span></span><br><span class="line">/root/Desktop/shell</span><br><span class="line"><span class="comment"># basename $A  取出文件</span></span><br><span class="line">mem.txt</span><br></pre></td></tr></table></figure>

<ul>
<li>变量”内容”的删除和替换</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">一个“%”代表从右往左去掉一个/key/</span><br><span class="line">两个“%%”代表从右往左最大去掉/key/</span><br><span class="line">一个“<span class="comment">#”代表从左往右去掉一个/key/</span></span><br><span class="line">两个“<span class="comment">##”代表从左往右最大去掉/key/</span></span><br><span class="line"></span><br><span class="line">举例说明：</span><br><span class="line"><span class="comment"># url=www.taobao.com</span></span><br><span class="line"><span class="comment"># echo $&#123;#url&#125;		     获取变量的长度</span></span><br><span class="line"><span class="comment"># echo $&#123;url#*.&#125;</span></span><br><span class="line"><span class="comment"># echo $&#123;url##*.&#125;</span></span><br><span class="line"><span class="comment"># echo $&#123;url%.*&#125;</span></span><br><span class="line"><span class="comment"># echo $&#123;url%%.*&#125;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>以下了解，自己完成</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">替换：/ 和 //</span><br><span class="line"> <span class="number">1015</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;url/ao/AO&#125;</span><br><span class="line"> <span class="number">1017</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;url//ao/AO&#125;   贪婪替换</span><br><span class="line"> </span><br><span class="line">替代： - 和 :-  +和:+</span><br><span class="line"> <span class="number">1019</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc<span class="literal">-123</span>&#125;</span><br><span class="line"> <span class="number">1020</span>  abc=hello</span><br><span class="line"> <span class="number">1021</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc<span class="literal">-444</span>&#125;</span><br><span class="line"> <span class="number">1022</span>  <span class="built_in">echo</span> <span class="variable">$abc</span></span><br><span class="line"> <span class="number">1024</span>  abc=</span><br><span class="line"> <span class="number">1025</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc<span class="literal">-222</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名-新的变量值&#125; 或者 <span class="variable">$</span>&#123;变量名=新的变量值&#125;</span><br><span class="line">变量没有被赋值：会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值（包括空值）： 不会被替代</span><br><span class="line"></span><br><span class="line"> <span class="number">1062</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;ABC:<span class="literal">-123</span>&#125;</span><br><span class="line"> <span class="number">1063</span>  ABC=HELLO</span><br><span class="line"> <span class="number">1064</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;ABC:<span class="literal">-123</span>&#125;</span><br><span class="line"> <span class="number">1065</span>  ABC=</span><br><span class="line"> <span class="number">1066</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;ABC:<span class="literal">-123</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名:-新的变量值&#125; 或者 <span class="variable">$</span>&#123;变量名:=新的变量值&#125;</span><br><span class="line">变量没有被赋值或者赋空值：会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值： 不会被替代</span><br><span class="line"></span><br><span class="line"> <span class="number">1116</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc=<span class="number">123</span>&#125;</span><br><span class="line"> <span class="number">1118</span>  <span class="built_in">echo</span> <span class="variable">$</span>&#123;abc:=<span class="number">123</span>&#125;</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:+123&#125;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:+123&#125;</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:+123&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名+新的变量值&#125;</span><br><span class="line">变量没有被赋值或者赋空值：不会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值： 会被替代</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc+123&#125;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc+123&#125;</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc+123&#125;</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="variable">$</span>&#123;变量名:+新的变量值&#125;</span><br><span class="line">变量没有被赋值：不会使用“新的变量值“ 替代</span><br><span class="line">变量有被赋值（包括空值）： 会被替代</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc?123&#125;</span></span><br><span class="line"><span class="literal">-bash</span>: abc: <span class="number">123</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc?123&#125;</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc?123&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名?新的变量值&#125;</span><br><span class="line">变量没有被赋值:提示错误信息</span><br><span class="line">变量被赋值（包括空值）：不会使用“新的变量值“ 替代</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># unset abc</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:?123&#125;</span></span><br><span class="line"><span class="literal">-bash</span>: abc: <span class="number">123</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=hello</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:?123&#125;</span></span><br><span class="line">hello</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># abc=</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~]<span class="comment"># echo $&#123;abc:?123&#125;</span></span><br><span class="line"><span class="literal">-bash</span>: abc: <span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$</span>&#123;变量名:?新的变量值&#125;</span><br><span class="line">变量没有被赋值或者赋空值时:提示错误信息</span><br><span class="line">变量被赋值：不会使用“新的变量值“ 替代</span><br><span class="line"></span><br><span class="line">说明：?主要是当变量没有赋值提示错误信息的，没有赋值功能</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>07_SHELL编程之文本处理工具sed</title>
    <url>/2021/01/07/linux/07_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7sed/</url>
    <content><![CDATA[<p>#课程目标</p>
<ul>
<li>掌握sed的基本语法结构</li>
<li>熟悉sed常用的命令，如打印p，删除d，插入i等</li>
</ul>
<span id="more"></span>

<h1 id="一、文件编辑器知多少"><a href="#一、文件编辑器知多少" class="headerlink" title="一、文件编辑器知多少"></a>一、文件编辑器知多少</h1><ul>
<li><strong>Windows系统​</strong>    </li>
</ul>
<p> <img src="./edit.png" alt="edit"></p>
<ul>
<li><strong>Linux系统</strong></li>
</ul>
<p>​    ==vim      vi==     gedit  nano  emacs</p>
<p>#二、强悍的sed介绍</p>
<h2 id="1-sed用来做啥？"><a href="#1-sed用来做啥？" class="headerlink" title="1. sed用来做啥？"></a>1. sed用来做啥？</h2><p>sed是Stream Editor（流编辑器）的缩写，简称流编辑器；用来==处理文件==的。</p>
<h2 id="2-sed如何处理文件？"><a href="#2-sed如何处理文件？" class="headerlink" title="2. sed如何处理文件？"></a>2. sed如何处理文件？</h2><blockquote>
<p> sed是==一行一行读取==文件内容并==按照要求==进行==处理==，把处理后的结果==输出到屏幕==。</p>
</blockquote>
<p><img src="./sed.png" alt="sed"></p>
<ol>
<li>首先sed读取文件中的一行内容，把其保存在一个==临时缓存区中==（也称为模式空间）</li>
<li>然后==根据需求==处理临时缓冲区中的行，完成后把该行==发送到屏幕上==</li>
</ol>
<p><strong>总结：</strong></p>
<ol>
<li>由于sed把每一行都存在临时缓冲区中，对这个<strong>副本</strong>进行编辑，所以==不会直接修改原文件==</li>
<li>Sed主要用来自动编辑一个或多个文件；简化对文件的反复操作,对文件进行过滤和转换操作</li>
</ol>
<p>#三、sed使用方法介绍</p>
<blockquote>
<p> sed常见的语法格式有两种，一种叫==命令行==模式，另一种叫==脚本==模式。</p>
</blockquote>
<h2 id="1-命令行格式"><a href="#1-命令行格式" class="headerlink" title="1. 命令行格式"></a>1. 命令行格式</h2><h3 id="㈠-语法格式"><a href="#㈠-语法格式" class="headerlink" title="㈠ 语法格式"></a>㈠ 语法格式</h3><p>sed  [options]    ==<strong>‘</strong>==处理动作**==’==**   文件名</p>
<ul>
<li><strong>常用选项</strong></li>
</ul>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>-e</td>
<td>进行多项(多次)编辑</td>
<td></td>
</tr>
<tr>
<td>==-n==</td>
<td>取消默认输出</td>
<td>不自动打印模式空间</td>
</tr>
<tr>
<td>==-r==</td>
<td>使用扩展==正则表达式==</td>
<td></td>
</tr>
<tr>
<td>==-i==</td>
<td>原地编辑（修改源文件）</td>
<td></td>
</tr>
<tr>
<td>-f</td>
<td>指定sed脚本的文件名</td>
<td></td>
</tr>
</tbody></table>
<ul>
<li><strong>==常见处理动作==</strong></li>
</ul>
<p><strong>丑话说在前面</strong>：以下所有的==动作==都要在<strong>单引号</strong>里，你敢出轨，回家跪搓衣板</p>
<table>
<thead>
<tr>
<th>动作</th>
<th>说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>‘p’</td>
<td>打印</td>
<td></td>
</tr>
<tr>
<td>‘i’</td>
<td>在指定行==之前==插入内容</td>
<td>类似vim里的大写O</td>
</tr>
<tr>
<td>‘a’</td>
<td>在指定行==之后==插入内容</td>
<td>类似vim里的小写o</td>
</tr>
<tr>
<td>‘c’</td>
<td>替换指定行所有内容</td>
<td></td>
</tr>
<tr>
<td>‘d’</td>
<td>删除指定行</td>
<td></td>
</tr>
</tbody></table>
<h3 id="㈡-举例说明"><a href="#㈡-举例说明" class="headerlink" title="㈡ 举例说明"></a>㈡ 举例说明</h3><ul>
<li>文件准备</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim a.txt </span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:<span class="number">2</span>:<span class="number">2</span>:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>:x:<span class="number">4</span>:<span class="number">7</span>:<span class="built_in">lp</span>:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="number">298374837483</span></span><br><span class="line"><span class="number">172.16</span>.<span class="number">0.254</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br></pre></td></tr></table></figure>

<h4 id="①-对文件进行-增、删、改、查-操作"><a href="#①-对文件进行-增、删、改、查-操作" class="headerlink" title="① 对文件进行==增、删、改、查==操作"></a>① 对文件进行==增、删、改、查==操作</h4><blockquote>
<p>语法：sed  选项    <strong>==’==<strong>定位+命令</strong>==’==</strong>    需要处理的文件</p>
</blockquote>
<h5 id="1）打印文件内容"><a href="#1）打印文件内容" class="headerlink" title="1）打印文件内容"></a>1）打印文件内容</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;&#x27;  a.txt						对文件什么都不做</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;p&#x27;  a.txt					打印每一行，并取消默认输出</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1p&#x27;  a.txt					打印第1行</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;2p&#x27;  a.txt					打印第2行</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,5p&#x27;  a.txt				打印1到5行</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;$p&#x27; a.txt 					打印最后1行</span></span><br></pre></td></tr></table></figure>

<h5 id="2）增加文件内容"><a href="#2）增加文件内容" class="headerlink" title="2）增加文件内容"></a>2）增加文件内容</h5><p>i    地址定位的上面插入</p>
<p>a   下面插入</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;$a99999&#x27; a.txt 				文件最后一行下面增加内容</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;a99999&#x27; a.txt 				文件每行下面增加内容</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;5a99999&#x27; a.txt 				文件第5行下面增加内容</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;$i99999&#x27; a.txt 				文件最后一行上一行增加内容</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;i99999&#x27; a.txt 				文件每行上一行增加内容</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;6i99999&#x27; a.txt 				文件第6行上一行增加内容</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;/^uucp/ihello&#x27;				以uucp开头行的上一行插入内容</span></span><br></pre></td></tr></table></figure>

<h5 id="3）修改文件内容"><a href="#3）修改文件内容" class="headerlink" title="3）修改文件内容"></a>3）修改文件内容</h5><p>c   替换指定的==整行==内容</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;5chello world&#x27; a.txt 		替换文件第5行内容</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;chello world&#x27; a.txt 		替换文件所有内容</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;1,5chello world&#x27; a.txt 	替换文件1到5号内容为hello world</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;/^user01/c888888&#x27; a.txt	替换以user01开头的行</span></span><br></pre></td></tr></table></figure>

<h5 id="4）删除文件内容"><a href="#4）删除文件内容" class="headerlink" title="4）删除文件内容"></a>4）删除文件内容</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;1d&#x27; a.txt 						删除文件第1行</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;1,5d&#x27; a.txt 					删除文件1到5行</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;$d&#x27; a.txt						删除文件最后一行</span></span><br></pre></td></tr></table></figure>

<h4 id="②-对文件进行搜索替换操作"><a href="#②-对文件进行搜索替换操作" class="headerlink" title="② ==对文件进行搜索替换操作=="></a>② ==对文件进行搜索替换操作==</h4><blockquote>
<p>语法：sed   选项   <strong>‘==s/搜索的内容/替换的内容/动作==’</strong>  需要处理的文件</p>
<p>其中，==<strong>s</strong>==表示search搜索；斜杠==<strong>/</strong>==表示分隔符，可以自己定义;动作一般是打印==<strong>p</strong>==和全局替换==<strong>g</strong>==</p>
</blockquote>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/root/ROOT/p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/root/ROOT/gp&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/^#//gp&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s@/sbin/nologin@itcast@gp&#x27; a.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/\/sbin\/nologin/itcast/gp&#x27; a.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;10s#/sbin/nologin#itcast#p&#x27; a.txt </span></span><br><span class="line">uucp:x:<span class="number">10</span>:<span class="number">14</span>:uucp:/var/spool/uucp:itcast</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s@/sbin/nologin@itcastheima@p&#x27; 2.txt </span></span><br><span class="line">注意：搜索替换中的分隔符可以自己指定</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,5s/^/#/p&#x27; a.txt 		注释掉文件的1-5行内容</span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#adm:x:3:4:adm:/var/adm:/sbin/nologin</span></span><br><span class="line"><span class="comment">#lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span></span><br></pre></td></tr></table></figure>

<h4 id="③-其他命令"><a href="#③-其他命令" class="headerlink" title="③ 其他命令"></a>③ 其他命令</h4><table>
<thead>
<tr>
<th>命令</th>
<th>解释</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>r</td>
<td>从另外文件中读取内容</td>
<td></td>
</tr>
<tr>
<td>w</td>
<td>内容另存为</td>
<td></td>
</tr>
<tr>
<td>&amp;</td>
<td>保存查找串以便在替换串中引用</td>
<td>和\(\)相同</td>
</tr>
<tr>
<td>=</td>
<td>打印行号</td>
<td></td>
</tr>
<tr>
<td>！</td>
<td>对所选行以外的所有行应用命令，放到行数之后</td>
<td>‘1,5!’</td>
</tr>
<tr>
<td>q</td>
<td>退出</td>
<td></td>
</tr>
</tbody></table>
<p><strong>举例说明：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">r</span>	从文件中读取输入行</span><br><span class="line">w	将所选的行写入文件</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;3r /etc/hosts&#x27; 2.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;$r /etc/hosts&#x27; 2.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;/root/w a.txt&#x27; 2.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;/[0-9]&#123;4&#125;/w a.txt&#x27; 2.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed  -r &#x27;/([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;/w b.txt&#x27; 2.txt</span></span><br><span class="line"></span><br><span class="line">!	对所选行以外的所有行应用命令，放到行数之后</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1!p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;4p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;4!p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat -n 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,17p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,17!p&#x27; 1.txt </span></span><br><span class="line"></span><br><span class="line">&amp;   保存查找串以便在替换串中引用   \(\)</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;/root/p&#x27; a.txt </span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/root/#&amp;/p&#x27; a.txt </span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -n &#x27;s/^root/#&amp;/p&#x27; passwd   注释掉以root开头的行</span></span><br><span class="line"><span class="comment"># sed -n -r &#x27;s/^root|^stu/#&amp;/p&#x27; /etc/passwd	注释掉以root开头或者以stu开头的行</span></span><br><span class="line"><span class="comment"># sed -n &#x27;1,5s/^[a-z].*/#&amp;/p&#x27; passwd  注释掉1~5行中以任意小写字母开头的行</span></span><br><span class="line"><span class="comment"># sed -n &#x27;1,5s/^/#/p&#x27; /etc/passwd  注释1~5行</span></span><br><span class="line">或者</span><br><span class="line">sed <span class="literal">-n</span> <span class="string">&#x27;1,5s/^/#/p&#x27;</span> passwd 以空开头的加上<span class="comment">#</span></span><br><span class="line">sed <span class="literal">-n</span> <span class="string">&#x27;1,5s/^#//p&#x27;</span> passwd 以<span class="comment">#开头的替换成空</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;/^root/p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/^root/#&amp;/p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;s/\(^root\)/#\1/p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -nr &#x27;/^root|^stu/p&#x27; 1.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -nr &#x27;s/^root|^stu/#&amp;/p&#x27; 1.txt </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">= 	打印行号</span><br><span class="line"><span class="comment"># sed -n &#x27;/bash$/=&#x27; passwd    打印以bash结尾的行的行号</span></span><br><span class="line"><span class="comment"># sed -ne &#x27;/root/=&#x27; -ne &#x27;/root/p&#x27; passwd </span></span><br><span class="line"><span class="comment"># sed -n &#x27;/nologin$/=;/nologin$/p&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># sed -ne &#x27;/nologin$/=&#x27; -ne &#x27;/nologin$/p&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line">q	退出</span><br><span class="line"><span class="comment"># sed &#x27;5q&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># sed &#x27;/mail/q&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># sed -r &#x27;/^yunwei|^mail/q&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;/bash$/p;10q&#x27; 1.txt</span></span><br><span class="line">ROOT:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">综合运用：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,5s/^/#&amp;/p&#x27; 1.txt </span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#adm:x:3:4:adm:/var/adm:/sbin/nologin</span></span><br><span class="line"><span class="comment">#lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;1,5s/\(^\)/#\1/p&#x27; 1.txt </span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#adm:x:3:4:adm:/var/adm:/sbin/nologin</span></span><br><span class="line"><span class="comment">#lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span></span><br></pre></td></tr></table></figure>

<h4 id="④-其他选项"><a href="#④-其他选项" class="headerlink" title="④ 其他选项"></a>④ 其他选项</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="literal">-e</span> 多项编辑</span><br><span class="line"><span class="literal">-r</span>	扩展正则</span><br><span class="line"><span class="literal">-i</span> 修改原文件</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -ne &#x27;/root/p&#x27; 1.txt -ne &#x27;/root/=&#x27;</span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line"><span class="number">1</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -ne &#x27;/root/=&#x27; -ne &#x27;/root/p&#x27; 1.txt </span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line"></span><br><span class="line">在<span class="number">1</span>.txt文件中的第<span class="number">5</span>行的前面插入“hello world”;在<span class="number">1</span>.txt文件的第<span class="number">8</span>行下面插入“哈哈哈哈”</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -e &#x27;5ihello world&#x27; -e &#x27;8a哈哈哈哈哈&#x27; 1.txt  -e &#x27;5=;8=&#x27;</span></span><br><span class="line"></span><br><span class="line">sed <span class="literal">-n</span> <span class="string">&#x27;1,5p&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line">sed <span class="operator">-ne</span> <span class="string">&#x27;1p&#x27;</span> <span class="operator">-ne</span> <span class="string">&#x27;5p&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line">sed <span class="operator">-ne</span> <span class="string">&#x27;1p;5p&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line">过滤vsftpd.conf文件中以<span class="comment">#开头和空行：</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># grep -Ev &#x27;^#|^$&#x27; /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -e &#x27;/^#/d&#x27; -e &#x27;/^$/d&#x27; /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;/^#/d;/^$/d&#x27; /etc/vsftpd/vsftpd.conf</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -r &#x27;/^#|^$/d&#x27; /etc/vsftpd/vsftpd.conf</span></span><br><span class="line"></span><br><span class="line">过滤smb.conf文件中生效的行：</span><br><span class="line"><span class="comment"># sed -e &#x27;/^#/d&#x27; -e &#x27;/^;/d&#x27; -e &#x27;/^$/d&#x27; -e &#x27;/^\t$/d&#x27; -e &#x27;/^\t#/d&#x27; smb.conf</span></span><br><span class="line"><span class="comment"># sed -r &#x27;/^(#|$|;|\t#|\t$)/d&#x27; smb.conf </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -e &#x27;/^#/d&#x27; -e &#x27;/^;/d&#x27; -e &#x27;/^$/d&#x27; -e &#x27;/^\t$/d&#x27; -e &#x27;/^\t#/&#x27; smb.conf</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># grep &#x27;^[^a-z]&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -n &#x27;/^[^a-z]/p&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line">过滤出文件中的IP地址：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># grep -E &#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.254</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;/p&#x27; 1.txt </span></span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.254</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># grep -o -E &#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27; 2.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;/p&#x27; 2.txt</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">过滤出ifcfg<span class="literal">-eth0</span>文件中的IP、子网掩码、广播地址</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># grep -Eo &#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27; ifcfg-eth0 </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;/p&#x27; ifcfg-eth0|cut -d&#x27;=&#x27; -f2</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;/p&#x27; ifcfg-eth0|sed -n &#x27;s/[A-Z=]//gp&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed -n &#x27;s/[:a-Z]//gp&#x27;|sed -n &#x27;s/ /\n/gp&#x27;|sed &#x27;/^$/d&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span></span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># ifconfig | sed -nr &#x27;/([0-9]&#123;1,3&#125;\.)[0-9]&#123;1,3&#125;/p&#x27; | head -1|sed -r &#x27;s/([a-z:]|[A-Z/t])//g&#x27;|sed &#x27;s/ /\n/g&#x27;|sed  &#x27;/^$/d&#x27;</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell06</span>]<span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed -n &#x27;s/.*addr:\(.*\) Bcast:\(.*\) Mask:\(.*\)/\1\n\2\n\3/p&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span> </span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span> </span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line"><span class="literal">-i</span> 选项  直接修改原文件</span><br><span class="line"><span class="comment"># sed -i &#x27;s/root/ROOT/;s/stu/STU/&#x27; 11.txt</span></span><br><span class="line"><span class="comment"># sed -i &#x27;17&#123;s/YUNWEI/yunwei/;s#/bin/bash#/sbin/nologin#&#125;&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># sed -i &#x27;1,5s/^/#&amp;/&#x27; a.txt</span></span><br><span class="line">注意：</span><br><span class="line"><span class="literal">-ni</span>  不要一起使用</span><br><span class="line">p命令 不要再使用<span class="literal">-i</span>时使用</span><br></pre></td></tr></table></figure>

<h4 id="⑤-sed结合正则使用"><a href="#⑤-sed结合正则使用" class="headerlink" title="⑤ ==sed结合正则使用=="></a>⑤ ==sed结合正则使用==</h4><blockquote>
<p>sed  选项  ==’==sed==命令==或者==正则表达式==或者==地址定位====’==  文件名</p>
</blockquote>
<ol>
<li>定址用于决定对哪些行进行编辑。地址的形式可以是数字、正则表达式、或二者的结合。</li>
<li>如果没有指定地址，sed将处理输入文件的所有行。</li>
</ol>
<table>
<thead>
<tr>
<th>正则</th>
<th>说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>/key/</td>
<td>查询包含关键字的行</td>
<td>sed -n ‘/root/p’ 1.txt</td>
</tr>
<tr>
<td>/key1/,/key2/</td>
<td>匹配包含两个关键字之间的行</td>
<td>sed -n ‘/^adm/,/^mysql/p’ 1.txt</td>
</tr>
<tr>
<td>/key/,x</td>
<td>从匹配关键字的行开始到==文件第x行==之间的行（包含关键字所在行）</td>
<td>sed -n ‘/^ftp/,7p’</td>
</tr>
<tr>
<td>x,/key/</td>
<td>从文件的第x行开始到与关键字的匹配行之间的行</td>
<td></td>
</tr>
<tr>
<td>x,y!</td>
<td>不包含x到y行</td>
<td></td>
</tr>
<tr>
<td>/key/!</td>
<td>不包括关键字的行</td>
<td>sed -n ‘/bash$/!p’ 1.txt</td>
</tr>
</tbody></table>
<p>##2. 脚本格式</p>
<h3 id="㈠-用法"><a href="#㈠-用法" class="headerlink" title="㈠ 用法"></a>㈠ 用法</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># sed -f scripts.sh  file		//使用脚本处理文件</span></span><br><span class="line">建议使用   ./sed.sh   file</span><br><span class="line"></span><br><span class="line">脚本的第一行写上</span><br><span class="line"><span class="comment">#!/bin/sed -f</span></span><br><span class="line"><span class="number">1</span>,<span class="number">5</span>d</span><br><span class="line">s/root/hello/g</span><br><span class="line"><span class="number">3</span>i777</span><br><span class="line"><span class="number">5</span>i888</span><br><span class="line">a999</span><br><span class="line">p</span><br></pre></td></tr></table></figure>

<h3 id="㈡-注意事项"><a href="#㈡-注意事项" class="headerlink" title="㈡ 注意事项"></a>㈡ 注意事项</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">１）　脚本文件是一个sed的命令行清单。<span class="string">&#x27;commands&#x27;</span></span><br><span class="line">２）　在每行的末尾不能有任何空格、制表符（tab）或其它文本。</span><br><span class="line">３）　如果在一行中有多个命令，应该用分号分隔。</span><br><span class="line">４）　不需要且不可用引号保护命令</span><br><span class="line">５）　<span class="comment">#号开头的行为注释</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="㈢举例说明"><a href="#㈢举例说明" class="headerlink" title="㈢举例说明"></a>㈢举例说明</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat passwd</span></span><br><span class="line">stu3:x:<span class="number">509</span>:<span class="number">512</span>::/home/user3:/bin/bash</span><br><span class="line">stu4:x:<span class="number">510</span>:<span class="number">513</span>::/home/user4:/bin/bash</span><br><span class="line">stu5:x:<span class="number">511</span>:<span class="number">514</span>::/home/user5:/bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># cat sed.sh </span></span><br><span class="line"><span class="comment">#!/bin/sed -f</span></span><br><span class="line"><span class="number">2</span>a\</span><br><span class="line">******************</span><br><span class="line"><span class="number">2</span>,<span class="variable">$s</span>/stu/user/</span><br><span class="line"><span class="variable">$a</span>\</span><br><span class="line">we inster new line</span><br><span class="line">s/^[<span class="type">a</span>-<span class="type">z</span>].*/<span class="comment">#&amp;/</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat 1.sed </span></span><br><span class="line"><span class="comment">#!/bin/sed -f</span></span><br><span class="line"><span class="number">3</span>a**********************</span><br><span class="line"><span class="variable">$chelloworld</span></span><br><span class="line"><span class="number">1</span>,<span class="number">3</span>s/^/<span class="comment">#&amp;/</span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed -f 1.sed -i 11.txt </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat 11.txt </span></span><br><span class="line"><span class="comment">#root:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line">**********************</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line">helloworld</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>##3. 补充扩展总结</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、正则表达式必须以”/“前后规范间隔</span><br><span class="line">例如：sed <span class="string">&#x27;/root/d&#x27;</span> file</span><br><span class="line">例如：sed <span class="string">&#x27;/^root/d&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、如果匹配的是扩展正则表达式，需要使用<span class="literal">-r</span>选来扩展sed</span><br><span class="line">grep <span class="literal">-E</span></span><br><span class="line">sed <span class="literal">-r</span></span><br><span class="line">+ ? () &#123;n,m&#125; | \d</span><br><span class="line"></span><br><span class="line">注意：         </span><br><span class="line">在正则表达式中如果出现特殊字符(^<span class="variable">$</span>.*/[]),需要以前导 <span class="string">&quot;\&quot;</span> 号做转义</span><br><span class="line">eg：sed <span class="string">&#x27;/\$foo/p&#x27;</span> file</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、逗号分隔符</span><br><span class="line">例如：sed <span class="string">&#x27;5,7d&#x27;</span> file  				删除<span class="number">5</span>到<span class="number">7</span>行</span><br><span class="line">例如：sed <span class="string">&#x27;/root/,/ftp/d&#x27;</span> file	</span><br><span class="line">删除第一个匹配字符串<span class="string">&quot;root&quot;</span>到第一个匹配字符串<span class="string">&quot;ftp&quot;</span>的所有行本行不找 循环执行</span><br><span class="line">       </span><br><span class="line"><span class="number">4</span>、组合方式</span><br><span class="line">例如：sed <span class="string">&#x27;1,/foo/d&#x27;</span> file			删除第一行到第一个匹配字符串<span class="string">&quot;foo&quot;</span>的所有行</span><br><span class="line">例如：sed <span class="string">&#x27;/foo/,+4d&#x27;</span> file			删除从匹配字符串”foo“开始到其后四行为止的行</span><br><span class="line">例如：sed <span class="string">&#x27;/foo/,~3d&#x27;</span> file			删除从匹配字符串”foo“开始删除到<span class="number">3</span>的倍数行（文件中）</span><br><span class="line">例如：sed <span class="string">&#x27;1~5d&#x27;</span> file				从第一行开始删每五行删除一行</span><br><span class="line">例如：sed <span class="literal">-nr</span> <span class="string">&#x27;/foo|bar/p&#x27;</span> file	显示配置字符串<span class="string">&quot;foo&quot;</span>或<span class="string">&quot;bar&quot;</span>的行</span><br><span class="line">例如：sed <span class="literal">-n</span> <span class="string">&#x27;/foo/,/bar/p&#x27;</span> file	显示匹配从foo到bar的行</span><br><span class="line">例如：sed <span class="string">&#x27;1~2d&#x27;</span>  file				删除奇数行</span><br><span class="line">例如：sed <span class="string">&#x27;0-2d&#x27;</span>   file				删除偶数行 sed <span class="string">&#x27;1~2!d&#x27;</span>  file</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>、特殊情况</span><br><span class="line">例如：sed <span class="string">&#x27;$d&#x27;</span> file					删除最后一行</span><br><span class="line">例如：sed <span class="string">&#x27;1d&#x27;</span> file					删除第一行</span><br><span class="line">	</span><br><span class="line"><span class="number">6</span>、其他：</span><br><span class="line">sed <span class="string">&#x27;s/.//&#x27;</span> a.txt						删除每一行中的第一个字符</span><br><span class="line">sed <span class="string">&#x27;s/.//2&#x27;</span> a.txt					删除每一行中的第二个字符</span><br><span class="line">sed <span class="string">&#x27;s/.//N&#x27;</span> a.txt					从文件中第N行开始，删除每行中第N个字符（N&gt;<span class="number">2</span>）</span><br><span class="line">sed <span class="string">&#x27;s/.$//&#x27;</span> a.txt					删除每一行中的最后一个字符</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># cat 2.txt </span></span><br><span class="line"><span class="number">1</span> a</span><br><span class="line"><span class="number">2</span> b</span><br><span class="line"><span class="number">3</span> c</span><br><span class="line"><span class="number">4</span> d</span><br><span class="line"><span class="number">5</span> e</span><br><span class="line"><span class="number">6</span> f</span><br><span class="line"><span class="number">7</span> u</span><br><span class="line"><span class="number">8</span> k</span><br><span class="line"><span class="number">9</span> o</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> ~]<span class="comment"># sed &#x27;/c/,~2d&#x27; 2.txt </span></span><br><span class="line"><span class="number">1</span> a</span><br><span class="line"><span class="number">2</span> b</span><br><span class="line"><span class="number">5</span> e</span><br><span class="line"><span class="number">6</span> f</span><br><span class="line"><span class="number">7</span> u</span><br><span class="line"><span class="number">8</span> k</span><br><span class="line"><span class="number">9</span> o</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>#四、课堂练习</p>
<ol>
<li>将任意数字替换成空或者制表符</li>
<li>去掉文件1-5行中的数字、冒号、斜杠</li>
<li>匹配root关键字替换成hello itcast，并保存到test.txt文件中</li>
<li>删除vsftpd.conf、smb.conf、main.cf配置文件里所有注释的行及空行（不要直接修改原文件）</li>
<li>使用sed命令截取自己的ip地址</li>
<li>使用sed命令一次性截取ip地址、广播地址、子网掩码</li>
<li>注释掉文件的2-3行和匹配到以root开头或者以ftp开头的行</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1</span>、将文件中任意数字替换成空或者制表符</span><br><span class="line"><span class="number">2</span>、去掉文件<span class="number">1</span><span class="literal">-5</span>行中的数字、冒号、斜杠</span><br><span class="line"><span class="number">3</span>、匹配root关键字的行替换成hello itcast，并保存到test.txt文件中</span><br><span class="line"><span class="number">4</span>、删除vsftpd.conf、smb.conf、main.cf配置文件里所有注释的行及空行（不要直接修改原文件）</span><br><span class="line"><span class="number">5</span>、使用sed命令截取自己的ip地址</span><br><span class="line"><span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed -n &#x27;s/.*addr://pg&#x27;|sed -n &#x27;s/Bcast.*//gp&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span>  </span><br><span class="line"><span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed &#x27;s/.*addr://g&#x27;|sed &#x27;s/ Bcast:.*//g&#x27;</span></span><br><span class="line"><span class="number">6</span>、使用sed命令一次性截取ip地址、广播地址、子网掩码</span><br><span class="line"><span class="comment"># ifconfig eth0|sed -n &#x27;2p&#x27;|sed -n &#x27;s#.*addr:\(.*\) Bcast:\(.*\) Mask:\(.*\)#\1\n\2\n\3#p&#x27;</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span> </span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.255</span> </span><br><span class="line"><span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line"></span><br><span class="line"><span class="number">7</span>、注释掉文件的<span class="number">2</span><span class="literal">-3</span>行和匹配到以root开头或者以ftp开头的行</span><br><span class="line"><span class="comment"># sed -nr &#x27;2,3s/^/#&amp;/p;s/^ROOT|^ftp/#&amp;/p&#x27; 1.txt</span></span><br><span class="line"><span class="comment">#ROOT:x:0:0:root:/root:/bin/bash</span></span><br><span class="line"><span class="comment">#bin:x:1:1:bin:/bin:/sbin/nologin</span></span><br><span class="line"><span class="comment">#3daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -ne &#x27;1,2s/^/#&amp;/gp&#x27; a.txt -nre &#x27;s/^lp|^mail/#&amp;/gp&#x27;</span></span><br><span class="line"><span class="comment"># sed -nr &#x27;1,2s/^/#&amp;/gp;s/^lp|^mail/#&amp;/gp&#x27; a.txt</span></span><br></pre></td></tr></table></figure>

<p>#五、课后实战</p>
<p>1、写一个初始化系统的脚本<br>1）自动修改主机名（如：ip是192.168.0.88，则主机名改为server88.itcast.cc）</p>
<p>a. 更改文件非交互式 sed</p>
<p>/etc/sysconfig/network</p>
<p>b.将本主机的IP截取出来赋值给一个变量ip;再然后将ip变量里以.分割的最后一位赋值给另一个变量ip1</p>
<p>2）自动配置可用的yum源</p>
<p>3）自动关闭防火墙和selinux</p>
<p>2、写一个搭建ftp服务的脚本，要求如下：<br>1）不支持本地用户登录        local_enable=NO<br>2） 匿名用户可以上传 新建 删除     anon_upload_enable=YES  anon_mkdir_write_enable=YES<br>3） 匿名用户限速500KBps  anon_max_rate=500000</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">仅供参考：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">ipaddr=`ifconfig eth0|sed <span class="literal">-n</span> <span class="string">&#x27;2p&#x27;</span>|sed <span class="literal">-e</span> <span class="string">&#x27;s/.*inet addr:\(.*\) Bcast.*/\1/g&#x27;</span>`</span><br><span class="line">iptail=`echo <span class="variable">$ipaddr</span>|cut <span class="literal">-d</span><span class="string">&#x27;.&#x27;</span> <span class="literal">-f4</span>`</span><br><span class="line">ipremote=<span class="number">192.168</span>.<span class="number">1.10</span></span><br><span class="line"><span class="comment">#修改主机名</span></span><br><span class="line">hostname server<span class="variable">$iptail</span>.itcast.com</span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&quot;/HOSTNAME/cHOSTNAME=server<span class="variable">$iptail</span>.itcast.com&quot;</span> /etc/sysconfig/network</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ipaddr</span> server<span class="variable">$iptail</span>.itcast.cc&quot;</span> &gt;&gt;/etc/hosts</span><br><span class="line"><span class="comment">#关闭防火墙和selinux</span></span><br><span class="line">service iptables stop</span><br><span class="line">setenforce <span class="number">0</span> &gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;/^SELINUX=/cSELINUX=disabled&#x27;</span> /etc/selinux/config</span><br><span class="line"><span class="comment">#配置yum源(一般是内网源)</span></span><br><span class="line"><span class="comment">#test network</span></span><br><span class="line">ping <span class="literal">-c</span> <span class="number">1</span> <span class="variable">$ipremote</span> &gt; /dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">ne</span> <span class="number">0</span> ];then</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;你的网络不通，请先检查你的网络&quot;</span></span><br><span class="line">	<span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;网络ok.&quot;</span></span><br><span class="line">fi</span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/yum.repos.d/server.repo &lt;&lt; <span class="keyword">end</span></span><br><span class="line">[<span class="type">server</span>]</span><br><span class="line">name=server</span><br><span class="line">baseurl=ftp://<span class="variable">$ipremote</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">0</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装软件</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入需要安装的软件，多个用空格隔开：&quot;</span> soft</span><br><span class="line">yum <span class="literal">-y</span> install <span class="variable">$soft</span> &amp;&gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment">#备份配置文件</span></span><br><span class="line">conf=/etc/vsftpd/vsftpd.conf</span><br><span class="line">\cp <span class="variable">$conf</span> <span class="variable">$conf</span>.default</span><br><span class="line"><span class="comment">#根据需求修改配置文件</span></span><br><span class="line">sed <span class="literal">-ir</span> <span class="string">&#x27;/^#|^$/d&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;/local_enable/c\local_enable=NO&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;$a anon_upload_enable=YES&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;$a anon_mkdir_write_enable=YES&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;$a anon_other_write_enable=YES&#x27;</span> <span class="variable">$conf</span></span><br><span class="line">sed <span class="literal">-i</span> <span class="string">&#x27;$a anon_max_rate=512000&#x27;</span> <span class="variable">$conf</span></span><br><span class="line"><span class="comment">#启动服务</span></span><br><span class="line">service vsftpd restart &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span><span class="string">&quot;vsftpd服务启动成功&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#测试验证</span></span><br><span class="line">chmod <span class="number">777</span> /var/ftp/pub</span><br><span class="line"><span class="built_in">cp</span> /etc/hosts /var/ftp/pub</span><br><span class="line"><span class="comment">#测试下载</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">lftp <span class="variable">$ipaddr</span> &lt;&lt;<span class="keyword">end</span></span><br><span class="line"><span class="built_in">cd</span> pub</span><br><span class="line">get hosts</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">f</span> /<span class="type">tmp</span>/<span class="type">hosts</span> ];then</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;匿名用户下载成功&quot;</span></span><br><span class="line">	<span class="built_in">rm</span> <span class="operator">-f</span> /tmp/hosts</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;匿名用户下载失败&quot;</span></span><br><span class="line">fi</span><br><span class="line"><span class="comment">#测试上传、创建目录、删除目录等</span></span><br><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">lftp <span class="variable">$ipaddr</span> &lt;&lt; <span class="keyword">end</span></span><br><span class="line"><span class="built_in">cd</span> pub</span><br><span class="line">mkdir test1</span><br><span class="line">mkdir test2</span><br><span class="line">put /etc/<span class="built_in">group</span></span><br><span class="line"><span class="built_in">rmdir</span> test2</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -<span class="type">d</span> /<span class="type">var</span>/<span class="type">ftp</span>/<span class="type">pub</span>/<span class="type">test1</span> ];then</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;创建目录成功&quot;</span></span><br><span class="line">	<span class="keyword">if</span> [ ! -<span class="type">d</span> /<span class="type">var</span>/<span class="type">ftp</span>/<span class="type">pub</span>/<span class="type">test2</span> ];then</span><br><span class="line">    	<span class="built_in">echo</span> <span class="string">&quot;文件删除成功&quot;</span></span><br><span class="line">        fi</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="keyword">if</span> [ -<span class="type">f</span> /<span class="type">var</span>/<span class="type">ftp</span>/<span class="type">pub</span>/<span class="type">group</span> ];then</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;文件上传成功&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;上传、创建目录删除目录部ok&quot;</span></span><br><span class="line">        fi </span><br><span class="line">fi   </span><br><span class="line">[ -<span class="type">f</span> /<span class="type">var</span>/<span class="type">ftp</span>/<span class="type">pub</span>/<span class="type">group</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;上传文件成功&quot;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>05_SHELL编程之嵌套循环+随机数及综合案例</title>
    <url>/2021/01/05/linux/05_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E5%B5%8C%E5%A5%97%E5%BE%AA%E7%8E%AF+%E9%9A%8F%E6%9C%BA%E6%95%B0%E5%8F%8A%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<p>#课程目标</p>
<ul>
<li>==掌握for循环语句的基本语法结构==</li>
<li>==掌握while和until循环语句的基本语法结构==</li>
<li>能会使用RANDOM产生随机数</li>
<li>理解嵌套循环</li>
</ul>
<span id="more"></span>

<h1 id="一、随机数"><a href="#一、随机数" class="headerlink" title="一、随机数"></a>一、随机数</h1><p><strong>关键词：一切都是未知数，永远不知道明天会抽什么风</strong>:wind_chime::sweat_smile:</p>
<h2 id="1-如何生成随机数？"><a href="#1-如何生成随机数？" class="headerlink" title="1. 如何生成随机数？"></a>1. 如何生成随机数？</h2><p><strong>系统变量</strong>：**==RANDOM==**，默认会产生0~32767的随机整数</p>
<p><strong>前言：</strong>要想调用变量，不管你是什么变量都要给钱，而且是美元:heavy_dollar_sign:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">打印一个随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$RANDOM</span></span><br><span class="line">查看系统上一次生成的随机数</span><br><span class="line"><span class="comment"># set|grep RANDOM</span></span><br><span class="line">RANDOM=<span class="number">28325</span></span><br><span class="line"></span><br><span class="line">产生<span class="number">0</span>~<span class="number">1</span>之间的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">产生<span class="number">0</span>~<span class="number">2</span>之间的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">产生<span class="number">0</span>~<span class="number">3</span>之间的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">产生<span class="number">0</span>~<span class="number">9</span>内的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line"></span><br><span class="line">产生<span class="number">0</span>~<span class="number">100</span>内的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">101</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">产生<span class="number">50</span><span class="literal">-100</span>之内的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">51</span>+<span class="number">50</span>]</span><br><span class="line"></span><br><span class="line">产生三位数的随机数</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">900</span>+<span class="number">100</span>]</span><br></pre></td></tr></table></figure>

<h2 id="2-实战案例"><a href="#2-实战案例" class="headerlink" title="2. 实战案例"></a>2. 实战案例</h2><h3 id="㈠-随机产生以139开头的电话号码"><a href="#㈠-随机产生以139开头的电话号码" class="headerlink" title="㈠ 随机产生以139开头的电话号码"></a>㈠ 随机产生以139开头的电话号码</h3><p><strong>具体需求1：</strong></p>
<p>写一个脚本，产生一个phonenum.txt文件，随机产生以139开头的手机号1000个，每个一行。</p>
<h4 id="①-思路"><a href="#①-思路" class="headerlink" title="① 思路"></a>① 思路</h4><ol>
<li>产生1000个电话号码，脚本需要循环1000次 <code>FOR WHILE UNTIL</code></li>
<li>139+8位,后8位随机产生，可以让每一位数字都随机产生  <code>echo $[$RANDOM%10]</code></li>
<li>将随机产生的数字分别保存到变量里，然后加上139保存到文件里</li>
</ol>
<h4 id="②-落地实现"><a href="#②-落地实现" class="headerlink" title="② 落地实现"></a>② 落地实现</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment">#产生1000个以139开头的电话号码并保存文件phonenum.txt</span></span><br><span class="line">file=/shell03/phonenum.txt</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> &gt;&gt; <span class="variable">$file</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># random phonenum</span></span><br><span class="line"><span class="comment"># 循环1000次产生电话号码并保存到文件</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">1000</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	n1=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n2=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n3=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n4=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n5=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n6=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n7=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n8=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> &gt;&gt; phonenum.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">i=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$i</span> -<span class="type">le</span> <span class="number">1000</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> &gt;&gt; phonenum.txt</span><br><span class="line">	let i++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="keyword">continue</span>:继续，跳过本次循环，执行下一次循环</span><br><span class="line"><span class="keyword">break</span>:打断，执行循环体外的代码do..done外</span><br><span class="line"><span class="keyword">exit</span>:退出程序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">1000</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> &gt;&gt; phonenum.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#create phone num file</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> |<span class="built_in">tee</span> <span class="literal">-a</span> phonenum.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">count=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	n1=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n2=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n3=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n4=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n5=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n6=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n7=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	n8=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">10</span>]</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;139<span class="variable">$n1</span><span class="variable">$n2</span><span class="variable">$n3</span><span class="variable">$n4</span><span class="variable">$n5</span><span class="variable">$n6</span><span class="variable">$n7</span><span class="variable">$n8</span>&quot;</span> |<span class="built_in">tee</span> <span class="literal">-a</span> phonenum.txt &amp;&amp; let count++</span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$count</span> -<span class="type">eq</span> <span class="number">1000</span> ];then</span><br><span class="line">		<span class="keyword">break</span></span><br><span class="line">	fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h3 id="㈡-随机抽出5位幸运观众"><a href="#㈡-随机抽出5位幸运观众" class="headerlink" title="㈡ 随机抽出5位幸运观众"></a>㈡ 随机抽出5位幸运观众</h3><p><strong>具体需求：</strong></p>
<ol>
<li>在上面的1000个手机号里抽奖==5个==幸运观众，显示出这5个幸运观众。</li>
<li>但只显示头3个数和尾号的4个数，中间的都用*代替</li>
</ol>
<h4 id="①-思路-1"><a href="#①-思路-1" class="headerlink" title="① 思路"></a>① 思路</h4><ol>
<li>确定幸运观众所在的行    <code>0-1000  随机找出一个数字   $[$RANDOM%1000+1]</code></li>
<li>将电话号码提取出来      <code>head -随机产生行号 phonenum.txt |tail -1</code></li>
<li>==显示==前3个和后4个数到屏幕   <code>echo 139****</code></li>
</ol>
<h4 id="②-落地实现-1"><a href="#②-落地实现-1" class="headerlink" title="② 落地实现"></a>② 落地实现</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#定义变量</span></span><br><span class="line">phone=/shell03/phonenum.txt</span><br><span class="line"><span class="comment">#循环抽出5位幸运观众</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="comment">#定位幸运观众所在行号</span></span><br><span class="line">	line=`wc <span class="literal">-l</span> <span class="variable">$phone</span> |cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line">	luck_line=<span class="variable">$</span>[<span class="type">RANDOM</span>%<span class="variable">$line</span>+<span class="number">1</span>]</span><br><span class="line">	<span class="comment">#取出幸运观众所在行的电话号码</span></span><br><span class="line">	luck_num=`head -<span class="variable">$luck_line</span> <span class="variable">$phone</span>|tail <span class="literal">-1</span>`</span><br><span class="line">	<span class="comment">#显示到屏幕</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;139****<span class="variable">$</span>&#123;luck_num:7:4&#125;&quot;</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$luck_num</span> &gt;&gt; luck.txt</span><br><span class="line">	<span class="comment">#删除已经被抽取的幸运观众号码</span></span><br><span class="line">	<span class="comment">#sed -i &quot;/$luck_num/d&quot; $phone</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">file=/shell04/phonenum.txt</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;<span class="number">1</span>..<span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	file_num=`wc <span class="literal">-l</span> <span class="variable">$file</span> |cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line">	line=`echo <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="variable">$file_num</span>+<span class="number">1</span>]`</span><br><span class="line">	luck=`head <span class="literal">-n</span> <span class="variable">$line</span>  <span class="variable">$file</span>|tail <span class="literal">-1</span>`</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;139****<span class="variable">$</span>&#123;luck:7:4&#125;&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="variable">$luck</span> &gt;&gt; /shell04/luck_num.txt</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">file=phonenum.txt</span><br><span class="line">line=`cat phonenum.txt |wc <span class="literal">-l</span>`	<span class="number">1000</span></span><br><span class="line">luckline=<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="variable">$line</span>+<span class="number">1</span>]</span><br><span class="line">phone=`cat <span class="variable">$file</span>|head -<span class="variable">$luckline</span>|tail <span class="literal">-1</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;幸运观众为:139****<span class="variable">$</span>&#123;phone:7:4&#125;&quot;</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># choujiang</span></span><br><span class="line">phone=phonenum.txt</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	num=`wc <span class="literal">-l</span> phonenum.txt |cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line">	line=`echo <span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="variable">$num</span>+<span class="number">1</span>]`</span><br><span class="line">	luck=`head -<span class="variable">$line</span> <span class="variable">$phone</span> |tail <span class="literal">-1</span>`</span><br><span class="line">	sed <span class="literal">-i</span> <span class="string">&quot;/<span class="variable">$luck</span>/d&quot;</span> <span class="variable">$phone</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">&quot;幸运观众是:139****<span class="variable">$</span>&#123;luck:7:4&#125;&quot;</span></span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="㈢-批量创建用户-密码随机产生"><a href="#㈢-批量创建用户-密码随机产生" class="headerlink" title="㈢ 批量创建用户(密码随机产生)"></a>㈢ 批量创建用户(密码随机产生)</h3><p><strong>需求：</strong>批量创建5个用户，每个用户的密码为一个随机数</p>
<h4 id="①-思路-2"><a href="#①-思路-2" class="headerlink" title="① 思路"></a>① 思路</h4><ol>
<li>循环5次创建用户</li>
<li>产生一个密码文件来保存用户的随机密码</li>
<li>从密码文件中取出随机密码赋值给用户</li>
</ol>
<h4 id="②-落地实现-2"><a href="#②-落地实现-2" class="headerlink" title="② 落地实现"></a>② 落地实现</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#crate user and set passwd</span></span><br><span class="line"><span class="comment">#产生一个保存用户名和密码的文件</span></span><br><span class="line"><span class="built_in">echo</span> user0&#123;<span class="number">1</span>..<span class="number">5</span>&#125;:itcast<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">9000</span>+<span class="number">1000</span>]<span class="comment">#@~|tr &#x27; &#x27; &#x27;\n&#x27;&gt;&gt; user_pass.file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#循环创建5个用户</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	user=`head -<span class="variable">$i</span> user_pass.file|tail <span class="literal">-1</span>|cut <span class="literal">-d</span>: <span class="literal">-f1</span>`</span><br><span class="line">	pass=`head -<span class="variable">$i</span> user_pass.file|tail <span class="literal">-1</span>|cut <span class="literal">-d</span>: <span class="literal">-f2</span>`</span><br><span class="line">	useradd <span class="variable">$user</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$pass</span>|passwd -<span class="literal">-stdin</span> <span class="variable">$user</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat user_pass.file`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	user=`echo <span class="variable">$i</span>|cut <span class="literal">-d</span>: <span class="literal">-f1</span>`</span><br><span class="line">	pass=`echo <span class="variable">$i</span>|cut <span class="literal">-d</span>: <span class="literal">-f2</span>`</span><br><span class="line">	useradd <span class="variable">$user</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$pass</span>|passwd -<span class="literal">-stdin</span> <span class="variable">$user</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#crate user and set passwd</span></span><br><span class="line"><span class="comment">#产生一个保存用户名和密码的文件</span></span><br><span class="line"><span class="built_in">echo</span> user0&#123;<span class="number">1</span>..<span class="number">3</span>&#125;:itcast<span class="variable">$</span>[<span class="variable">$RANDOM</span>%<span class="number">9000</span>+<span class="number">1000</span>]<span class="comment">#@~|tr &#x27; &#x27; &#x27;\n&#x27;|tr &#x27;:&#x27; &#x27; &#x27; &gt;&gt; user_pass.file</span></span><br><span class="line"><span class="comment">#循环创建5个用户</span></span><br><span class="line"><span class="keyword">while</span> read user pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">useradd <span class="variable">$user</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$pass</span>|passwd -<span class="literal">-stdin</span> <span class="variable">$user</span></span><br><span class="line">done &lt; user_pass.file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pwgen工具产生随机密码：</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell04</span>]<span class="comment"># pwgen -cn1 12</span></span><br><span class="line">Meep5ob1aesa</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell04</span>]<span class="comment"># echo user0&#123;1..3&#125;:$(pwgen -cn1 12)</span></span><br><span class="line">user01:Bahqu9haipho user02:Feiphoh7moo4 user03:eilahj5eth2<span class="built_in">R</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell04</span>]<span class="comment"># echo user0&#123;1..3&#125;:$(pwgen -cn1 12)|tr &#x27; &#x27; &#x27;\n&#x27;</span></span><br><span class="line">user01:eiwaShuZo5hi</span><br><span class="line">user02:eiDeih7aim9k</span><br><span class="line">user03:aeBahwien8co</span><br></pre></td></tr></table></figure>

<h1 id="二、嵌套循环"><a href="#二、嵌套循环" class="headerlink" title="二、嵌套循环"></a>二、嵌套循环</h1><p><strong>关键字：大圈套小圈</strong></p>
<p>:clock3:<strong>时钟</strong>：分针与秒针，秒针转⼀圈（60格），分针转1格。循环嵌套就是外层循环⼀次，内层循环⼀轮。</p>
<ol>
<li>一个==循环体==内又包含另一个<strong>完整</strong>的循环结构，称为循环的嵌套。</li>
<li>每次外部循环都会==触发==内部循环，直至内部循环完成，才接着执行下一次的外部循环。</li>
<li>for循环、while循环和until循环可以<strong>相互</strong>嵌套。</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> (())</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	</span><br><span class="line">	done</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>##1. 应用案例</p>
<h3 id="㈠-打印指定图案"><a href="#㈠-打印指定图案" class="headerlink" title="㈠ 打印指定图案"></a>㈠ 打印指定图案</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line"><span class="number">12345</span></span><br><span class="line"></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">54</span></span><br><span class="line"><span class="number">543</span></span><br><span class="line"><span class="number">5432</span></span><br><span class="line"><span class="number">54321</span></span><br><span class="line"></span><br><span class="line">外部循环：打印换行，并且换<span class="number">5</span>行 ，循环<span class="number">5</span>次</span><br><span class="line"></span><br><span class="line">内部循环：打印<span class="number">54321</span>数字</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">5</span>;y&gt;=<span class="number">1</span>;y--))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> ((x=<span class="number">5</span>;x&gt;=<span class="number">1</span>;x--))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	</span><br><span class="line">	<span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">	done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="㈡-落地实现1"><a href="#㈡-落地实现1" class="headerlink" title="㈡ 落地实现1"></a>㈡ 落地实现1</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">X轴：</span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++));<span class="keyword">do</span> <span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$i</span>;done</span><br><span class="line">Y轴：</span><br><span class="line">负责打印换行</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">1</span>;y&lt;=<span class="number">5</span>;y++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> ((x=<span class="number">1</span>;x&lt;=<span class="variable">$y</span>;x++))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">	done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">1</span>;y&lt;=<span class="number">5</span>;y++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	x=<span class="number">1</span></span><br><span class="line">	<span class="keyword">while</span> [ <span class="variable">$x</span> -<span class="type">le</span> <span class="variable">$y</span> ]</span><br><span class="line">		<span class="keyword">do</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">		let x++</span><br><span class="line">		done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h3 id="㈢-落地实现2"><a href="#㈢-落地实现2" class="headerlink" title="㈢ 落地实现2"></a>㈢ 落地实现2</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">Y轴：打印换行</span><br><span class="line">X轴：打印数字 <span class="number">5</span><span class="literal">-1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">5</span></span><br><span class="line"><span class="keyword">while</span> (( <span class="variable">$y</span> &gt;= <span class="number">1</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> ((x=<span class="number">5</span>;x&gt;=<span class="variable">$y</span>;x--))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">	done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y--</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> (( y=<span class="number">5</span>;y&gt;=<span class="number">1</span>;y--))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> (( x=<span class="number">5</span>;x&gt;=<span class="variable">$y</span>;x--))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">	done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">5</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$y</span> -<span class="type">ge</span> <span class="number">1</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> ((x=<span class="number">5</span>;x&gt;=<span class="variable">$y</span>;x--))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line">	done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y--</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">1</span></span><br><span class="line"><span class="keyword">until</span> (( <span class="variable">$y</span> &gt;<span class="number">5</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	x=<span class="number">1</span></span><br><span class="line">	<span class="keyword">while</span> (( <span class="variable">$x</span> &lt;= <span class="variable">$y</span> ))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$</span>[<span class="number">6</span>-<span class="variable">$x</span>]</span><br><span class="line">	let x++</span><br><span class="line">	done	</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line">y=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (( <span class="variable">$y</span>&lt;= <span class="number">5</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="keyword">for</span> ((x=<span class="number">5</span>;x&gt;=<span class="number">6</span>-<span class="variable">$y</span>;x--))</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span></span><br><span class="line"></span><br><span class="line">        done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">课后打印：</span><br><span class="line"><span class="number">54321</span></span><br><span class="line"><span class="number">5432</span></span><br><span class="line"><span class="number">543</span></span><br><span class="line"><span class="number">54</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>##2. 课堂练习</p>
<p><strong>打印九九乘法表（三种方法）</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">2</span>=<span class="number">2</span>   <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">3</span>=<span class="number">3</span>   <span class="number">2</span>*<span class="number">3</span>=<span class="number">6</span>   <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">4</span>=<span class="number">4</span>   <span class="number">2</span>*<span class="number">4</span>=<span class="number">8</span>   <span class="number">3</span>*<span class="number">4</span>=<span class="number">12</span>  <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">5</span>=<span class="number">5</span>   <span class="number">2</span>*<span class="number">5</span>=<span class="number">10</span>  <span class="number">3</span>*<span class="number">5</span>=<span class="number">15</span>  <span class="number">4</span>*<span class="number">5</span>=<span class="number">20</span>  <span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">6</span>=<span class="number">6</span>   <span class="number">2</span>*<span class="number">6</span>=<span class="number">12</span>  <span class="number">3</span>*<span class="number">6</span>=<span class="number">18</span>  <span class="number">4</span>*<span class="number">6</span>=<span class="number">24</span>  <span class="number">5</span>*<span class="number">6</span>=<span class="number">30</span>  <span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">7</span>=<span class="number">7</span>   <span class="number">2</span>*<span class="number">7</span>=<span class="number">14</span>  <span class="number">3</span>*<span class="number">7</span>=<span class="number">21</span>  <span class="number">4</span>*<span class="number">7</span>=<span class="number">28</span>  <span class="number">5</span>*<span class="number">7</span>=<span class="number">35</span>  <span class="number">6</span>*<span class="number">7</span>=<span class="number">42</span>  <span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">8</span>=<span class="number">8</span>   <span class="number">2</span>*<span class="number">8</span>=<span class="number">16</span>  <span class="number">3</span>*<span class="number">8</span>=<span class="number">24</span>  <span class="number">4</span>*<span class="number">8</span>=<span class="number">32</span>  <span class="number">5</span>*<span class="number">8</span>=<span class="number">40</span>  <span class="number">6</span>*<span class="number">8</span>=<span class="number">48</span>  <span class="number">7</span>*<span class="number">8</span>=<span class="number">56</span>  <span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>*<span class="number">9</span>=<span class="number">9</span>   <span class="number">2</span>*<span class="number">9</span>=<span class="number">18</span>  <span class="number">3</span>*<span class="number">9</span>=<span class="number">27</span>  <span class="number">4</span>*<span class="number">9</span>=<span class="number">36</span>  <span class="number">5</span>*<span class="number">9</span>=<span class="number">45</span>  <span class="number">6</span>*<span class="number">9</span>=<span class="number">54</span>  <span class="number">7</span>*<span class="number">9</span>=<span class="number">63</span>  <span class="number">8</span>*<span class="number">9</span>=<span class="number">72</span>  <span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Y轴：循环<span class="number">9</span>次，打印<span class="number">9</span>行空行</span><br><span class="line">X轴：循环次数和Y轴相关；打印的是X和Y轴乘积 <span class="variable">$</span>[] <span class="variable">$</span>(())</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">1</span>;y&lt;=<span class="number">9</span>;y++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> ((x=<span class="number">1</span>;x&lt;=<span class="variable">$y</span>;x++))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="operator">-ne</span> <span class="string">&quot;<span class="variable">$x</span>*<span class="variable">$y</span>=<span class="variable">$</span>[<span class="variable">$x</span>*<span class="variable">$y</span>]\t&quot;</span></span><br><span class="line">	done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$y</span> -<span class="type">le</span> <span class="number">9</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        x=<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> [ <span class="variable">$x</span> -<span class="type">le</span> <span class="variable">$y</span> ]</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="operator">-ne</span> <span class="string">&quot;<span class="variable">$x</span>*<span class="variable">$y</span>=<span class="variable">$</span>[<span class="variable">$x</span>*<span class="variable">$y</span>]\t&quot;</span></span><br><span class="line">                let x++</span><br><span class="line">        done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq <span class="number">9</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> `seq <span class="variable">$i</span>`</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="operator">-ne</span>  <span class="string">&quot;<span class="variable">$j</span>*<span class="variable">$i</span>=<span class="variable">$</span>[<span class="variable">$i</span>*<span class="variable">$j</span>]\t&quot;</span></span><br><span class="line">    done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">y=<span class="number">1</span></span><br><span class="line"><span class="keyword">until</span> [ <span class="variable">$y</span> -<span class="type">gt</span> <span class="number">9</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        x=<span class="number">1</span></span><br><span class="line">        <span class="keyword">until</span> [ <span class="variable">$x</span> -<span class="type">gt</span> <span class="variable">$y</span> ]</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="operator">-ne</span> <span class="string">&quot;<span class="variable">$x</span>*<span class="variable">$y</span>=<span class="variable">$</span>[ <span class="variable">$x</span>*<span class="variable">$y</span> ]\t&quot;</span></span><br><span class="line">                let x++</span><br><span class="line">        done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">let y++</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="三、阶段性补充总结"><a href="#三、阶段性补充总结" class="headerlink" title="三、阶段性补充总结"></a>三、阶段性补充总结</h1><h2 id="1-变量定义"><a href="#1-变量定义" class="headerlink" title="1. 变量定义"></a>1. 变量定义</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1）变量名=变量值</span><br><span class="line">echo $变量名</span><br><span class="line">echo $&#123;变量名&#125;</span><br><span class="line"></span><br><span class="line">2）read -p &quot;提示用户信息:&quot; 变量名</span><br><span class="line"></span><br><span class="line">3） declare -i/-x/-r  变量名=变量值</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2-流程控制语句"><a href="#2-流程控制语句" class="headerlink" title="2. 流程控制语句"></a>2. 流程控制语句</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>）<span class="keyword">if</span> [ 条件判断 ];then</span><br><span class="line">		command</span><br><span class="line">	fi</span><br><span class="line">	</span><br><span class="line"><span class="number">2</span>) <span class="keyword">if</span> [ 条件判断 ];then</span><br><span class="line">		command</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">   	command</span><br><span class="line">   fi</span><br><span class="line">   </span><br><span class="line"> <span class="number">3</span>) <span class="keyword">if</span> [ 条件判断<span class="number">1</span> ];then</span><br><span class="line"> 		command1</span><br><span class="line"> 	 elif [ 条件判断<span class="number">2</span> ];then</span><br><span class="line"> 	 	command2</span><br><span class="line"> 	 <span class="keyword">else</span></span><br><span class="line">    	command3</span><br><span class="line">   fi 	</span><br><span class="line">   </span><br></pre></td></tr></table></figure>

<h2 id="3-循环语句"><a href="#3-循环语句" class="headerlink" title="3. 循环语句"></a>3. 循环语句</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">目的：某个动作重复去做，用到循环</span><br><span class="line"><span class="keyword">for</span></span><br><span class="line"><span class="keyword">while</span></span><br><span class="line"><span class="keyword">until</span></span><br></pre></td></tr></table></figure>

<h2 id="4-影响shell程序的内置命令"><a href="#4-影响shell程序的内置命令" class="headerlink" title="4. 影响shell程序的内置命令"></a>4. 影响shell程序的内置命令</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">exit</span>			退出整个程序</span><br><span class="line"><span class="keyword">break</span>		   结束当前循环，或跳出本层循环</span><br><span class="line"><span class="keyword">continue</span> 	忽略本次循环剩余的代码，直接进行下一次循环</span><br><span class="line">shift			使位置参数向左移动，默认移动<span class="number">1</span>位，可以使用shift <span class="number">2</span></span><br><span class="line"></span><br><span class="line">:</span><br><span class="line">true</span><br><span class="line">false</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>举例说明：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">以下脚本都能够实现用户自定义输入数字，然后脚本计算和：</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># cat shift.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">sum=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$</span><span class="comment"># -ne 0 ]</span></span><br><span class="line"><span class="type">do</span></span><br><span class="line"><span class="type">let</span> <span class="type">sum</span>=<span class="variable">$sum</span>+<span class="variable">$1</span></span><br><span class="line"><span class="type">shift</span></span><br><span class="line"><span class="type">done</span></span><br><span class="line"><span class="type">echo</span> <span class="type">sum</span>=<span class="variable">$sum</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># cat for3.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="type">sum</span>=<span class="number">0</span></span><br><span class="line"><span class="type">for</span> <span class="type">i</span></span><br><span class="line"><span class="type">do</span></span><br><span class="line"><span class="type">let</span> <span class="type">sum</span>=<span class="variable">$sum</span>+<span class="variable">$i</span></span><br><span class="line"><span class="type">done</span></span><br><span class="line"><span class="type">echo</span> <span class="type">sum</span>=<span class="variable">$sum</span></span><br></pre></td></tr></table></figure>

<p>##5. 补充扩展expect</p>
<p>expect 自动应答  tcl语言</p>
<p><strong>需求1：</strong>A远程登录到server上什么都不做</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="comment"># 开启一个程序</span></span><br><span class="line">spawn ssh root@<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="comment"># 捕获相关内容</span></span><br><span class="line">expect &#123;</span><br><span class="line">        <span class="string">&quot;(yes/no)?&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">        <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;123456\r&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact   //交互</span><br><span class="line"></span><br><span class="line">脚本执行方式：</span><br><span class="line"><span class="comment"># ./expect1.sh</span></span><br><span class="line"><span class="comment"># /shell04/expect1.sh</span></span><br><span class="line"><span class="comment"># expect -f expect1.sh</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）定义变量</span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> ip <span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="built_in">set</span> pass <span class="number">123456</span></span><br><span class="line"><span class="built_in">set</span> timeout <span class="number">5</span></span><br><span class="line">spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line">	<span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">	<span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）使用位置参数</span><br><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> ip [ <span class="type">lindex</span> <span class="variable">$argv</span> <span class="number">0</span> ]</span><br><span class="line"><span class="built_in">set</span> pass [ <span class="type">lindex</span> <span class="variable">$argv</span> <span class="number">1</span> ]</span><br><span class="line"><span class="built_in">set</span> timeout <span class="number">5</span></span><br><span class="line">spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line">	<span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">	<span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>需求2：</strong>A远程登录到server上操作</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/expect</span></span><br><span class="line"><span class="built_in">set</span> ip <span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="built_in">set</span> pass <span class="number">123456</span></span><br><span class="line"><span class="built_in">set</span> timeout <span class="number">5</span></span><br><span class="line">spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">expect &#123;</span><br><span class="line">	<span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">	<span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">expect <span class="string">&quot;#&quot;</span></span><br><span class="line">send <span class="string">&quot;rm -rf /tmp/*\r&quot;</span></span><br><span class="line">send <span class="string">&quot;touch /tmp/file&#123;1..3&#125;\r&quot;</span></span><br><span class="line">send <span class="string">&quot;date\r&quot;</span></span><br><span class="line">send <span class="string">&quot;exit\r&quot;</span></span><br><span class="line">expect eof</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>需求3：</strong>shell脚本和expect结合使用，在==多台服务器==上创建1个用户</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell04</span>]<span class="comment"># cat ip.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span> <span class="number">123456</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.2</span> <span class="number">123456</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>. 循环  useradd username</span><br><span class="line"><span class="number">2</span>. 登录远程主机——&gt;ssh——&gt;从ip.txt文件里获取IP和密码分别赋值给两个变量</span><br><span class="line"><span class="number">3</span>. 使用expect程序来解决交互问题</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 循环在指定的服务器上创建用户和文件</span></span><br><span class="line"><span class="keyword">while</span> read ip pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	/usr/bin/expect &lt;&lt;<span class="literal">-END</span> &amp;&gt;/dev/null</span><br><span class="line">	spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">	expect &#123;</span><br><span class="line">	<span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">	<span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	expect <span class="string">&quot;#&quot;</span> &#123; send <span class="string">&quot;useradd yy1;rm -rf /tmp/*;exit\r&quot;</span> &#125;</span><br><span class="line">	expect eof</span><br><span class="line">	<span class="keyword">END</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ip</span>服务器用户创建完毕&quot;</span></span><br><span class="line">done &lt; ip.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cat</span> ip.txt|<span class="keyword">while</span> read ip pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        /usr/bin/expect &lt;&lt;<span class="literal">-HOU</span></span><br><span class="line">        spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">        expect &#123;</span><br><span class="line">                <span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">                <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        expect <span class="string">&quot;#&quot;</span></span><br><span class="line">        send <span class="string">&quot;hostname\r&quot;</span></span><br><span class="line">        send <span class="string">&quot;exit\r&quot;</span></span><br><span class="line">        expect eof</span><br><span class="line">        HOU</span><br><span class="line"></span><br><span class="line">        &#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;user is ok....&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> read ip pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        /usr/bin/expect &lt;&lt;<span class="literal">-HOU</span></span><br><span class="line">        spawn ssh root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">        expect &#123;</span><br><span class="line">                <span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">                <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        expect <span class="string">&quot;#&quot;</span></span><br><span class="line">        send <span class="string">&quot;hostname\r&quot;</span></span><br><span class="line">        send <span class="string">&quot;exit\r&quot;</span></span><br><span class="line">        expect eof</span><br><span class="line">        HOU</span><br><span class="line"></span><br><span class="line">        &#125;&amp;</span><br><span class="line">done&lt;ip.txt</span><br><span class="line">wait</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;user is ok....&quot;</span></span><br></pre></td></tr></table></figure>



<p>#四、综合案例</p>
<p>##1. 实战案例1</p>
<h3 id="㈠-具体需求"><a href="#㈠-具体需求" class="headerlink" title="㈠ 具体需求"></a>㈠ 具体需求</h3><p>写一个脚本，将跳板机上yunwei用户的公钥推送到==局域网内==可以ping通的所有机器上</p>
<p>说明：主机和密码文件已经提供</p>
<p>10.1.1.1:123456</p>
<p>10.1.1.2:123456</p>
<h3 id="㈡-案例分析"><a href="#㈡-案例分析" class="headerlink" title="㈡ 案例分析"></a>㈡ 案例分析</h3><ol>
<li>跳板机上的yunwei用户生成秘钥对<ul>
<li>判断账号是否存在  (id yunwei)</li>
<li>判断该用户是否有密钥对文件  [ -f xxx ]</li>
</ul>
</li>
<li>判断expect程序是否安装</li>
<li>判断局域网内主机是否ping通（循环判断|for while until）<ul>
<li>循环判断  for  while</li>
<li>循环体do……done    ping 主机  如果ping通 调用expect程序自动应答推送公钥</li>
</ul>
</li>
<li>测试验证是否免密登录成功</li>
</ol>
<ul>
<li>检查服务器上ssh服务端口号</li>
<li>把公钥推送成功的主机的信息保存到文件</li>
<li>关闭防火墙和selinux</li>
<li>日志记录</li>
<li>推送公钥需要自动应答expect</li>
</ul>
<h3 id="㈢-落地实现"><a href="#㈢-落地实现" class="headerlink" title="㈢ 落地实现"></a>㈢ 落地实现</h3><h4 id="①-代码拆分"><a href="#①-代码拆分" class="headerlink" title="① 代码拆分"></a>① 代码拆分</h4><p>功能1：管理员root创建yunwei用户和安装expect软件包</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment"># 实现批量推送公钥</span></span><br><span class="line"><span class="comment"># 判断jumper上的yunwei账号是否存在</span></span><br><span class="line">&#123;</span><br><span class="line">id yunwei</span><br><span class="line">[ <span class="variable">$</span>? -<span class="type">ne</span> <span class="number">0</span> ] &amp;&amp; useradd yunwei &amp;&amp; <span class="built_in">echo</span> <span class="number">123</span>|passwd -<span class="literal">-stdin</span> yunwei</span><br><span class="line">&#125; &amp;&gt;/dev/null</span><br><span class="line"><span class="comment">#判断expect程序是否安装</span></span><br><span class="line">rpm <span class="literal">-q</span> expect</span><br><span class="line">[ <span class="variable">$</span>? -<span class="type">ne</span> <span class="number">0</span> ] &amp;&amp; yum <span class="literal">-y</span> install expect &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;expect软件已经成功安装&quot;</span></span><br></pre></td></tr></table></figure>

<p>功能2：判断主机是否ping通并且==yunwei用户==推送公钥</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="comment"># 判断yunwei用户密钥对是否存在</span></span><br><span class="line">home_dir=/home/yunwei</span><br><span class="line">[ ! -<span class="type">f</span> <span class="variable">$home_dir</span>/<span class="type">.ssh</span>/<span class="type">id_rsa.pub</span> ] &amp;&amp; ssh<span class="literal">-keygen</span> <span class="literal">-P</span> <span class="string">&#x27;&#x27;</span> <span class="operator">-f</span> id_rsa &amp;&gt;/dev/null</span><br><span class="line"></span><br><span class="line"><span class="comment">#循环检查主机的网络并且进行公钥推送</span></span><br><span class="line">ip_txt=<span class="variable">$home_dir</span>/ip.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat <span class="variable">$ip_txt</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	ip=`echo <span class="variable">$i</span>|cut <span class="literal">-d</span>: <span class="literal">-f1</span>`</span><br><span class="line">	pass=`echo <span class="variable">$i</span>|cut <span class="literal">-d</span>: <span class="literal">-f2</span>`</span><br><span class="line">	ping <span class="literal">-c1</span> <span class="variable">$ip</span> &amp;&gt;/dev/null</span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">		<span class="built_in">echo</span> <span class="variable">$ip</span> &gt;&gt; ~/ip_up.txt</span><br><span class="line">		/usr/bin/expect &lt;&lt;<span class="literal">-END</span> &amp;&gt;/dev/null</span><br><span class="line">		spawn ssh<span class="literal">-copy</span><span class="literal">-id</span> root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">		expect</span><br><span class="line">			&#123;</span><br><span class="line">            <span class="string">&quot;(yes/no)&quot;</span>  &#123; send <span class="string">&quot;yes\n&quot;</span>;exp_continue &#125;</span><br><span class="line">            <span class="string">&quot;password:&quot;</span>  &#123; send <span class="string">&quot;<span class="variable">$pass</span>\n&quot;</span> &#125;</span><br><span class="line">			&#125;</span><br><span class="line">		expect eof</span><br><span class="line">		<span class="keyword">END</span>	</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="variable">$ip</span> &gt;&gt; <span class="variable">$home_dir</span>/ip_down.txt</span><br><span class="line">	fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试验证</span></span><br><span class="line">remote_ip=`head <span class="literal">-1</span> ~/ip_up.txt`</span><br><span class="line">ssh root<span class="selector-tag">@</span><span class="variable">$remote_ip</span> hostname</span><br><span class="line">[ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;公钥推送成功&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="②-最终实现"><a href="#②-最终实现" class="headerlink" title="② 最终实现"></a>② 最终实现</h4><ol>
<li><strong>环境准备</strong></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">jumper<span class="literal">-server</span>	有yunwei用户</span><br><span class="line"></span><br><span class="line">yunwei用户sudo授权：</span><br><span class="line">visudo</span><br><span class="line"><span class="comment">## Allow root to run any commands anywhere</span></span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">yunwei  ALL=(root)      NOPASSWD:ALL,!/sbin/shutdown,!/sbin/init,!/bin/<span class="built_in">rm</span> <span class="literal">-rf</span> /</span><br><span class="line"></span><br><span class="line">解释说明：</span><br><span class="line"><span class="number">1</span>）第一个字段yunwei指定的是用户：可以是用户名，也可以是别名。每个用户设置一行，多个用户设置多行，也可以将多个用户设置成一个别名后再进行设置。</span><br><span class="line"><span class="number">2</span>）第二个字段ALL指定的是用户所在的主机：可以是ip,也可以是主机名，表示该sudo设置只在该主机上生效，ALL表示在所有主机上都生效！限制的一般都是本机，也就是限制使用这个文件的主机;一般都指定为<span class="string">&quot;ALL&quot;</span>表示所有的主机，不管文件拷到那里都可以用。比如：<span class="number">10.1</span>.<span class="number">1.1</span>=...则表示只在当前主机生效。</span><br><span class="line"><span class="number">3</span>）第三个字段（root）括号里指定的也是用户：指定以什么用户身份执行sudo，即使用sudo后可以享有所有root账号下的权限。如果要排除个别用户，可以在括号内设置，比如ALL=(ALL,!oracle,!pos)。</span><br><span class="line"><span class="number">4</span>）第四个字段ALL指定的是执行的命令：即使用sudo后可以执行所有的命令。除了关机和删除根内容以外；也可以设置别名。NOPASSWD: ALL表示使用sudo的不需要输入密码。</span><br><span class="line"><span class="number">5</span>）也可以授权给一个用户组</span><br><span class="line">	%admin ALL=(ALL) ALL	表示admin组里的所有成员可以在任何主机上以任何用户身份执行任何命令</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><strong>脚本实现</strong></li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#判断公钥是否存在</span></span><br><span class="line">[ ! -<span class="type">f</span> /<span class="type">home</span>/<span class="type">yunwei</span>/<span class="type">.ssh</span>/<span class="type">id_rsa</span> ] &amp;&amp; ssh<span class="literal">-keygen</span> <span class="literal">-P</span> <span class="string">&#x27;&#x27;</span> <span class="operator">-f</span> ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line"><span class="comment">#循环判断主机是否ping通，如果ping通推送公钥</span></span><br><span class="line">tr <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27; &#x27;</span> &lt; /shell04/ip.txt|<span class="keyword">while</span> read ip pass</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">        ping <span class="literal">-c1</span> <span class="variable">$ip</span> &amp;&gt;/dev/null</span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$</span>? -<span class="type">eq</span> <span class="number">0</span> ];then</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$ip</span> &gt;&gt; ~/ip_up.txt</span><br><span class="line">        /usr/bin/expect &lt;&lt;<span class="literal">-END</span> &amp;&gt;/dev/null</span><br><span class="line">         spawn ssh<span class="literal">-copy</span><span class="literal">-id</span> root<span class="selector-tag">@</span><span class="variable">$ip</span></span><br><span class="line">         expect &#123;</span><br><span class="line">                <span class="string">&quot;yes/no&quot;</span> &#123; send <span class="string">&quot;yes\r&quot;</span>;exp_continue &#125;</span><br><span class="line">                <span class="string">&quot;password:&quot;</span> &#123; send <span class="string">&quot;<span class="variable">$pass</span>\r&quot;</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        expect eof</span><br><span class="line">        <span class="keyword">END</span></span><br><span class="line">        fi</span><br><span class="line">&#125;&amp;</span><br><span class="line">done</span><br><span class="line">wait</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;公钥已经推送完毕，正在测试....&quot;</span></span><br><span class="line"><span class="comment">#测试验证</span></span><br><span class="line">remote_ip=`tail <span class="literal">-1</span> ~/ip_up.txt`</span><br><span class="line">ssh root<span class="selector-tag">@</span><span class="variable">$remote_ip</span> hostname &amp;&gt;/dev/null</span><br><span class="line">test <span class="variable">$</span>? <span class="operator">-eq</span> <span class="number">0</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;公钥成功推送完毕&quot;</span></span><br></pre></td></tr></table></figure>

<p>##2. 实战案例2</p>
<p>写一个脚本，统计web服务的不同==连接状态==个数</p>
<ol>
<li>找出查看网站连接状态的命令  <code>ss -natp|grep :80</code></li>
<li>如何统计==不同的==状态   循环去统计，需要计算</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#count_http_80_state</span></span><br><span class="line"><span class="comment">#统计每个状态的个数</span></span><br><span class="line"></span><br><span class="line">declare <span class="literal">-A</span> array1</span><br><span class="line">states=`ss <span class="literal">-ant</span>|grep <span class="number">80</span>|cut <span class="literal">-d</span><span class="string">&#x27; &#x27;</span> <span class="literal">-f1</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$states</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        let array1[<span class="variable">$i</span>]++</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过遍历数组里的索引和元素打印出来</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="variable">$</span>&#123;!array1[<span class="selector-tag">@</span>]&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$j:</span><span class="variable">$</span>&#123;array1[<span class="variable">$j</span>]&#125;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>#五、课后实战</p>
<p>1、将/etc/passwd里的用户名分类，分为管理员用户，系统用户，普通用户。<br>2、写一个倒计时脚本，要求显示离2019年1月1日（元旦）的凌晨0点，还有多少天，多少时，多少分，多少秒。<br>3、写一个脚本把一个目录内的所有==空文件==都删除，最后输出删除的文件的个数。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>06_SHELL编程之CASE语句+函数+正则</title>
    <url>/2021/01/06/linux/06_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8BCASE%E8%AF%AD%E5%8F%A5+%E5%87%BD%E6%95%B0+%E6%AD%A3%E5%88%99/</url>
    <content><![CDATA[<p>#课程目标</p>
<ul>
<li>掌握case语句的基本语法结构</li>
<li>掌握函数的定义及调用</li>
<li>掌握常用的正则表达式元字符含义</li>
</ul>
<span id="more"></span>

<h1 id="一、case语句"><a href="#一、case语句" class="headerlink" title="一、case语句"></a>一、case语句</h1><p><strong>关键词：确认过眼神，你是对的人</strong>:couple_with_heart:</p>
<ol>
<li>case语句为多重匹配语句</li>
<li>如果匹配成功，执行相匹配的命令</li>
</ol>
<h2 id="1-语法结构"><a href="#1-语法结构" class="headerlink" title="1. 语法结构"></a>1. 语法结构</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">说明：pattern表示需要匹配的模式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">case var <span class="keyword">in</span>             定义变量;var代表是变量名</span><br><span class="line">pattern <span class="number">1</span>)              模式<span class="number">1</span>;用 | 分割多个模式，相当于or</span><br><span class="line">    command1            需要执行的语句</span><br><span class="line">    ;;                  两个分号代表命令结束</span><br><span class="line">pattern <span class="number">2</span>)</span><br><span class="line">    command2</span><br><span class="line">    ;;</span><br><span class="line">pattern <span class="number">3</span>)</span><br><span class="line">    command3</span><br><span class="line">    ;;</span><br><span class="line">		  *)              default，不满足以上模式，默认执行*)下面的语句</span><br><span class="line">    command4</span><br><span class="line">    ;;</span><br><span class="line">esac							esac表示case语句结束</span><br></pre></td></tr></table></figure>

<h2 id="2-应用案例"><a href="#2-应用案例" class="headerlink" title="2. 应用案例"></a>2. 应用案例</h2><h3 id="㈠-脚本传不同值做不同事"><a href="#㈠-脚本传不同值做不同事" class="headerlink" title="㈠ 脚本传不同值做不同事"></a>㈠ 脚本传不同值做不同事</h3><p><strong>具体需求：</strong>当给程序传入start、stop、restart三个不同参数时分别执行相应命令</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line">case <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">        <span class="built_in">start</span>|S)</span><br><span class="line">        service apache <span class="built_in">start</span> &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;apache 启动成功&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        stop|T)</span><br><span class="line">        service apache stop &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;apache 停止成功&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        restart|<span class="built_in">R</span>)</span><br><span class="line">        service apache restart &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;apache 重启完毕&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入要做的事情...&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="㈡-根据用户需求选择做事"><a href="#㈡-根据用户需求选择做事" class="headerlink" title="㈡ 根据用户需求选择做事"></a>㈡ 根据用户需求选择做事</h3><p><strong>具体需求：</strong></p>
<p>脚本提示让用户输入需要管理的服务名，然后提示用户需要对服务做什么操作，如启动，关闭等操作</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要管理的服务名称(vsftpd):&quot;</span> service</span><br><span class="line">case <span class="variable">$service</span> <span class="keyword">in</span></span><br><span class="line">        vsftpd|ftp)</span><br><span class="line">        read <span class="literal">-p</span> <span class="string">&quot;请选择你需要做的事情(restart|stop):&quot;</span> action</span><br><span class="line">        case <span class="variable">$action</span> <span class="keyword">in</span></span><br><span class="line">                stop|S)</span><br><span class="line">                service vsftpd stop &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;该<span class="variable">$serivce</span>服务已经停止成功&quot;</span></span><br><span class="line">                ;;</span><br><span class="line">                <span class="built_in">start</span>)</span><br><span class="line">                service vsftpd <span class="built_in">start</span> &amp;&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;该<span class="variable">$serivce</span>服务已经成功启动&quot;</span></span><br><span class="line">                ;;</span><br><span class="line">        esac</span><br><span class="line">        ;;</span><br><span class="line">        httpd|apache)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;apache hello world&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;请输入你要管理的服务名称(vsftpd)&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">esac</span><br><span class="line">	</span><br></pre></td></tr></table></figure>

<p>###㈢ 菜单提示让用户选择需要做的事</p>
<p><strong>具体需求：</strong></p>
<p>模拟一个多任务维护界面;当执行程序时先显示总菜单，然后进行选择后做相应维护监控操作</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">**********请选择*********</span><br><span class="line"><span class="built_in">h</span>	显示命令帮助</span><br><span class="line">f	显示磁盘分区</span><br><span class="line">d	显示磁盘挂载</span><br><span class="line">m	查看内存使用</span><br><span class="line">u	查看系统负载</span><br><span class="line">q	退出程序</span><br><span class="line">*************************</span><br></pre></td></tr></table></figure>

<p><strong>思路：</strong></p>
<ol>
<li>菜单打印出来</li>
<li>交互式让用户输入操作编号，然后做出相应处理</li>
</ol>
<p><strong>落地实现：</strong></p>
<ol>
<li>菜单打印(分解动作)</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env bash</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">	<span class="built_in">h</span>	显示命令帮助</span><br><span class="line">	f	显示磁盘分区</span><br><span class="line">	d	显示磁盘挂载</span><br><span class="line">	m	查看内存使用</span><br><span class="line">	u	查看系统负载</span><br><span class="line">	q	退出程序</span><br><span class="line">	EOF</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>最终实现</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#打印菜单</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">	<span class="built_in">h</span>	显示命令帮助</span><br><span class="line">	f	显示磁盘分区</span><br><span class="line">	d	显示磁盘挂载</span><br><span class="line">	m	查看内存使用</span><br><span class="line">	u	查看系统负载</span><br><span class="line">	q	退出程序</span><br><span class="line">	EOF</span><br><span class="line"></span><br><span class="line"><span class="comment">#让用户输入需要的操作</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入需要操作的选项[f|d]:&quot;</span> var1</span><br><span class="line">case <span class="variable">$var1</span> <span class="keyword">in</span></span><br><span class="line">	<span class="built_in">h</span>)</span><br><span class="line">	<span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">        <span class="built_in">h</span>       显示命令帮助</span><br><span class="line">        f       显示磁盘分区</span><br><span class="line">        d       显示磁盘挂载</span><br><span class="line">        m       查看内存使用</span><br><span class="line">        u       查看系统负载</span><br><span class="line">        q       退出程序</span><br><span class="line">	EOF</span><br><span class="line">	;;</span><br><span class="line">	f)</span><br><span class="line">	fdisk <span class="literal">-l</span></span><br><span class="line">	;;</span><br><span class="line">	d)</span><br><span class="line">	df <span class="literal">-h</span></span><br><span class="line">	;;</span><br><span class="line">	m)</span><br><span class="line">	free <span class="literal">-m</span></span><br><span class="line">	;;</span><br><span class="line">	u)</span><br><span class="line">	uptime</span><br><span class="line">	;;</span><br><span class="line">	q)</span><br><span class="line">	<span class="keyword">exit</span></span><br><span class="line">	;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#打印菜单</span></span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-END</span></span><br><span class="line">	<span class="built_in">h</span>	显示命令帮助</span><br><span class="line">	f	显示磁盘分区</span><br><span class="line">	d	显示磁盘挂载</span><br><span class="line">	m	查看内存使用</span><br><span class="line">	u	查看系统负载</span><br><span class="line">	q	退出程序</span><br><span class="line">	<span class="keyword">END</span></span><br><span class="line">&#125;</span><br><span class="line">menu</span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你的操作[h for help]:&quot;</span> var1</span><br><span class="line">case <span class="variable">$var1</span> <span class="keyword">in</span></span><br><span class="line">	<span class="built_in">h</span>)</span><br><span class="line">	menu</span><br><span class="line">	;;</span><br><span class="line">	f)</span><br><span class="line">	read <span class="literal">-p</span> <span class="string">&quot;请输入你要查看的设备名字[/dev/sdb]:&quot;</span> var2</span><br><span class="line">	case <span class="variable">$var2</span> <span class="keyword">in</span></span><br><span class="line">		/dev/sda)</span><br><span class="line">		fdisk <span class="literal">-l</span> /dev/sda</span><br><span class="line">		;;</span><br><span class="line">		/dev/sdb)</span><br><span class="line">		fdisk <span class="literal">-l</span> /dev/sdb</span><br><span class="line">		;;</span><br><span class="line">	esac</span><br><span class="line">	;;</span><br><span class="line">	d)</span><br><span class="line">	lsblk</span><br><span class="line">	;;</span><br><span class="line">	m)</span><br><span class="line">	free <span class="literal">-m</span></span><br><span class="line">	;;</span><br><span class="line">	u)</span><br><span class="line">	uptime</span><br><span class="line">	;;</span><br><span class="line">	q)</span><br><span class="line">	<span class="keyword">exit</span></span><br><span class="line">	;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>课堂练习：</strong></p>
<ol>
<li>输入一个等级（A-E），查看每个等级的成绩；如：输入A，则显示“90分~100分”，依次类推</li>
<li>判断用户输入的字符串，如果是”hello”,则显示”world”；如果是”world”,则显示”hello”,否则提示”请输入hello或者world，谢谢！”</li>
</ol>
<h1 id="二、-函数"><a href="#二、-函数" class="headerlink" title="二、==函数=="></a>二、==函数==</h1><h2 id="1-什么是函数？"><a href="#1-什么是函数？" class="headerlink" title="1. 什么是函数？"></a>1. 什么是函数？</h2><ul>
<li>shell中允许将<strong>一组命令集合</strong>或<strong>语句</strong>形成一段<strong>可用代码</strong>，这些代码块称为shell函数</li>
<li>给这段代码起个名字称为函数名，后续可以直接调用该段代码的功能</li>
</ul>
<h2 id="2-如何定义函数？"><a href="#2-如何定义函数？" class="headerlink" title="2. 如何定义函数？"></a>2. 如何定义函数？</h2><p><strong>方法1：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">函数名()</span><br><span class="line">&#123;</span><br><span class="line">  函数体（一堆命令的集合，来实现某个功能）   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>方法2：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名<span class="params">()</span></span></span><br><span class="line">&#123;</span><br><span class="line">   函数体（一堆命令的集合，来实现某个功能）</span><br><span class="line">   <span class="built_in">echo</span> hello</span><br><span class="line">   <span class="built_in">echo</span> world</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>函数中==return==说明:</strong></p>
<ol>
<li>return可以==结束一个函数==。类似于循环控制语句break(结束当前循环，执行循环体后面的代码)。</li>
<li>return默认返回函数中最后一个命令状态值，也可以给定参数值，范围是0-256之间。</li>
<li>如果没有return命令，函数将返回最后一个指令的退出状态值。</li>
</ol>
<p>##3. 函数如何调用？</p>
<h3 id="㈠-当前命令行调用"><a href="#㈠-当前命令行调用" class="headerlink" title="㈠ 当前命令行调用"></a>㈠ 当前命令行调用</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># cat fun1.sh </span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">hello()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello lilei <span class="variable">$1</span>&quot;</span></span><br><span class="line">hostname</span><br><span class="line">&#125;</span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line"><span class="number">1</span>. mysql</span><br><span class="line"><span class="number">2</span>. web</span><br><span class="line"><span class="number">3</span>. app</span><br><span class="line"><span class="number">4</span>. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># source fun1.sh </span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># . fun1.sh </span></span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># hello 888</span></span><br><span class="line">hello lilei <span class="number">888</span></span><br><span class="line">MissHou.itcast.cc</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell04</span>]<span class="comment"># menu</span></span><br><span class="line"><span class="number">1</span>. mysql</span><br><span class="line"><span class="number">2</span>. web</span><br><span class="line"><span class="number">3</span>. app</span><br><span class="line"><span class="number">4</span>. <span class="keyword">exit</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="㈡-定义到用户的环境变量中"><a href="#㈡-定义到用户的环境变量中" class="headerlink" title="㈡ 定义到用户的环境变量中"></a>㈡ 定义到用户的环境变量中</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell05</span>]<span class="comment"># vim ~/.bashrc </span></span><br><span class="line">文件中增加如下内容：</span><br><span class="line">hello()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello lilei <span class="variable">$1</span>&quot;</span></span><br><span class="line">hostname</span><br><span class="line">&#125;</span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line"><span class="number">1</span>. mysql</span><br><span class="line"><span class="number">2</span>. web</span><br><span class="line"><span class="number">3</span>. app</span><br><span class="line"><span class="number">4</span>. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">当用户打开bash的时候会读取该文件</span><br></pre></td></tr></table></figure>

<h3 id="㈢-脚本中调用"><a href="#㈢-脚本中调用" class="headerlink" title="㈢ 脚本中调用"></a>㈢ 脚本中调用</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#打印菜单</span></span><br><span class="line">source ./fun1.sh</span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-END</span></span><br><span class="line">	<span class="built_in">h</span>	显示命令帮助</span><br><span class="line">	f	显示磁盘分区</span><br><span class="line">	d	显示磁盘挂载</span><br><span class="line">	m	查看内存使用</span><br><span class="line">	u	查看系统负载</span><br><span class="line">	q	退出程序</span><br><span class="line">	<span class="keyword">END</span></span><br><span class="line">&#125;</span><br><span class="line">menu		//调用函数</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>##4. 应用案例</p>
<p><strong>具体需求：</strong></p>
<ol>
<li>写一个脚本==收集用户输入==的基本信息(姓名，性别，年龄)，如不输入==一直提示输入==</li>
<li>最后根据用户的信息输出相对应的内容</li>
</ol>
<p><strong>思路：</strong></p>
<ol>
<li><p>==交互式==定义多个变量来保存用户信息  姓名、性别、年龄</p>
</li>
<li><p>如果不输一直提示输入</p>
<ul>
<li>==循环==直到输入字符串不为空  while  判断输入字符串是否为空</li>
<li>每个信息都必须不能为空，该功能可以定义为一个函数，方便下面脚本调用</li>
</ul>
</li>
<li><p>根据用户输入信息做出匹配判断</p>
</li>
</ol>
<p><strong>代码实现：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#该函数实现用户如果不输入内容则一直循环直到用户输入为止，并且将用户输入的内容打印出来</span></span><br><span class="line">input_fun()</span><br><span class="line">&#123;</span><br><span class="line">  input_var=<span class="string">&quot;&quot;</span></span><br><span class="line">  output_var=<span class="variable">$1</span></span><br><span class="line">  <span class="keyword">while</span> [ -<span class="type">z</span> <span class="variable">$input_var</span> ]</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	read <span class="literal">-p</span> <span class="string">&quot;<span class="variable">$output_var</span>&quot;</span> input_var</span><br><span class="line">	done</span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$input_var</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">input_fun 请输入你的姓名:</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">fun()</span><br><span class="line">&#123;</span><br><span class="line">	read <span class="literal">-p</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> var</span><br><span class="line">	<span class="keyword">if</span> [ -<span class="type">z</span> <span class="variable">$var</span> ];then</span><br><span class="line">		fun <span class="variable">$1</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数并且获取用户的姓名、性别、年龄分别赋值给name、sex、age变量</span></span><br><span class="line">name=<span class="variable">$</span>(input_fun 请输入你的姓名:)</span><br><span class="line">sex=<span class="variable">$</span>(input_fun 请输入你的性别:)</span><br><span class="line">age=<span class="variable">$</span>(input_fun 请输入你的年龄:)</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据用户输入的性别进行匹配判断</span></span><br><span class="line">case <span class="variable">$sex</span> <span class="keyword">in</span></span><br><span class="line">			<span class="built_in">man</span>)</span><br><span class="line">			<span class="keyword">if</span> [ <span class="variable">$age</span> -<span class="type">gt</span> <span class="number">18</span> -<span class="type">a</span> <span class="variable">$age</span> -<span class="type">le</span> <span class="number">35</span> ];then</span><br><span class="line">				<span class="built_in">echo</span> <span class="string">&quot;中年大叔你油腻了吗？加油&quot;</span></span><br><span class="line">			elif [ <span class="variable">$age</span> -<span class="type">gt</span> <span class="number">35</span> ];then</span><br><span class="line">				<span class="built_in">echo</span> <span class="string">&quot;保温杯里泡枸杞&quot;</span></span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				<span class="built_in">echo</span> <span class="string">&quot;年轻有为。。。&quot;</span></span><br><span class="line">			fi</span><br><span class="line">			;;</span><br><span class="line">			woman)</span><br><span class="line">			xxx</span><br><span class="line">			;;</span><br><span class="line">			*)</span><br><span class="line">			xxx</span><br><span class="line">			;;</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>扩展延伸：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">描述以下代码含义：	</span><br><span class="line">:()</span><br><span class="line">&#123;</span><br><span class="line">   :|:&amp;</span><br><span class="line">&#125;</span><br><span class="line">:</span><br></pre></td></tr></table></figure>

<p>#三、综合案例</p>
<h2 id="1-任务背景"><a href="#1-任务背景" class="headerlink" title="1. 任务背景"></a>1. 任务背景</h2><p>现有的跳板机虽然实现了统一入口来访问生产服务器，yunwei用户权限太大可以操作跳板机上的所有目录文件，存在数据被误删的安全隐患，所以希望你做一些安全策略来保证跳板机的正常使用。</p>
<h2 id="2-具体要求"><a href="#2-具体要求" class="headerlink" title="2. 具体要求"></a>2. 具体要求</h2><ol>
<li>只允许yunwei用户通过跳板机远程连接后台的应用服务器做一些维护操作</li>
<li>公司运维人员远程通过yunwei用户连接跳板机时，跳出以下菜单供选择：</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="built_in">h</span>. help</span><br><span class="line">q. <span class="keyword">exit</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>当用户选择相应主机后，直接<strong>免密码登录</strong>成功</li>
<li>如果用户不输入一直提示用户输入，直到用户选择退出</li>
</ol>
<h2 id="3-综合分析"><a href="#3-综合分析" class="headerlink" title="3. 综合分析"></a>3. 综合分析</h2><ol>
<li>将脚本放到yunwei用户家目录里的.bashrc文件里（/shell05/jumper-server.sh）</li>
<li>将菜单定义为一个函数[打印菜单]，方便后面调用</li>
<li>用case语句来实现用户的选择【交互式定义变量】</li>
<li>当用户选择了某一台服务器后，进一步询问用户需要做的事情  case…esac  交互式定义变量</li>
<li>使用循环来实现用户不选择一直让其选择</li>
<li>限制用户退出后直接关闭终端  exit </li>
</ol>
<h2 id="4-落地实现"><a href="#4-落地实现" class="headerlink" title="4. 落地实现"></a>4. 落地实现</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># jumper-server</span></span><br><span class="line"><span class="comment"># 定义菜单打印功能的函数</span></span><br><span class="line">menu()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="built_in">h</span>. help</span><br><span class="line">q. <span class="keyword">exit</span></span><br><span class="line">	EOF</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 屏蔽以下信号</span></span><br><span class="line"><span class="keyword">trap</span> <span class="string">&#x27;&#x27;</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">19</span></span><br><span class="line"><span class="comment"># 调用函数来打印菜单</span></span><br><span class="line">menu</span><br><span class="line"><span class="comment">#循环等待用户选择</span></span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="comment"># 菜单选择，case...esac语句</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请选择你要访问的主机:&quot;</span> host</span><br><span class="line">case <span class="variable">$host</span> <span class="keyword">in</span></span><br><span class="line">	<span class="number">1</span>)</span><br><span class="line">	ssh root@<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">	;;</span><br><span class="line">	<span class="number">2</span>)</span><br><span class="line">	ssh root@<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">	;;</span><br><span class="line">	<span class="number">3</span>)</span><br><span class="line">	ssh root@<span class="number">10.1</span>.<span class="number">1.3</span></span><br><span class="line">	;;</span><br><span class="line">	<span class="built_in">h</span>)</span><br><span class="line">	<span class="built_in">clear</span>;menu</span><br><span class="line">	;;</span><br><span class="line">	q)</span><br><span class="line">	<span class="keyword">exit</span></span><br><span class="line">	;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">将脚本放到yunwei用户家目录里的.bashrc里执行：</span><br><span class="line">bash ~/jumper<span class="literal">-server</span>.sh</span><br><span class="line"><span class="keyword">exit</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>进一步完善需求</strong></p>
<p>为了进一步增强跳板机的安全性，工作人员通过跳板机访问生产环境，但是不能在跳板机上停留。</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#公钥推送成功</span></span><br><span class="line"><span class="keyword">trap</span> <span class="string">&#x27;&#x27;</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">19</span></span><br><span class="line"><span class="comment">#打印菜单用户选择</span></span><br><span class="line">menu()&#123;</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="literal">-EOF</span></span><br><span class="line">欢迎使用Jumper<span class="literal">-server</span>，请选择你要操作的主机：</span><br><span class="line"><span class="number">1</span>. DB1<span class="literal">-Master</span></span><br><span class="line"><span class="number">2</span>. DB2<span class="literal">-Slave</span></span><br><span class="line"><span class="number">3</span>. Web1</span><br><span class="line"><span class="number">4</span>. Web2</span><br><span class="line"><span class="built_in">h</span>. help</span><br><span class="line">q. <span class="keyword">exit</span></span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#调用函数来打印菜单</span></span><br><span class="line">menu</span><br><span class="line"><span class="keyword">while</span> true</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">read <span class="literal">-p</span> <span class="string">&quot;请输入你要选择的主机[h for help]：&quot;</span> host</span><br><span class="line"></span><br><span class="line"><span class="comment">#通过case语句来匹配用户所输入的主机</span></span><br><span class="line">case <span class="variable">$host</span> <span class="keyword">in</span></span><br><span class="line">	<span class="number">1</span>|DB1)</span><br><span class="line">	ssh root@<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">	;;</span><br><span class="line">	<span class="number">2</span>|DB2)</span><br><span class="line">	ssh root@<span class="number">10.1</span>.<span class="number">1.2</span></span><br><span class="line">	;;</span><br><span class="line">	<span class="number">3</span>|web1)</span><br><span class="line">	ssh root@<span class="number">10.1</span>.<span class="number">1.250</span></span><br><span class="line">	;;</span><br><span class="line">	<span class="built_in">h</span>|help)</span><br><span class="line">	<span class="built_in">clear</span>;menu</span><br><span class="line">	;;</span><br><span class="line">	q|quit)</span><br><span class="line">	<span class="keyword">exit</span></span><br><span class="line">	;;</span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">自己完善功能：</span><br><span class="line"><span class="number">1</span>. 用户选择主机后，需要事先推送公钥；如何判断公钥是否已推</span><br><span class="line"><span class="number">2</span>. 比如选择web1时，再次提示需要做的操作，比如：</span><br><span class="line">clean log</span><br><span class="line">重启服务</span><br><span class="line"><span class="built_in">kill</span>某个进程</span><br></pre></td></tr></table></figure>

<p><strong>回顾信号：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>) SIGHUP 			重新加载配置    </span><br><span class="line"><span class="number">2</span>) SIGINT			键盘中断^C</span><br><span class="line"><span class="number">3</span>) SIGQUIT      	键盘退出</span><br><span class="line"><span class="number">9</span>) SIGKILL		 	强制终止</span><br><span class="line"><span class="number">15</span>) SIGTERM	    	终止（正常结束），缺省信号</span><br><span class="line"><span class="number">18</span>) SIGCONT	   	继续</span><br><span class="line"><span class="number">19</span>) SIGSTOP	   	停止</span><br><span class="line"><span class="number">20</span>) SIGTSTP     	暂停^Z</span><br></pre></td></tr></table></figure>

<h1 id="四、正则表达式"><a href="#四、正则表达式" class="headerlink" title="四、正则表达式"></a>四、正则表达式</h1><p>##1. 正则表达式是什么？</p>
<p><strong>正则表达式</strong>（Regular Expression、regex或regexp，缩写为RE），也译为正规表示法、常规表示法，是一种字符模式，用于在查找过程中==匹配指定的字符==。</p>
<p>许多程序设计语言都支持利用正则表达式进行<strong>字符串操作</strong>。例如，在Perl中就内建了一个功能强大的正则表达式引擎。</p>
<p>正则表达式这个概念最初是由Unix中的工具软件（例如sed和grep）普及开的。</p>
<p>支持正则表达式的程序如：locate |find| vim| grep| sed |awk</p>
<h2 id="2-正则能干什么？"><a href="#2-正则能干什么？" class="headerlink" title="2. 正则能干什么？"></a>2. 正则能干什么？</h2><ol>
<li>匹配邮箱、匹配身份证号码、手机号、银行卡号等</li>
<li>匹配某些特定字符串，做特定处理等等</li>
</ol>
<h2 id="3-正则当中名词解释"><a href="#3-正则当中名词解释" class="headerlink" title="3. 正则当中名词解释"></a>3. 正则当中名词解释</h2><ul>
<li><p><strong>元字符</strong></p>
<p>指那些在正则表达式中具有<strong>特殊意义的==专用字符==</strong>,如:点(.) 星(*) 问号(?)等</p>
</li>
<li><p><strong>前导字符</strong></p>
<p>位于<strong>元字符</strong>前面的字符.    ab**==c==***   aoo**==o==.**</p>
</li>
</ul>
<p>##4. 第一类正则表达式</p>
<h3 id="㈠-正则中普通常用的元字符"><a href="#㈠-正则中普通常用的元字符" class="headerlink" title="㈠ 正则中普通常用的元字符"></a>㈠ 正则中普通常用的元字符</h3><table>
<thead>
<tr>
<th>元字符</th>
<th>功能</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>.</td>
<td>匹配除了换行符以外的==任意单个==字符</td>
<td></td>
</tr>
<tr>
<td>*</td>
<td>==前导字符==出现==0==次或==连续多次==</td>
<td></td>
</tr>
<tr>
<td>.*</td>
<td>任意长度字符</td>
<td>ab.*</td>
</tr>
<tr>
<td>^</td>
<td>行首(以…开头)</td>
<td>^root</td>
</tr>
<tr>
<td>$</td>
<td>行尾(以…结尾)</td>
<td>bash$</td>
</tr>
<tr>
<td>^$</td>
<td>空行</td>
<td></td>
</tr>
<tr>
<td>[]</td>
<td>匹配括号里任意单个字符或一组单个字符</td>
<td>[abc]</td>
</tr>
<tr>
<td>[^]</td>
<td>匹配不包含括号里任一单个字符或一组单个字符</td>
<td>[^abc]</td>
</tr>
<tr>
<td>^[]</td>
<td>匹配以括号里任意单个字符或一组单个字符开头</td>
<td>^[abc]</td>
</tr>
<tr>
<td>^[^]</td>
<td>匹配不以括号里任意单个字符或一组单个字符开头</td>
<td>^[^abc]</td>
</tr>
</tbody></table>
<ul>
<li>示例文本</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># cat 1.txt</span></span><br><span class="line">ggle</span><br><span class="line">gogle</span><br><span class="line">google</span><br><span class="line">gooogle</span><br><span class="line">goooooogle</span><br><span class="line">gooooooogle</span><br><span class="line">taobao.com</span><br><span class="line">taotaobaobao.com</span><br><span class="line"></span><br><span class="line">jingdong.com</span><br><span class="line">dingdingdongdong.com</span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">Adfjd8789JHfdsdf/</span><br><span class="line">a87fdjfkdLKJK</span><br><span class="line"><span class="number">7</span>kdjfd989KJK;</span><br><span class="line">bSKJjkksdjf878.</span><br><span class="line">cidufKJHJ6576,</span><br><span class="line"></span><br><span class="line">hello world</span><br><span class="line">helloworld yourself</span><br></pre></td></tr></table></figure>

<ul>
<li>举例说明</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="㈡-正则中其他常用元字符"><a href="#㈡-正则中其他常用元字符" class="headerlink" title="㈡ 正则中其他常用元字符"></a>㈡ 正则中其他常用元字符</h3><table>
<thead>
<tr>
<th>元字符</th>
<th>功能</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>\&lt;</td>
<td>取单词的头</td>
<td></td>
</tr>
<tr>
<td>\&gt;</td>
<td>取单词的尾</td>
<td></td>
</tr>
<tr>
<td>\&lt;  \&gt;</td>
<td>精确匹配</td>
<td></td>
</tr>
<tr>
<td>\{n\}</td>
<td>匹配前导字符==连续出现n次==</td>
<td></td>
</tr>
<tr>
<td>\{n,\}</td>
<td>匹配前导字符==至少出现n次==</td>
<td></td>
</tr>
<tr>
<td>\{n,m\}</td>
<td>匹配前导字符出现==n次与m次之间==</td>
<td></td>
</tr>
<tr>
<td>\(   \)</td>
<td>保存被匹配的字符</td>
<td></td>
</tr>
<tr>
<td>\d</td>
<td>匹配数字（<strong>grep -P</strong>）</td>
<td>[0-9]</td>
</tr>
<tr>
<td>\w</td>
<td>匹配字母数字下划线（<strong>grep -P</strong>）</td>
<td>[a-zA-Z0-9_]</td>
</tr>
<tr>
<td>\s</td>
<td>匹配空格、制表符、换页符（<strong>grep -P</strong>）</td>
<td>[\t\r\n]</td>
</tr>
</tbody></table>
<p><strong>举例说明：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">需求：将<span class="number">10.1</span>.<span class="number">1.1</span>替换成<span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span>）vim编辑器支持正则表达式</span><br><span class="line"><span class="comment"># vim 1.txt</span></span><br><span class="line">:%s<span class="comment">#\(10.1.1\).1#\1.254#g </span></span><br><span class="line">:%s/\(<span class="number">10.1</span>.<span class="number">1</span>\).<span class="number">1</span>/\<span class="number">1.254</span>/g </span><br><span class="line"></span><br><span class="line"><span class="number">2</span>）sed支持正则表达式【后面学】</span><br><span class="line"><span class="comment"># sed -n &#x27;s#\(10.1.1\).1#\1.254#p&#x27; 1.txt</span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">找出含有<span class="number">10.1</span>.<span class="number">1</span>的行，同时保留<span class="number">10.1</span>.<span class="number">1</span>并标记为标签<span class="number">1</span>，之后可以使用\<span class="number">1</span>来引用它。</span><br><span class="line">最多可以定义<span class="number">9</span>个标签，从左边开始编号，最左边的是第一个。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">需求：将helloworld yourself 换成hellolilei myself</span><br><span class="line"></span><br><span class="line"><span class="comment"># vim 1.txt</span></span><br><span class="line">:%s<span class="comment">#\(hello\)world your\(self\)#\1lilei my\2#g</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -n &#x27;s/\(hello\)world your\(self\)/\1lilei my\2/p&#x27; 1.txt </span></span><br><span class="line">hellolilei myself</span><br><span class="line"></span><br><span class="line"><span class="comment"># sed -n &#x27;s/helloworld yourself/hellolilei myself/p&#x27; 1.txt </span></span><br><span class="line">hellolilei myself</span><br><span class="line"><span class="comment"># sed -n &#x27;s/\(hello\)world your\(self\)/\1lilei my\2/p&#x27; 1.txt </span></span><br><span class="line">hellolilei myself</span><br><span class="line"></span><br><span class="line">Perl内置正则：</span><br><span class="line">\d      匹配数字  [<span class="number">0</span>-<span class="number">9</span>]</span><br><span class="line">\w      匹配字母数字下划线[<span class="type">a</span>-<span class="type">zA</span>-<span class="type">Z0</span>-<span class="number">9</span><span class="type">_</span>]</span><br><span class="line">\s      匹配空格、制表符、换页符[\<span class="type">t</span>\<span class="type">r</span>\<span class="type">n</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># grep -P &#x27;\d&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># grep -P &#x27;\w&#x27; 2.txt</span></span><br><span class="line"><span class="comment"># grep -P &#x27;\s&#x27; 3.txt</span></span><br></pre></td></tr></table></figure>

<h3 id="㈢-扩展类正则常用元字符"><a href="#㈢-扩展类正则常用元字符" class="headerlink" title="㈢ 扩展类正则常用元字符"></a>㈢ 扩展类正则常用元字符</h3><p><strong>==丑话说在前面：==</strong></p>
<p>我说我比较特殊，你要相信！否则我错给你看:smirk:</p>
<ul>
<li><p>grep你要用我，必须加 <strong>==-E==</strong>  或者  让你兄弟<code>egrep</code>来找我</p>
</li>
<li><p>sed你要用我，必须加 <strong>==-r==</strong></p>
</li>
</ul>
<table>
<thead>
<tr>
<th>扩展元字符</th>
<th>功能</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>+</td>
<td>匹配一个或多个前导字符</td>
<td>bo+ 匹配boo、 bo</td>
</tr>
<tr>
<td>?</td>
<td>匹配零个或一个前导字符</td>
<td>bo? 匹配b、 bo</td>
</tr>
<tr>
<td>|</td>
<td>或</td>
<td>匹配a或b</td>
</tr>
<tr>
<td>()</td>
<td>组字符（看成整体）</td>
<td>(my|your)self：表示匹配myself或匹配yourself</td>
</tr>
<tr>
<td>{n}</td>
<td>前导字符重复n次</td>
<td></td>
</tr>
<tr>
<td>{n,}</td>
<td>前导字符重复至少n次</td>
<td></td>
</tr>
<tr>
<td>{n,m}</td>
<td>前导字符重复n到m次</td>
<td></td>
</tr>
</tbody></table>
<p><strong>举例说明：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># grep &quot;root|ftp|adm&quot; /etc/passwd</span></span><br><span class="line"><span class="comment"># egrep &quot;root|ftp|adm&quot; /etc/passwd</span></span><br><span class="line"><span class="comment"># grep -E &quot;root|ftp|adm&quot; /etc/passwd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grep -E &#x27;o+gle&#x27; test.txt </span></span><br><span class="line"><span class="comment"># grep -E &#x27;o?gle&#x27; test.txt </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># egrep &#x27;go&#123;2,&#125;&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># egrep &#x27;(my|your)self&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用正则过滤出文件中的IP地址：</span><br><span class="line"><span class="comment"># grep &#x27;[0-9]\&#123;2\&#125;\.[0-9]\&#123;1\&#125;\.[0-9]\&#123;1\&#125;\.[0-9]\&#123;1\&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="comment"># grep &#x27;[0-9]&#123;2&#125;\.[0-9]&#123;1&#125;\.[0-9]&#123;1&#125;\.[0-9]&#123;1&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="comment"># grep -E &#x27;[0-9]&#123;2&#125;\.[0-9]&#123;1&#125;\.[0-9]&#123;1&#125;\.[0-9]&#123;1&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="comment"># grep -E &#x27;[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="comment"># grep -E &#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27; 1.txt </span></span><br><span class="line"><span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>##5. 第二类正则</p>
<table>
<thead>
<tr>
<th>表达式</th>
<th>功能</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td>[:alnum:]</td>
<td>字母与数字字符</td>
<td>[[:alnum:]]+</td>
</tr>
<tr>
<td>[:alpha:]</td>
<td>字母字符(包括大小写字母)</td>
<td>[[:alpha:]]{4}</td>
</tr>
<tr>
<td>[:blank:]</td>
<td>空格与制表符</td>
<td>[[:blank:]]*</td>
</tr>
<tr>
<td>[:digit:]</td>
<td>数字</td>
<td>[[:digit:]]?</td>
</tr>
<tr>
<td>[:lower:]</td>
<td>小写字母</td>
<td>[[:lower:]]{4,}</td>
</tr>
<tr>
<td>[:upper:]</td>
<td>大写字母</td>
<td>[[:upper:]]+</td>
</tr>
<tr>
<td>[:punct:]</td>
<td>标点符号</td>
<td>[[:punct:]]</td>
</tr>
<tr>
<td>[:space:]</td>
<td>包括换行符，回车等在内的所有空白</td>
<td>[[:space:]]+</td>
</tr>
</tbody></table>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># grep -E &#x27;^[[:digit:]]+&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># grep -E &#x27;^[^[:digit:]]+&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell05</span>]<span class="comment"># grep -E &#x27;[[:lower:]]&#123;4,&#125;&#x27; 1.txt</span></span><br></pre></td></tr></table></figure>

<h2 id="6-正则表达式总结"><a href="#6-正则表达式总结" class="headerlink" title="6. 正则表达式总结"></a>6. 正则表达式总结</h2><p><strong>把握一个原则，让你轻松搞定可恶的正则符号：</strong></p>
<ol>
<li>我要找什么？<ul>
<li>找数字                            [0-9]</li>
<li>找字母                                    [a-zA-Z]</li>
<li>找标点符号                            [[:punct:]]</li>
</ul>
</li>
<li>我要如何找？看心情找<ul>
<li>以什么为首                           ^key</li>
<li>以什么结尾                           key$</li>
<li>包含什么或不包含什么        [abc]  ^[abc]   [^abc]   ^[^abc]</li>
</ul>
</li>
<li>我要找多少呀？<ul>
<li>找前导字符出现0次或连续多次             ab==*==</li>
<li>找任意单个(一次)字符                             ab==.==</li>
<li>找任意字符                                               ab==.*==</li>
<li>找前导字符连续出现几次                        {n}  {n,m}   {n,}</li>
<li>找前导字符出现1次或多次                      go==+==</li>
<li> 找前到字符出现0次或1次                       go==?==                  </li>
</ul>
</li>
</ol>
<h1 id="五、正则元字符一栏表"><a href="#五、正则元字符一栏表" class="headerlink" title="五、正则元字符一栏表"></a>五、正则元字符一栏表</h1><p><strong>元字符</strong>：在正则中，具有特殊意义的专用字符，如: 星号(*)、加号(+)等</p>
<p><strong>前导字符</strong>：元字符前面的字符叫前导字符</p>
<table>
<thead>
<tr>
<th>元字符</th>
<th>功能</th>
<th>示例</th>
</tr>
</thead>
<tbody><tr>
<td>*</td>
<td>前导字符出现0次或者连续多次</td>
<td>ab*  abbbb</td>
</tr>
<tr>
<td>.</td>
<td>除了换行符以外，任意单个字符</td>
<td>ab.   ab8 abu</td>
</tr>
<tr>
<td>.*</td>
<td>任意长度的字符</td>
<td>ab.*  adfdfdf</td>
</tr>
<tr>
<td>[]</td>
<td>括号里的任意单个字符或一组单个字符</td>
<td>[abc][0-9][a-z]</td>
</tr>
<tr>
<td>[^]</td>
<td>不匹配括号里的任意单个字符或一组单个字符</td>
<td>[^abc]</td>
</tr>
<tr>
<td>^[]</td>
<td>匹配以括号里的任意单个字符开头</td>
<td>^[abc]</td>
</tr>
<tr>
<td>^[^]</td>
<td>不匹配以括号里的任意单个字符开头</td>
<td></td>
</tr>
<tr>
<td>^</td>
<td>行的开头</td>
<td>^root</td>
</tr>
<tr>
<td>$</td>
<td>行的结尾</td>
<td>bash$</td>
</tr>
<tr>
<td>^$</td>
<td>空行</td>
<td></td>
</tr>
<tr>
<td>\{n\}和{n}</td>
<td>前导字符连续出现n次</td>
<td>[0-9]\{3\}</td>
</tr>
<tr>
<td>\{n,\}和{n,}</td>
<td>前导字符至少出现n次</td>
<td>[a-z]{4,}</td>
</tr>
<tr>
<td>\{n,m\}和{n,m}</td>
<td>前导字符连续出现n-m次</td>
<td>go{2,4}</td>
</tr>
<tr>
<td>\&lt;\&gt;</td>
<td>精确匹配单词</td>
<td>\&lt;hello\&gt;</td>
</tr>
<tr>
<td>\(\)</td>
<td>保留匹配到的字符</td>
<td>\(hello\)</td>
</tr>
<tr>
<td>+</td>
<td>前导字符出现1次或者多次</td>
<td>[0-9]+</td>
</tr>
<tr>
<td>?</td>
<td>前导字符出现0次或者1次</td>
<td>go?</td>
</tr>
<tr>
<td>|</td>
<td>或</td>
<td>^root|^ftp</td>
</tr>
<tr>
<td>()</td>
<td>组字符</td>
<td>(hello|world)123</td>
</tr>
<tr>
<td>\d</td>
<td>perl内置正则</td>
<td>grep -P  \d+</td>
</tr>
<tr>
<td>\w</td>
<td>匹配字母数字下划线</td>
<td></td>
</tr>
</tbody></table>
<h1 id="六、正则练习作业"><a href="#六、正则练习作业" class="headerlink" title="六、正则练习作业"></a>六、正则练习作业</h1><h2 id="1-文件准备"><a href="#1-文件准备" class="headerlink" title="1. 文件准备"></a>1. 文件准备</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># vim test.txt </span></span><br><span class="line">Aieur45869Root0000</span><br><span class="line"><span class="number">9</span>h847RkjfkIIIhello</span><br><span class="line">rootHllow88000dfjj</span><br><span class="line"><span class="number">8</span>ikuioerhfhupliooking</span><br><span class="line">hello world</span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.254</span></span><br><span class="line">welcome to uplooking.</span><br><span class="line">abcderfkdjfkdtest</span><br><span class="line">rlllA899kdfkdfj</span><br><span class="line">iiiA848890ldkfjdkfj</span><br><span class="line">abc</span><br><span class="line"><span class="number">12345678908374</span></span><br><span class="line"><span class="number">123456</span>@qq.com</span><br><span class="line"><span class="number">123456</span>@<span class="number">163</span>.com</span><br><span class="line">abcdefg@itcast.com23ed</span><br></pre></td></tr></table></figure>

<h2 id="2-具体要求-1"><a href="#2-具体要求-1" class="headerlink" title="2. 具体要求"></a>2. 具体要求</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、查找不以大写字母开头的行（三种写法）。</span><br><span class="line">grep <span class="string">&#x27;^[^A-Z]&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line">grep <span class="literal">-v</span> <span class="string">&#x27;^[A-Z]&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line">grep <span class="string">&#x27;^[^[:upper:]]&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">2</span>、查找有数字的行（两种写法）</span><br><span class="line">grep <span class="string">&#x27;[0-9]&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line">grep <span class="literal">-P</span> <span class="string">&#x27;\d&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">3</span>、查找一个数字和一个字母连起来的</span><br><span class="line">grep <span class="literal">-E</span> <span class="string">&#x27;[0-9][a-zA-Z]|[a-zA-Z][0-9]&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">4</span>、查找不以<span class="built_in">r</span>开头的行</span><br><span class="line">grep <span class="literal">-v</span> <span class="string">&#x27;^r&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line">grep <span class="string">&#x27;^[^r]&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">5</span>、查找以数字开头的</span><br><span class="line">grep <span class="string">&#x27;^[0-9]&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">6</span>、查找以大写字母开头的</span><br><span class="line">grep <span class="string">&#x27;^[A-Z]&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">7</span>、查找以小写字母开头的</span><br><span class="line">grep <span class="string">&#x27;^[a-z]&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">8</span>、查找以点结束的</span><br><span class="line">grep <span class="string">&#x27;\.$&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">9</span>、去掉空行</span><br><span class="line">grep <span class="literal">-v</span> <span class="string">&#x27;^$&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">10</span>、查找完全匹配abc的行</span><br><span class="line">grep <span class="string">&#x27;\&lt;abc\&gt;&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">11</span>、查找A后有三个数字的行</span><br><span class="line">grep <span class="literal">-E</span> <span class="string">&#x27;A[0-9]&#123;3&#125;&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line">grep  <span class="string">&#x27;A[0-9]\&#123;3\&#125;&#x27;</span> <span class="number">2</span>.txt</span><br><span class="line"><span class="number">12</span>、统计root在/etc/passwd里出现了几次</span><br><span class="line">grep <span class="literal">-o</span> <span class="string">&#x27;root&#x27;</span> <span class="number">1</span>.txt |wc <span class="literal">-l</span></span><br><span class="line"></span><br><span class="line"><span class="number">13</span>、用正则表达式找出自己的IP地址、广播地址、子网掩码</span><br><span class="line">ifconfig eth0|grep Bcast|grep <span class="literal">-o</span> <span class="string">&#x27;[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;\.[0-9]\&#123;1,3\&#125;&#x27;</span></span><br><span class="line">ifconfig eth0|grep Bcast| grep <span class="literal">-E</span> <span class="literal">-o</span> <span class="string">&#x27;([0-9]&#123;1,3&#125;.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27;</span></span><br><span class="line">ifconfig eth0|grep Bcast| grep <span class="literal">-P</span> <span class="literal">-o</span> <span class="string">&#x27;\d&#123;1,3&#125;.\d&#123;1,3&#125;.\d&#123;1,3&#125;.\d&#123;1,3&#125;&#x27;</span></span><br><span class="line">ifconfig eth0|grep Bcast| grep <span class="literal">-P</span> <span class="literal">-o</span> <span class="string">&#x27;(\d&#123;1,3&#125;.)&#123;3&#125;\d&#123;1,3&#125;&#x27;</span></span><br><span class="line">ifconfig eth0|grep Bcast| grep <span class="literal">-P</span> <span class="literal">-o</span> <span class="string">&#x27;(\d+.)&#123;3&#125;\d+&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># egrep --color &#x27;[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;&#x27; /etc/sysconfig/network-scripts/ifcfg-eth0</span></span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># egrep --color &#x27;[[:digit:]]&#123;1,3&#125;\.[[:digit:]]&#123;1,3&#125;\.[[:digit:]]&#123;1,3&#125;\.[[:digit:]]&#123;1,3&#125;&#x27; /etc/sysconfig/network-scripts/ifcfg-eth0 </span></span><br><span class="line">IPADDR=<span class="number">10.1</span>.<span class="number">1.1</span></span><br><span class="line">NETMASK=<span class="number">255.255</span>.<span class="number">255.0</span></span><br><span class="line">GATEWAY=<span class="number">10.1</span>.<span class="number">1.254</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">14</span>、找出文件中的ip地址并且打印替换成<span class="number">172.16</span>.<span class="number">2.254</span></span><br><span class="line">grep <span class="literal">-o</span> <span class="literal">-E</span> <span class="string">&#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27;</span> <span class="number">1</span>.txt |sed <span class="literal">-n</span> <span class="string">&#x27;s/192.168.0.\(254\)/172.16.2.\1/p&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="number">15</span>、找出文件中的ip地址</span><br><span class="line">grep <span class="literal">-o</span> <span class="literal">-E</span> <span class="string">&#x27;([0-9]&#123;1,3&#125;\.)&#123;3&#125;[0-9]&#123;1,3&#125;&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line"><span class="number">16</span>、找出全部是数字的行</span><br><span class="line">grep <span class="literal">-E</span> <span class="string">&#x27;^[0-9]+$&#x27;</span> test</span><br><span class="line"><span class="number">17</span>、找出邮箱地址</span><br><span class="line">grep <span class="literal">-E</span> <span class="string">&#x27;^[0-9]+@[a-z0-9]+\.[a-z]+$&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">grep -<span class="literal">-help</span>:</span><br><span class="line">匹配模式选择：</span><br><span class="line">Regexp selection and interpretation:</span><br><span class="line">  <span class="literal">-E</span>, -<span class="literal">-extended</span><span class="literal">-regexp</span>     扩展正则</span><br><span class="line">  <span class="literal">-G</span>, -<span class="literal">-basic</span><span class="literal">-regexp</span>        基本正则</span><br><span class="line">  <span class="literal">-P</span>, -<span class="literal">-perl</span><span class="literal">-regexp</span>         调用perl的正则</span><br><span class="line">  <span class="literal">-e</span>, -<span class="literal">-regexp</span>=PATTERN      use PATTERN <span class="keyword">for</span> matching</span><br><span class="line">  <span class="operator">-f</span>, -<span class="operator">-file</span>=FILE           obtain PATTERN from FILE</span><br><span class="line">  <span class="literal">-i</span>, -<span class="literal">-ignore</span><span class="literal">-case</span>         忽略大小写</span><br><span class="line">  <span class="literal">-w</span>, -<span class="literal">-word</span><span class="literal">-regexp</span>         匹配整个单词</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<p>#七、课后作业</p>
<h2 id="脚本搭建web服务"><a href="#脚本搭建web服务" class="headerlink" title="脚本搭建web服务"></a>脚本搭建web服务</h2><p><strong>要求如下</strong>：</p>
<ol>
<li>用户输入web服务器的IP、域名以及数据根目录</li>
<li>如果用户不输入则一直提示输入，直到输入为止</li>
<li>当访问<a href="http://www.test.cc时可以访问到数据根目录里的首页文件“this/">www.test.cc时可以访问到数据根目录里的首页文件“this</a> is test page” </li>
</ol>
<p><strong>参考脚本：</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">参考：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">conf=/etc/httpd/conf/httpd.conf</span><br><span class="line">input_fun()</span><br><span class="line">&#123;</span><br><span class="line">  input_var=<span class="string">&quot;&quot;</span></span><br><span class="line">  output_var=<span class="variable">$1</span></span><br><span class="line">  <span class="keyword">while</span> [ -<span class="type">z</span> <span class="variable">$input_var</span> ]</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	read <span class="literal">-p</span> <span class="string">&quot;<span class="variable">$output_var</span>&quot;</span> input_var</span><br><span class="line">	done</span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$input_var</span></span><br><span class="line">&#125;</span><br><span class="line">ipaddr=<span class="variable">$</span>(input_fun <span class="string">&quot;Input Host ip[192.168.0.1]:&quot;</span>)</span><br><span class="line">web_host_name=<span class="variable">$</span>(input_fun <span class="string">&quot;Input VirtualHostName [www.test.cc]:&quot;</span>)</span><br><span class="line">root_dir=<span class="variable">$</span>(input_fun <span class="string">&quot;Input host Documentroot dir:[/var/www/html]:&quot;</span>)</span><br><span class="line"></span><br><span class="line">[ ! -<span class="type">d</span> <span class="variable">$root_dir</span> ] &amp;&amp; mkdir <span class="literal">-p</span> <span class="variable">$root_dir</span></span><br><span class="line">chown apache.apache <span class="variable">$root_dir</span> &amp;&amp; chmod <span class="number">755</span> <span class="variable">$root_dir</span></span><br><span class="line"><span class="built_in">echo</span> this is <span class="variable">$web_host_name</span> &gt; <span class="variable">$root_dir</span>/index.html</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$ipaddr</span> <span class="variable">$web_host_name</span>&quot;</span> &gt;&gt; /etc/hosts</span><br><span class="line"></span><br><span class="line">[ -<span class="type">f</span> <span class="variable">$conf</span> ] &amp;&amp; <span class="built_in">cat</span> &gt;&gt; <span class="variable">$conf</span> &lt;&lt;<span class="keyword">end</span></span><br><span class="line">NameVirtualHost <span class="variable">$ipaddr:80</span></span><br><span class="line">&lt;VirtualHost <span class="variable">$ipaddr:80</span>&gt;</span><br><span class="line">	ServerAdmin webmaster<span class="selector-tag">@</span><span class="variable">$web_host_name</span></span><br><span class="line">	DocumentRoot <span class="variable">$root_dir</span></span><br><span class="line">	ServerName <span class="variable">$web_host_name</span></span><br><span class="line">	ErrorLog logs/<span class="variable">$web_host_name</span><span class="literal">-error_log</span></span><br><span class="line">	CustomLog logs/<span class="variable">$web_host_name</span><span class="literal">-access_loh</span> common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>08_SHELL编程之文本处理工具awk</title>
    <url>/2021/01/08/linux/08_SHELL%E7%BC%96%E7%A8%8B%E4%B9%8B%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7awk/</url>
    <content><![CDATA[<p>#课程目标</p>
<ul>
<li>熟悉awk的<strong>命令行模式</strong>基本语法结构</li>
<li>==熟悉awk的相关内部变量==</li>
<li>熟悉awk常用的打印==函数print==</li>
<li>能够在awk中匹配正则表达式打印相关的行</li>
</ul>
<span id="more"></span>

<h1 id="一、awk介绍"><a href="#一、awk介绍" class="headerlink" title="一、awk介绍"></a>一、awk介绍</h1><h2 id="1-awk概述"><a href="#1-awk概述" class="headerlink" title="1. awk概述"></a>1. awk概述</h2><ul>
<li>awk是一种==编程语言==，主要用于在linux/unix下对==文本和数据==进行处理，是linux/unix下的一个工具。数据可以来自标准输入、一个或多个文件，或其它命令的输出。</li>
<li>awk的处理文本和数据的方式：**==逐行扫描==文件**，默认从第一行到最后一行，寻找匹配的==特定模式==的行，并在这些行上进行你想要的操作。</li>
<li>awk分别代表其作者姓氏的第一个字母。因为它的作者是三个人，分别是Alfred Aho、Brian Kernighan、Peter Weinberger。</li>
<li>gawk是awk的GNU版本，它提供了Bell实验室和GNU的一些扩展。</li>
</ul>
<ul>
<li>下面介绍的awk是以GNU的gawk为例的，在linux系统中已把awk链接到gawk，所以下面全部以awk进行介绍。</li>
</ul>
<h2 id="2-awk能干啥"><a href="#2-awk能干啥" class="headerlink" title="2. awk能干啥?"></a>2. awk能干啥?</h2><ol>
<li>awk==用来处理文件和数据==的，是类unix下的一个工具，也是一种编程语言</li>
<li>可以用来==统计数据==，比如网站的访问量，访问的IP量等等</li>
<li>支持条件判断，支持for和while循环</li>
</ol>
<p>#二、awk使用方式</p>
<h2 id="1-命令行模式使用"><a href="#1-命令行模式使用" class="headerlink" title="1. ==命令行模式使用=="></a>1. ==命令行模式使用==</h2><h3 id="㈠-语法结构"><a href="#㈠-语法结构" class="headerlink" title="㈠ 语法结构"></a>㈠ 语法结构</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">awk 选项 <span class="string">&#x27;命令部分&#x27;</span> 文件名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">特别说明：</span><br><span class="line">引用shell变量需用双引号引起</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>###㈡ 常用选项介绍</p>
<ul>
<li>==-F==  定义字段分割符号，默认的分隔符是==空格==</li>
<li>-v  定义变量并赋值</li>
</ul>
<p>###㈢  <strong>==’==<strong>命名部分说明</strong>==’==</strong></p>
<ul>
<li>正则表达式，地址定位</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;/root/&#123;awk语句&#125;&#x27;</span>				sed中： <span class="string">&#x27;/root/p&#x27;</span></span><br><span class="line"><span class="string">&#x27;NR==1,NR==5&#123;awk语句&#125;&#x27;</span>			sed中： <span class="string">&#x27;1,5p&#x27;</span></span><br><span class="line"><span class="string">&#x27;/^root/,/^ftp/&#123;awk语句&#125;&#x27;</span>  	sed中：<span class="string">&#x27;/^root/,/^ftp/p&#x27;</span></span><br></pre></td></tr></table></figure>

<ul>
<li>{awk语句1**==;==<strong>awk语句2</strong>==;==**…}</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#123;print $0;print $1&#125;&#x27;</span>		sed中：<span class="string">&#x27;p&#x27;</span></span><br><span class="line"><span class="string">&#x27;NR==5&#123;print $0&#125;&#x27;</span>				sed中：<span class="string">&#x27;5p&#x27;</span></span><br><span class="line">注：awk命令语句间用分号间隔</span><br></pre></td></tr></table></figure>

<ul>
<li>BEGIN…END….</li>
</ul>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;BEGIN&#123;awk语句&#125;;&#123;处理中&#125;;END&#123;awk语句&#125;&#x27;</span></span><br><span class="line"><span class="string">&#x27;BEGIN&#123;awk语句&#125;;&#123;处理中&#125;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#123;处理中&#125;;END&#123;awk语句&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="2-脚本模式使用"><a href="#2-脚本模式使用" class="headerlink" title="2. 脚本模式使用"></a>2. 脚本模式使用</h2><h3 id="㈠-脚本编写"><a href="#㈠-脚本编写" class="headerlink" title="㈠ 脚本编写"></a>㈠ 脚本编写</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/awk -f 		定义魔法字符</span></span><br><span class="line">以下是awk引号里的命令清单，不要用引号保护命令，多个命令用分号间隔</span><br><span class="line"><span class="keyword">BEGIN</span>&#123;FS=<span class="string">&quot;:&quot;</span>&#125;</span><br><span class="line">NR==<span class="number">1</span>,NR==<span class="number">3</span>&#123;print <span class="variable">$1</span><span class="string">&quot;\t&quot;</span><span class="variable">$NF</span>&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<h3 id="㈡-脚本执行"><a href="#㈡-脚本执行" class="headerlink" title="㈡ 脚本执行"></a>㈡ 脚本执行</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">方法<span class="number">1</span>：</span><br><span class="line">awk 选项 <span class="operator">-f</span> awk的脚本文件  要处理的文本文件</span><br><span class="line">awk <span class="operator">-f</span> awk.sh filename</span><br><span class="line"></span><br><span class="line">sed <span class="operator">-f</span> sed.sh <span class="literal">-i</span> filename</span><br><span class="line"></span><br><span class="line">方法<span class="number">2</span>：</span><br><span class="line">./awk的脚本文件(或者绝对路径)	要处理的文本文件</span><br><span class="line">./awk.sh filename</span><br><span class="line"></span><br><span class="line">./sed.sh filename</span><br></pre></td></tr></table></figure>

<p>#三、 awk内部相关变量</p>
<table>
<thead>
<tr>
<th>变量</th>
<th>变量说明</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>==$0==</td>
<td>当前处理行的所有记录</td>
<td></td>
</tr>
<tr>
<td>==$1,$2,$3…$n==</td>
<td>文件中每行以==间隔符号==分割的不同字段</td>
<td>awk -F: ‘{print $1,$3}’</td>
</tr>
<tr>
<td>==NF==</td>
<td>当前记录的字段数（列数）</td>
<td>awk -F: ‘{print NF}’</td>
</tr>
<tr>
<td>==$NF==</td>
<td>最后一列</td>
<td>$(NF-1)表示倒数第二列</td>
</tr>
<tr>
<td>==FNR/NR==</td>
<td>行号</td>
<td></td>
</tr>
<tr>
<td>==FS==</td>
<td>定义间隔符</td>
<td>‘BEGIN{FS=”:”};{print $1,$3}’</td>
</tr>
<tr>
<td>==OFS==</td>
<td>定义输出字段分隔符，==默认空格==</td>
<td>‘BEGIN{OFS=”\t”};print $1,$3}’</td>
</tr>
<tr>
<td>RS</td>
<td>输入记录分割符，默认换行</td>
<td>‘BEGIN{RS=”\t”};{print $0}’</td>
</tr>
<tr>
<td>ORS</td>
<td>输出记录分割符，默认换行</td>
<td>‘BEGIN{ORS=”\n\n”};{print $1,$3}’</td>
</tr>
<tr>
<td>FILENAME</td>
<td>当前输入的文件名</td>
<td></td>
</tr>
</tbody></table>
<h2 id="1、-常用内置变量举例"><a href="#1、-常用内置变量举例" class="headerlink" title="1、==常用内置变量举例=="></a>1、==常用内置变量举例==</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># awk -F: &#x27;&#123;print $1,$(NF-1)&#125;&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;print $1,$(NF-1),$NF,NF&#125;&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># awk &#x27;/root/&#123;print $0&#125;&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># awk &#x27;/root/&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;/root/&#123;print $1,$NF&#125;&#x27; 1.txt </span></span><br><span class="line">root /bin/bash</span><br><span class="line"><span class="comment"># awk -F: &#x27;/root/&#123;print $0&#125;&#x27; 1.txt      </span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line"><span class="comment"># awk &#x27;NR==1,NR==5&#x27; 1.txt </span></span><br><span class="line"><span class="comment"># awk &#x27;NR==1,NR==5&#123;print $0&#125;&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># awk &#x27;NR==1,NR==5;/^root/&#123;print $0&#125;&#x27; 1.txt </span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:<span class="number">2</span>:<span class="number">2</span>:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>:x:<span class="number">4</span>:<span class="number">7</span>:<span class="built_in">lp</span>:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2、内置变量分隔符举例"><a href="#2、内置变量分隔符举例" class="headerlink" title="2、内置变量分隔符举例"></a>2、内置变量分隔符举例</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">FS和OFS:</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;FS=&quot;:&quot;&#125;;/^root/,/^lp/&#123;print $1,$NF&#125;&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;BEGIN&#123;OFS=&quot;\t\t&quot;&#125;;/^root/,/^lp/&#123;print $1,$NF&#125;&#x27; 1.txt        </span></span><br><span class="line">root            /bin/bash</span><br><span class="line">bin             /sbin/nologin</span><br><span class="line">daemon          /sbin/nologin</span><br><span class="line">adm             /sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>              /sbin/nologin</span><br><span class="line"><span class="comment"># awk -F: &#x27;BEGIN&#123;OFS=&quot;@@@&quot;&#125;;/^root/,/^lp/&#123;print $1,$NF&#125;&#x27; 1.txt     </span></span><br><span class="line">root<span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/bin/bash</span><br><span class="line">bin<span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/sbin/nologin</span><br><span class="line">daemon<span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/sbin/nologin</span><br><span class="line">adm<span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span><span class="selector-tag">@</span><span class="selector-tag">@</span><span class="selector-tag">@</span>/sbin/nologin</span><br><span class="line">[<span class="type">root</span>@<span class="type">server</span> <span class="type">shell07</span>]<span class="comment"># </span></span><br><span class="line"></span><br><span class="line">RS和ORS：</span><br><span class="line">修改源文件前<span class="number">2</span>行增加制表符和内容：</span><br><span class="line">vim <span class="number">1</span>.txt</span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash hello   world</span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin        test1   test2</span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;RS=&quot;\t&quot;&#125;;&#123;print $0&#125;&#x27; 1.txt</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;ORS=&quot;\t&quot;&#125;;&#123;print $0&#125;&#x27; 1.txt</span></span><br></pre></td></tr></table></figure>

<p>#四、 awk工作原理</p>
<p><code>awk -F: &#39;&#123;print $1,$3&#125;&#39; /etc/passwd</code></p>
<ol>
<li><p>awk使用一行作为输入，并将这一行赋给内部变量$0，每一行也可称为一个记录，以换行符(RS)结束</p>
</li>
<li><p>每行被间隔符**==:==**(默认为空格或制表符)分解成字段(或域)，每个字段存储在已编号的变量中，从$1开始</p>
<p>问：awk如何知道用空格来分隔字段的呢？</p>
<p>答：因为有一个内部变量==FS==来确定字段分隔符。初始时，FS赋为空格</p>
</li>
<li><p>awk使用print函数打印字段，打印出来的字段会以==空格分隔==，因为$1,$3之间有一个逗号。逗号比较特殊，它映射为另一个内部变量，称为==输出字段分隔符==OFS，OFS默认为空格</p>
</li>
<li><p>awk处理完一行后，将从文件中获取另一行，并将其存储在$0中，覆盖原来的内容，然后将新的字符串分隔成字段并进行处理。该过程将持续到所有行处理完毕</p>
</li>
</ol>
<h1 id="五、awk使用进阶"><a href="#五、awk使用进阶" class="headerlink" title="五、awk使用进阶"></a>五、awk使用进阶</h1><h2 id="1-格式化输出print和printf"><a href="#1-格式化输出print和printf" class="headerlink" title="1. 格式化输出print和printf"></a>1. 格式化输出<code>print</code>和<code>printf</code></h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">print函数		类似<span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span></span><br><span class="line"><span class="comment"># date |awk &#x27;&#123;print &quot;Month: &quot;$2 &quot;\nYear: &quot;$NF&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;print &quot;username is: &quot; $1 &quot;\t uid is: &quot;$3&#125;&#x27; /etc/passwd</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">printf函数		类似<span class="built_in">echo</span> <span class="literal">-n</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;printf &quot;%-15s %-10s %-15s\n&quot;, $1,$2,$3&#125;&#x27;  /etc/passwd</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;printf &quot;|%15s| %10s| %15s|\n&quot;, $1,$2,$3&#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;printf &quot;|%-15s| %-10s| %-15s|\n&quot;, $1,$2,$3&#125;&#x27; /etc/passwd</span></span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;;&#123;printf &quot;%-15s %-15s %-15s\n&quot;,$1,$6,$NF&#125;&#x27;</span> a.txt</span><br><span class="line"></span><br><span class="line">%s 字符类型  strings			%<span class="literal">-20s</span></span><br><span class="line">%d 数值类型	</span><br><span class="line">占<span class="number">15</span>字符</span><br><span class="line">- 表示左对齐，默认是右对齐</span><br><span class="line">printf默认不会在行尾自动换行，加\n</span><br></pre></td></tr></table></figure>

<h2 id="2-awk变量定义"><a href="#2-awk变量定义" class="headerlink" title="2. awk变量定义"></a>2. awk变量定义</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># awk -v NUM=3 -F: &#x27;&#123; print $NUM &#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="comment"># awk -v NUM=3 -F: &#x27;&#123; print NUM &#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="comment"># awk -v num=1 &#x27;BEGIN&#123;print num&#125;&#x27; </span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="comment"># awk -v num=1 &#x27;BEGIN&#123;print $num&#125;&#x27; </span></span><br><span class="line">注意：</span><br><span class="line">awk中调用定义的变量不需要加<span class="variable">$</span></span><br></pre></td></tr></table></figure>

<p>##3. awk中BEGIN…END使用</p>
<p>​    ①==BEGIN==：表示在==程序开始前==执行</p>
<p>​    ②==END== ：表示所有文件==处理完后==执行</p>
<p>​    ③用法：<code>&#39;BEGIN&#123;开始处理之前&#125;;&#123;处理中&#125;;END&#123;处理结束后&#125;&#39;</code></p>
<h4 id="㈠-举例说明1"><a href="#㈠-举例说明1" class="headerlink" title="㈠ 举例说明1"></a>㈠ 举例说明1</h4><p><strong>打印最后一列和倒数第二列（登录shell和家目录）</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;BEGIN&#123; print &quot;Login_shell\t\tLogin_home\n*******************&quot;&#125;;&#123;print $NF&quot;\t\t&quot;$(NF-1)&#125;;END&#123;print &quot;************************&quot;&#125;&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123; FS=&quot;:&quot;;print &quot;Login_shell\tLogin_home\n*******************&quot;&#125;;&#123;print $NF&quot;\t&quot;$(NF-1)&#125;;END&#123;print &quot;************************&quot;&#125;&#x27;</span> <span class="number">1</span>.txt</span><br><span class="line"></span><br><span class="line">Login_shell		Login_home</span><br><span class="line">************************</span><br><span class="line">/bin/bash		/root</span><br><span class="line">/sbin/nologin		/bin</span><br><span class="line">/sbin/nologin		/sbin</span><br><span class="line">/sbin/nologin		/var/adm</span><br><span class="line">/sbin/nologin		/var/spool/lpd</span><br><span class="line">/bin/bash		/home/redhat</span><br><span class="line">/bin/bash		/home/user01</span><br><span class="line">/sbin/nologin		/var/named</span><br><span class="line">/bin/bash		/home/u01</span><br><span class="line">/bin/bash		/home/YUNWEI</span><br><span class="line">************************************</span><br></pre></td></tr></table></figure>

<h4 id="㈡-举例说明2"><a href="#㈡-举例说明2" class="headerlink" title="㈡ 举例说明2"></a>㈡ 举例说明2</h4><p><strong>打印/etc/passwd里的用户名、家目录及登录shell</strong></p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">u_name      h_dir       shell</span><br><span class="line">***************************</span><br><span class="line"></span><br><span class="line">***************************</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;BEGIN&#123;OFS=&quot;\t\t&quot;;print&quot;u_name\t\th_dir\t\tshell\n***************************&quot;&#125;;&#123;printf &quot;%-20s %-20s %-20s\n&quot;,$1,$(NF-1),$NF&#125;;END&#123;print &quot;****************************&quot;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;BEGIN&#123;print &quot;u_name\t\th_dir\t\tshell&quot; RS &quot;*****************&quot;&#125;  &#123;printf &quot;%-15s %-20s %-20s\n&quot;,$1,$(NF-1),$NF&#125;END&#123;print &quot;***************************&quot;&#125;&#x27;  /etc/passwd</span></span><br><span class="line"></span><br><span class="line">格式化输出：</span><br><span class="line"><span class="built_in">echo</span>		print</span><br><span class="line"><span class="built_in">echo</span> <span class="literal">-n</span>	printf</span><br><span class="line"></span><br><span class="line">&#123;printf <span class="string">&quot;%-15s %-20s %-20s\n&quot;</span>,<span class="variable">$1</span>,<span class="variable">$</span>(NF<span class="literal">-1</span>),<span class="variable">$NF</span>&#125;</span><br></pre></td></tr></table></figure>

<p>###4. awk和正则的综合运用</p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>==</td>
<td>等于</td>
</tr>
<tr>
<td>!=</td>
<td>不等于</td>
</tr>
<tr>
<td>&gt;</td>
<td>大于</td>
</tr>
<tr>
<td>&lt;</td>
<td>小于</td>
</tr>
<tr>
<td>&gt;=</td>
<td>大于等于</td>
</tr>
<tr>
<td>&lt;=</td>
<td>小于等于</td>
</tr>
<tr>
<td>~</td>
<td>匹配</td>
</tr>
<tr>
<td>!~</td>
<td>不匹配</td>
</tr>
<tr>
<td>!</td>
<td>逻辑非</td>
</tr>
<tr>
<td>&amp;&amp;</td>
<td>逻辑与</td>
</tr>
<tr>
<td>||</td>
<td>逻辑或</td>
</tr>
</tbody></table>
<h3 id="㈠-举例说明"><a href="#㈠-举例说明" class="headerlink" title="㈠ 举例说明"></a>㈠ 举例说明</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">从第一行开始匹配到以<span class="built_in">lp</span>开头行</span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;NR==1,/^lp/&#123;print $0 &#125;&#x27;</span> passwd  </span><br><span class="line">从第一行到第<span class="number">5</span>行          </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;NR==1,NR==5&#123;print $0 &#125;&#x27;</span> passwd</span><br><span class="line">从以<span class="built_in">lp</span>开头的行匹配到第<span class="number">10</span>行       </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;/^lp/,NR==10&#123;print $0 &#125;&#x27;</span> passwd </span><br><span class="line">从以root开头的行匹配到以<span class="built_in">lp</span>开头的行       </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;/^root/,/^lp/&#123;print $0&#125;&#x27;</span> passwd</span><br><span class="line">打印以root开头或者以<span class="built_in">lp</span>开头的行            </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;/^root/ || /^lp/&#123;print $0&#125;&#x27;</span> passwd</span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;/^root/;/^lp/&#123;print $0&#125;&#x27;</span> passwd</span><br><span class="line">显示<span class="number">5</span><span class="literal">-10</span>行   </span><br><span class="line">awk <span class="operator">-F</span><span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;NR&gt;=5 &amp;&amp; NR&lt;=10 &#123;print $0&#125;&#x27;</span> /etc/passwd     </span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;NR&lt;10 &amp;&amp; NR&gt;5 &#123;print $0&#125;&#x27;</span> passwd </span><br><span class="line"></span><br><span class="line">打印<span class="number">30</span><span class="literal">-39</span>行以bash结尾的内容：</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell06</span>]<span class="comment"># awk &#x27;NR&gt;=30 &amp;&amp; NR&lt;=39 &amp;&amp; $0 ~ /bash$/&#123;print $0&#125;&#x27; passwd </span></span><br><span class="line">stu1:x:<span class="number">500</span>:<span class="number">500</span>::/home/stu1:/bin/bash</span><br><span class="line">yunwei:x:<span class="number">501</span>:<span class="number">501</span>::/home/yunwei:/bin/bash</span><br><span class="line">user01:x:<span class="number">502</span>:<span class="number">502</span>::/home/user01:/bin/bash</span><br><span class="line">user02:x:<span class="number">503</span>:<span class="number">503</span>::/home/user02:/bin/bash</span><br><span class="line">user03:x:<span class="number">504</span>:<span class="number">504</span>::/home/user03:/bin/bash</span><br><span class="line"></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell06</span>]<span class="comment"># awk &#x27;NR&gt;=3 &amp;&amp; NR&lt;=8 &amp;&amp; /bash$/&#x27; 1.txt  </span></span><br><span class="line">stu7:x:<span class="number">1007</span>:<span class="number">1007</span>::/rhome/stu7:/bin/bash</span><br><span class="line">stu8:x:<span class="number">1008</span>:<span class="number">1008</span>::/rhome/stu8:/bin/bash</span><br><span class="line">stu9:x:<span class="number">1009</span>:<span class="number">1009</span>::/rhome/stu9:/bin/bash</span><br><span class="line"></span><br><span class="line">打印文件中<span class="number">1</span><span class="literal">-5</span>并且以root开头的行</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell06</span>]<span class="comment"># awk &#x27;NR&gt;=1 &amp;&amp; NR&lt;=5 &amp;&amp; $0 ~ /^root/&#123;print $0&#125;&#x27; 1.txt</span></span><br><span class="line">root:x:<span class="number">0</span>:<span class="number">0</span>:root:/root:/bin/bash</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell06</span>]<span class="comment"># awk &#x27;NR&gt;=1 &amp;&amp; NR&lt;=5 &amp;&amp; $0 !~ /^root/&#123;print $0&#125;&#x27; 1.txt</span></span><br><span class="line">bin:x:<span class="number">1</span>:<span class="number">1</span>:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:<span class="number">2</span>:<span class="number">2</span>:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:<span class="number">3</span>:<span class="number">4</span>:adm:/var/adm:/sbin/nologin</span><br><span class="line"><span class="built_in">lp</span>:x:<span class="number">4</span>:<span class="number">7</span>:<span class="built_in">lp</span>:/var/spool/lpd:/sbin/nologin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">理解;号和||的含义：</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell06</span>]<span class="comment"># awk &#x27;NR&gt;=3 &amp;&amp; NR&lt;=8 || /bash$/&#x27; 1.txt</span></span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> <span class="type">shell06</span>]<span class="comment"># awk &#x27;NR&gt;=3 &amp;&amp; NR&lt;=8;/bash$/&#x27; 1.txt</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打印IP地址</span><br><span class="line"><span class="comment"># ifconfig eth0|awk &#x27;NR&gt;1 &#123;print $2&#125;&#x27;|awk -F&#x27;:&#x27; &#x27;NR&lt;2 &#123;print $2&#125;&#x27;    </span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep Bcast|awk -F&#x27;:&#x27; &#x27;&#123;print $2&#125;&#x27;|awk &#x27;&#123;print $1&#125;&#x27;</span></span><br><span class="line"><span class="comment"># ifconfig eth0|grep Bcast|awk &#x27;&#123;print $2&#125;&#x27;|awk -F: &#x27;&#123;print $2&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ifconfig eth0|awk NR==2|awk -F &#x27;[ :]+&#x27; &#x27;&#123;print $4RS$6RS$8&#125;&#x27;</span></span><br><span class="line"><span class="comment"># ifconfig eth0|awk -F&quot;[ :]+&quot; &#x27;/inet addr:/&#123;print $4&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="4-课堂练习"><a href="#4-课堂练习" class="headerlink" title="4. 课堂练习"></a>4. 课堂练习</h2><ol>
<li>显示可以登录操作系统的用户所有信息     从第7列匹配以bash结尾，输出整行（当前行所有的列）</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="string">&#x27;/bash$/&#123;print $0&#125;&#x27;</span>    /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="string">&#x27;/bash$/&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="string">&#x27;/bash$/&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="operator">-F</span>: <span class="string">&#x27;$7 ~ /bash/&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="operator">-F</span>: <span class="string">&#x27;$NF ~ /bash/&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="operator">-F</span>: <span class="string">&#x27;$0 ~ /bash/&#x27;</span> /etc/passwd</span><br><span class="line">[<span class="type">root</span>@<span class="type">MissHou</span> ~] awk <span class="operator">-F</span>: <span class="string">&#x27;$0 ~ /\/bin\/bash/&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>显示可以登录系统的用户名 </li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># awk -F: &#x27;$0 ~ /\/bin\/bash/&#123;print $1&#125;&#x27; /etc/passwd</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>打印出系统中普通用户的UID和用户名</li>
</ol>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="number">500</span>	stu1</span><br><span class="line"><span class="number">501</span>	yunwei</span><br><span class="line"><span class="number">502</span>	user01</span><br><span class="line"><span class="number">503</span>	user02</span><br><span class="line"><span class="number">504</span>	user03</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;BEGIN&#123;print &quot;UID\tUSERNAME&quot;&#125; &#123;if($3&gt;=500 &amp;&amp; $3 !=65534 ) &#123;print $3&quot;\t&quot;$1&#125; &#125;&#x27; /etc/passwdUID	USERNAME</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;if($3 &gt;= 500 &amp;&amp; $3 != 65534) print $1,$3&#125;&#x27; a.txt </span></span><br><span class="line">redhat <span class="number">508</span></span><br><span class="line">user01 <span class="number">509</span></span><br><span class="line">u01 <span class="number">510</span></span><br><span class="line">YUNWEI <span class="number">511</span></span><br></pre></td></tr></table></figure>

<p>##5. awk的脚本编程</p>
<h3 id="㈠-流程控制语句"><a href="#㈠-流程控制语句" class="headerlink" title="㈠ 流程控制语句"></a>㈠ 流程控制语句</h3><h4 id="①-if结构"><a href="#①-if结构" class="headerlink" title="① if结构"></a>① if结构</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>语句：</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="type">xxx</span> ];then</span><br><span class="line">xxx</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line">awk 选项 <span class="string">&#x27;正则，地址定位&#123;awk语句&#125;&#x27;</span>  文件名</span><br><span class="line"></span><br><span class="line">&#123; <span class="keyword">if</span>(表达式)｛语句<span class="number">1</span>;语句<span class="number">2</span>;...｝&#125;</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;if($3&gt;=500 &amp;&amp; $3&lt;=60000) &#123;print $1,$3&#125; &#125;&#x27;</span> passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;if($3==0) &#123;print $1&quot;是管理员&quot;&#125; &#125;&#x27; passwd </span></span><br><span class="line">root是管理员</span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;if(&#x27;$(id -u)&#x27;==0) &#123;print &quot;admin&quot;&#125; &#125;&#x27;</span></span><br><span class="line">admin</span><br></pre></td></tr></table></figure>

<h4 id="②-if…else结构"><a href="#②-if…else结构" class="headerlink" title="② if…else结构"></a>② if…else结构</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">if...else语句:</span><br><span class="line"><span class="keyword">if</span> [ <span class="type">xxx</span> ];then</span><br><span class="line">	xxxxx</span><br><span class="line">	</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	xxx</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line">&#123;<span class="keyword">if</span>(表达式)｛语句;语句;...｝<span class="keyword">else</span>｛语句;语句;...&#125;&#125;</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123; if($3&gt;=500 &amp;&amp; $3 != 65534) &#123;print $1&quot;是普通用户&quot;&#125; else &#123;print $1,&quot;不是普通用户&quot;&#125;&#125;&#x27;</span> passwd </span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;if( &#x27;</span><span class="variable">$</span>(id <span class="literal">-u</span>)<span class="string">&#x27;&gt;=500 &amp;&amp; &#x27;</span><span class="variable">$</span>(id <span class="literal">-u</span>)<span class="string">&#x27; !=65534 ) &#123;print &quot;是普通用户&quot;&#125; else &#123;print &quot;不是普通用户&quot;&#125;&#125;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="③-if…elif…else结构"><a href="#③-if…elif…else结构" class="headerlink" title="③ if…elif…else结构"></a>③ if…elif…else结构</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [<span class="type">xxxx</span>];then</span><br><span class="line">	xxxx</span><br><span class="line">elif [<span class="type">xxx</span>];then</span><br><span class="line">	xxx</span><br><span class="line">....</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">...</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if...else if...else语句：</span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line">&#123; <span class="keyword">if</span>(表达式<span class="number">1</span>)｛语句;语句；...｝<span class="keyword">else</span> <span class="keyword">if</span>(表达式<span class="number">2</span>)｛语句;语句；...｝<span class="keyword">else</span> <span class="keyword">if</span>(表达式<span class="number">3</span>)｛语句;语句；...｝<span class="keyword">else</span>｛语句;语句；...｝&#125;</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123; if($3==0) &#123;print $1,&quot;:是管理员&quot;&#125; else if($3&gt;=1 &amp;&amp; $3&lt;=499 || $3==65534 ) &#123;print $1,&quot;:是系统用户&quot;&#125; else &#123;print $1,&quot;:是普通用户&quot;&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123; if($3==0) &#123;i++&#125; else if($3&gt;=1 &amp;&amp; $3&lt;=499 || $3==65534 ) &#123;j++&#125; else &#123;k++&#125;&#125;;END&#123;print &quot;管理员个数为:&quot;i &quot;\n系统用户个数为:&quot;j&quot;\n普通用户的个数为:&quot;k &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;if($3==0) &#123;print $1,&quot;is admin&quot;&#125; else if($3&gt;=1 &amp;&amp; $3&lt;=499 || $3==65534) &#123;print $1,&quot;is sys users&quot;&#125; else &#123;print $1,&quot;is general user&quot;&#125; &#125;&#x27; a.txt </span></span><br><span class="line"></span><br><span class="line">root is admin</span><br><span class="line">bin is sys users</span><br><span class="line">daemon is sys users</span><br><span class="line">adm is sys users</span><br><span class="line"><span class="built_in">lp</span> is sys users</span><br><span class="line">redhat is general user</span><br><span class="line">user01 is general user</span><br><span class="line">named is sys users</span><br><span class="line">u01 is general user</span><br><span class="line">YUNWEI is general user</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;  if($3==0) &#123;print $1&quot;:管理员&quot;&#125; else if($3&gt;=1 &amp;&amp; $3&lt;500 || $3==65534 ) &#123;print $1&quot;:是系统用户&quot;&#125; else &#123;print $1&quot;:是普通用户&quot;&#125;&#125;&#x27;</span>   /etc/passwd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;if($3==0) &#123;i++&#125; else if($3&gt;=1 &amp;&amp; $3&lt;500 || $3==65534)&#123;j++&#125; else &#123;k++&#125;&#125;;END&#123;print &quot;管理员个数为:&quot; i RS &quot;系统用户个数为:&quot;j RS &quot;普通用户的个数为:&quot;k &#125;&#x27;</span> /etc/passwd</span><br><span class="line">管理员个数为:<span class="number">1</span></span><br><span class="line">系统用户个数为:<span class="number">28</span></span><br><span class="line">普通用户的个数为:<span class="number">27</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123; if($3==0) &#123;print $1&quot;:是管理员&quot;&#125; else if($3&gt;=500 &amp;&amp; $3!=65534) &#123;print $1&quot;:是普通用户&quot;&#125; else &#123;print $1&quot;:是系统用户&quot;&#125;&#125;&#x27; passwd </span></span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;if($3==0)&#123;i++&#125; else if($3&gt;=500)&#123;k++&#125; else&#123;j++&#125;&#125; END&#123;print i; print k; print j&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">awk <span class="operator">-F</span>: <span class="string">&#x27;&#123;if($3==0)&#123;i++&#125; else if($3&gt;999)&#123;k++&#125; else&#123;j++&#125;&#125; END&#123;print &quot;管理员个数: &quot;i; print &quot;普通用个数: &quot;k; print &quot;系统用户: &quot;j&#125;&#x27;</span> /etc/passwd </span><br><span class="line"></span><br><span class="line">如果是普通用户打印默认shell，如果是系统用户打印用户名</span><br><span class="line"><span class="comment"># awk -F: &#x27;&#123;if($3&gt;=1 &amp;&amp; $3&lt;500 || $3 == 65534) &#123;print $1&#125; else if($3&gt;=500 &amp;&amp; $3&lt;=60000 ) &#123;print $NF&#125; &#125;&#x27; /etc/passwd</span></span><br></pre></td></tr></table></figure>

<h3 id="㈡-循环语句"><a href="#㈡-循环语句" class="headerlink" title="㈡ 循环语句"></a>㈡ 循环语句</h3><h4 id="①-for循环"><a href="#①-for循环" class="headerlink" title="① for循环"></a>① for循环</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">打印<span class="number">1</span>~<span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++));<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;done</span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; for(i=1;i&lt;=5;i++) &#123;print i&#125; &#125;&#x27;</span></span><br><span class="line">打印<span class="number">1</span>~<span class="number">10</span>中的奇数</span><br><span class="line"><span class="comment"># for ((i=1;i&lt;=10;i+=2));do echo $i;done|awk &#x27;&#123;sum+=$0&#125;;END&#123;print sum&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123; for(i=1;i&lt;=10;i+=2) &#123;print i&#125; &#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123; for(i=1;i&lt;=10;i+=2) print i &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">计算<span class="number">1</span><span class="literal">-5</span>的和</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;sum=0;for(i=1;i&lt;=5;i++) sum+=i;print sum&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;for(i=1;i&lt;=5;i++) (sum+=i);&#123;print sum&#125;&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;for(i=1;i&lt;=5;i++) (sum+=i);print sum&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="②-while循环"><a href="#②-while循环" class="headerlink" title="② while循环"></a>② while循环</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">打印<span class="number">1</span><span class="literal">-5</span></span><br><span class="line"><span class="comment"># i=1;while (($i&lt;=5));do echo $i;let i++;done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; i=1;while(i&lt;=5) &#123;print i;i++&#125; &#125;&#x27;</span></span><br><span class="line">打印<span class="number">1</span>~<span class="number">10</span>中的奇数</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;i=1;while(i&lt;=10) &#123;print i;i+=2&#125; &#125;&#x27;</span></span><br><span class="line">计算<span class="number">1</span><span class="literal">-5</span>的和</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;i=1;sum=0;while(i&lt;=5) &#123;sum+=i;i++&#125;; print sum &#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123;i=1;while(i&lt;=5) &#123;(sum+=i) i++&#125;;print sum &#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="③-嵌套循环"><a href="#③-嵌套循环" class="headerlink" title="③ 嵌套循环"></a>③ 嵌套循环</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">嵌套循环：</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> ((y=<span class="number">1</span>;y&lt;=<span class="number">5</span>;y++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> ((x=<span class="number">1</span>;x&lt;=<span class="variable">$y</span>;x++))</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="literal">-n</span> <span class="variable">$x</span>	</span><br><span class="line">	done</span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123; for(y=1;y&lt;=5;y++) &#123;for(x=1;x&lt;=y;x++) &#123;printf x&#125; ;print &#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN &#123; for(y=1;y&lt;=5;y++) &#123; for(x=1;x&lt;=y;x++) &#123;printf x&#125;;print&#125; &#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line"><span class="number">12345</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123; y=1;while(y&lt;=5) &#123; for(x=1;x&lt;=y;x++) &#123;printf x&#125;;y++;print&#125;&#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="number">1234</span></span><br><span class="line"><span class="number">12345</span></span><br><span class="line"></span><br><span class="line">尝试用三种方法打印<span class="number">99</span>口诀表：</span><br><span class="line"><span class="comment">#awk &#x27;BEGIN&#123;for(y=1;y&lt;=9;y++) &#123; for(x=1;x&lt;=y;x++) &#123;printf x&quot;*&quot;y&quot;=&quot;x*y&quot;\t&quot;&#125;;print&#125; &#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#awk &#x27;BEGIN&#123;for(y=1;y&lt;=9;y++) &#123; for(x=1;x&lt;=y;x++) printf x&quot;*&quot;y&quot;=&quot;x*y&quot;\t&quot;;print&#125; &#125;&#x27;</span></span><br><span class="line"><span class="comment">#awk &#x27;BEGIN&#123;i=1;while(i&lt;=9)&#123;for(j=1;j&lt;=i;j++) &#123;printf j&quot;*&quot;i&quot;=&quot;j*i&quot;\t&quot;&#125;;print;i++ &#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#awk &#x27;BEGIN&#123;for(i=1;i&lt;=9;i++)&#123;j=1;while(j&lt;=i) &#123;printf j&quot;*&quot;i&quot;=&quot;i*j&quot;\t&quot;;j++&#125;;print&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">循环的控制：</span><br><span class="line"><span class="keyword">break</span>		条件满足的时候中断循环</span><br><span class="line"><span class="keyword">continue</span>	条件满足的时候跳过循环</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;for(i=1;i&lt;=5;i++) &#123;if(i==3) break;print i&#125; &#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;for(i=1;i&lt;=5;i++)&#123;if(i==3) continue;print i&#125;&#125;&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure>

<p>##6. awk算数运算</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">+ - * / %(模) ^(幂<span class="number">2</span>^<span class="number">3</span>)</span><br><span class="line">可以在模式中执行计算，awk都将按浮点数方式执行算术运算</span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;print 1+1&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;print 1**1&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;print 2**3&#125;&#x27;</span></span><br><span class="line"><span class="comment"># awk &#x27;BEGIN&#123;print 2/3&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h1 id="六、awk统计案例"><a href="#六、awk统计案例" class="headerlink" title="六、awk统计案例"></a>六、awk统计案例</h1><h2 id="1、统计系统中各种类型的shell"><a href="#1、统计系统中各种类型的shell" class="headerlink" title="1、统计系统中各种类型的shell"></a>1、统计系统中各种类型的shell</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># awk -F: &#x27;&#123; shells[$NF]++ &#125;;END&#123;for (i in shells) &#123;print i,shells[i]&#125; &#125;&#x27; /etc/passwd</span></span><br><span class="line"></span><br><span class="line">books[<span class="type">linux</span>]++</span><br><span class="line">books[<span class="type">linux</span>]=<span class="number">1</span></span><br><span class="line">shells[/<span class="type">bin</span>/<span class="type">bash</span>]++</span><br><span class="line">shells[/<span class="type">sbin</span>/<span class="type">nologin</span>]++</span><br><span class="line"></span><br><span class="line">/bin/bash <span class="number">5</span></span><br><span class="line">/sbin/nologin <span class="number">6</span></span><br><span class="line"></span><br><span class="line">shells[/<span class="type">bin</span>/<span class="type">bash</span>]++			a</span><br><span class="line">shells[/<span class="type">sbin</span>/<span class="type">nologin</span>]++		b</span><br><span class="line">shells[/<span class="type">sbin</span>/<span class="type">shutdown</span>]++	c</span><br><span class="line"></span><br><span class="line">books[<span class="type">linux</span>]++</span><br><span class="line">books[<span class="type">php</span>]++</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="2、统计网站访问状态"><a href="#2、统计网站访问状态" class="headerlink" title="2、统计网站访问状态"></a>2、统计网站访问状态</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ss -antp|grep 80|awk &#x27;&#123;states[$1]++&#125;;END&#123;for(i in states)&#123;print i,states[i]&#125;&#125;&#x27;</span></span><br><span class="line">TIME_WAIT <span class="number">578</span></span><br><span class="line">ESTABLISHED <span class="number">1</span></span><br><span class="line">LISTEN <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ss -an |grep :80 |awk &#x27;&#123;states[$2]++&#125;;END&#123;for(i in states)&#123;print i,states[i]&#125;&#125;&#x27;</span></span><br><span class="line">LISTEN <span class="number">1</span></span><br><span class="line">ESTAB <span class="number">5</span></span><br><span class="line">TIME<span class="literal">-WAIT</span> <span class="number">25</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ss -an |grep :80 |awk &#x27;&#123;states[$2]++&#125;;END&#123;for(i in states)&#123;print i,states[i]&#125;&#125;&#x27; |sort -k2 -rn</span></span><br><span class="line">TIME<span class="literal">-WAIT</span> <span class="number">18</span></span><br><span class="line">ESTAB <span class="number">8</span></span><br><span class="line">LISTEN <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3、统计访问网站的每个IP的数量"><a href="#3、统计访问网站的每个IP的数量" class="headerlink" title="3、统计访问网站的每个IP的数量"></a>3、统计访问网站的每个IP的数量</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="comment"># netstat -ant |grep :80 |awk -F: &#x27;&#123;ip_count[$8]++&#125;;END&#123;for(i in ip_count)&#123;print i,ip_count[i]&#125; &#125;&#x27; |sort</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ss -an |grep :80 |awk -F&quot;:&quot; &#x27;!/LISTEN/&#123;ip_count[$(NF-1)]++&#125;;END&#123;for(i in ip_count)&#123;print i,ip_count[i]&#125;&#125;&#x27; |sort -k2 -rn |head</span></span><br></pre></td></tr></table></figure>

<h2 id="4、统计网站日志中PV量"><a href="#4、统计网站日志中PV量" class="headerlink" title="4、统计网站日志中PV量"></a>4、统计网站日志中PV量</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">统计Apache/Nginx日志中某一天的PV量 　&lt;统计日志&gt;</span><br><span class="line"><span class="comment"># grep &#x27;27/Jul/2017&#x27; mysqladmin.cc-access_log |wc -l</span></span><br><span class="line"><span class="number">14519</span></span><br><span class="line"></span><br><span class="line">统计Apache/Nginx日志中某一天不同IP的访问量　&lt;统计日志&gt;</span><br><span class="line"><span class="comment"># grep &#x27;27/Jul/2017&#x27; mysqladmin.cc-access_log |awk &#x27;&#123;ips[$1]++&#125;;END&#123;for(i in ips)&#123;print i,ips[i]&#125; &#125;&#x27; |sort -k2 -rn |head</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grep &#x27;07/Aug/2017&#x27; access.log |awk &#x27;&#123;ips[$1]++&#125;;END&#123;for(i in ips)&#123;print i,ips[i]&#125; &#125;&#x27; |awk &#x27;$2&gt;100&#x27; |sort -k2 -rn</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>名词解释：</strong></p>
<p>==网站浏览量（PV）==<br>名词：PV=PageView (网站浏览量)<br>说明：指页面的浏览次数，用以衡量网站用户访问的网页数量。多次打开同一页面则浏览量累计。用户每打开一个页面便记录1次PV。</p>
<p>名词：VV = Visit View（访问次数）<br>说明：从访客来到您网站到最终关闭网站的所有页面离开，计为1次访问。若访客连续30分钟没有新开和刷新页面，或者访客关闭了浏览器，则被计算为本次访问结束。</p>
<p>独立访客（UV）<br>名词：UV= Unique Visitor（独立访客数）<br>说明：1天内相同的访客多次访问您的网站只计算1个UV。</p>
<p>独立IP（IP）<br>名词：IP=独立IP数<br>说明：指1天内使用不同IP地址的用户访问网站的数量。同一IP无论访问了几个页面，独立IP数均为1</p>
<p>#七、课后作业</p>
<p><strong>作业1：</strong><br>1、写一个自动检测磁盘使用率的脚本，当磁盘使用空间达到90%以上时，需要发送邮件给相关人员<br>2、写一个脚本监控系统内存和交换分区使用情况</p>
<p><strong>作业2：</strong><br>输入一个IP地址，使用脚本判断其合法性：<br>必须符合ip地址规范，第1、4位不能以0开头，不能大于255不能小于0</p>
<p>#八、企业实战案例</p>
<h4 id="1-任务-背景"><a href="#1-任务-背景" class="headerlink" title="1. 任务/背景"></a>1. 任务/背景</h4><p>web服务器集群中总共有9台机器，上面部署的是Apache服务。由于业务不断增长，每天每台机器上都会产生大量的访问日志，现需要将每台web服务器上的apache访问日志<strong>保留最近3天</strong>的，3天以前的日志<strong>转储</strong>到一台专门的日志服务器上，已做后续分析。如何实现每台服务器上只保留3天以内的日志？</p>
<h4 id="2-具体要求"><a href="#2-具体要求" class="headerlink" title="2. 具体要求"></a>2. 具体要求</h4><ol>
<li>每台web服务器的日志对应日志服务器相应的目录里。如：web1——&gt;web1.log（在日志服务器上）</li>
<li>每台web服务器上保留最近3天的访问日志，3天以前的日志每天凌晨5:03分转储到日志服务器</li>
<li>如果脚本转储失败，运维人员需要通过跳板机的菜单选择手动清理日志</li>
</ol>
<h4 id="3-涉及知识点"><a href="#3-涉及知识点" class="headerlink" title="3. 涉及知识点"></a>3. 涉及知识点</h4><ol>
<li>shell的基本语法结构</li>
<li>文件同步rsync</li>
<li>文件查找命令find</li>
<li>计划任务crontab</li>
<li>apache日志切割</li>
<li>其他</li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>华为HCNP基本命令</title>
    <url>/2021/01/02/HCNA/01%E5%8D%8E%E4%B8%BAHCNA%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>交换机常用命令笔记(谨记)</p>
<span id="more"></span>

<blockquote>
<p>思科     cisco   :CCNA CCNP CCIE</p>
<p>华为  huawei  :HCNA HCNP HCIE</p>
</blockquote>
<h1 id="快捷键及简洁操作"><a href="#快捷键及简洁操作" class="headerlink" title="快捷键及简洁操作"></a>快捷键及简洁操作</h1><p>tab补全</p>
<p>?提示</p>
<p>支持简写</p>
<p>more :空格键翻页 其他键退出</p>
<p>ctrl+z:直接回退到用户模式</p>
<p>一直ping:    </p>
<p>ping  XXX.XXX.XXX.XX  -t</p>
<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><p>&lt; &gt;用户视图模式</p>
<p>[  ]系统视图模式</p>
<ul>
<li><p>切换到系统视图</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;&gt; system-view </span><br></pre></td></tr></table></figure></li>
<li><p>命名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[] sysname R1 </span><br></pre></td></tr></table></figure></li>
<li><p>退出当前模式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[] quit</span><br></pre></td></tr></table></figure></li>
<li><p>提示语言改为中文(只在用户视图模式下生效)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">language-mode Chinese</span><br></pre></td></tr></table></figure></li>
<li><p>显示当前所有配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dis current-configuration</span><br></pre></td></tr></table></figure></li>
<li><p>撤销某条指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">undo XXXXX</span><br></pre></td></tr></table></figure></li>
</ul>
<ul>
<li><p>显示接口摘要信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display interface brief </span><br></pre></td></tr></table></figure></li>
<li><p>显示接口信息</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display interface GigabitEthernet 1/1/4</span><br></pre></td></tr></table></figure>

<p>显示接口应用信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display packet-filter interface GigabitEthernet 1/1/4</span><br></pre></td></tr></table></figure></li>
<li><p>显示该ip的mac地址</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display arp 10.78.4.1</span><br></pre></td></tr></table></figure></li>
<li><p>查看警告信息</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display alarm urgent</span><br></pre></td></tr></table></figure></li>
<li><p>查看CPU占用率</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display cpu-usage</span><br></pre></td></tr></table></figure></li>
<li><p>查看温度信息</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display environment</span><br></pre></td></tr></table></figure></li>
<li><p>查看内存</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display memory-usage</span><br></pre></td></tr></table></figure></li>
<li><p>查看标签显示</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">back elabel</span><br></pre></td></tr></table></figure></li>
<li><p>显示cpu,风扇,内存等配置信息</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display device</span><br></pre></td></tr></table></figure></li>
<li><p>查看接入pc的mac:</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display mac-address</span><br></pre></td></tr></table></figure></li>
<li><p>显示路由表</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display ip routing-table</span><br></pre></td></tr></table></figure>

<p>  路由器转发数据包的唯一依据,是路由器转发数据包的唯一张”地图”</p>
</li>
<li><p>保存配置</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">save </span><br></pre></td></tr></table></figure></li>
<li><p>关闭日志</p>
  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">undo info-center enable	</span><br></pre></td></tr></table></figure>

<p>直连路由 :direct route 直接相连的路由,当路由器的接口配制好ip地址并up之后,慧自动创建该路由.路由器默认情况下,只能到达直连的网段.</p>
</li>
</ul>
<p><img src="./img/01.jpg" alt="01">静态路由的配置</p>
<pre><code>去包路由
                  目标网段            下一跳
R1:ip route-static  172.16.1.0  24 12.1.1.2 
R2:ip route-static  172.16.1.0  24    23.1.1.3 

下一跳:next-hop 下一个传递者,下一个承接者

回包路由
R3:ip route-static  192.168.1.0  24  23.1.1.2
R2:ip route-static  192.168.1.0  24  12.1.1.1
</code></pre>
<p>​    </p>
<p>  路由优先级:(preference) 衡量路由的优先程度,到达同一个目标有两种路由协议,此时有线路由优先选优先级较小的路由协议</p>
<p>  路由优先级范围:0-255</p>
<ul>
<li><p>DHCP报文</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dhcp request </span><br></pre></td></tr></table></figure>

<p>有哟过户发向服务器的广播报文,目的是用来通知其他服务器是否使用服务器分配的ip地址.同事该报文还有续租的作用.</p>
<ul>
<li>dhcp租期: 目的是合理有效的使用ip地址</li>
<li>分配给客户端的ip地址都是有租期的,当到达租期一半的时候,客户端会自动触发续租消息(dhcp request 报文)</li>
</ul>
</li>
<li><p>DHCP高级报文</p>
<ul>
<li>DHCP DECLINE  当客户端发现地址已经被使用时,用来通知服务器</li>
<li>DHCP INFORM 客户端已经有IP地址时,用它来向服务器请求其他的配置参数</li>
<li>DHCP NAK 由服务器发送给客户端,用来表明客户端的地址请求不正确或者租期已经过期</li>
<li>DHCP RELEASE 客户端要释放地址时用来通知服务器</li>
</ul>
</li>
</ul>
<h2 id="接口配置"><a href="#接口配置" class="headerlink" title="接口配置"></a>接口配置</h2><ul>
<li><p>进入接口e0/0/0</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int e0/0/0</span><br></pre></td></tr></table></figure></li>
<li><p>配置端口地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip address  192.168.1.1 24</span><br></pre></td></tr></table></figure></li>
<li><p>删除配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">undo ip address</span><br></pre></td></tr></table></figure></li>
<li><p>关闭接口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shudown</span><br></pre></td></tr></table></figure></li>
<li><p>开启接口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">undo shutdown</span><br></pre></td></tr></table></figure></li>
</ul>
<ul>
<li><p>查看某一接口配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display this</span><br></pre></td></tr></table></figure></li>
<li><p>显示当前配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display current-configration</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="VLAN配置"><a href="#VLAN配置" class="headerlink" title="VLAN配置"></a>VLAN配置</h2><ul>
<li><p>查看 vlan状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display vlan</span><br><span class="line">display vlan 20</span><br></pre></td></tr></table></figure>

<p>创建vlan </p>
<ul>
<li><p>创建vlan 1-100这100个vlan</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vlan batch 1 to 100</span><br></pre></td></tr></table></figure></li>
<li><p>创建vlan 1和vlan100这两个vlan</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vlan batch 1 100</span><br></pre></td></tr></table></figure></li>
<li><p>进入vlan10,并将此ip设置为vlan10的网关</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vlan 10 </span><br><span class="line">ip add 192.168.20.1 24</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>vlan设置</p>
<ul>
<li>输入VLAN+号码(各单位VLAN号,从801到830)</li>
<li>PORT+交换机口号</li>
</ul>
</li>
<li><p>把端口1-5放入VLAN20中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">port e1/0/1 to e1/0/5 </span><br></pre></td></tr></table></figure></li>
<li><p>把当前端口放入vlan20</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">port access vlan  20</span><br></pre></td></tr></table></figure></li>
<li><p>删除当前VLan端口10</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">undo port e1/0/10</span><br></pre></td></tr></table></figure></li>
<li><p>应用相应的vlan到该端口上。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">interface Ethernet x/x/x </span><br><span class="line">port default vlan x</span><br></pre></td></tr></table></figure></li>
</ul>
<ul>
<li><p>指定端口类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">port link-type access/trunk</span><br></pre></td></tr></table></figure>

<ul>
<li>Access类型bai的端口只能du于1个zhiVLAN,一般用于连接计dao算机的端口。zhuan</li>
<li>Trunk类型的端口可以shu允许属多个VLAN通过，可以接收和发送多个VLAN的报文，一般用于交换机之间连接的端口。</li>
</ul>
</li>
<li><p>端口的trunk 允许 带有vlan标签10 20的数据帧通过。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">port trunk allow-pass vlan 10 20</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="DHCP-配置使用"><a href="#DHCP-配置使用" class="headerlink" title="DHCP 配置使用"></a>DHCP 配置使用</h2><h3 id="方法一-全局建立地址池"><a href="#方法一-全局建立地址池" class="headerlink" title="方法一 全局建立地址池"></a>方法一 全局建立地址池</h3><ul>
<li><p>开启DHCP</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dhcp enabled</span><br></pre></td></tr></table></figure></li>
<li><p>创建ip池,创建ip</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip pool `name`</span><br><span class="line">network 192.168.1.0 mask 24</span><br><span class="line">gateway-list 192.168.1.1</span><br><span class="line">dns-list 8.8.8.8</span><br></pre></td></tr></table></figure></li>
<li><p>开启dhcp选择功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dhcp select global</span><br><span class="line">dhcp select interface</span><br><span class="line">dhcp select relay</span><br></pre></td></tr></table></figure></li>
<li><p>拓展: </p>
<ul>
<li><p>设置租期(进入地址池中,一般情况不用改)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lease day 0 hour 23 </span><br><span class="line">lease unlimited</span><br></pre></td></tr></table></figure></li>
<li><p>设置固定ip地址(将ip地址与mac地址绑定)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">static-bind ip-address 192.168.1.200 mac-address XXXX-XXXX-XXXX</span><br></pre></td></tr></table></figure>

<p>mac地址如果已经存在地址池中,则无法进行绑定,需要先进行释放,再绑定</p>
</li>
<li><p>排除地址段     从地址池中拿出一部分,不能随机分配(例如1-200可以进行分配,201-254不能进行分配)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">excluded-ip-address 192.168.1.201 192.168.1.254</span><br></pre></td></tr></table></figure></li>
<li><p>重置分配记录 (用户模式下)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reset ip pool name XXXX used</span><br></pre></td></tr></table></figure></li>
<li><p>显示地址池</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display ip pool</span><br></pre></td></tr></table></figure></li>
<li><p>显示地址池详细信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display ip pool name  XXX used</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h3 id="方法二-基于接口的DHCP-简单-便捷"><a href="#方法二-基于接口的DHCP-简单-便捷" class="headerlink" title="方法二  基于接口的DHCP(简单,便捷)"></a>方法二  基于接口的DHCP(简单,便捷)</h3><p>dhcp分配的网段跟此接口所在的网段一样,网关就是此接口的ip地址</p>
<ul>
<li><p>不需要地址池(只需一条指令)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dhcp select interface</span><br></pre></td></tr></table></figure></li>
<li><p>dns配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dhcp server ?</span><br><span class="line">dhcp server dns-list 8.8.8.8</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="方法三-DHCP-relay-dhcp中继"><a href="#方法三-DHCP-relay-dhcp中继" class="headerlink" title="方法三 DHCP relay (dhcp中继)"></a>方法三 DHCP relay (dhcp中继)</h3><ul>
<li><p>交换机配置好vlan和trunk</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">port link-type access</span><br><span class="line">port default vlan 20</span><br><span class="line">---</span><br><span class="line">port link-type trunk</span><br><span class="line">port trunk allow-pass vlan 20 </span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="DHCP-SNOOPING"><a href="#DHCP-SNOOPING" class="headerlink" title="DHCP SNOOPING"></a>DHCP SNOOPING</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dhcp enable </span><br><span class="line">dhcp snooping enable</span><br><span class="line">dhcp snooping enable vlan 10</span><br><span class="line">int e0/0/3 </span><br><span class="line">dhcp snooping trusted</span><br></pre></td></tr></table></figure>

<h2 id="BFD"><a href="#BFD" class="headerlink" title="BFD"></a>BFD</h2><p>双向转发检查作用,毫秒级故障检查,通常结合三层协议(如静态路由,vrrp,ospf,BGP等)实现链路故障快速检查.     </p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bfd 1 bind peer-ip 12.1.1.2 source-ip 12.1.1.1 配置组1</span><br><span class="line">discriminatory local 1 本地标识1 标识需要互为对称</span><br><span class="line">discriminatory remote 2 远程标识2 </span><br><span class="line">commit 确认提交</span><br></pre></td></tr></table></figure>

<p>静态路由调用BFD</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip route-static 0.0.0.0 0.0.0.0 23.1.1.2 track bfd-session 1</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bfd</span><br><span class="line">ospf 1</span><br><span class="line">bfd all-interfaces enable</span><br></pre></td></tr></table></figure>

<h2 id="端口安全"><a href="#端口安全" class="headerlink" title="端口安全"></a>端口安全</h2><ul>
<li><p>开启端口安全(该接口只能有一个mac地址接入)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int Gi 0/0/3</span><br><span class="line">  port-security enable</span><br><span class="line">  port-security aging-time              </span><br><span class="line">  port-security mac-address     </span><br><span class="line">  port-security max-mac-num     </span><br><span class="line">  port-security protect-action  </span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="端口镜像"><a href="#端口镜像" class="headerlink" title="端口镜像"></a>端口镜像</h2><ol>
<li>管理员维护查看网络流量</li>
<li>用开配合IDS,堡垒机等安全设备使用</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">observer-port 1 interface GigabitEthernet 0/0/2</span><br><span class="line">int gi 0/0/1</span><br><span class="line">port-mirroring to observe-port 1 </span><br><span class="line">								  both         //所有</span><br><span class="line">								  inbound      //进</span><br><span class="line">								  outbound     //出</span><br></pre></td></tr></table></figure>

<p>1为观察组</p>
<h2 id="vlan高级配置"><a href="#vlan高级配置" class="headerlink" title="vlan高级配置"></a>vlan高级配置</h2><h3 id="根据mac地址划分vlan"><a href="#根据mac地址划分vlan" class="headerlink" title="根据mac地址划分vlan"></a>根据mac地址划分vlan</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vlan bath 10 20</span><br><span class="line">vlan 10</span><br><span class="line">mac-vlan mac-address 0000-0000-0001</span><br><span class="line">vlan 20</span><br><span class="line">mac-vlan mac-address 0000-0000-0002</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int gi0/0/1</span><br><span class="line">port hybrid untagged vlan 10 20</span><br></pre></td></tr></table></figure>

<p>启用基于mac学习vlan的功能</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mac-vlan enable</span><br></pre></td></tr></table></figure>



<h3 id="根据ip地址划分vlan"><a href="#根据ip地址划分vlan" class="headerlink" title="根据ip地址划分vlan"></a>根据ip地址划分vlan</h3><p><img src="./img/2.png" alt="2"></p>
<p>1.当检测ip在192.168.10.0/24 的时候,pc接入交换机时,将其划分为vlan 10,且可以好vlan 10的服务器通信</p>
<p>2.当检测ip在192.168.20.0/24 的时候,pc接入交换机时,将其划分为vlan 10,且可以好vlan 20的服务器通信</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sysname sw2</span><br><span class="line">un in en</span><br><span class="line">vlan batch 10 20 </span><br><span class="line">int gi 0/0/2</span><br><span class="line">port link-type access</span><br><span class="line">port default vlan 10</span><br><span class="line">int gi 0/0/3</span><br><span class="line">port link-type access</span><br><span class="line">port default vlan 20</span><br><span class="line">int gi 0/0/1</span><br><span class="line">port link-type trunk</span><br><span class="line">port trunk allow-pass vlan 10 20</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sysname sw1</span><br><span class="line">un in en</span><br><span class="line">int gi 0/0/2</span><br><span class="line">port link-type trunk</span><br><span class="line">port trunk allow-pass vlan 10 20</span><br><span class="line">int gi0/0/1</span><br><span class="line">port hybrid untagged vlan 10 20</span><br><span class="line">ip-subnet-vlan enable </span><br><span class="line"></span><br><span class="line">vlan batch 10 20 </span><br><span class="line">vlan 10 </span><br><span class="line">ip-subnet-vlan ip 192.168.10.0</span><br><span class="line">vlan 20</span><br><span class="line">ip-subnet-vlan ip 192.168.20.0 </span><br></pre></td></tr></table></figure>

<ul>
<li><p>显示vlan ip地址</p>
</li>
<li><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">display ip-subnet-vlan vlan all</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="super-vlan"><a href="#super-vlan" class="headerlink" title="super vlan"></a>super vlan</h3><p><img src="./img/3.png" alt="3"></p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>华为</tag>
        <tag>交换机</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-IO操作</title>
    <url>/2020/03/03/java/Java-IO%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>java操作io</p>
<span id="more"></span>

<p>设置文件路径;<br>File file = new File(“f:”+File.separator+”ADemo”+File.separator+”my.txt”);</p>
<p>创建文件<br>public boolean createNewFile();</p>
<p>删除文件<br>public booleandelete();</p>
<p>判断文件是否存在<br>public booleanexists();</p>
<p>路径分隔符<br>File.separator;</p>
<p>得到文件父路径<br>public FilegetParentFile();<br>【file.getParentFile().exists()】判断文件的父路径是否存在</p>
<p>创建路径<br>public boolean mkdirs();<br>【file.getParentFile().mkdirs()】</p>
<p>取得文件大小：<br>longlength();</p>
<p>判断文件是否是目录<br>booleanisDirectory();</p>
<p>判断是否是文件<br>booleanisFile();</p>
<p>输出文件列表</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    Filefile = <span class="keyword">new</span> File(<span class="string">&quot;f:&quot;</span>+File.separator+<span class="string">&quot;元旦&quot;</span>);</span><br><span class="line">    print(file);</span><br><span class="line">   &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(File file)</span></span>&#123;</span><br><span class="line">  System.out.println(file);</span><br><span class="line">  <span class="keyword">if</span>(file.isDirectory())&#123;</span><br><span class="line">    Fileresult[] =file.listFiles();</span><br><span class="line">      <span class="keyword">if</span>(result!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x =<span class="number">0</span>;x&lt;result.length;x++)&#123;</span><br><span class="line">            print(result[x]);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>字符流与字节流</p>
<p>步骤：</p>
<p>1、   通过File类定义一个要操作文件的路径<br>2、   通过字节流或字符流的子类对象为父类对象实例化<br>3、   进行数据的读（输入）、写（输出）操作<br>4、   数据流属于自愿操作，资源操作必须关闭</p>
<p>字节流：Inputstream、OutoutStream<br>字符流：Reader、Writer</p>
<p>OutputStream子类</p>
<p>FileOutputStream(File file)</p>
<p>创建文件输出流以写入由指定的 File对象表示的文件。 </p>
<p>FileOutputStream(File file, boolean append)</p>
<p>创建文件输出流以写入由指定的 File对象表示的文件。 （追加）</p>
<p>方法</p>
<p>void write(byte[] b)</p>
<p>将 b.length字节从指定的字节数组写入此输出流。 </p>
<p>void write(byte[] b, int off, int len)</p>
<p>从指定的字节数组写入 len个字节，从偏移 off开始输出到此输出流。 </p>
<p>abstract void write(int b)</p>
<p>将指定的字节写入此输出流。 </p>
<p>文件内容的输出</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CopyDemo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//1、定义要输出文件路径</span></span><br><span class="line"></span><br><span class="line">Filefile = <span class="keyword">new</span> File(<span class="string">&quot;f:&quot;</span>+File.separator+<span class="string">&quot;ADemo&quot;</span>+File.separator+<span class="string">&quot;my.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//2、若文件目录不存在，则进行创建文件目录</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(!file.getParentFile().exists())&#123;</span><br><span class="line"></span><br><span class="line">          file.getParentFile().mkdirs();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//3、使用OutputStream和其子类进行实例化</span></span><br><span class="line"></span><br><span class="line">OutputStreamoutput = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//4、要进行文件内容的输出</span></span><br><span class="line"></span><br><span class="line">      Stringstr = <span class="string">&quot;好好学习，天天向上！&quot;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">byte</span>[] data = str.getBytes();</span><br><span class="line"></span><br><span class="line">      output.write(data);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//5、关闭资源</span></span><br><span class="line"></span><br><span class="line">      output.close();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//4、要进行文件内容的输出</span></span><br><span class="line"></span><br><span class="line">      String str = <span class="string">&quot;好好学习，天天向上！&quot;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">byte</span>[] data = str.getBytes();</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span>(intx=<span class="number">0</span>;x</span><br><span class="line"></span><br><span class="line">          output.write(data);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//4、要进行文件内容的输出</span></span><br><span class="line"></span><br><span class="line">      String str = <span class="string">&quot;好好学习，天天向上！&quot;</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">byte</span>[] data = str.getBytes();</span><br><span class="line"></span><br><span class="line">      output.write(data,<span class="number">2</span>,<span class="number">6</span>);</span><br></pre></td></tr></table></figure>

<p>“\r\n”字符串中换行</p>
<p>InpuyStream</p>
<p>abstract int read()</p>
<p>从输入流读取数据的下一个字节。 </p>
<p>int read(byte[] b)</p>
<p>从输入流读取一些字节数，并将它们存储到缓冲区 b 。 </p>
<p>int read(byte[] b, int off, int len)</p>
<p>从输入流读取最多 len字节的数据到一个字节数组。</p>
<p>数据读取</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//1、定义要输入文件路径</span></span><br><span class="line"></span><br><span class="line">Filefile = <span class="keyword">new</span> File(<span class="string">&quot;f:&quot;</span>+File.separator+<span class="string">&quot;ADemo&quot;</span>+File.separator+<span class="string">&quot;my.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//2、若文件存在，执行读取操作</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(file.exists())&#123;</span><br><span class="line"></span><br><span class="line">          <span class="comment">//3、使用InputStream进行数据读取</span></span><br><span class="line"></span><br><span class="line">InputStreaminput = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//4、进行数据读取</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> len = input.read(data);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//5、关闭输入流 </span></span><br><span class="line"></span><br><span class="line">          input.close();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="keyword">new</span> String(data,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//4、进行数据读取</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> foot =<span class="number">0</span>;<span class="comment">//数组操作脚标</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> temp =<span class="number">0</span> ;<span class="comment">//每次读取的字节数据</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">while</span>((temp=input.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">data[foot++]=(<span class="keyword">byte</span>)temp;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">//5、关闭输入流 </span></span><br><span class="line"></span><br><span class="line">          input.close();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="keyword">new</span> String(data,<span class="number">0</span>,foot));</span><br></pre></td></tr></table></figure>

<p>Writer</p>
<p>voidwrite(char[] cbuf)</p>
<p>写入一个字符数组。 </p>
<p>abstract voidwrite(char[] cbuf, int off, int len)</p>
<p>写入字符数组的一部分。 </p>
<p>void write(intc)</p>
<p>写一个字符 </p>
<p>voidwrite(String str)</p>
<p>写一个字符串 </p>
<p>voidwrite(String str, int off, int len)</p>
<p>写一个字符串的一部分。   </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//1、定义文件路径</span></span><br><span class="line"></span><br><span class="line">Filefile = <span class="keyword">new</span> File(<span class="string">&quot;f:&quot;</span>+File.separator+<span class="string">&quot;ADemo&quot;</span>+File.separator+<span class="string">&quot;my.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//2、若文件目录不存在，则称创建</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(file.getParentFile().exists())&#123;</span><br><span class="line"></span><br><span class="line">        file.getParentFile().mkdirs();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//3、实例Writer的对象</span></span><br><span class="line"></span><br><span class="line">Writerout = <span class="keyword">new</span> FileWriter(file);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//4、进行文件内容的输出</span></span><br><span class="line"></span><br><span class="line">      Stringstr = <span class="string">&quot;你好！！！！&quot;</span>;</span><br><span class="line"></span><br><span class="line">      out.write(str);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//5、关闭输出流</span></span><br><span class="line"></span><br><span class="line">      out.close();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Reader</p>
<p> int read()</p>
<p>读一个字符 </p>
<p>int read(char[] cbuf)</p>
<p>将字符读入数组。 </p>
<p>abstract int read(char[] cbuf, int off, intlen)</p>
<p>将字符读入数组的一部分。 </p>
<p>Int read(CharBuffer target)</p>
<p>尝试将字符读入指定的字符缓冲区。 </p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//1、定义文件路径</span></span><br><span class="line"></span><br><span class="line">Filefile = <span class="keyword">new</span> File(<span class="string">&quot;f:&quot;</span>+File.separator+<span class="string">&quot;ADemo&quot;</span>+File.separator+<span class="string">&quot;my.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//2、若文件存在，继续执行</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(file.exists())&#123;</span><br><span class="line"></span><br><span class="line">          <span class="comment">//3、实例Writer的对象</span></span><br><span class="line"></span><br><span class="line">Readerin = <span class="keyword">new</span> FileReader(file);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//4、进行文件内容的输出</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">char</span>[] data = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> len = in.read(data);</span><br><span class="line"></span><br><span class="line">          <span class="comment">//5、关闭输入流</span></span><br><span class="line"></span><br><span class="line">          in.close();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="keyword">new</span> String(data,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>综合案例：文件拷贝</p>
<p>//文件拷贝</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CopyDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(args.length!= <span class="number">2</span>)&#123;<span class="comment">//初始化参数不足两位</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;命令执行错误&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">FileinFile = <span class="keyword">new</span> File(args[<span class="number">0</span>]);<span class="comment">//源文件路径</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(!inFile.exists())&#123;<span class="comment">//源文件不存在</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;原文进不存在，请确认执行路径&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">FileoutFile = <span class="keyword">new</span> File(args[<span class="number">1</span>]);<span class="comment">//目标文件路径</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(outFile.getParentFile().exists())&#123;</span><br><span class="line"></span><br><span class="line">          outFile.getParentFile().mkdirs();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">InputStreaminput = <span class="keyword">new</span> FileInputStream(inFile);</span><br><span class="line"></span><br><span class="line">OutputStreamoutput = <span class="keyword">new</span> FileOutputStream(outFile);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> len =<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">while</span>((len=input.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">          output.write(len);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      input.close();</span><br><span class="line"></span><br><span class="line">      output.close();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//文件拷贝  （改进）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CopyDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(args.length!= <span class="number">2</span>)&#123;<span class="comment">//初始化参数不足两位</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;命令执行错误&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">FileinFile = <span class="keyword">new</span> File(args[<span class="number">0</span>]);<span class="comment">//源文件路径</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(!inFile.exists())&#123;<span class="comment">//源文件不存在</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;原文进不存在，请确认执行路径&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.exit(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">FileoutFile = <span class="keyword">new</span> File(args[<span class="number">1</span>]);<span class="comment">//目标文件路径</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(outFile.getParentFile().exists())&#123;</span><br><span class="line"></span><br><span class="line">          outFile.getParentFile().mkdirs();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">InputStreaminput = <span class="keyword">new</span> FileInputStream(inFile);</span><br><span class="line"></span><br><span class="line">OutputStreamoutput = <span class="keyword">new</span> FileOutputStream(outFile);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">byte</span>[] data = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> len =<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">while</span>((len=input.read(data))!=-<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">          output.write(data);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      input.close();</span><br><span class="line"></span><br><span class="line">      output.close();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>内存流</p>
<p>   字节内存流：ByteArrayInputStream、ByteArrayOutputStream</p>
<p>   字符内存流：CharArrayReader、CharArrayWriter</p>
<p>以文件操作为例：</p>
<p>   输出（OutputStream）:程序　→　OutputStream　→　文件</p>
<p>   输入（InputStream）:程序 ← InputStream ← 文件</p>
<p>以内存操作为例：</p>
<p>输出（OutputStream）:程序　←　OutputStream　←　文件</p>
<p>   输入（InputStream）:程序 → InputStream → 文件</p>
<p>打印流（PrintStream）</p>
<p> 构造方法：PrintStream(OutputStream out)     创建一个新的打印流。</p>
<pre><code>      需要接收一个OutprintStream对象
</code></pre>
<p>输入：</p>
<p>//输入数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">InputStreaminput = System.in;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">byte</span> data[]  =<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> len = input.read(data);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;输入数据为：&quot;</span>+<span class="keyword">new</span> String(data,<span class="number">0</span>,len));</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">InputStreaminput = System.in;</span><br><span class="line"></span><br><span class="line">StringBufferbuf = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">&quot;请输入数据:&quot;</span>);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">while</span>((temp = input.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(temp == <span class="string">&#x27;\n&#x27;</span> )&#123;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">buf.append((<span class="keyword">char</span>)temp);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;输入数据为：&quot;</span>+buf);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>缓冲输入流</p>
<p>   字符缓冲区流：BufferedReader、BufferedWirter</p>
<p>   字节缓冲区流：BufferedInputStream、BufferedOutputStream</p>
<p> 键盘输入的标准格式</p>
<p> //输入数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//System.in是InputStream类的对象</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//BufferedReader 的构造方法里面需要接受Reader类的对象</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//利用InputStreamReader将字节流变为字符流</span></span><br><span class="line"></span><br><span class="line">BufferedReaderbuf =<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">&quot;请输入内容：&quot;</span>);</span><br><span class="line"></span><br><span class="line">      Stringstr =buf.readLine();</span><br><span class="line"></span><br><span class="line">      buf.close();</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;输入的内容为：&quot;</span>+str);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输出文件内容</p>
<p>//输入数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">Filefile =<span class="keyword">new</span> File(<span class="string">&quot;F:&quot;</span>+File.separator+<span class="string">&quot;Ademo&quot;</span>+File.separator+<span class="string">&quot;my.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">BufferedReaderbuf =<span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(file));</span><br><span class="line"></span><br><span class="line">Stringstr=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">while</span>((str = buf.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line"></span><br><span class="line">System.out.println(str);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      buf.close();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>扫描流</p>
<p>Scanner</p>
<p>//输入数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">Scannerscan =<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">System.out.print(<span class="string">&quot;请输入内容：&quot;</span>);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(scan.hasNext())&#123;</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">&quot;输入内容：&quot;</span>+scan.nextLine());</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      scan.close();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>//读取文件数据</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">Filefile =<span class="keyword">new</span> File(<span class="string">&quot;f:&quot;</span>+File.separator+<span class="string">&quot;Ademo&quot;</span>+File.separator+<span class="string">&quot;my.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line">Scannerscan =<span class="keyword">new</span> Scanner(<span class="keyword">new</span> FileInputStream(file));</span><br><span class="line"></span><br><span class="line"> <span class="keyword">while</span>(scan.hasNext())&#123;</span><br><span class="line"></span><br><span class="line">System.out.println(scan.next());</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      scan.close();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java-IO操作</title>
    <url>/2020/03/03/java/Java-JDBC%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5/</url>
    <content><![CDATA[<p>jdbc操作数据库</p>
<span id="more"></span>



<p>步骤<br>    向容器之中进行数据库驱动的加载：Class.forName(数据库驱动程序);<br>    通过DriverManager取得一个连接对象：DriverManager.getConncetion();<br>    通过连接对象创建所有的数据库操作对象，并进行数据库的更新查询；<br>    数据库属于资源操作资源操作的结束必须关闭colse()；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//连接数据库</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServer</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBDRIVER = <span class="string">&quot;oracle.jdbc.dirver.OracleDriver&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBURL = <span class="string">&quot;jdbc:oracle:thin:@loaclhost:1521:mldn&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBUSER = <span class="string">&quot;scott&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBPASSWORD = <span class="string">&quot;tiger&quot;</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		Class.forName(DBDRIVER);</span><br><span class="line">		Connection conn = DriverManager.getConnection(DBURL,DBUSER,DBPASSWORD);</span><br><span class="line">		conn.close();	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Statement</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//更新数据库</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServer</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBDRIVER = <span class="string">&quot;oracle.jdbc.dirver.OracleDriver&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBURL = <span class="string">&quot;jdbc:oracle:thin:@loaclhost:1521:mldn&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBUSER = <span class="string">&quot;scott&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBPASSWORD = <span class="string">&quot;tiger&quot;</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		Class.forName(DBDRIVER);</span><br><span class="line">		Connection conn = DriverManager.getConnection(DBURL,DBUSER,DBPASSWORD);</span><br><span class="line">		Statement stmt = conn.createStatement();</span><br><span class="line">		String sql=<span class="string">&quot; INSERT　INTO MAMBER(mid,name,age,birthday,note) VALUES &quot;</span></span><br><span class="line">				+<span class="string">&quot; mysql.nextval,&#x27;张三&#x27;,10，SYSDATE,&#x27;人&#x27;  &quot;</span>;</span><br><span class="line">		<span class="keyword">int</span> len = stmt.executeUpdate(sql);</span><br><span class="line">		System.out.println(<span class="string">&quot;数据库更新行数:&quot;</span>+len);</span><br><span class="line">		stmt.close();</span><br><span class="line">		conn.close();	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//数据库查询</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServer</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBDRIVER = <span class="string">&quot;oracle.jdbc.dirver.OracleDriver&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBURL = <span class="string">&quot;jdbc:oracle:thin:@loaclhost:1521:mldn&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBUSER = <span class="string">&quot;scott&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBPASSWORD = <span class="string">&quot;tiger&quot;</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		Class.forName(DBDRIVER);</span><br><span class="line">		Connection conn = DriverManager.getConnection(DBURL,DBUSER,DBPASSWORD);</span><br><span class="line">		Statement stmt = conn.createStatement();</span><br><span class="line">		String sql=<span class="string">&quot; SELECT mid,nsme,age,birthday,note FROM member &quot;</span>;</span><br><span class="line">		ResultSet rs = stmt.executeQuery(sql);</span><br><span class="line">		<span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">			<span class="keyword">int</span> mid = rs.getInt(<span class="string">&quot;mid&quot;</span>);</span><br><span class="line">			String name =rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">			<span class="keyword">int</span> age = rs.getInt(<span class="number">3</span>);</span><br><span class="line">			Date birthday = rs.getDate(<span class="number">4</span>);</span><br><span class="line">			String note = rs.getString(<span class="number">5</span>);</span><br><span class="line">			System.out.println(mid+<span class="string">&quot;、&quot;</span>+name+<span class="string">&quot;、&quot;</span>+age+<span class="string">&quot;、&quot;</span>+birthday+<span class="string">&quot;、&quot;</span>+note);</span><br><span class="line">		&#125;</span><br><span class="line">		rs.close();</span><br><span class="line">		stmt.close();</span><br><span class="line">		conn.close();	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>PreparedStatement：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//更新数据库</span><br><span class="line">public class HelloServer &#123;</span><br><span class="line">	public static final String DBDRIVER = &quot;oracle.jdbc.dirver.OracleDriver&quot;;</span><br><span class="line">	public static final String DBURL = &quot;jdbc:oracle:thin:@loaclhost:1521:mldn&quot;;</span><br><span class="line">	public static final String DBUSER = &quot;scott&quot;;</span><br><span class="line">	public static final String DBPASSWORD = &quot;tiger&quot;;</span><br><span class="line">	public static void main(String[] args) throws Exception &#123;</span><br><span class="line">		String name = &quot;Mr&#x27;Smith&quot;;</span><br><span class="line">		int age = 18;</span><br><span class="line">		Date birthday =new Date();</span><br><span class="line">		String note = &quot;是个人&quot;;</span><br><span class="line">		Class.forName(DBDRIVER);</span><br><span class="line">		Connection conn = DriverManager.getConnection(DBURL,DBUSER,DBPASSWORD);</span><br><span class="line">		String sql=&quot;  INSERT　INTO MAMBER(mid,name,age,birthday,note) VALUES &quot;</span><br><span class="line">				+&quot; (myseq.nextval,?,?,?,?)&quot;;</span><br><span class="line">		PreparedStatement pstmt =conn.prepareStatement(sql);</span><br><span class="line">		pstmt.setString(1,name);</span><br><span class="line">		pstmt.setInt(2, age);</span><br><span class="line">		pstmt.setDate(3, new java.sql.Date(birthday.getTime()));</span><br><span class="line">		pstmt.setString(4, note);</span><br><span class="line">		System.out.println(&quot;数据库更新操作:&quot;+pstmt.executeQuery());</span><br><span class="line">		pstmt.close();</span><br><span class="line">		conn.close();	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//查询所有数据</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServer</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBDRIVER = <span class="string">&quot;oracle.jdbc.dirver.OracleDriver&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBURL = <span class="string">&quot;jdbc:oracle:thin:@loaclhost:1521:mldn&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBUSER = <span class="string">&quot;scott&quot;</span>;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DBPASSWORD = <span class="string">&quot;tiger&quot;</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		Class.forName(DBDRIVER);</span><br><span class="line">		Connection conn = DriverManager.getConnection(DBURL,DBUSER,DBPASSWORD);</span><br><span class="line">		String sql=<span class="string">&quot;  SELECT mid,name,age,birthday,note FROM member &quot;</span>;</span><br><span class="line">		PreparedStatement pstmt =conn.prepareStatement(sql);</span><br><span class="line">		ResultSet rs = pstmt.executeQuery();</span><br><span class="line">		<span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">			<span class="keyword">int</span> mid = rs.getInt(<span class="string">&quot;mid&quot;</span>);</span><br><span class="line">			String name =rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">			<span class="keyword">int</span> age = rs.getInt(<span class="number">3</span>);</span><br><span class="line">			Date birthday = rs.getDate(<span class="number">4</span>);</span><br><span class="line">			String note = rs.getString(<span class="number">5</span>);</span><br><span class="line">			System.out.println(mid+<span class="string">&quot;、&quot;</span>+name+<span class="string">&quot;、&quot;</span>+age+<span class="string">&quot;、&quot;</span>+birthday+<span class="string">&quot;、&quot;</span>+note);</span><br><span class="line">		&#125;</span><br><span class="line">		rs.close();</span><br><span class="line">		pstmt.close();</span><br><span class="line">		conn.close();	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>jdbc</tag>
      </tags>
  </entry>
  <entry>
    <title>Shiro</title>
    <url>/2021/01/01/java/Shiro/</url>
    <content><![CDATA[<p>​    Apache Shiro 是一个强大易用的 Java 安全框架，提供了认证、授权、加密和会话管理等功能，对于任何一个应用程序，Shiro 都可以提供全面的安全管理服务。并且相对于其他安全框架，Shiro 要简单的多。本教程只介绍基本的 Shiro 使用，不会过多分析源码等，重在使用。</p>
<span id="more"></span>

<h1 id="认识Shiro"><a href="#认识Shiro" class="headerlink" title="认识Shiro"></a>认识Shiro</h1><h2 id="什么是Shiro"><a href="#什么是Shiro" class="headerlink" title="什么是Shiro"></a>什么是Shiro</h2><p>​    Apache Shiro 是一个强大易用的 Java 安全框架，提供了认证、授权、加密和会话管理等功能，对于任何一个应用程序，Shiro 都可以提供全面的安全管理服务。并且相对于其他安全框架，Shiro 要简单的多。本教程只介绍基本的 Shiro 使用，不会过多分析源码等，重在使用。</p>
<h2 id="为什么要学习Shiro"><a href="#为什么要学习Shiro" class="headerlink" title="为什么要学习Shiro"></a>为什么要学习Shiro</h2><p>​    在java的世界中，安全管理框架有 spring security 和 shiro ，spring security基于spring，而且比较复杂，学习曲线比较高。Shiro比较简单，既可以在java se中使用，也可以在java se中使用，并可以在分布式集群环境下也可以使用。</p>
<p>​    难点在于名词太多。</p>
<h2 id="Shiro结构体系"><a href="#Shiro结构体系" class="headerlink" title="Shiro结构体系"></a>Shiro结构体系</h2><p>​    <img src="C:\Users\王增明\AppData\Roaming\Typora\typora-user-images\1569459223098.png" alt="Shiro"></p>
<p><strong>Authentication</strong>：身份认证 / 登录，验证用户是否合法；</p>
<p><strong>Authorization</strong>：授权，即权限验证，验证某个已认证的用户是否拥有某个权限；即判断用户是否能做事情，常见的如：验证某个用户是否拥有某个角色。或者细粒度的验证某个用户对某个资源是否具有某个权限；</p>
<p><strong>Session Manager</strong>：会话管理，即用户登录后就是一次会话，在没有退出之前，它的所有信息都在会话中；会话可以是普通 JavaSE 环境的，也可以是如 Web 环境的；</p>
<p><strong>Cryptography</strong>：加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储；</p>
<p><strong>Web Support</strong>：Web 支持，可以非常容易的集成到 Web 环境；</p>
<p><strong>Caching</strong>：缓存，比如用户登录后，其用户信息、拥有的角色 / 权限不必每次去查，这样可以提高效率；</p>
<p><strong>Concurrency</strong>：shiro 支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去；</p>
<p><strong>Testing</strong>：提供测试支持；</p>
<p><strong>Run As</strong>：允许一个用户假装为另一个用户（如果他们允许）的身份进行访问；</p>
<p><strong>Remember Me</strong>：记住我，这个是非常常见的功能，即一次登录后，下次再来的话不用登录了。</p>
<h2 id="Shrio架构"><a href="#Shrio架构" class="headerlink" title="Shrio架构"></a>Shrio架构</h2><h3 id="外部来看"><a href="#外部来看" class="headerlink" title="外部来看"></a>外部来看</h3><p><img src="C:\Users\王增明\AppData\Roaming\Typora\typora-user-images\1569461311305.png" alt="1569461311305"></p>
<p><strong>Subject</strong>：主体，代表了当前 “用户”，这个用户不一定是一个具体的人，与当前应用交互的任何东西都是 Subject，如网络爬虫，机器人等；即一个抽象概念；所有 Subject 都绑定到 SecurityManager，与 Subject 的所有交互都会委托给 SecurityManager；可以把 Subject 认为是一个门面；SecurityManager 才是实际的执行者；</p>
<p><strong>SecurityManager</strong>：安全管理器；即所有与安全有关的操作都会与 SecurityManager 交互；且它管理着所有 Subject；可以看出它是 Shiro 的核心，它负责与后边介绍的其他组件进行交互，如果学习过 SpringMVC，你可以把它看成 DispatcherServlet 前端控制器；</p>
<p><strong>Realm</strong>：域，Shiro 从从 Realm 获取安全数据（如用户、角色、权限），就是说 SecurityManager 要验证用户身份，那么它需要从 Realm 获取相应的用户进行比较以确定用户身份是否合法；也需要从 Realm 得到用户相应的角色 / 权限进行验证用户是否能进行操作；可以把 Realm 看成 DataSource，即安全数据源。</p>
<p>也就是说对于我们而言，最简单的一个 Shiro 应用：</p>
<ol>
<li> 应用代码通过 Subject 来进行认证和授权，而 Subject 又委托给 SecurityManager；</li>
<li> 我们需要给 Shiro 的 SecurityManager 注入 Realm，从而让 SecurityManager 能得到合法的用户及其权限进行判断。</li>
</ol>
<h3 id="内部来看"><a href="#内部来看" class="headerlink" title="内部来看"></a>内部来看</h3><p><img src="C:\Users\王增明\AppData\Roaming\Typora\typora-user-images\1569461185882.png" alt="1569461185882"></p>
<p><strong>Subject</strong>：主体（用户，第三方程序等），用于花去主体信息—&gt;princials  和 cred entials；</p>
<p><strong>SecurityManager</strong>：安全管理器，是Shiro的核心，由其协调管理Shiro各个组件之间的工作。 如它管理着所有 Subject、且负责进行认证和授权、及会话、缓存的管理。相当于 SpringMVC 中的 DispatcherServlet 或者 Struts2 中的 FilterDispatcher。</p>
<p><strong>Authenticator</strong>：认证器，负责验证用户身份，这是一个扩展点，如果用户觉得 Shiro 默认的不好，可以自定义实现；其需要认证策略（Authentication Strategy），即什么情况下算用户认证通过了；</p>
<p><strong>Authrizer</strong>：授权器，或者访问控制器，负责为合法的用户指定其权限，控制用户可以访问哪些资源。</p>
<p><strong>Realm</strong>：域，在Shiro中可以有 1 个或多个 Realm。用户通过Shiro来完成相关的安全工作，Shiro是不会去维护数据信息的，在Shiro工作的过程中，数据的查询和获取工作是realm通过从不同的数据源来获取的，Realm可以获取数据库信息，文本信息等。注意：Shiro 不知道你的用户 / 权限存储在哪及以何种格式存储；所以我们一般在应用中都需要实现自己的 Realm；</p>
<p><strong>SessionManager</strong>：（session管理器）如果写过 Servlet 就应该知道 Session 的概念，Session 呢需要有人去管理它的生命周期，这个组件就是 SessionManager；而 Shiro 并不仅仅可以用在 Web 环境，也可以用在如普通的 JavaSE 环境、EJB 等环境；所有呢，Shiro 就抽象了一个自己的 Session 来管理主体与应用之间交互的数据；这样的话，比如我们在 Web 环境用，刚开始是一台 Web 服务器；接着又上了台 EJB 服务器；这时想把两台服务器的会话数据放到一个地方，这个时候就可以实现自己的分布式会话（如把数据放到 Memcached 服务器）；</p>
<p><strong>SessionDAO</strong>：DAO 大家都用过，数据访问对象，用于会话的 CRUD，比如我们想把 Session 保存到数据库，那么可以实现自己的 SessionDAO，通过如 JDBC 写到数据库；比如想把 Session 放到 Memcached 中，可以实现自己的 Memcached SessionDAO；另外 SessionDAO 中可以使用 Cache 进行缓存，以提高性能；</p>
<p><strong>CacheManager</strong>：缓存控制器，来管理如用户、角色、权限等的缓存的；因为这些数据基本上很少去改变，放到缓存中后可以提高访问的性能</p>
<p><strong>Cryptography</strong>：密码模块，Shiro 提高了一些常见的加密组件用于如密码加密 / 解密的。</p>
<h1 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h1><p>​    （Authenticator）即在应用中谁能证明他就是他本人。一般提供如他们的身份 ID 一些标识信息来表明他就是他本人，如提供身份证，用户名 / 密码来证明。</p>
<p>在 shiro 中，用户需要提供 principals （身份）和 credentials（证明）给 shiro，从而应用能验证用户身份：</p>
<p><strong>principals</strong>：身份，即主体的标识属性，可以是任何东西，如用户名、邮箱等，唯一即可。一个主体可以有多个 principals，但只有一个 Primary principals，一般是用户名 / 密码 / 手机号。</p>
<p><strong>credentials</strong>：证明 / 凭证，即只有主体知道的安全值，如密码 / 数字证书等。</p>
<p>最常见的 principals 和 credentials 组合就是用户名 / 密码了。接下来先进行一个基本的身份认证。 </p>
<p>另外两个相关的概念是之前提到的 <strong>Subject</strong> 及 <strong>Realm</strong>，分别是主体及验证主体的数据源。</p>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p><img src="C:\Users\王增明\AppData\Roaming\Typora\typora-user-images\1569466712747.png" alt="1569466712747"></p>
<p>流程如下：</p>
<ol>
<li>首先调用 Subject.login(token) 进行登录，其会自动委托给 Security Manager，调用之前必须通过 SecurityUtils.setSecurityManager() 设置；</li>
<li>SecurityManager 负责真正的身份验证逻辑；它会委托给 Authenticator 进行身份验证；</li>
<li>Authenticator 才是真正的身份验证者，Shiro API 中核心的身份认证入口点，此处可以自定义插入自己的实现；</li>
<li>Authenticator 可能会委托给相应的 AuthenticationStrategy 进行多 Realm 身份验证，默认 ModularRealmAuthenticator 会调用 AuthenticationStrategy 进行多 Realm 身份验证；</li>
<li>Authenticator 会把相应的 token 传入 Realm，从 Realm 获取身份验证信息，如果没有返回 / 抛出异常表示身份验证失败了。此处可以配置多个 Realm，将按照相应的顺序及策略进行访问。</li>
</ol>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ol>
<li><p>使用 Maven 构建,添加 junit、common-logging 及 shiro-core 依赖即可。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>首先准备一些用户身份 / 凭据（shiro.ini），创建shiro.ini文件</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[users]</span></span><br><span class="line">   <span class="attr">zhang</span>=<span class="number">123</span></span><br><span class="line"><span class="attr">wang</span>=<span class="number">123</span></span><br></pre></td></tr></table></figure></li>
<li><p>测试用例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testHelloworld</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="comment">//1、获取SecurityManager工厂，此处使用Ini配置文件初始化SecurityManager  </span></span><br><span class="line">       Factory&lt;org.apache.shiro.mgt.SecurityManager&gt; factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">&quot;classpath:shiro.ini&quot;</span>);</span><br><span class="line">       <span class="comment">//2、得到SecurityManager实例 并绑定给SecurityUtils   </span></span><br><span class="line">       org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance();</span><br><span class="line">    SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">       <span class="comment">//3、得到Subject及创建用户名/密码身份验证Token（即用户身份/凭证）</span></span><br><span class="line">    Subject subject = SecurityUtils.getSubject();</span><br><span class="line">       UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//4、登录，即身份验证</span></span><br><span class="line">           subject.login(token);</span><br><span class="line">           <span class="comment">//5. 通过subect.isAuthenticated(),判断用户是否通过验证</span></span><br><span class="line">           <span class="keyword">if</span>(subject.isAuthenticated())&#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;用户通过验证，登陆成功&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">           <span class="comment">//5、身份验证失败</span></span><br><span class="line">           System.out.println(<span class="string">&quot;用户验证失败，登陆失败&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       subject.logout();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li><p>首先通过 new IniSecurityManagerFactory 并指定一个 ini 配置文件来创建一个 SecurityManager 工厂；</p>
</li>
<li><p>接着获取 SecurityManager 并绑定到 SecurityUtils，这是一个全局设置，设置一次即可；</p>
</li>
<li><p>通过 SecurityUtils 得到 Subject，其会自动绑定到当前线程；如果在 web 环境在请求结束时需要解除绑定；然后获取身份验证的 Token，如用户名 / 密码；</p>
</li>
<li><p>调用 subject.login 方法进行登录，其会自动委托给 SecurityManager.login 方法进行登录；</p>
</li>
<li><p>用subject.isAuthenticated()来判断是否认证成功。</p>
</li>
<li><p>如果身份验证失败请捕获 AuthenticationException 或其子类，常见的如：<br>DisabledAccountException（禁用的帐号）、<br>LockedAccountException（锁定的帐号）、<br>UnknownAccountException（错误的帐号）、<br>ExcessiveAttemptsException（登录失败次数过多）、<br>IncorrectCredentialsException （错误的凭证）、<br>ExpiredCredentialsException（过期的凭证）等，<br>具体请查看其继承关系；对于页面的错误消息展示，应提示给用户的异常为模糊的，防止用户知道详细异常，有助于安全。</p>
</li>
<li><p>最后可以调用 subject.logout 退出，其会自动委托给 SecurityManager.logout 方法退出。</p>
</li>
</ul>
<h1 id="Realm"><a href="#Realm" class="headerlink" title="Realm"></a>Realm</h1><pre><code> ![1569482028101](C:\Users\王增明\AppData\Roaming\Typora\typora-user-images\1569482028101.png)
</code></pre>
<p>​    使用Shiro框架来完成认证工作，默认使用的是iniRealm，如果需要使用其他Realm。需要进行相关配置。</p>
<h2 id="ini配置文件"><a href="#ini配置文件" class="headerlink" title="ini配置文件"></a>ini配置文件</h2><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[main]</span></span><br><span class="line"><span class="comment">#提供了对根对象securityManager及其依赖的配置</span></span><br><span class="line"><span class="attr">securityManager</span>=org.apache.shiro.mgt.DefaultSecurityManager</span><br><span class="line">…………</span><br><span class="line"><span class="attr">securityManager.realms</span>=<span class="variable">$jdbcRealm</span></span><br><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="comment">#提供了对用户/密码及其角色的配置，用户名=密码，角色1，角色2</span></span><br><span class="line"><span class="attr">username</span>=password,role1,role2</span><br><span class="line"><span class="section">[roles]</span></span><br><span class="line"><span class="comment">#提供了角色及权限之间关系的配置，角色=权限1，权限2</span></span><br><span class="line"><span class="attr">role1</span>=permission1,permission2</span><br><span class="line"><span class="section">[urls]</span></span><br><span class="line"><span class="comment">#用于web，提供了对web url拦截相关的配置，url=拦截器[参数]，拦截器</span></span><br><span class="line">/<span class="attr">index.html</span> = anon</span><br><span class="line">/admin/** = authc, roles<span class="section">[admin]</span>, perms<span class="section">[&quot;permission1&quot;]</span></span><br></pre></td></tr></table></figure>

<h2 id="JDBC-Realm"><a href="#JDBC-Realm" class="headerlink" title="JDBC Realm"></a>JDBC Realm</h2><p>使用JdbcRealm来完成身份认证。通过观察源码可知，要实现JdbcRealm</p>
<ol>
<li>需要为Jdbc设置dataSource</li>
<li>在指定的DataSource所对应的数据库中应用表user，该表中有username，password，password_salt等字段</li>
</ol>
<h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol>
<li><p>新建数据库表</p>
</li>
<li><p>配置ini文件</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[main]</span></span><br><span class="line"><span class="attr">jdbcRealm</span></span><br><span class="line">=org.apache.shiro.realm.jdbc.JdbcRealm</span><br><span class="line"><span class="attr">dataSource</span>=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line"></span><br><span class="line"><span class="attr">dataSource.driverClassName</span>=com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">dataSource.url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/shiro</span><br><span class="line"><span class="attr">dataSource.username</span>=root</span><br><span class="line"><span class="attr">dataSource.password</span>=<span class="number">123</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jdbcRealm.dataSource</span>=<span class="variable">$dataSource</span></span><br><span class="line"><span class="attr">securityManager.realms</span>=<span class="variable">$jdbcRealm</span>&amp;nbsp<span class="comment">;</span></span><br></pre></td></tr></table></figure></li>
<li><p> 编写测试代码</p>
</li>
</ol>
   <figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcRealmDemo</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mian</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">   </span><br><span class="line">    	Factory&lt;org.apache.shiro.mgt.SecurityManager&gt; factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">&quot;classpath:shiro.ini&quot;</span>);</span><br><span class="line">    	org.apache.shiro.mgt.SecurityManager securityManager = factory.getInstance();    </span><br><span class="line">        SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">    	Subject subject = SecurityUtils.getSubject();</span><br><span class="line">    	UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;123&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        subject.login(token);</span><br><span class="line">        <span class="keyword">if</span>(subject.isAuthenticated())&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;用户通过验证，登陆成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;用户验证失败，登陆失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    subject.logout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure>
<h2 id="认证策略"><a href="#认证策略" class="headerlink" title="认证策略"></a>认证策略</h2><p>Authenticator 及 AuthenticationStrategy</p>
<p>Authenticator 的职责是验证用户帐号，是 Shiro API 中身份验证核心的入口点</p>
<p>如果验证成功，将返回 AuthenticationInfo 验证信息；此信息中包含了身份及凭证；如果验证失败将抛出相应的 AuthenticationException 实现。</p>
<p>SecurityManager 接口继承了 Authenticator，另外还有一个 ModularRealmAuthenticator 实现，其委托给多个 Realm 进行验证，验证规则通过 AuthenticationStrategy 接口指定，默认提供的实现：</p>
<ul>
<li><p><strong>FirstSuccessfulStrategy</strong>：只要有一个 Realm 验证成功即可，只返回第一个 Realm 身份验证成功的认证信息，其他的忽略；</p>
</li>
<li><p><strong>AtLeastOneSuccessfulStrategy</strong>：只要有一个 Realm 验证成功即可，和 FirstSuccessfulStrategy 不同，返回所有 Realm 身份验证成功的认证信息；</p>
</li>
<li><p><strong>AllSuccessfulStrategy</strong>：所有 Realm 验证成功才算成功，且返回所有 Realm 身份验证成功的认证信息，如果有一个失败就失败了。</p>
</li>
</ul>
<p>ModularRealmAuthenticator 默认使用 AtLeastOneSuccessfulStrategy 策略。</p>
<h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><ol>
<li><p>配置ini文件，配置认证器</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[main]</span></span><br><span class="line"><span class="comment">#指定securityManager的authenticator实现</span></span><br><span class="line"><span class="attr">authenticator</span>=org.apache.shiro.authc.pam.ModularRealmAuthenticator</span><br><span class="line"><span class="attr">securityManager.authenticator</span>=<span class="variable">$authenticator</span></span><br><span class="line"><span class="comment">#指定securityManager.authenticator的authenticationStrategy</span></span><br><span class="line"><span class="attr">allSuccessfulStrategy</span>=org.apache.shiro.authc.pam.AllSuccessfulStrategy</span><br><span class="line"><span class="attr">securityManager.authenticator.authenticationStrategy</span>=<span class="variable">$allSuccessfulStrategy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">myRealm1</span>=com.github.zhangkaitao.shiro.chapter2.realm.MyRealm1</span><br><span class="line"><span class="attr">myRealm2</span>=com.github.zhangkaitao.shiro.chapter2.realm.MyRealm2</span><br><span class="line"><span class="attr">myRealm3</span>=com.github.zhangkaitao.shiro.chapter2.realm.MyRealm3</span><br><span class="line"><span class="attr">securityManager.realms</span>=<span class="variable">$myRealm1</span>,<span class="variable">$myRealm3</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="自定义Realm"><a href="#自定义Realm" class="headerlink" title="自定义Realm"></a>自定义Realm</h2><p>   ​    Shiro 默认使用自带的IniRealm，IniRealm 从ini 配置文件中读取用户的信息，大部分情<br>   况下需要从系统的数据库中读取用户信息，所以需要自定义realm。</p>
<p>   ​    Realm接口中，最基础的是Realm 接口，CachingRealm 负责缓存处理，AuthenticationRealm 负责认证，AuthorizingRealm 负责授权，通常自定义的realm 继承AuthorizingRealm。</p>
<h3 id="实现步骤-1"><a href="#实现步骤-1" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol>
<li>编写Realm实现类，继承AuthorizingRealm<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;UserRealm&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//用于认证</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">		<span class="comment">//从token 中获取身份信息</span></span><br><span class="line">		String username = (String)token.getPrincipal();</span><br><span class="line">		<span class="comment">//根据用户名到数据库中取出用户信息如果查询不到返回null</span></span><br><span class="line">		String password = <span class="string">&quot;1111&quot;</span>;<span class="comment">//假如从数据库中获取密码为1111</span></span><br><span class="line">		<span class="comment">//返回认证信息</span></span><br><span class="line">		SimpleAuthenticationInfo simpleAuthenticationInfo = <span class="keyword">new</span> SimpleAuthenticationInfo(username, password, <span class="keyword">this</span>.getName());</span><br><span class="line">		<span class="keyword">return</span> simpleAuthenticationInfo;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//用于授权</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">( PrincipalCollection principals)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li>需要在shiro.ini 配置realm 注入到securityManager 中。<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[main]</span></span><br><span class="line"><span class="comment">#自定义realm</span></span><br><span class="line"><span class="attr">userRealm</span>=cn.siggy.realm.UserRealm</span><br><span class="line"><span class="comment">#将realm 设置到securityManager</span></span><br><span class="line"><span class="attr">securityManager.realms</span>=<span class="variable">$userRealm</span></span><br></pre></td></tr></table></figure></li>
</ol>
<ol start="3">
<li>测试</li>
</ol>
<h1 id="散列算法"><a href="#散列算法" class="headerlink" title="散列算法"></a>散列算法</h1><p>（加密）如MD5、SHA等 </p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用md5加密算法</span></span><br><span class="line">Md5Hash md5 = <span class="keyword">new</span> Md5Hash(<span class="string">&quot;11111&quot;</span>);</span><br><span class="line">System.out.println(md5);</span><br><span class="line"><span class="comment">//md5加密加盐</span></span><br><span class="line">md5 = <span class="keyword">new</span> Md5Hash(<span class="string">&quot;11111&quot;</span>,<span class="string">&quot;wzm&quot;</span>);</span><br><span class="line">System.out.println(md5);</span><br><span class="line"><span class="comment">//迭代加密--迭代3次</span></span><br><span class="line">md5 = <span class="keyword">new</span> Md5Hash(<span class="string">&quot;11111&quot;</span>,<span class="string">&quot;wzm&quot;</span>,<span class="number">3</span>);</span><br><span class="line">System.out.println(md5);</span><br><span class="line"></span><br><span class="line"><span class="comment">//散列</span></span><br><span class="line">simpleHash hash = <span class="keyword">new</span> SimpleHash(<span class="string">&quot;md5&quot;</span>,<span class="string">&quot;1111&quot;</span>,<span class="string">&quot;wzm&quot;</span>,<span class="number">2</span>);</span><br><span class="line">System.out.println(hash.toString());</span><br></pre></td></tr></table></figure>

<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>在自定义Realm中使用散列算法</p>
<ol>
<li><p>编写realm实现类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">&quot;UserRealm&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//用于认证</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken token)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">		<span class="comment">//从token 中获取身份信息</span></span><br><span class="line">		String username = (String)token.getPrincipal();</span><br><span class="line">		<span class="comment">//根据用户名到数据库中取出用户信息如果查询不到返回null</span></span><br><span class="line">		String password = <span class="string">&quot;1111&quot;</span>;<span class="comment">//假如从数据库中获取密码为1111 和 盐值 wzm</span></span><br><span class="line">        String salt=<span class="string">&quot;wzm&quot;</span>;</span><br><span class="line">		<span class="comment">//返回认证信息</span></span><br><span class="line">		SimpleAuthenticationInfo simpleAuthenticationInfo = <span class="keyword">new</span> SimpleAuthenticationInfo(username,password,ByteSource.Util.bytes(salt),<span class="keyword">this</span>.getName());</span><br><span class="line">		<span class="keyword">return</span> simpleAuthenticationInfo;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//用于授权</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">( PrincipalCollection principals)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></li>
<li><p>配置Realm配置文件ini</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[main]</span></span><br><span class="line"><span class="comment">#定义凭证匹配器</span></span><br><span class="line"><span class="attr">credentialsMatcher</span>=org.apache.shiro.authc.credential.HashedCredentialsMatcher</span><br><span class="line"><span class="comment">#散列算法</span></span><br><span class="line"><span class="attr">credentialsMatcher.hashAlgorithmName</span>=md5</span><br><span class="line"><span class="comment">#散列次数</span></span><br><span class="line"><span class="attr">credentialsMatcher.hashIterations</span>=<span class="number">2</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h1 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h1><p>授权，也叫访问控制，即在应用中控制谁能访问哪些资源（如访问页面/编辑数据/页面操作等）。在授权中需了解的几个关键对象：主体（Subject）、资源（Resource）、权限（Permission）、角色（Role）。</p>
<p><strong>主体</strong><br>主体，即访问应用的用户，在 Shiro 中使用 Subject 代表该用户。用户只有授权后才允许访问相应的资源。</p>
<p><strong>资源</strong><br>在应用中用户可以访问的任何东西，比如访问 JSP 页面、查看/编辑某些数据、访问某个业务方法、打印文本等等都是资源。用户只要授权后才能访问。</p>
<p><strong>权限</strong><br>安全策略中的原子授权单位，通过权限我们可以表示在应用中用户有没有操作某个资源的权力。即权限表示在应用中用户能不能访问某个资源，如： 访问用户列表页面<br>查看/新增/修改/删除用户数据（即很多时候都是 CRUD（增查改删）式权限控制）<br>打印文档等等。。。</p>
<p>如上可以看出，权限代表了用户有没有操作某个资源的权利，即反映在某个资源上的操作允不允许，不反映谁去执行这个操作。所以后续还需要把权限赋予给用户，即定义哪个用户允许在某个资源上做什么操作（权限），Shiro 不会去做这件事情，而是由实现人员提供。</p>
<p>Shiro 支持粗粒度权限（如用户模块的所有权限）和细粒度权限（操作某个用户的权限，即实例级别的），后续部分介绍。</p>
<p><strong>角色</strong><br>角色代表了操作集合，可以理解为权限的集合，一般情况下我们会赋予用户角色而不是权限，即这样用户可以拥有一组权限，赋予权限时比较方便。典型的如：项目经理、技术总监、CTO、开发工程师等都是角色，不同的角色拥有一组不同的权限。</p>
<p><strong>隐式角色</strong>：<br>即直接通过角色来验证用户有没有操作权限，如在应用中 CTO、技术总监、开发工程师可以使用打印机，假设某天不允许开发工程师使用打印机，此时需要从应用中删除相应代码；再如在应用中 CTO、技术总监可以查看用户、查看权限；突然有一天不允许技术总监查看用户、查看权限了，需要在相关代码中把技术总监角色从判断逻辑中删除掉；即粒度是以角色为单位进行访问控制的，粒度较粗；如果进行修改可能造成多处代码修改。</p>
<p><strong>显示角色</strong>：<br>在程序中通过权限控制谁能访问某个资源，角色聚合一组权限集合；这样假设哪个角色不能访问某个资源，只需要从角色代表的权限集合中移除即可；无须修改多处代码；即粒度是以资源/实例为单位的；粒度较细。</p>
<p>请 google 搜索“RBAC”和“RBAC新解”分别了解“基于角色的访问控制”“基于资源的访问控制(Resource-Based Access Control)”。</p>
<h2 id="表示规则"><a href="#表示规则" class="headerlink" title="表示规则"></a>表示规则</h2><p>权限表示规则—&gt;   资源 ：操作 ：实例    </p>
<p>可以使用通配符表示，如：</p>
<p>​    user:add  表示对user有添加的权限</p>
<p>​    user:*   表示对user具有所有操作权限    </p>
<p>​    user:delete:100 表示对user表示为100的实例具有删除权限 </p>
<h2 id="授权方式"><a href="#授权方式" class="headerlink" title="授权方式"></a>授权方式</h2><p>Shiro 支持三种方式的授权：</p>
<ul>
<li><p>编程式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Subject subject = SecurityUtils.getSubject();</span><br><span class="line"><span class="keyword">if</span>(subject.hasRole(“admin”)) &#123;</span><br><span class="line">    <span class="comment">//有权限</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//无权限</span></span><br><span class="line">&#125;&amp;nbsp;</span><br></pre></td></tr></table></figure></li>
<li><p>注解式</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequiresRoles(&quot;admin&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//有权限</span></span><br><span class="line">&#125;&amp;nbsp;</span><br></pre></td></tr></table></figure></li>
<li><p>标签</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shiro:hasRole</span> <span class="attr">name</span>=<span class="string">&quot;admin&quot;</span>&gt;</span></span><br><span class="line">&lt;!— 有权限 —&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">shiro:hasRole</span>&gt;</span><span class="symbol">&amp;nbsp;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="授权流程"><a href="#授权流程" class="headerlink" title="授权流程"></a>授权流程</h2><p><img src="C:\Users\王增明\AppData\Roaming\Typora\typora-user-images\1569501506084.png" alt="1569501506084"></p>
<p>流程如下：</p>
<ol>
<li>首先调用 <code>Subject.isPermitted*/hasRole*</code>接口，其会委托给 SecurityManager，而 SecurityManager 接着会委托给 Authorizer；</li>
<li>Authorizer 是真正的授权者，如果我们调用如 isPermitted(“user:view”)，其首先会通过 PermissionResolver 把字符串转换成相应的 Permission 实例；</li>
<li>在进行授权之前，其会调用相应的 Realm 获取 Subject 相应的角色/权限用于匹配传入的角色/权限；</li>
<li>Authorizer 会判断 Realm 的角色/权限是否和传入的匹配，如果有多个 Realm，会委托给 ModularRealmAuthorizer 进行循环判断，如果匹配如 <code>isPermitted*/hasRole*</code> 会返回 true，否则返回 false 表示授权失败。</li>
</ol>
<p>ModularRealmAuthorizer 进行多 Realm 匹配流程：</p>
<ul>
<li>首先检查相应的 Realm 是否实现了实现了 Authorizer；</li>
<li>如果实现了 Authorizer，那么接着调用其相应的 <code>isPermitted*/hasRole*</code> 接口进行匹配；</li>
<li>如果有一个 Realm 匹配那么将返回 true，否则返回 false。</li>
</ul>
<p>如果 Realm 进行授权的话，应该继承 AuthorizingRealm，其流程是：</p>
<ul>
<li>如果调用 <code>hasRole*</code>，则直接获取 AuthorizationInfo.getRoles() 与传入的角色比较即可；首先如果调用如 isPermitted(“user:view”)，首先通过 PermissionResolver 将权限字符串转换成相应的 Permission 实例，默认使用 WildcardPermissionResolver，即转换为通配符的 WildcardPermission；</li>
<li>通过 AuthorizationInfo.getObjectPermissions() 得到 Permission 实例集合；通过 AuthorizationInfo.getStringPermissions() 得到字符串集合并通过 PermissionResolver 解析为 Permission 实例；然后获取用户的角色，并通过 RolePermissionResolver 解析角色对应的权限集合（默认没有实现，可以自己提供）；</li>
<li>接着调用 Permission.implies(Permission p) 逐个与传入的权限比较，如果有匹配的则返回 true，否则 false。</li>
</ul>
<h2 id="授权实现"><a href="#授权实现" class="headerlink" title="授权实现"></a>授权实现</h2><ol>
<li><p>配置ini文件</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[users]</span></span><br><span class="line"><span class="attr">zhangsan</span>=<span class="number">1111</span>,role1,role2</span><br><span class="line"><span class="attr">lisi</span>=<span class="number">1111</span>,role1</span><br><span class="line"><span class="section">[roles]</span></span><br><span class="line"><span class="attr">role1</span>=user:create,user:update</span><br><span class="line"><span class="attr">role2</span>=user:*</span><br></pre></td></tr></table></figure></li>
<li><p>实现代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroTest</span> </span>&#123;</span><br><span class="line">	<span class="comment">//用户登录和退出</span></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testPermission</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="comment">// 构建SecurityManager 工厂，IniSecurityManagerFactory 可以从ini 文件中初始化SecurityManager 环境</span></span><br><span class="line">		Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">&quot;classpath:shiro-permission.ini&quot;</span>);</span><br><span class="line">		<span class="comment">//通过工厂获得SecurityManager 实例</span></span><br><span class="line">		SecurityManager securityManager = factory.getInstance();</span><br><span class="line">		<span class="comment">//将securityManager 设置到运行环境中</span></span><br><span class="line">		SecurityUtils.setSecurityManager(securityManager);</span><br><span class="line">		<span class="comment">//获取subject 实例</span></span><br><span class="line">		Subject subject = SecurityUtils.getSubject();</span><br><span class="line">		<span class="comment">//创建用户名,密码身份验证Token</span></span><br><span class="line">		UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">&quot;zhangsan&quot;</span>, <span class="string">&quot;1111&quot;</span>);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">//登录，即身份验证</span></span><br><span class="line">			subject.login(token);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (AuthenticationException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		<span class="comment">//身份认证失败</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 用户认证状态</span></span><br><span class="line">		<span class="keyword">boolean</span> isAuthenticated = subject.isAuthenticated();</span><br><span class="line">		System.out.println(<span class="string">&quot;用户认证状态：&quot;</span> + isAuthenticated);</span><br><span class="line">		<span class="comment">//判断拥有角色：role1</span></span><br><span class="line">		Assert.assertTrue(subject.hasRole(<span class="string">&quot;role1&quot;</span>));</span><br><span class="line">		<span class="comment">//判断拥有角色：role1 and role2</span></span><br><span class="line">		Assert.assertTrue(subject.hasAllRoles(Arrays.asList(<span class="string">&quot;role1&quot;</span>, <span class="string">&quot;role2&quot;</span>)));</span><br><span class="line">		<span class="comment">//判断拥有角色：role1 and role2 and !role3</span></span><br><span class="line">		<span class="keyword">boolean</span>[] result = subject.hasRoles(Arrays.asList(<span class="string">&quot;role1&quot;</span>,<span class="string">&quot;role2&quot;</span>, <span class="string">&quot;role3&quot;</span>));</span><br><span class="line">		Assert.assertEquals(<span class="keyword">true</span>, result[<span class="number">0</span>]);</span><br><span class="line">		Assert.assertEquals(<span class="keyword">true</span>, result[<span class="number">1</span>]);</span><br><span class="line">		Assert.assertEquals(<span class="keyword">false</span>, result[<span class="number">2</span>]);	</span><br><span class="line">		<span class="comment">//判断拥有权限：user:create</span></span><br><span class="line">		Assert.assertTrue(subject.isPermitted(<span class="string">&quot;user:create&quot;</span>));</span><br><span class="line">		<span class="comment">//判断拥有权限：user:update and user:delete</span></span><br><span class="line">		Assert.assertTrue(subject.isPermittedAll(<span class="string">&quot;user:update&quot;</span>,<span class="string">&quot;user:delete&quot;</span>));</span><br><span class="line">		<span class="comment">//判断没有权限：user:view	</span></span><br><span class="line">		Assert.assertFalse(subject.isPermitted(<span class="string">&quot;user:view&quot;</span>));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>shiro</tag>
      </tags>
  </entry>
  <entry>
    <title>thymeleaf 使用</title>
    <url>/2021/01/03/java/thymeleaf%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h2 id="1-标准表达式语法"><a href="#1-标准表达式语法" class="headerlink" title="1. 标准表达式语法"></a>1. 标准表达式语法</h2><h3 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h3><p>Thymeleaf 是一个服务器端 Java 模板引擎，能够处理 HTML、XML、CSS、JAVASCRIPT 等模板文件。Thymeleaf 模板可以直接当作静态原型来使用，它主要目标是为开发者的开发工作流程带来优雅的自然模板，也是 Java 服务器端 HTML5 开发的理想选择。</p>
<span id="more"></span>


<h3 id="1-2-引入"><a href="#1-2-引入" class="headerlink" title="1.2 引入"></a>1.2 引入</h3><p>创建一个 HTML 模板文件：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Index Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>&gt;</span>Welcome to BeiJing!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>通过<code>&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;</code>引入 Thymeleaf 命名空间。<code>th:text</code>用于处理<code>p</code>标签体的文本内容。该模板文件直接在任何浏览器中正确显示，浏览器会自动忽略它们不能理解的属性<code>th:text</code>。但这不是一个真正有效的 HTML5 文档，因为 HTML5 规范是不允许使用<code>th:*</code>这些非标准属性的。我们可以切换到 Thymeleaf 的<code>data-th-*</code>语法，以此来替换<code>th:*</code>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span></span></span><br><span class="line"><span class="tag">	&lt;<span class="attr">head</span>&gt;</span>    </span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>Index Page<span class="tag">&lt;/<span class="name">title</span>&gt;</span>    </span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span>	</span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span>    </span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span> <span class="attr">data-th-text</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>&gt;</span>Welcome to BeiJing!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>HTML5 规范是允许<code>data-*</code>这样自定义的属性的。<code>th:*</code>和<code>data-th-*</code>这两个符号是完全等效且可以互换的。但为了简单直观和代码的紧凑性，本文采用<code>th:*</code>的表示形式。</p>
<h2 id="2-标准表达式语法"><a href="#2-标准表达式语法" class="headerlink" title="2. 标准表达式语法"></a>2. 标准表达式语法</h2><p>Thymeleaf 提供了非常丰富的标准表达式语法，总共有 8 大类：</p>
<ul>
<li>简单表达式</li>
<li>字面值</li>
<li>文本操作</li>
<li>算术运算</li>
<li>布尔运算</li>
<li>比较和相等</li>
<li>条件运算</li>
<li>无操作符</li>
</ul>
<h3 id="2-1-简单表达式"><a href="#2-1-简单表达式" class="headerlink" title="2.1 简单表达式"></a>2.1 简单表达式</h3><table>
<thead>
<tr>
<th align="center">语法</th>
<th align="center">名称</th>
<th align="center">描述</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">${…}</td>
<td align="center">Variable Expressions</td>
<td align="center">变量表达式</td>
<td align="center">取出上下文变量的值</td>
</tr>
<tr>
<td align="center">*{…}</td>
<td align="center">Selection Variable Expressions</td>
<td align="center">选择变量表达式</td>
<td align="center">取出选择的对象的属性值</td>
</tr>
<tr>
<td align="center">#{…}</td>
<td align="center">Message Expressions</td>
<td align="center">消息表达式</td>
<td align="center">使文字消息国际化，I18N</td>
</tr>
<tr>
<td align="center">@{…}</td>
<td align="center">Link URL Expressions</td>
<td align="center">链接表达式</td>
<td align="center">用于表示各种超链接地址</td>
</tr>
<tr>
<td align="center">~{…}</td>
<td align="center">Fragment Expressions</td>
<td align="center">片段表达式</td>
<td align="center">引用一段公共的代码片段</td>
</tr>
</tbody></table>
<h4 id="2-1-1-…"><a href="#2-1-1-…" class="headerlink" title="2.1.1 ${…}"></a>2.1.1 ${…}</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/standard-expression-syntax/variables&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">variables</span><span class="params">(ModelMap model, HttpSession session)</span> </span>&#123;    </span><br><span class="line">    model.put(<span class="string">&quot;now&quot;</span>, <span class="keyword">new</span> Date());    </span><br><span class="line">    model.put(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;Welcome to BeiJing!&quot;</span>);    </span><br><span class="line">    session.setAttribute(<span class="string">&quot;user&quot;</span>, <span class="keyword">new</span> User(<span class="string">&quot;fanlychie&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">24</span>));   </span><br><span class="line">    ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过变量表达式<code>$&#123;&#125;</code>取出上下文环境中的<code>message</code>变量：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Welcome to BeiJing! --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>它相当于：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">ctx.getVariable(&quot;message&quot;);</span><br></pre></td></tr></table></figure>

<h4 id="2-1-2-…"><a href="#2-1-2-…" class="headerlink" title="2.1.2 *{…}"></a>2.1.2 *{…}</h4><p>变量表达式<code>$&#123;&#125;</code>是面向整个上下文的，而选择变量表达式<code>*&#123;&#125;</code>的上下文是父标签（<code>th:object</code>）所选择的对象：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:object</span>=<span class="string">&quot;$&#123;session.user&#125;&quot;</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;sex&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;age&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>它相当于：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;session.user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;session.user.sex&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;session.user.age&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果对象没有被选择，那么，<code>*&#123;&#125;</code>和<code>$&#123;&#125;</code>表达式所达到的效果是完全相同的：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;*&#123;session.user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;session.user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-1-3-…"><a href="#2-1-3-…" class="headerlink" title="2.1.3 #{…}"></a>2.1.3 #{…}</h4><p>消息表达式可用于国际化文字信息。首先我们来了解一下 i18n 资源文件的命名规则：</p>
<ul>
<li>basename.properties</li>
<li>basename_language.properties</li>
<li>basename_language_country.properties</li>
</ul>
<p><code>basename</code>是自定义的资源文件名称，<code>language</code>和<code>country</code>必须是 Java 支持的语言和国家。<code>basename.properties</code>是缺省加载的资源文件，当客户端根据本地语言查找不到相关的资源文件时，则使用该配置文件。</p>
<p>创建文件<code>src/main/resources/messages.properties</code></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">welcome.message</span> = <span class="string">北京欢迎你！</span></span><br></pre></td></tr></table></figure>

<p>创建文件<code>src/main/resources/messages_en_US.properties</code></p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">welcome.message</span> = <span class="string">Welcome to BeiJing!</span></span><br></pre></td></tr></table></figure>

<p>在 IntelliJ IDEA 编辑视图：</p>
<p><code>messages</code>是 Spring Boot 加载资源文件默认采用的名称（<code>basename</code>），如果你所使用的资源文件名称不是以<code>messages</code>命名或所使用的资源文件不是在<code>src/main/resources</code>根目录，你可以通过<code>spring.messages.basename</code>属性来做具体的配置。如，资源文件<code>messages.properties</code>和<code>messages_en_US.properties</code>假设它们所在的目录位置是<code>src/main/resources/i18n</code>。</p>
<p>application.properties 配置示例：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">spring.messages.basename</span>:<span class="string">i18n/messages</span></span><br></pre></td></tr></table></figure>

<p>application.yml 配置示例：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring  messages    basename:</span> <span class="string">i18n/messages</span></span><br></pre></td></tr></table></figure>

<p>静态文本消息示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 北京欢迎你！ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;welcom.message&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>消息表达式<code>#&#123;&#125;</code>是不允许直接处理非静态的文本消息的，但是你可以在资源文件中通过使用占位符<code>&#123;&#125;</code>来处理非静态的文本消息：</p>
<p>messages.properties 配置示例：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">welcome.user.message</span> = <span class="string">&#123;0&#125;, 北京欢迎你！</span></span><br></pre></td></tr></table></figure>

<p>messages_en_US.properties 配置示例：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">welcome.user.message</span> = <span class="string">&#123;0&#125;, Welcome to BeiJing!</span></span><br></pre></td></tr></table></figure>

<p>非静态文本消息，以参数的形式传递变量的值：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- fanlychie, 北京欢迎你！ --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;welcome.user.message($&#123;session.user.name&#125;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-1-4-…"><a href="#2-1-4-…" class="headerlink" title="2.1.4 @{…}"></a>2.1.4 @{…}</h4><p>链接表达式<code>@&#123;&#125;</code>是专门用来处理 URL 链接地址的。</p>
<p>绝对地址示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://fanlychie.github.io --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;@&#123;https://fanlychie.github.io&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>页面相对地址示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- commons/base.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;@&#123;commons/base.html&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>上下文相对地址（相对于当前的服务）示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- /css/mian.css --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;@&#123;/css/mian.css&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>服务器相对地址（相对于部署在同一个服务器中的不同服务）示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- /image/upload --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;@&#123;~/image/upload&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>参数使用示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- /css/mian.css?v=1.0 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;@&#123;/css/mian.css(v=1.0)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /user/order?username=fanlychie --&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;@&#123;/user/order(username=$&#123;session.user.name&#125;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /user/order?username=fanlychie&amp;status=PAIED --&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;@&#123;/user/order(username=$&#123;session.user.name&#125;,status=&#x27;PAIED&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /user/fanlychie/info --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;@&#123;/user/&#123;username&#125;/info(username=$&#123;session.user.name&#125;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-1-5-…"><a href="#2-1-5-…" class="headerlink" title="2.1.5 ~{…}"></a>2.1.5 ~{…}</h4><p>片段表达式<code>~&#123;&#125;</code>可以用来引用一段公共的 HTML 代码片段。</p>
<table>
<thead>
<tr>
<th align="center">语法</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">~{templatename}</td>
<td align="left">引用整个模板文件的代码片段</td>
</tr>
<tr>
<td align="center">~{templatename :: selector}</td>
<td align="left">selector 可以是 th:fragment 指定的名称或其他选择器。 如类选择器、ID选择器等</td>
</tr>
<tr>
<td align="center">~{::selector}</td>
<td align="left">相当于 ~{this :: selector}，表示引用当前模板定义的代码片段</td>
</tr>
</tbody></table>
<p>在 Thymeleaf 模板文件中，你可以使用<code>th:fragment</code>属性来定义一段公共的代码片段，然后你可以通过使用<code>th:insert</code>、<code>th:replace</code>、<code>th:include</code>（Thymeleaf 3.0 开始不再推荐使用，本文也将不再介绍它）属性来将这些公共的代码片段引入到模板文件中来。</p>
<p>src/main/resources/templates/base.html，通过<code>th:fragment</code>属性定义一段公共的代码片段：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;footer&quot;</span> <span class="attr">th:fragment</span>=<span class="string">&quot;footerFragment&quot;</span>&gt;</span><span class="symbol">&amp;copy;</span> 2017 fanlychie<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>src/main/resources/templates/index.html，通过<code>th:insert</code>属性引用一段公共的代码片段：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~&#123;base :: footerFragment&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中，<code>~&#123;&#125;</code>是可选的，我们可以去掉这层的包裹：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;base :: footerFragment&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>若 index.html 与 base.html 不在同级目录，如 templates/commons/base.html：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~&#123;commons/base :: footerFragment&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用<code>th:fragment</code>属性定义代码片段时，你还可以声明一组参数：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:fragment</span>=<span class="string">&quot;crumbs(parent, child)&quot;</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;parent&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;child&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </span><br><span class="line"><span class="comment">&lt;!--&lt;i&gt;用户中心&lt;/i&gt;&lt;i&gt;我的订单&lt;/i&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;::crumbs(&#x27;用户中心&#x27;, &#x27;我的订单&#x27;)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>此外，我们还可以通过类选择器、ID选择器等来引用公共的代码片段：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~&#123;base :: #footer&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>除了<code>th:insert</code>属性<code>th:replace</code>也可以用来引用公共的代码片段。不同的是，<code>th:insert</code>是直接将代码片段插入到标签体内，而<code>th:replace</code>则是用代码片段直接替换标签体内容。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--&lt;div&gt;    &lt;div id=&quot;footer&quot;&gt;© 2017 fanlychie&lt;/div&gt;&lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~&#123;base :: footerFragment&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </span><br><span class="line"><span class="comment">&lt;!--&lt;div id=&quot;footer&quot;&gt;© 2017 fanlychie&lt;/div&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;~&#123;base :: footerFragment&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-1-6-内置对象"><a href="#2-1-6-内置对象" class="headerlink" title="2.1.6 内置对象"></a>2.1.6 内置对象</h4><table>
<thead>
<tr>
<th align="left">对象</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/context/IContext.java">#ctx</a></td>
<td align="left">上下文对象</td>
</tr>
<tr>
<td align="left"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/context/IContext.java">#vars</a></td>
<td align="left">同 #ctx，表示上下文变量</td>
</tr>
<tr>
<td align="left">#locale</td>
<td align="left">上下文本地化（特定的地理区域）变量，可参考 java.util.Locale</td>
</tr>
<tr>
<td align="left">#request</td>
<td align="left">HttpServletRequest 对象，可参考 javax.servlet.http.HttpServletRequest</td>
</tr>
<tr>
<td align="left">#response</td>
<td align="left">HttpServletResponse 对象，可参考 javax.servlet.http.HttpServletResponse</td>
</tr>
<tr>
<td align="left">#session</td>
<td align="left">HttpSession 对象，可参考 javax.servlet.http.HttpSession</td>
</tr>
<tr>
<td align="left">#servletContext</td>
<td align="left">ServletContext 对象，可参考 javax.servlet.ServletContext</td>
</tr>
</tbody></table>
<p><code>#ctx</code>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- zh_CN --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#ctx.getLocale()&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Welcome to BeiJing! --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#ctx.getVariable(&#x27;message&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- true --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#ctx.containsVariable(&#x27;message&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>#vars</code>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- zh_CN --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#vars.getLocale()&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="comment">&lt;!-- Welcome to BeiJing! --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#vars.getVariable(&#x27;message&#x27;)&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="comment">&lt;!-- true --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#vars.containsVariable(&#x27;message&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>#locale</code>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- zh_CN --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#locale&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- CN --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#locale.country&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 中国 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#locale.displayCountry&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- zh --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#locale.language&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 中文 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#locale.displayLanguage&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 中文 (中国) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#locale.displayName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>#request</code>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTTP/1.1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.protocol&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- http --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.scheme&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- localhost --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.serverName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 8080 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.serverPort&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- GET --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.method&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /standard-expression-syntax/variables --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.requestURI&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- http://localhost:8080/standard-expression-syntax/variables --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.requestURL&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /standard-expression-syntax/variables --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.servletPath&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- java.util.Collections$3@203646fe --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.parameterNames&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &#123;q=[Ljava.lang.String;@3308c69f&#125; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.parameterMap&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- q=expression --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#request.queryString&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意，请求地址的 URL 参数直接通过<code>#request.x</code>是取不出来的，需要使用<code>param.x</code>语法来取出。如，URL：<code>/standard-expression-syntax/variables?q=expression</code>，取出 q 参数的正确姿势：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;param.q&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>#response</code>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 200 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#response.status&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 8192 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#response.bufferSize&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- UTF-8 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#response.characterEncoding&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- text/html;charset=UTF-8 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#response.contentType&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>#session</code>示例：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 2BCB2A0EACFF2D9D249D9799431B5127 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#session.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 1499786693244 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#session.lastAccessedTime&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- fanlychie --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#session.getAttribute(&#x27;user&#x27;).name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意，放到会话里面的对象直接通过<code>#session.x</code>是取不出来的，需要使用<code>session.x</code>语法来取出。如，取出会话里面的 user 对象的正确姿势：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;session.user.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-1-7-工具类"><a href="#2-1-7-工具类" class="headerlink" title="2.1.7 工具类"></a>2.1.7 工具类</h4><table>
<thead>
<tr>
<th align="center">对象</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Messages.java">#messages</a></td>
<td align="center">消息工具类，与 ＃{…} 作用相同</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Uris.java">#uris</a></td>
<td align="center">地址相关的工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Conversions.java">#conversions</a></td>
<td align="center">对象转换工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Dates.java">#dates</a></td>
<td align="center">日期时间工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Calendars.java">#calendars</a></td>
<td align="center">日历工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Numbers.java">#numbers</a></td>
<td align="center">数字工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Strings.java">#strings</a></td>
<td align="center">字符串工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Objects.java">#objects</a></td>
<td align="center">对象工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Bools.java">#bools</a></td>
<td align="center">布尔工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Arrays.java">#arrays</a></td>
<td align="center">数组工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Lists.java">#lists</a></td>
<td align="center">List 工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Sets.java">#sets</a></td>
<td align="center">Set 工具类</td>
</tr>
<tr>
<td align="center"><a href="https://github.com/thymeleaf/thymeleaf/blob/thymeleaf-3.0.5.RELEASE/src/main/java/org/thymeleaf/expression/Maps.java">#maps</a></td>
<td align="center">Map 工具类</td>
</tr>
</tbody></table>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#strings.isEmpty(message)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 2017-07-12 00:37:25 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(now, &#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-字面值"><a href="#2-2-字面值" class="headerlink" title="2.2 字面值"></a>2.2 字面值</h3><p>所谓字面值，首先它不是一个变量，它是一个具体的确切的值，通常这些值是比较简单的，例如：<code>18</code>、<code>&#39;welcome&#39;</code>等，它们没有名称，以至于我们只能用值来称呼它们，因此我们称其为字面值。</p>
<h4 id="2-2-1-文字字面值"><a href="#2-2-1-文字字面值" class="headerlink" title="2.2.1 文字字面值"></a>2.2.1 文字字面值</h4><p>文字字面值是用单引号引起来的任何字符内容，如果字符内容里面含有单引号，则需要进行转义：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Welcome to BeiJing! --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;Welcome to BeiJing!&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &#x27;Welcome to BeiJing!&#x27; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;\&#x27;Welcome to BeiJing!\&#x27;&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-2-数字字面值"><a href="#2-2-2-数字字面值" class="headerlink" title="2.2.2 数字字面值"></a>2.2.2 数字字面值</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 2017 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;2017&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 2018 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;2017 + 1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-3-布尔字面值"><a href="#2-2-3-布尔字面值" class="headerlink" title="2.2.3 布尔字面值"></a>2.2.3 布尔字面值</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;1 &gt; 2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="comment">&lt;!-- 否 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;1 &gt; 2 ? &#x27;是&#x27; : &#x27;否&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-4-空字面值"><a href="#2-2-4-空字面值" class="headerlink" title="2.2.4 空字面值"></a>2.2.4 空字面值</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- false --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user == null&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-5-字面令牌"><a href="#2-2-5-字面令牌" class="headerlink" title="2.2.5 字面令牌"></a>2.2.5 字面令牌</h4><p>字面令牌（Literal Tokens）的内容只能含有（不能含有空格、特殊符号等）：</p>
<ul>
<li>大写或小写的字母、中文等不含空格和特殊符号的文本</li>
<li>0 到 9 的数字</li>
<li>中括号</li>
<li>下划线</li>
<li>连字符（-）</li>
<li>点符号（.）</li>
</ul>
<p>实际上，数字、布尔和空字面值都是字面令牌的特殊情况。字面令牌能够用来对标准表达式语法进行简化，我们可以将包裹它的内容的单引号去掉：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;Welcome to BeiJing!&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>它等效于：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;Welcome to BeiJing!&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-3-文本操作"><a href="#2-3-文本操作" class="headerlink" title="2.3 文本操作"></a>2.3 文本操作</h3><p>我们可以对文本内容进行两种常用的操作，它们分别为字符串连接和字符串替换。</p>
<h4 id="2-3-1-字符串连接"><a href="#2-3-1-字符串连接" class="headerlink" title="2.3.1 字符串连接"></a>2.3.1 字符串连接</h4><p>不管是字面值还是表达式的结果，我们都可以使用<code>+</code>符号将它们连接起来：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Welcome to BeiJing! --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;&#x27;Welcome to &#x27; + $&#123;location&#125; + &#x27;!&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-3-2-字面值替换"><a href="#2-3-2-字面值替换" class="headerlink" title="2.3.2 字面值替换"></a>2.3.2 字面值替换</h4><p>符号<code>||</code>可以用来将字面值和表达式包裹起来，这样就能方便的替换变量的值，而不需要使用<code>+</code>连接符：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Welcome to BeiJing! --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;|Welcome to $&#123;location&#125;!|&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-4-算术运算"><a href="#2-4-算术运算" class="headerlink" title="2.4 算术运算"></a>2.4 算术运算</h3><p>支持<code>+</code>（加）、<code>-</code>（减）、<code>*</code>（乘）、<code>/</code>（除）、<code>%</code>（模）运算：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 6 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;4 + 2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;4 - 2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 8 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;4 * 2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;4 / 2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 0 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;4 % 2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;pagination.page + 1&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;pagination.page&#125; + 1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-5-布尔运算"><a href="#2-5-布尔运算" class="headerlink" title="2.5 布尔运算"></a>2.5 布尔运算</h3><p>支持<code>and</code>（且）、<code>or</code>（或）、<code>!</code>（非）、<code>not</code>（非）运算：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.online and user.vip&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.online or user.vip&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;!user.online&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;not user.online&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-6-比较和相等"><a href="#2-6-比较和相等" class="headerlink" title="2.6 比较和相等"></a>2.6 比较和相等</h3><p>支持<code>&lt;</code>（<code>lt</code>）、<code>&gt;</code>（<code>gt</code>）、<code>&lt;=</code>（<code>le</code>）、<code>&gt;=</code>（<code>ge</code>）、<code>==</code>（<code>eq</code>）、<code>！=</code>（<code>ne</code>）：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.age &lt; 60&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.age &lt;= 60&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.age &gt; 18&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.age &gt;= 18&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.age == 18&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.age != 18&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-7-条件运算"><a href="#2-7-条件运算" class="headerlink" title="2.7 条件运算"></a>2.7 条件运算</h3><p>三元运算符：<code>(if) ? (then) : (else)</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.online ? &#x27;在线&#x27; : &#x27;离线&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.online ? (user.vip ? &#x27;VIP用户在线&#x27; : &#x27;普通用户在线&#x27;) : &#x27;离线&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>二元运算符：<code>(value) ?: (defaultValue)</code>。</p>
<p>其中，<code>value</code>非空（null）即真，条件为真时输出<code>value</code>，否则输出<code>defaultValue</code>。假设<code>token = null</code>，<code>user.email = fanlychie@gmail.com</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 你还没有登录，请先登录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;token&#125; ?: &#x27;你还没有登录，请先登录&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- fanlychie@gmail.com --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;user.email&#125; ?: &#x27;你还没有绑定邮箱&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2-8-无操作符"><a href="#2-8-无操作符" class="headerlink" title="2.8 无操作符"></a>2.8 无操作符</h3><p>当模板运行在服务器端时，Thymeleaf 会解析<code>th:*</code>属性的具体值替换标签体的内容。无操作符（<code>_</code>）则允许你使用原型标签体的内容作为默认值：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 你还没有登录，请先登录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;token&#125; ?: _&quot;</span>&gt;</span>你还没有登录，请先登录<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="3-使用文本"><a href="#3-使用文本" class="headerlink" title="3. 使用文本"></a>3. 使用文本</h2><p>首先介绍两个最基础的<code>th:*</code>属<code>th:text</code>和<code>th:utext</code>，它们都是用于处理文本消息内容。</p>
<h3 id="3-1-th-text"><a href="#3-1-th-text" class="headerlink" title="3.1 th:text"></a>3.1 th:text</h3><p>在标签体中展示表达式评估结果的文本内容：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用外部化的文本内容：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>&gt;</span>Welcome to BeiJing!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>当它作为静态文件直接运行时，浏览器会自动忽略它不能识别的<code>th:text</code>属性，而显示<code>&lt;p&gt;</code>标签体的文本内容<code>Welcome to BeiJing!</code></p>
<p>当它作为模板文件运行在服务器端时，<code>th:text</code>属性的具体值将会替换<code>&lt;p&gt;</code>标签体的文本内容。</p>
<h3 id="3-2-th-utext"><a href="#3-2-th-utext" class="headerlink" title="3.2 th:utext"></a>3.2 th:utext</h3><p>属性<code>th:utext</code>与<code>th:text</code>的区别在于：</p>
<ul>
<li><code>th:text</code>默认会对含有 HTML 标签的内容进行字符转义；</li>
<li><code>th:utext</code>（Unescaped Text）则不会对含有 HTML 标签的内容进行字符转义；</li>
</ul>
<p>假设：<code>message = &quot;&lt;b&gt;Welcome to BeiJing!&lt;/b&gt;&quot;</code>。</p>
<p>使用<code>th:text</code>属性：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>th:text</code>效果：<b>Welcome to BeiJing!</b></p>
<p>使用<code>th:utext</code>属性：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:utext</span>=<span class="string">&quot;$&#123;message&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>th:utext</code>效果：<b >Welcome to BeiJing!</b ></p>
<h2 id="4-设置属性值"><a href="#4-设置属性值" class="headerlink" title="4. 设置属性值"></a>4. 设置属性值</h2><p>在 Thymeleaf 模板文件中，你可以使用<code>th:*</code>（或者使用<code>th:attr</code>属性）来设置任意的 HTML5 标签属性的值。不仅如此，你还可以<code>th:*-*</code>来同时为多个不同的标签属性设置相同的一个值，甚至你可以使用<code>th:attrappend</code>和<code>th:attrprepend</code>来追加新的值到现有的标签属性值中。</p>
<h3 id="4-1-th-attr"><a href="#4-1-th-attr" class="headerlink" title="4.1 th:attr"></a>4.1 th:attr</h3><p>这种方式是不被推荐的，了解一下就行。下面是用<code>th:attr=&quot;href=...&quot;</code>来设置标签<code>href</code>属性的值：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:attr</span>=<span class="string">&quot;href=@&#123;https://www.google.com.hk&#125;&quot;</span>&gt;</span>谷歌一下你就知道<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-2-th"><a href="#4-2-th" class="headerlink" title="4.2 th:*"></a>4.2 th:*</h3><p>显然<code>th:attr=&quot;href=@&#123;http://www.baidu.com&#125;&quot;</code>不够简洁，我们更推荐下面的这种语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;https://www.google.com.hk&#125;&quot;</span>&gt;</span>谷歌一下你就知道<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中<code>th:*</code>中的<code>*</code>可以是 HTML5 支持的任意属性名称，甚至这些属性名称可以是自定义的：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;div item-id=&quot;1001&quot;&gt;Welcome to BeiJing!&lt;/div&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:item-id</span>=<span class="string">&quot;$&#123;user.id&#125;&quot;</span>&gt;</span>Welcome to BeiJing!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-th"><a href="#4-3-th" class="headerlink" title="4.3 th:-"></a>4.3 th:<em>-</em></h3><p>如果想要同时为标签的多个不同属性设置相同的一个值，可以使用<code>th:*-*</code>的语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;logo.png&quot;</span> <span class="attr">th:alt-title</span>=<span class="string">&quot;LOGO图片&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>它相当于：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;logo.png&quot;</span> <span class="attr">th:alt</span>=<span class="string">&quot;LOGO图片&quot;</span> <span class="attr">th:title</span>=<span class="string">&quot;LOGO图片&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-4-th-attrappend-amp-th-attrprepend"><a href="#4-4-th-attrappend-amp-th-attrprepend" class="headerlink" title="4.4 th:attrappend &amp; th:attrprepend"></a>4.4 th:attrappend &amp; th:attrprepend</h3><p><code>th:attrappend</code>和<code>th:attrprepend</code>可以将表达式的结果分别追加到指定的属性值之后和之前。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;button class=&quot;btn enable&quot;&gt;购买&lt;/button&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">th:attrappend</span>=<span class="string">&quot;class=$&#123;outOfStock&#125; ? &#x27; enable&#x27; : &#x27; disable&#x27;&quot;</span>&gt;</span>购买<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;button class=&quot;enable btn&quot;&gt;购买&lt;/button&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">th:attrprepend</span>=<span class="string">&quot;class=$&#123;outOfStock&#125; ? &#x27;enable &#x27; : &#x27;disable &#x27;&quot;</span>&gt;</span>购买<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>另外，还有两个常用的具体附加属性<code>th:classappend=&quot;...&quot;</code>和<code>th:styleappend=&quot;&quot;</code>。</p>
<p>它们分别用来代替<code>th:attrappend=&quot;class=...&quot;</code>和<code>th:attrappend=&quot;style=...&quot;</code>。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;button class=&quot;btn enable&quot;&gt;购买&lt;/button&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">th:classappend</span>=<span class="string">&quot;$&#123;outOfStock&#125; ? &#x27; enable&#x27; : &#x27; disable&#x27;&quot;</span>&gt;</span>购买<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4-5-布尔属性"><a href="#4-5-布尔属性" class="headerlink" title="4.5 布尔属性"></a>4.5 布尔属性</h3><p>在 HTML 中有些属性是布尔属性，布尔属性是指没有值的属性，如<code>readonly</code>、<code>checked</code>、<code>selected</code>等。它们若存在那就意味着值为 true。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;rememberme&quot;</span> <span class="attr">checked</span> /&gt;</span> 记住我</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span> <span class="attr">checked</span>&gt;</span> 男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span> 女</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;appId&quot;</span> <span class="attr">value</span>=<span class="string">&quot;J123654&quot;</span> <span class="attr">readonly</span>&gt;</span><span class="tag">&lt;<span class="name">select</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Thymeleaf 也允许我们通过<code>th:*</code>（这里的<code>*</code>表示任意的布尔属性） 来选择是否使用这些布尔属性。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;rememberme&quot;</span> <span class="attr">ch:checked</span>=<span class="string">&quot;$&#123;rememberme&#125;&quot;</span> /&gt;</span> 记住我</span><br></pre></td></tr></table></figure>

<p>正如你所见，如果表达式的结果为<code>true</code>，则自动勾选复选框，若为<code>false</code>，则不会自动勾选。</p>
<h2 id="5-遍历"><a href="#5-遍历" class="headerlink" title="5. 遍历"></a>5. 遍历</h2><p>遍历（迭代）的语法<code>th:each=&quot;自定义的元素变量名称 : $&#123;集合变量名称&#125;&quot;</code>：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">spn</span>&gt;</span>你所在城市：<span class="tag">&lt;/<span class="name">spn</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;mycity&quot;</span>&gt;</span>       </span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:each</span>=<span class="string">&quot;city : $&#123;cities&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;city.name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>属性<code>th:each</code>提供了一个用于跟踪迭代的状态变量，它包含以下几个属性：</p>
<table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">类型</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">index</td>
<td align="center">int</td>
<td align="center">当前迭代的索引，从 0 开始</td>
</tr>
<tr>
<td align="center">count</td>
<td align="center">int</td>
<td align="center">当前迭代的计数，从 1 开始</td>
</tr>
<tr>
<td align="center">size</td>
<td align="center">int</td>
<td align="center">集合中元素的总个数</td>
</tr>
<tr>
<td align="center">current</td>
<td align="center">int</td>
<td align="center">当前的元素对象</td>
</tr>
<tr>
<td align="center">even</td>
<td align="center">boolean</td>
<td align="center">当前迭代的计数是否是偶数</td>
</tr>
<tr>
<td align="center">odd</td>
<td align="center">boolean</td>
<td align="center">当前迭代的计数是否是奇数</td>
</tr>
<tr>
<td align="center">first</td>
<td align="center">boolean</td>
<td align="center">当前元素是否是集合的第一个元素</td>
</tr>
<tr>
<td align="center">last</td>
<td align="center">boolean</td>
<td align="center">当前元素是否是集合的最后一个元素</td>
</tr>
</tbody></table>
<p>状态变量的使用语法：<code>th:each=&quot;自定义的元素变量名称, 自定义的状态变量名称 : $&#123;集合变量名称&#125;&quot;</code>：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">spn</span>&gt;</span>所在城市：<span class="tag">&lt;/<span class="name">spn</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;mycity&quot;</span>&gt;</span>        </span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:each</span>=<span class="string">&quot;city, status : $&#123;cities&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;city.name&#125;&quot;</span> <span class="attr">th:item-index</span>=<span class="string">&quot;$&#123;status.count&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>不管什么时候，Thymeleaf 始终会为每个<code>th:each</code>创建一个状态变量，默认的状态变量名称就是自定义的元素变量名称后面加<code>Stat</code>字符串组成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">spn</span>&gt;</span>所在城市：<span class="tag">&lt;/<span class="name">spn</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;mycity&quot;</span>&gt;</span>        </span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:each</span>=<span class="string">&quot;city : $&#123;cities&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;city.name&#125;&quot;</span> <span class="attr">th:item-index</span>=<span class="string">&quot;$&#123;cityStat.count&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="6-条件判断"><a href="#6-条件判断" class="headerlink" title="6. 条件判断"></a>6. 条件判断</h2><p>条件判断语句有三种，分别是：<code>th:if</code>、<code>th:unless</code>、<code>th:swith</code>。</p>
<h3 id="6-1-th-if"><a href="#6-1-th-if" class="headerlink" title="6.1 th:if"></a>6.1 th:if</h3><p>当表达式的评估结果为真时则显示内容，否则不显示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/user/order(uid=$&#123;user.id&#125;)&#125;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;user != null&#125;&quot;</span>&gt;</span>我的订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>真假评估的依据：</p>
<ul>
<li>当表达式的值不为空（null）时<ul>
<li>如果表达式的值是一个布尔类型，且值为<code>true</code>评估为真，否则为假</li>
<li>如果表达式的值是一个数字 类型，且值为非<code>0</code>评估为真，否则为假</li>
<li>如果表达式的值是一个字符类型，且值为非<code>0</code>评估为真，否则为假</li>
<li>如果表达式的值是一个字符串类型，且值为非<code>&quot;false&quot;</code>、<code>&quot;off&quot;</code>、<code>&quot;no&quot;</code>评估为真，否则为假</li>
<li>如果表达式的值不是一个<code>布尔</code>、<code>数字</code>、<code>字符</code>或<code>字符串</code>评估为真</li>
</ul>
</li>
<li>当表达式的值为空（null）时，评估结果为假</li>
</ul>
<p>因此，上面代码我们也可以简写成：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/user/order(uid=$&#123;user.id&#125;)&#125;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;user&#125;&quot;</span>&gt;</span>我的订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>但是，为了代码的可读性，我们并不建议这样使用。</p>
<h3 id="6-2-th-unless"><a href="#6-2-th-unless" class="headerlink" title="6.2 th:unless"></a>6.2 th:unless</h3><p><code>th:unless</code>与<code>th:if</code>判断恰好相反，当表达式的评估结果为假时则显示内容，否则不显示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/user/order(uid=$&#123;user.id&#125;)&#125;&quot;</span> <span class="attr">th:unless</span>=<span class="string">&quot;$&#123;user == null&#125;&quot;</span>&gt;</span>我的订单<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6-3-th-swith"><a href="#6-3-th-swith" class="headerlink" title="6.3 th:swith"></a>6.3 th:swith</h3><p>多路选择语句，它需要搭配<code>th:case</code>来使用：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;user.role&#125;&quot;</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;admin&quot;</span>&gt;</span>管理员<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;user&quot;</span>&gt;</span>普通用户<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="7-定义局部变量"><a href="#7-定义局部变量" class="headerlink" title="7. 定义局部变量"></a>7. 定义局部变量</h2><p>使用<code>th:with</code>属性可以定义局部变量：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:with</span>=<span class="string">&quot;name=&#x27;fanlychie&#x27;&quot;</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;name&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>同时定义多个局部变量时，用英文<code>,</code>号分隔开：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:with</span>=<span class="string">&quot;name=$&#123;user.name&#125;,age=&#123;user.age&#125;&quot;</span>&gt;</span>    ......<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="8-注释"><a href="#8-注释" class="headerlink" title="8. 注释"></a>8. 注释</h2><p>下面介绍常见的两种注释：</p>
<h3 id="8-1-标准注释"><a href="#8-1-标准注释" class="headerlink" title="8.1 标准注释"></a>8.1 标准注释</h3><p>语法：<code>&lt;!-- ... ---&gt;</code>，注释的代码块会在文件源代码中显示出来。</p>
<h4 id="8-1-1-单行注释"><a href="#8-1-1-单行注释" class="headerlink" title="8.1.1 单行注释"></a>8.1.1 单行注释</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;span&gt;$&#123;message&#125;&lt;/span&gt; ---&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-1-2-多行注释"><a href="#8-1-2-多行注释" class="headerlink" title="8.1.2 多行注释"></a>8.1.2 多行注释</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">	&lt;div th:switch=&quot;$&#123;user.role&#125;&quot;&gt;    </span></span><br><span class="line"><span class="comment">		&lt;p th:case=&quot;admin&quot;&gt;管理员&lt;/p&gt;    </span></span><br><span class="line"><span class="comment">		&lt;p th:case=&quot;user&quot;&gt;普通用户&lt;/p&gt;</span></span><br><span class="line"><span class="comment">	&lt;/div&gt;</span></span><br><span class="line"><span class="comment">---&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="8-2-解析器级注释"><a href="#8-2-解析器级注释" class="headerlink" title="8.2 解析器级注释"></a>8.2 解析器级注释</h3><p>语法：<code>&lt;!--/* ... */--&gt;</code>，注释的代码块会在引擎解析的时候抹去。</p>
<h4 id="8-2-1-单行注释："><a href="#8-2-1-单行注释：" class="headerlink" title="8.2.1 单行注释："></a>8.2.1 单行注释：</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--/* &lt;span&gt;$&#123;message&#125;&lt;/span&gt; */--&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="8-2-2-多行注释"><a href="#8-2-2-多行注释" class="headerlink" title="8.2.2 多行注释"></a>8.2.2 多行注释</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--/*--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:switch</span>=<span class="string">&quot;$&#123;user.role&#125;&quot;</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;admin&quot;</span>&gt;</span>管理员<span class="tag">&lt;/<span class="name">p</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">th:case</span>=<span class="string">&quot;user&quot;</span>&gt;</span>普通用户<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--*/--&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="9-内联表达式"><a href="#9-内联表达式" class="headerlink" title="9. 内联表达式"></a>9. 内联表达式</h2><p>内联表达式允许我们直接在 HTML 文本中使用标准表达式，而不需要使用<code>th:*</code>标签属性。</p>
<h3 id="9-1-…"><a href="#9-1-…" class="headerlink" title="9.1 [[…]]"></a>9.1 [[…]]</h3><p><code>[[]]</code>相当于<code>th:text</code>，对含有 HTML 标签的内容自动进行字符转义。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The message is : [[$&#123;htmlContent&#125;]]<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="9-2-…"><a href="#9-2-…" class="headerlink" title="9.2 [(…)]"></a>9.2 [(…)]</h3><p><code>[()]</code>相当于<code>th:utext</code>，对含有 HTML 标签的内容不进行字符转义。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The message is : [($&#123;htmlContent&#125;)]<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="9-3-th-inline"><a href="#9-3-th-inline" class="headerlink" title="9.3 th:inline"></a>9.3 th:inline</h3><p>我们已经了解到，使用<code>[[]]</code>和<code>[()]</code>语法可以直接在 HTML 文本中使用标准表达式，如果想要使用更多高级的功能，需要使用<code>th:inline</code>属性来激活，它的取值如下：</p>
<table>
<thead>
<tr>
<th align="center">值</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">none</td>
<td align="center">禁止内联表达式，可以原样输出 [[]] 和 [()] 字符串</td>
</tr>
<tr>
<td align="center">text</td>
<td align="center">文本内联，可以使用 th:each 等高级语法</td>
</tr>
<tr>
<td align="center">css</td>
<td align="center">样式内联，如：<code>&lt;style th:inline=&quot;css&quot;&gt;</code></td>
</tr>
<tr>
<td align="center">javascript</td>
<td align="center">脚本内联，如：<code>&lt;style th:inline=&quot;javascript&quot;&gt;</code></td>
</tr>
</tbody></table>
<h4 id="9-3-1-none"><a href="#9-3-1-none" class="headerlink" title="9.3.1 none"></a>9.3.1 none</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- [[1, 2], [3, 4]] --&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:inline</span>=<span class="string">&quot;none&quot;</span>&gt;</span>[[1, 2], [3, 4]]<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-3-2-text"><a href="#9-3-2-text" class="headerlink" title="9.3.2 text"></a>9.3.2 text</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 北京 上海 广州 深圳 --&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:inline</span>=<span class="string">&quot;text&quot;</span>&gt;</span>    [# th:each=&quot;city : $&#123;cities&#125;&quot;]        [($&#123;city.name&#125;)]    [/]<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-3-3-css"><a href="#9-3-3-css" class="headerlink" title="9.3.3 css"></a>9.3.3 css</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">th:inline</span>=<span class="string">&quot;css&quot;</span>&gt;</span><span class="css">    </span></span><br><span class="line"><span class="css">    <span class="selector-tag">body</span> &#123;        </span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>:[[$&#123;bgColor&#125;]];    </span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="9-3-4-javascript"><a href="#9-3-4-javascript" class="headerlink" title="9.3.4 javascript"></a>9.3.4 javascript</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">&quot;javascript&quot;</span>&gt;</span><span class="javascript">    <span class="keyword">var</span> user = [[$&#123;user&#125;]];    alert(<span class="string">&quot;用户名：&quot;</span> + user.name);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>参考文档文献链接：<a href="http://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html">http://www.thymeleaf.org/doc/tutorials/3.0/usingthymeleaf.html</a></p>
</blockquote>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/2021/06/08/test/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>springboot入门</title>
    <url>/2021/01/03/java/Spring%20Boot%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<hr>
<h1 id="一、Spring-Boot-入门"><a href="#一、Spring-Boot-入门" class="headerlink" title="一、Spring Boot 入门"></a><strong>一、</strong>Spring Boot 入门</h1><h2 id="1、Spring-Boot-简介"><a href="#1、Spring-Boot-简介" class="headerlink" title="1、Spring Boot 简介"></a>1、Spring Boot 简介</h2><blockquote>
<p>简化Spring应用开发的一个框架；</p>
<p>整个Spring技术栈的一个大整合；</p>
<p>J2EE开发的一站式解决方案；</p>
</blockquote>
<span id="more"></span>

<h2 id="2、微服务"><a href="#2、微服务" class="headerlink" title="2、微服务"></a>2、微服务</h2><p>2014，martin fowler</p>
<p>微服务：架构风格（服务微化）</p>
<p>一个应用应该是一组小型服务；可以通过HTTP的方式进行互通；</p>
<p>单体应用：ALL IN ONE</p>
<p>微服务：每一个功能元素最终都是一个可独立替换和独立升级的软件单元；</p>
<p><a href="https://martinfowler.com/articles/microservices.html#MicroservicesAndSoa">详细参照微服务文档</a></p>
<h2 id="3、环境准备"><a href="#3、环境准备" class="headerlink" title="3、环境准备"></a>3、环境准备</h2><p><a href="http://www.gulixueyuan.com/">http://www.gulixueyuan.com/</a> 谷粒学院</p>
<p>环境约束</p>
<p>–jdk1.8：Spring Boot 推荐jdk1.7及以上；java version “1.8.0_112”</p>
<p>–maven3.x：maven 3.3以上版本；Apache Maven 3.3.9</p>
<p>–IntelliJIDEA2017：IntelliJ IDEA 2017.2.2 x64、STS</p>
<p>–SpringBoot 1.5.9.RELEASE：1.5.9；</p>
<p>统一环境；</p>
<h3 id="1、MAVEN设置；"><a href="#1、MAVEN设置；" class="headerlink" title="1、MAVEN设置；"></a>1、MAVEN设置；</h3><p>给maven 的settings.xml配置文件的profiles标签添加</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-1.8<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">activation</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.compilerVersion</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.compilerVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="2、IDEA设置"><a href="#2、IDEA设置" class="headerlink" title="2、IDEA设置"></a>2、IDEA设置</h3><p>整合maven进来；</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180129151045.png" alt="idea设置"></p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180129151112.png" alt="images/"></p>
<h2 id="4、Spring-Boot-HelloWorld"><a href="#4、Spring-Boot-HelloWorld" class="headerlink" title="4、Spring Boot HelloWorld"></a>4、Spring Boot HelloWorld</h2><p>一个功能：</p>
<p>浏览器发送hello请求，服务器接受请求并处理，响应Hello World字符串；</p>
<h3 id="1、创建一个maven工程；（jar）"><a href="#1、创建一个maven工程；（jar）" class="headerlink" title="1、创建一个maven工程；（jar）"></a>1、创建一个maven工程；（jar）</h3><h3 id="2、导入spring-boot相关的依赖"><a href="#2、导入spring-boot相关的依赖" class="headerlink" title="2、导入spring boot相关的依赖"></a>2、导入spring boot相关的依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3、编写一个主程序；启动Spring-Boot应用"><a href="#3、编写一个主程序；启动Spring-Boot应用" class="headerlink" title="3、编写一个主程序；启动Spring Boot应用"></a>3、编写一个主程序；启动Spring Boot应用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SpringBootApplication</span> 来标注一个主程序类，说明这是一个Spring Boot应用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldMainApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Spring应用启动起来</span></span><br><span class="line">        SpringApplication.run(HelloWorldMainApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4、编写相关的Controller、Service"><a href="#4、编写相关的Controller、Service" class="headerlink" title="4、编写相关的Controller、Service"></a>4、编写相关的Controller、Service</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="5、运行主程序测试"><a href="#5、运行主程序测试" class="headerlink" title="5、运行主程序测试"></a>5、运行主程序测试</h3><h3 id="6、简化部署"><a href="#6、简化部署" class="headerlink" title="6、简化部署"></a>6、简化部署</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这个插件，可以将应用打包成一个可执行的jar包；--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>将这个应用打成jar包，直接使用java -jar的命令进行执行；</p>
<h2 id="5、Hello-World探究"><a href="#5、Hello-World探究" class="headerlink" title="5、Hello World探究"></a>5、Hello World探究</h2><h3 id="1、POM文件"><a href="#1、POM文件" class="headerlink" title="1、POM文件"></a>1、POM文件</h3><h4 id="1、父项目"><a href="#1、父项目" class="headerlink" title="1、父项目"></a>1、父项目</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">他的父项目是</span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../../spring-boot-dependencies<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">他来真正管理Spring Boot应用里面的所有依赖版本；</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>Spring Boot的版本仲裁中心；</p>
<p>以后我们导入依赖默认是不需要写版本；（没有在dependencies里面管理的依赖自然需要声明版本号）</p>
<h4 id="2、启动器"><a href="#2、启动器" class="headerlink" title="2、启动器"></a>2、启动器</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>spring-boot-starter</strong>-==web==：</p>
<p>​    spring-boot-starter：spring-boot场景启动器；帮我们导入了web模块正常运行所依赖的组件；</p>
<p>Spring Boot将所有的功能场景都抽取出来，做成一个个的starters（启动器），只需要在项目里面引入这些starter相关场景的所有依赖都会导入进来。要用什么功能就导入什么场景的启动器</p>
<h3 id="2、主程序类，主入口类"><a href="#2、主程序类，主入口类" class="headerlink" title="2、主程序类，主入口类"></a>2、主程序类，主入口类</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@SpringBootApplication</span> 来标注一个主程序类，说明这是一个Spring Boot应用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldMainApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Spring应用启动起来</span></span><br><span class="line">        SpringApplication.run(HelloWorldMainApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>@<strong>SpringBootApplication</strong>:    Spring Boot应用标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot就应该运行这个类的main方法来启动SpringBoot应用；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Target(ElementType.TYPE)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="meta">@Inherited</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan(excludeFilters = &#123;</span></span><br><span class="line"><span class="meta">      @Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),</span></span><br><span class="line"><span class="meta">      @Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> SpringBootApplication &#123;</span><br></pre></td></tr></table></figure>

<p>@<strong>SpringBootConfiguration</strong>:Spring Boot的配置类；</p>
<p>​        标注在某个类上，表示这是一个Spring Boot的配置类；</p>
<p>​        @<strong>Configuration</strong>:配置类上来标注这个注解；</p>
<p>​            配置类 —–  配置文件；配置类也是容器中的一个组件；@Component</p>
<p>@<strong>EnableAutoConfiguration</strong>：开启自动配置功能；</p>
<p>​        以前我们需要配置的东西，Spring Boot帮我们自动配置；@<strong>EnableAutoConfiguration</strong>告诉SpringBoot开启自动配置功能；这样自动配置才能生效；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@AutoConfigurationPackage</span></span><br><span class="line"><span class="meta">@Import(EnableAutoConfigurationImportSelector.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableAutoConfiguration &#123;</span><br></pre></td></tr></table></figure>

<p>​          @<strong>AutoConfigurationPackage</strong>：自动配置包</p>
<p>​        @<strong>Import</strong>(AutoConfigurationPackages.Registrar.class)：</p>
<p>​        Spring的底层注解@Import，给容器中导入一个组件；导入的组件由AutoConfigurationPackages.Registrar.class；</p>
<p>==将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器；==</p>
<p>​    @<strong>Import</strong>(EnableAutoConfigurationImportSelector.class)；</p>
<p>​        给容器中导入组件？</p>
<p>​        <strong>EnableAutoConfigurationImportSelector</strong>：导入哪些组件的选择器；</p>
<p>​        将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中；</p>
<p>​        会给容器中导入非常多的自动配置类（xxxAutoConfiguration）；就是给容器中导入这个场景需要的所有组件，并配置好这些组件；        <img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180129224104.png" alt="自动配置类"></p>
<p>有了自动配置类，免去了我们手动编写配置注入功能组件等的工作；</p>
<p>​        SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class,classLoader)；</p>
<p>==Spring Boot在启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值，将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作；==以前我们需要自己配置的东西，自动配置类都帮我们；</p>
<p>J2EE的整体整合解决方案和自动配置都在spring-boot-autoconfigure-1.5.9.RELEASE.jar；</p>
<p>​        </p>
<p>==Spring注解版（谷粒学院）==</p>
<h2 id="6、使用Spring-Initializer快速创建Spring-Boot项目"><a href="#6、使用Spring-Initializer快速创建Spring-Boot项目" class="headerlink" title="6、使用Spring Initializer快速创建Spring Boot项目"></a>6、使用Spring Initializer快速创建Spring Boot项目</h2><h3 id="1、IDEA：使用-Spring-Initializer快速创建项目"><a href="#1、IDEA：使用-Spring-Initializer快速创建项目" class="headerlink" title="1、IDEA：使用 Spring Initializer快速创建项目"></a>1、IDEA：使用 Spring Initializer快速创建项目</h3><p>IDE都支持使用Spring的项目创建向导快速创建一个Spring Boot项目；</p>
<p>选择我们需要的模块；向导会联网创建Spring Boot项目；</p>
<p>默认生成的Spring Boot项目；</p>
<ul>
<li>主程序已经生成好了，我们只需要我们自己的逻辑</li>
<li>resources文件夹中目录结构<ul>
<li>static：保存所有的静态资源； js css  images；</li>
<li>templates：保存所有的模板页面；（Spring Boot默认jar包使用嵌入式的Tomcat，默认不支持JSP页面）；可以使用模板引擎（freemarker、thymeleaf）；</li>
<li>application.properties：Spring Boot应用的配置文件；可以修改一些默认设置；</li>
</ul>
</li>
</ul>
<h3 id="2、STS使用-Spring-Starter-Project快速创建项目"><a href="#2、STS使用-Spring-Starter-Project快速创建项目" class="headerlink" title="2、STS使用 Spring Starter Project快速创建项目"></a>2、STS使用 Spring Starter Project快速创建项目</h3><hr>
<h1 id="二、配置文件"><a href="#二、配置文件" class="headerlink" title="二、配置文件"></a>二、配置文件</h1><h2 id="1、配置文件"><a href="#1、配置文件" class="headerlink" title="1、配置文件"></a>1、配置文件</h2><p>SpringBoot使用一个全局的配置文件，配置文件名是固定的；</p>
<p>•application.properties</p>
<p>•application.yml</p>
<p>配置文件的作用：修改SpringBoot自动配置的默认值；SpringBoot在底层都给我们自动配置好；</p>
<p>YAML（YAML Ain’t Markup Language）</p>
<p>​    YAML  A Markup Language：是一个标记语言</p>
<p>​    YAML   isn’t Markup Language：不是一个标记语言；</p>
<p>标记语言：</p>
<p>​    以前的配置文件；大多都使用的是  <strong>xxxx.xml</strong>文件；</p>
<p>​    YAML：<strong>以数据为中心</strong>，比json、xml等更适合做配置文件；</p>
<p>​    YAML：配置例子</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br></pre></td></tr></table></figure>

<p>​    XML：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">port</span>&gt;</span>8081<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="2、YAML语法："><a href="#2、YAML语法：" class="headerlink" title="2、YAML语法："></a>2、YAML语法：</h2><h3 id="1、基本语法"><a href="#1、基本语法" class="headerlink" title="1、基本语法"></a>1、基本语法</h3><p>k:(空格)v：表示一对键值对（空格必须有）；</p>
<p>以<strong>空格</strong>的缩进来控制层级关系；只要是左对齐的一列数据，都是同一个层级的</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/hello</span></span><br></pre></td></tr></table></figure>

<p>属性和值也是大小写敏感；</p>
<h3 id="2、值的写法"><a href="#2、值的写法" class="headerlink" title="2、值的写法"></a>2、值的写法</h3><h4 id="字面量：普通的值（数字，字符串，布尔）"><a href="#字面量：普通的值（数字，字符串，布尔）" class="headerlink" title="字面量：普通的值（数字，字符串，布尔）"></a>字面量：普通的值（数字，字符串，布尔）</h4><p>​    k: v：字面直接来写；</p>
<p>​        字符串默认不用加上单引号或者双引号；</p>
<p>​        “”：双引号；不会转义字符串里面的特殊字符；特殊字符会作为本身想表示的意思</p>
<p>​                name:   “zhangsan \n lisi”：输出；zhangsan 换行  lisi</p>
<p>​        ‘’：单引号；会转义特殊字符，特殊字符最终只是一个普通的字符串数据</p>
<p>​                name :   ‘zhangsan \n lisi’：输出；zhangsan \n  lisi</p>
<h4 id="对象、Map（属性和值）（键值对）："><a href="#对象、Map（属性和值）（键值对）：" class="headerlink" title="对象、Map（属性和值）（键值对）："></a>对象、Map（属性和值）（键值对）：</h4><p>​    k: v：在下一行来写对象的属性和值的关系；注意缩进</p>
<p>​        对象还是k: v的方式</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">friends:</span></span><br><span class="line">		<span class="attr">lastName:</span> <span class="string">zhangsan</span></span><br><span class="line">		<span class="attr">age:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure>

<p>行内写法：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">friends:</span> &#123;<span class="attr">lastName:</span> <span class="string">zhangsan</span>,<span class="attr">age:</span> <span class="number">18</span>&#125;</span><br></pre></td></tr></table></figure>



<h4 id="数组（List、Set）："><a href="#数组（List、Set）：" class="headerlink" title="数组（List、Set）："></a>数组（List、Set）：</h4><p>用- 值表示数组中的一个元素</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pets:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">cat</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">dog</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">pig</span></span><br></pre></td></tr></table></figure>

<p>行内写法</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pets:</span> [<span class="string">cat</span>,<span class="string">dog</span>,<span class="string">pig</span>]</span><br></pre></td></tr></table></figure>



<h2 id="3、配置文件值注入"><a href="#3、配置文件值注入" class="headerlink" title="3、配置文件值注入"></a>3、配置文件值注入</h2><p>配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">person:</span></span><br><span class="line">    <span class="attr">lastName:</span> <span class="string">hello</span></span><br><span class="line">    <span class="attr">age:</span> <span class="number">18</span></span><br><span class="line">    <span class="attr">boss:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">birth:</span> <span class="number">2017</span><span class="string">/12/12</span></span><br><span class="line">    <span class="attr">maps:</span> &#123;<span class="attr">k1:</span> <span class="string">v1</span>,<span class="attr">k2:</span> <span class="number">12</span>&#125;</span><br><span class="line">    <span class="attr">lists:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">lisi</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">zhaoliu</span></span><br><span class="line">    <span class="attr">dog:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">小狗</span></span><br><span class="line">      <span class="attr">age:</span> <span class="number">12</span></span><br></pre></td></tr></table></figure>

<p>javaBean：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将配置文件中配置的每一个属性的值，映射到这个组件中</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ConfigurationProperties</span>：告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定；</span></span><br><span class="line"><span class="comment"> *      prefix = &quot;person&quot;：配置文件中哪个下面的所有属性进行一一映射</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 只有这个组件是容器中的组件，才能容器提供的<span class="doctag">@ConfigurationProperties</span>功能；</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String lastName;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Boolean boss;</span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; maps;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; lists;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>我们可以导入配置文件处理器，以后编写配置就有提示了</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入配置文件处理器，配置文件进行绑定就会有提示--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="1、properties配置文件在idea中默认utf-8可能会乱码"><a href="#1、properties配置文件在idea中默认utf-8可能会乱码" class="headerlink" title="1、properties配置文件在idea中默认utf-8可能会乱码"></a>1、properties配置文件在idea中默认utf-8可能会乱码</h4><p>调整</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180130161620.png" alt="idea配置乱码"></p>
<h4 id="2、-Value获取值和-ConfigurationProperties获取值比较"><a href="#2、-Value获取值和-ConfigurationProperties获取值比较" class="headerlink" title="2、@Value获取值和@ConfigurationProperties获取值比较"></a>2、@Value获取值和@ConfigurationProperties获取值比较</h4><table>
<thead>
<tr>
<th></th>
<th>@ConfigurationProperties</th>
<th>@Value</th>
</tr>
</thead>
<tbody><tr>
<td>功能</td>
<td>批量注入配置文件中的属性</td>
<td>一个个指定</td>
</tr>
<tr>
<td>松散绑定（松散语法）</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>SpEL</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>JSR303数据校验</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>复杂类型封装</td>
<td>支持</td>
<td>不支持</td>
</tr>
</tbody></table>
<p>配置文件yml还是properties他们都能获取到值；</p>
<p>如果说，我们只是在某个业务逻辑中需要获取一下配置文件中的某项值，使用@Value；</p>
<p>如果说，我们专门编写了一个javaBean来和配置文件进行映射，我们就直接使用@ConfigurationProperties；</p>
<h4 id="3、配置文件注入值数据校验"><a href="#3、配置文件注入值数据校验" class="headerlink" title="3、配置文件注入值数据校验"></a>3、配置文件注入值数据校验</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="meta">@Validated</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;bean class=&quot;Person&quot;&gt;</span></span><br><span class="line"><span class="comment">     *      &lt;property name=&quot;lastName&quot; value=&quot;字面量/$&#123;key&#125;从环境变量、配置文件中获取值/#&#123;SpEL&#125;&quot;&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">     * &lt;bean/&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//lastName必须是邮箱格式</span></span><br><span class="line">    <span class="meta">@Email</span></span><br><span class="line">    <span class="comment">//@Value(&quot;$&#123;person.last-name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String lastName;</span><br><span class="line">    <span class="comment">//@Value(&quot;#&#123;11*2&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="comment">//@Value(&quot;true&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Boolean boss;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date birth;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; maps;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Object&gt; lists;</span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br></pre></td></tr></table></figure>



<h4 id="4、-PropertySource-amp-ImportResource-amp-Bean"><a href="#4、-PropertySource-amp-ImportResource-amp-Bean" class="headerlink" title="4、@PropertySource&amp;@ImportResource&amp;@Bean"></a>4、@PropertySource&amp;@ImportResource&amp;@Bean</h4><p>@<strong>PropertySource</strong>：加载指定的配置文件；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将配置文件中配置的每一个属性的值，映射到这个组件中</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@ConfigurationProperties</span>：告诉SpringBoot将本类中的所有属性和配置文件中相关的配置进行绑定；</span></span><br><span class="line"><span class="comment"> *      prefix = &quot;person&quot;：配置文件中哪个下面的所有属性进行一一映射</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 只有这个组件是容器中的组件，才能容器提供的<span class="doctag">@ConfigurationProperties</span>功能；</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@ConfigurationProperties</span>(prefix = &quot;person&quot;)默认从全局配置文件中获取值；</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PropertySource(value = &#123;&quot;classpath:person.properties&quot;&#125;)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;person&quot;)</span></span><br><span class="line"><span class="comment">//@Validated</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;bean class=&quot;Person&quot;&gt;</span></span><br><span class="line"><span class="comment">     *      &lt;property name=&quot;lastName&quot; value=&quot;字面量/$&#123;key&#125;从环境变量、配置文件中获取值/#&#123;SpEL&#125;&quot;&gt;&lt;/property&gt;</span></span><br><span class="line"><span class="comment">     * &lt;bean/&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//lastName必须是邮箱格式</span></span><br><span class="line">   <span class="comment">// @Email</span></span><br><span class="line">    <span class="comment">//@Value(&quot;$&#123;person.last-name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String lastName;</span><br><span class="line">    <span class="comment">//@Value(&quot;#&#123;11*2&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="comment">//@Value(&quot;true&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Boolean boss;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>@<strong>ImportResource</strong>：导入Spring的配置文件，让配置文件里面的内容生效；</p>
<p>Spring Boot里面没有Spring的配置文件，我们自己编写的配置文件，也不能自动识别；</p>
<p>想让Spring的配置文件生效，加载进来；@<strong>ImportResource</strong>标注在一个配置类上</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ImportResource(locations = &#123;&quot;classpath:beans.xml&quot;&#125;)</span></span><br><span class="line">导入Spring的配置文件让其生效</span><br></pre></td></tr></table></figure>



<p>不来编写Spring的配置文件</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;helloService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.atguigu.springboot.service.HelloService&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>SpringBoot推荐给容器中添加组件的方式；推荐使用全注解的方式</p>
<p>1、配置类**@Configuration**——&gt;Spring配置文件</p>
<p>2、使用**@Bean**给容器中添加组件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Configuration</span>：指明当前类是一个配置类；就是来替代之前的Spring配置文件</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 在配置文件中用&lt;bean&gt;&lt;bean/&gt;标签添加组件</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyAppConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将方法的返回值添加到容器中；容器中这个组件默认的id就是方法名</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HelloService <span class="title">helloService02</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;配置类@Bean给容器中添加组件了...&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> HelloService();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4、配置文件占位符"><a href="#4、配置文件占位符" class="headerlink" title="4、配置文件占位符"></a>4、配置文件占位符</h2><h3 id="1、随机数"><a href="#1、随机数" class="headerlink" title="1、随机数"></a>1、随机数</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">$&#123;random.value&#125;、$&#123;random.<span class="keyword">int</span>&#125;、$&#123;random.<span class="keyword">long</span>&#125;</span><br><span class="line">$&#123;random.<span class="keyword">int</span>(<span class="number">10</span>)&#125;、$&#123;random.<span class="keyword">int</span>[<span class="number">1024</span>,<span class="number">65536</span>]&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="2、占位符获取之前配置的值，如果没有可以是用-指定默认值"><a href="#2、占位符获取之前配置的值，如果没有可以是用-指定默认值" class="headerlink" title="2、占位符获取之前配置的值，如果没有可以是用:指定默认值"></a>2、占位符获取之前配置的值，如果没有可以是用:指定默认值</h3><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">person.last-name</span>=<span class="string">张三$&#123;random.uuid&#125;</span></span><br><span class="line"><span class="meta">person.age</span>=<span class="string">$&#123;random.int&#125;</span></span><br><span class="line"><span class="meta">person.birth</span>=<span class="string">2017/12/15</span></span><br><span class="line"><span class="meta">person.boss</span>=<span class="string">false</span></span><br><span class="line"><span class="meta">person.maps.k1</span>=<span class="string">v1</span></span><br><span class="line"><span class="meta">person.maps.k2</span>=<span class="string">14</span></span><br><span class="line"><span class="meta">person.lists</span>=<span class="string">a,b,c</span></span><br><span class="line"><span class="meta">person.dog.name</span>=<span class="string">$&#123;person.hello:hello&#125;_dog</span></span><br><span class="line"><span class="meta">person.dog.age</span>=<span class="string">15</span></span><br></pre></td></tr></table></figure>



<h2 id="5、Profile"><a href="#5、Profile" class="headerlink" title="5、Profile"></a>5、Profile</h2><h3 id="1、多Profile文件"><a href="#1、多Profile文件" class="headerlink" title="1、多Profile文件"></a>1、多Profile文件</h3><p>我们在主配置文件编写的时候，文件名可以是   application-{profile}.properties/yml</p>
<p>默认使用application.properties的配置；</p>
<h3 id="2、yml支持多文档块方式"><a href="#2、yml支持多文档块方式" class="headerlink" title="2、yml支持多文档块方式"></a>2、yml支持多文档块方式</h3><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8081</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">prod</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8083</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8084</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">prod</span>  <span class="comment">#指定属于哪个环境</span></span><br></pre></td></tr></table></figure>





<h3 id="3、激活指定profile"><a href="#3、激活指定profile" class="headerlink" title="3、激活指定profile"></a>3、激活指定profile</h3><p>​    1、在配置文件中指定  spring.profiles.active=dev</p>
<p>​    2、命令行：</p>
<p>​        java -jar spring-boot-02-config-0.0.1-SNAPSHOT.jar –spring.profiles.active=dev；</p>
<p>​        可以直接在测试的时候，配置传入命令行参数</p>
<p>​    3、虚拟机参数；</p>
<p>​        -Dspring.profiles.active=dev</p>
<h2 id="6、配置文件加载位置"><a href="#6、配置文件加载位置" class="headerlink" title="6、配置文件加载位置"></a>6、配置文件加载位置</h2><p>springboot 启动会扫描以下位置的application.properties或者application.yml文件作为Spring boot的默认配置文件</p>
<p>–file:./config/</p>
<p>–file:./</p>
<p>–classpath:/config/</p>
<p>–classpath:/</p>
<p>优先级由高到底，高优先级的配置会覆盖低优先级的配置；</p>
<p>SpringBoot会从这四个位置全部加载主配置文件；<strong>互补配置</strong>；</p>
<p>==我们还可以通过spring.config.location来改变默认的配置文件位置==</p>
<p><strong>项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；指定配置文件和默认加载的这些配置文件共同起作用形成互补配置；</strong></p>
<p>java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar –spring.config.location=G:/application.properties</p>
<h2 id="7、外部配置加载顺序"><a href="#7、外部配置加载顺序" class="headerlink" title="7、外部配置加载顺序"></a>7、外部配置加载顺序</h2><p><strong>==SpringBoot也可以从以下位置加载配置； 优先级从高到低；高优先级的配置覆盖低优先级的配置，所有的配置会形成互补配置==</strong></p>
<p><strong>1.命令行参数</strong></p>
<p>所有的配置都可以在命令行上进行指定</p>
<p>java -jar spring-boot-02-config-02-0.0.1-SNAPSHOT.jar –server.port=8087  –server.context-path=/abc</p>
<p>多个配置用空格分开； –配置项=值</p>
<p>2.来自java:comp/env的JNDI属性</p>
<p>3.Java系统属性（System.getProperties()）</p>
<p>4.操作系统环境变量</p>
<p>5.RandomValuePropertySource配置的random.*属性值</p>
<p>==<strong>由jar包外向jar包内进行寻找；</strong>==</p>
<p>==<strong>优先加载带profile</strong>==</p>
<p><strong>6.jar包外部的application-{profile}.properties或application.yml(带spring.profile)配置文件</strong></p>
<p><strong>7.jar包内部的application-{profile}.properties或application.yml(带spring.profile)配置文件</strong></p>
<p>==<strong>再来加载不带profile</strong>==</p>
<p><strong>8.jar包外部的application.properties或application.yml(不带spring.profile)配置文件</strong></p>
<p><strong>9.jar包内部的application.properties或application.yml(不带spring.profile)配置文件</strong></p>
<p>10.@Configuration注解类上的@PropertySource</p>
<p>11.通过SpringApplication.setDefaultProperties指定的默认属性</p>
<p>所有支持的配置加载来源；</p>
<p><a href="https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/reference/htmlsingle/#boot-features-external-config">参考官方文档</a></p>
<h2 id="8、自动配置原理"><a href="#8、自动配置原理" class="headerlink" title="8、自动配置原理"></a>8、自动配置原理</h2><p>配置文件到底能写什么？怎么写？自动配置原理；</p>
<p><a href="https://docs.spring.io/spring-boot/docs/1.5.9.RELEASE/reference/htmlsingle/#common-application-properties">配置文件能配置的属性参照</a></p>
<h3 id="1、自动配置原理："><a href="#1、自动配置原理：" class="headerlink" title="1、自动配置原理："></a>1、<strong>自动配置原理：</strong></h3><p>1）、SpringBoot启动的时候加载主配置类，开启了自动配置功能 ==@EnableAutoConfiguration==</p>
<p><strong>2）、@EnableAutoConfiguration 作用：</strong></p>
<ul>
<li><p> 利用EnableAutoConfigurationImportSelector给容器中导入一些组件？</p>
</li>
<li><p>可以查看selectImports()方法的内容；</p>
</li>
<li><p>List<String> configurations = getCandidateConfigurations(annotationMetadata,      attributes);获取候选的配置</p>
<ul>
<li><p>```java<br>SpringFactoriesLoader.loadFactoryNames()<br>扫描所有jar包类路径下  META-INF/spring.factories<br>把扫描到的这些文件的内容包装成properties对象<br>从properties中获取到EnableAutoConfiguration.class类（类名）对应的值，然后把他们添加在容器中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">**==将 类路径下  META-INF/spring.factories 里面配置的所有EnableAutoConfiguration的值加入到了容器中；==**</span><br><span class="line"></span><br><span class="line">```properties</span><br><span class="line"># Auto Configure</span><br><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\</span><br><span class="line">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.cassandra.CassandraAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.cloud.CloudAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.cassandra.CassandraRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.couchbase.CouchbaseRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.ldap.LdapDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.mongo.MongoRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.neo4j.Neo4jRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.solr.SolrRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.elasticsearch.jest.JestAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.h2.H2ConsoleAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.hazelcast.HazelcastAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.JndiDataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jms.JmsAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jersey.JerseyAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.jooq.JooqAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.ldap.LdapAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mail.MailSenderValidatorAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mobile.DeviceResolverAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mobile.DeviceDelegatingViewResolverAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mobile.SitePreferenceAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mongo.embedded.EmbeddedMongoAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.SecurityFilterAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.sendgrid.SendGridAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.session.SessionAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.social.SocialWebAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.social.FacebookAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.social.LinkedInAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.social.TwitterAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.MultipartAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.WebClientAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.websocket.WebSocketMessagingAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.webservices.WebServicesAutoConfiguration</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<p>每一个这样的  xxxAutoConfiguration类都是容器中的一个组件，都加入到容器中；用他们来做自动配置；</p>
<p>3）、每一个自动配置类进行自动配置功能；</p>
<p>4）、以<strong>HttpEncodingAutoConfiguration（Http编码自动配置）</strong>为例解释自动配置原理；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span>   <span class="comment">//表示这是一个配置类，以前编写的配置文件一样，也可以给容器中添加组件</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(HttpEncodingProperties.class)</span>  <span class="comment">//启动指定类的ConfigurationProperties功能；将配置文件中对应的值和HttpEncodingProperties绑定起来；并把HttpEncodingProperties加入到ioc容器中</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@ConditionalOnWebApplication</span> <span class="comment">//Spring底层@Conditional注解（Spring注解版），根据不同的条件，如果满足指定的条件，整个配置类里面的配置就会生效；    判断当前应用是否是web应用，如果是，当前配置类生效</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@ConditionalOnClass(CharacterEncodingFilter.class)</span>  <span class="comment">//判断当前项目有没有这个类CharacterEncodingFilter；SpringMVC中进行乱码解决的过滤器；</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@ConditionalOnProperty(prefix = &quot;spring.http.encoding&quot;, value = &quot;enabled&quot;, matchIfMissing = true)</span>  <span class="comment">//判断配置文件中是否存在某个配置  spring.http.encoding.enabled；如果不存在，判断也是成立的</span></span><br><span class="line"><span class="comment">//即使我们配置文件中不配置pring.http.encoding.enabled=true，也是默认生效的；</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpEncodingAutoConfiguration</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  	<span class="comment">//他已经和SpringBoot的配置文件映射了</span></span><br><span class="line">  	<span class="keyword">private</span> <span class="keyword">final</span> HttpEncodingProperties properties;</span><br><span class="line">  </span><br><span class="line">   <span class="comment">//只有一个有参构造器的情况下，参数的值就会从容器中拿</span></span><br><span class="line">  	<span class="function"><span class="keyword">public</span> <span class="title">HttpEncodingAutoConfiguration</span><span class="params">(HttpEncodingProperties properties)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.properties = properties;</span><br><span class="line">	&#125;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Bean</span>   <span class="comment">//给容器中添加一个组件，这个组件的某些值需要从properties中获取</span></span><br><span class="line">	<span class="meta">@ConditionalOnMissingBean(CharacterEncodingFilter.class)</span> <span class="comment">//判断容器没有这个组件？</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> CharacterEncodingFilter <span class="title">characterEncodingFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		CharacterEncodingFilter filter = <span class="keyword">new</span> OrderedCharacterEncodingFilter();</span><br><span class="line">		filter.setEncoding(<span class="keyword">this</span>.properties.getCharset().name());</span><br><span class="line">		filter.setForceRequestEncoding(<span class="keyword">this</span>.properties.shouldForce(Type.REQUEST));</span><br><span class="line">		filter.setForceResponseEncoding(<span class="keyword">this</span>.properties.shouldForce(Type.RESPONSE));</span><br><span class="line">		<span class="keyword">return</span> filter;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>根据当前不同的条件判断，决定这个配置类是否生效？</p>
<p>一但这个配置类生效；这个配置类就会给容器中添加各种组件；这些组件的属性是从对应的properties类中获取的，这些类里面的每一个属性又是和配置文件绑定的；</p>
<p>5）、所有在配置文件中能配置的属性都是在xxxxProperties类中封装者‘；配置文件能配置什么就可以参照某个功能对应的这个属性类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;spring.http.encoding&quot;)</span>  <span class="comment">//从配置文件中获取指定的值和bean的属性进行绑定</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpEncodingProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Charset DEFAULT_CHARSET = Charset.forName(<span class="string">&quot;UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure>





<p><strong>精髓：</strong></p>
<p>​    <strong>1）、SpringBoot启动会加载大量的自动配置类</strong></p>
<p>​    <strong>2）、我们看我们需要的功能有没有SpringBoot默认写好的自动配置类；</strong></p>
<p>​    <strong>3）、我们再来看这个自动配置类中到底配置了哪些组件；（只要我们要用的组件有，我们就不需要再来配置了）</strong></p>
<p>​    <strong>4）、给容器中自动配置类添加组件的时候，会从properties类中获取某些属性。我们就可以在配置文件中指定这些属性的值；</strong></p>
<p>xxxxAutoConfigurartion：自动配置类；</p>
<p>给容器中添加组件</p>
<p>xxxxProperties:封装配置文件中相关属性；</p>
<h3 id="2、细节"><a href="#2、细节" class="headerlink" title="2、细节"></a>2、细节</h3><h4 id="1、-Conditional派生注解（Spring注解版原生的-Conditional作用）"><a href="#1、-Conditional派生注解（Spring注解版原生的-Conditional作用）" class="headerlink" title="1、@Conditional派生注解（Spring注解版原生的@Conditional作用）"></a>1、@Conditional派生注解（Spring注解版原生的@Conditional作用）</h4><p>作用：必须是@Conditional指定的条件成立，才给容器中添加组件，配置配里面的所有内容才生效；</p>
<table>
<thead>
<tr>
<th>@Conditional扩展注解</th>
<th>作用（判断是否满足当前指定条件）</th>
</tr>
</thead>
<tbody><tr>
<td>@ConditionalOnJava</td>
<td>系统的java版本是否符合要求</td>
</tr>
<tr>
<td>@ConditionalOnBean</td>
<td>容器中存在指定Bean；</td>
</tr>
<tr>
<td>@ConditionalOnMissingBean</td>
<td>容器中不存在指定Bean；</td>
</tr>
<tr>
<td>@ConditionalOnExpression</td>
<td>满足SpEL表达式指定</td>
</tr>
<tr>
<td>@ConditionalOnClass</td>
<td>系统中有指定的类</td>
</tr>
<tr>
<td>@ConditionalOnMissingClass</td>
<td>系统中没有指定的类</td>
</tr>
<tr>
<td>@ConditionalOnSingleCandidate</td>
<td>容器中只有一个指定的Bean，或者这个Bean是首选Bean</td>
</tr>
<tr>
<td>@ConditionalOnProperty</td>
<td>系统中指定的属性是否有指定的值</td>
</tr>
<tr>
<td>@ConditionalOnResource</td>
<td>类路径下是否存在指定资源文件</td>
</tr>
<tr>
<td>@ConditionalOnWebApplication</td>
<td>当前是web环境</td>
</tr>
<tr>
<td>@ConditionalOnNotWebApplication</td>
<td>当前不是web环境</td>
</tr>
<tr>
<td>1@ConditionalOnJndi</td>
<td>JNDI存在指定项</td>
</tr>
</tbody></table>
<p><strong>自动配置类必须在一定的条件下才能生效；</strong></p>
<p>我们怎么知道哪些自动配置类生效；</p>
<p>**==我们可以通过启用  debug=true属性；来让控制台打印自动配置报告==**，这样我们就可以很方便的知道哪些自动配置类生效；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">=========================</span><br><span class="line">AUTO-CONFIGURATION REPORT</span><br><span class="line">=========================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Positive matches:（自动配置类启用的）</span><br><span class="line">-----------------</span><br><span class="line"></span><br><span class="line">   DispatcherServletAutoConfiguration matched:</span><br><span class="line">      - <span class="meta">@ConditionalOnClass</span> found required <span class="class"><span class="keyword">class</span> &#x27;<span class="title">org</span>.<span class="title">springframework</span>.<span class="title">web</span>.<span class="title">servlet</span>.<span class="title">DispatcherServlet</span>&#x27;</span>; <span class="meta">@ConditionalOnMissingClass</span> <span class="function">did not find unwanted <span class="title">class</span> <span class="params">(OnClassCondition)</span></span></span><br><span class="line"><span class="function">      - @<span class="title">ConditionalOnWebApplication</span> <span class="params">(required)</span> found <span class="title">StandardServletEnvironment</span> <span class="params">(OnWebApplicationCondition)</span></span></span><br><span class="line"><span class="function">        </span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">Negative matches:（没有启动，没有匹配成功的自动配置类）</span></span><br><span class="line"><span class="function">-----------------</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">   ActiveMQAutoConfiguration:</span></span><br><span class="line"><span class="function">      Did not match:</span></span><br><span class="line"><span class="function">         - @ConditionalOnClass did not find required classes &#x27;javax.jms.ConnectionFactory&#x27;, &#x27;org.apache.activemq.ActiveMQConnectionFactory&#x27; <span class="params">(OnClassCondition)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">   AopAutoConfiguration:</span></span><br><span class="line"><span class="function">      Did not match:</span></span><br><span class="line"><span class="function">         - @ConditionalOnClass did not find required classes &#x27;org.aspectj.lang.annotation.Aspect&#x27;, &#x27;org.aspectj.lang.reflect.Advice&#x27; <span class="params">(OnClassCondition)</span></span></span><br><span class="line"><span class="function">        </span></span><br></pre></td></tr></table></figure>





<h1 id="三、日志"><a href="#三、日志" class="headerlink" title="三、日志"></a>三、日志</h1><h2 id="1、日志框架"><a href="#1、日志框架" class="headerlink" title="1、日志框架"></a>1、日志框架</h2><p> 小张；开发一个大型系统；</p>
<p>​        1、System.out.println(“”)；将关键数据打印在控制台；去掉？写在一个文件？</p>
<p>​        2、框架来记录系统的一些运行时信息；日志框架 ；  zhanglogging.jar；</p>
<p>​        3、高大上的几个功能？异步模式？自动归档？xxxx？  zhanglogging-good.jar？</p>
<p>​        4、将以前框架卸下来？换上新的框架，重新修改之前相关的API；zhanglogging-prefect.jar；</p>
<p>​        5、JDBC—数据库驱动；</p>
<p>​            写了一个统一的接口层；日志门面（日志的一个抽象层）；logging-abstract.jar；</p>
<p>​            给项目中导入具体的日志实现就行了；我们之前的日志框架都是实现的抽象层；</p>
<p><strong>市面上的日志框架；</strong></p>
<p>JUL、JCL、Jboss-logging、logback、log4j、log4j2、slf4j….</p>
<table>
<thead>
<tr>
<th>日志门面  （日志的抽象层）</th>
<th>日志实现</th>
</tr>
</thead>
<tbody><tr>
<td><del>JCL（Jakarta  Commons Logging）</del>    SLF4j（Simple  Logging Facade for Java）    <strong><del>jboss-logging</del></strong></td>
<td>Log4j  JUL（java.util.logging）  Log4j2  <strong>Logback</strong></td>
</tr>
</tbody></table>
<p>左边选一个门面（抽象层）、右边来选一个实现；</p>
<p>日志门面：  SLF4J；</p>
<p>日志实现：Logback；</p>
<p>SpringBoot：底层是Spring框架，Spring框架默认是用JCL；‘</p>
<p>​    <strong>==SpringBoot选用 SLF4j和logback；==</strong></p>
<h2 id="2、SLF4j使用"><a href="#2、SLF4j使用" class="headerlink" title="2、SLF4j使用"></a>2、SLF4j使用</h2><h3 id="1、如何在系统中使用SLF4j-https-www-slf4j-org"><a href="#1、如何在系统中使用SLF4j-https-www-slf4j-org" class="headerlink" title="1、如何在系统中使用SLF4j   https://www.slf4j.org"></a>1、如何在系统中使用SLF4j   <a href="https://www.slf4j.org/">https://www.slf4j.org</a></h3><p>以后开发的时候，日志记录方法的调用，不应该来直接调用日志的实现类，而是调用日志抽象层里面的方法；</p>
<p>给系统里面导入slf4j的jar和  logback的实现jar</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Logger logger = LoggerFactory.getLogger(HelloWorld.class);</span><br><span class="line">    logger.info(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>图示；</p>
<p><img src="images/concrete-bindings.png" alt="images/concrete-bindings.png"></p>
<p>每一个日志的实现框架都有自己的配置文件。使用slf4j以后，<strong>配置文件还是做成日志实现框架自己本身的配置文件；</strong></p>
<h3 id="2、遗留问题"><a href="#2、遗留问题" class="headerlink" title="2、遗留问题"></a>2、遗留问题</h3><p>a（slf4j+logback）: Spring（commons-logging）、Hibernate（jboss-logging）、MyBatis、xxxx</p>
<p>统一日志记录，即使是别的框架和我一起统一使用slf4j进行输出？</p>
<p><img src="images/legacy.png"></p>
<p><strong>如何让系统中所有的日志都统一到slf4j；</strong></p>
<p>==1、将系统中其他日志框架先排除出去；==</p>
<p>==2、用中间包来替换原有的日志框架；==</p>
<p>==3、我们导入slf4j其他的实现==</p>
<h2 id="3、SpringBoot日志关系"><a href="#3、SpringBoot日志关系" class="headerlink" title="3、SpringBoot日志关系"></a>3、SpringBoot日志关系</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>SpringBoot使用它来做日志功能；</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>底层依赖关系</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180131220946.png"></p>
<p>总结：</p>
<p>​    1）、SpringBoot底层也是使用slf4j+logback的方式进行日志记录</p>
<p>​    2）、SpringBoot也把其他的日志都替换成了slf4j；</p>
<p>​    3）、中间替换包？</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SuppressWarnings(&quot;rawtypes&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">LogFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> String UNSUPPORTED_OPERATION_IN_JCL_OVER_SLF4J = <span class="string">&quot;http://www.slf4j.org/codes.html#unsupported_operation_in_jcl_over_slf4j&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> LogFactory logFactory = <span class="keyword">new</span> SLF4JLogFactory();</span><br></pre></td></tr></table></figure>

<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180131221411.png"></p>
<p>​    4）、如果我们要引入其他框架？一定要把这个框架的默认日志依赖移除掉？</p>
<p>​            Spring框架用的是commons-logging；</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>==SpringBoot能自动适配所有的日志，而且底层使用slf4j+logback的方式记录日志，引入其他框架的时候，只需要把这个框架依赖的日志框架排除掉即可；==</strong></p>
<h2 id="4、日志使用；"><a href="#4、日志使用；" class="headerlink" title="4、日志使用；"></a>4、日志使用；</h2><h3 id="1、默认配置"><a href="#1、默认配置" class="headerlink" title="1、默认配置"></a>1、默认配置</h3><p>SpringBoot默认帮我们配置好了日志；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//记录器</span></span><br><span class="line">Logger logger = LoggerFactory.getLogger(getClass());</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//System.out.println();</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//日志的级别；</span></span><br><span class="line">	<span class="comment">//由低到高   trace&lt;debug&lt;info&lt;warn&lt;error</span></span><br><span class="line">	<span class="comment">//可以调整输出的日志级别；日志就只会在这个级别以以后的高级别生效</span></span><br><span class="line">	logger.trace(<span class="string">&quot;这是trace日志...&quot;</span>);</span><br><span class="line">	logger.debug(<span class="string">&quot;这是debug日志...&quot;</span>);</span><br><span class="line">	<span class="comment">//SpringBoot默认给我们使用的是info级别的，没有指定级别的就用SpringBoot默认规定的级别；root级别</span></span><br><span class="line">	logger.info(<span class="string">&quot;这是info日志...&quot;</span>);</span><br><span class="line">	logger.warn(<span class="string">&quot;这是warn日志...&quot;</span>);</span><br><span class="line">	logger.error(<span class="string">&quot;这是error日志...&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<pre><code>     &lt;! --
    日志输出格式：
        %d表示日期时间，
        %thread表示线程名，
        %-5level：级别从左显示5个字符宽度
        %logger&#123;50&#125; 表示logger名字最长50个字符，否则按照句点分割。 
        %msg：日志消息，
        %n是换行符
    --&gt;
    %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n
</code></pre>
<p>SpringBoot修改日志的默认配置</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">logging.level.com.atguigu</span>=<span class="string">trace</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#logging.path=</span></span><br><span class="line"><span class="comment"># 不指定路径在当前项目下生成springboot.log日志</span></span><br><span class="line"><span class="comment"># 可以指定完整的路径；</span></span><br><span class="line"><span class="comment">#logging.file=G:/springboot.log</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 在当前磁盘的根路径下创建spring文件夹和里面的log文件夹；使用 spring.log 作为默认文件</span></span><br><span class="line"><span class="meta">logging.path</span>=<span class="string">/spring/log</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#  在控制台输出的日志的格式</span></span><br><span class="line"><span class="meta">logging.pattern.console</span>=<span class="string">%d&#123;yyyy-MM-dd&#125; [%thread] %-5level %logger&#123;50&#125; - %msg%n</span></span><br><span class="line"><span class="comment"># 指定文件中日志输出的格式</span></span><br><span class="line"><span class="meta">logging.pattern.file</span>=<span class="string">%d&#123;yyyy-MM-dd&#125; === [%thread] === %-5level === %logger&#123;50&#125; ==== %msg%n</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>logging.file</th>
<th>logging.path</th>
<th>Example</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>(none)</td>
<td>(none)</td>
<td></td>
<td>只在控制台输出</td>
</tr>
<tr>
<td>指定文件名</td>
<td>(none)</td>
<td>my.log</td>
<td>输出日志到my.log文件</td>
</tr>
<tr>
<td>(none)</td>
<td>指定目录</td>
<td>/var/log</td>
<td>输出到指定目录的 spring.log 文件中</td>
</tr>
</tbody></table>
<h3 id="2、指定配置"><a href="#2、指定配置" class="headerlink" title="2、指定配置"></a>2、指定配置</h3><p>给类路径下放上每个日志框架自己的配置文件即可；SpringBoot就不使用他默认配置的了</p>
<table>
<thead>
<tr>
<th>Logging System</th>
<th>Customization</th>
</tr>
</thead>
<tbody><tr>
<td>Logback</td>
<td><code>logback-spring.xml</code>, <code>logback-spring.groovy</code>, <code>logback.xml</code> or <code>logback.groovy</code></td>
</tr>
<tr>
<td>Log4j2</td>
<td><code>log4j2-spring.xml</code> or <code>log4j2.xml</code></td>
</tr>
<tr>
<td>JDK (Java Util Logging)</td>
<td><code>logging.properties</code></td>
</tr>
</tbody></table>
<p>logback.xml：直接就被日志框架识别了；</p>
<p><strong>logback-spring.xml</strong>：日志框架就不直接加载日志的配置项，由SpringBoot解析日志配置，可以使用SpringBoot的高级Profile功能</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">&quot;staging&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- configuration to be enabled when the &quot;staging&quot; profile is active --&gt;</span></span><br><span class="line">  	可以指定某段配置只在某个环境下生效</span><br><span class="line"><span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;stdout&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        日志输出格式：</span></span><br><span class="line"><span class="comment">			%d表示日期时间，</span></span><br><span class="line"><span class="comment">			%thread表示线程名，</span></span><br><span class="line"><span class="comment">			%-5level：级别从左显示5个字符宽度</span></span><br><span class="line"><span class="comment">			%logger&#123;50&#125; 表示logger名字最长50个字符，否则按照句点分割。 </span></span><br><span class="line"><span class="comment">			%msg：日志消息，</span></span><br><span class="line"><span class="comment">			%n是换行符</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.classic.PatternLayout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">&quot;dev&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; ----&gt; [%thread] ---&gt; %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">springProfile</span> <span class="attr">name</span>=<span class="string">&quot;!dev&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; ==== [%thread] ==== %-5level %logger&#123;50&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">springProfile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>如果使用logback.xml作为日志配置文件，还要使用profile功能，会有以下错误</p>
<p> <code>no applicable action for [springProfile]</code></p>
<h2 id="5、切换日志框架"><a href="#5、切换日志框架" class="headerlink" title="5、切换日志框架"></a>5、切换日志框架</h2><p>可以按照slf4j的日志适配图，进行相关的切换；</p>
<p>slf4j+log4j的方式；</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logback-classic<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.qos.logback<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>





<p>切换为log4j2</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-log4j2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="四、Web开发"><a href="#四、Web开发" class="headerlink" title="四、Web开发"></a>四、Web开发</h1><h2 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h2><p>使用SpringBoot；</p>
<p><strong>1）、创建SpringBoot应用，选中我们需要的模块；</strong></p>
<p><strong>2）、SpringBoot已经默认将这些场景配置好了，只需要在配置文件中指定少量配置就可以运行起来</strong></p>
<p><strong>3）、自己编写业务代码；</strong></p>
<p><strong>自动配置原理？</strong></p>
<p>这个场景SpringBoot帮我们配置了什么？能不能修改？能修改哪些配置？能不能扩展？xxx</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xxxxAutoConfiguration：帮我们给容器中自动配置组件；</span><br><span class="line">xxxxProperties:配置类来封装配置文件的内容；</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="2、SpringBoot对静态资源的映射规则；"><a href="#2、SpringBoot对静态资源的映射规则；" class="headerlink" title="2、SpringBoot对静态资源的映射规则；"></a>2、SpringBoot对静态资源的映射规则；</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;spring.resources&quot;, ignoreUnknownFields = false)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResourceProperties</span> <span class="keyword">implements</span> <span class="title">ResourceLoaderAware</span> </span>&#123;</span><br><span class="line">  <span class="comment">//可以设置和静态资源有关的参数，缓存时间等</span></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">WebMvcAuotConfiguration：</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (!<span class="keyword">this</span>.resourceProperties.isAddMappings()) &#123;</span><br><span class="line">			logger.debug(<span class="string">&quot;Default resource handling disabled&quot;</span>);</span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		Integer cachePeriod = <span class="keyword">this</span>.resourceProperties.getCachePeriod();</span><br><span class="line">		<span class="keyword">if</span> (!registry.hasMappingForPattern(<span class="string">&quot;/webjars/**&quot;</span>)) &#123;</span><br><span class="line">			customizeResourceHandlerRegistration(</span><br><span class="line">					registry.addResourceHandler(<span class="string">&quot;/webjars/**&quot;</span>)</span><br><span class="line">							.addResourceLocations(</span><br><span class="line">									<span class="string">&quot;classpath:/META-INF/resources/webjars/&quot;</span>)</span><br><span class="line">					.setCachePeriod(cachePeriod));</span><br><span class="line">		&#125;</span><br><span class="line">		String staticPathPattern = <span class="keyword">this</span>.mvcProperties.getStaticPathPattern();</span><br><span class="line">         	<span class="comment">//静态资源文件夹映射</span></span><br><span class="line">		<span class="keyword">if</span> (!registry.hasMappingForPattern(staticPathPattern)) &#123;</span><br><span class="line">			customizeResourceHandlerRegistration(</span><br><span class="line">					registry.addResourceHandler(staticPathPattern)</span><br><span class="line">							.addResourceLocations(</span><br><span class="line">									<span class="keyword">this</span>.resourceProperties.getStaticLocations())</span><br><span class="line">					.setCachePeriod(cachePeriod));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//配置欢迎页映射</span></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> WelcomePageHandlerMapping <span class="title">welcomePageHandlerMapping</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">			ResourceProperties resourceProperties)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> WelcomePageHandlerMapping(resourceProperties.getWelcomePage(),</span><br><span class="line">				<span class="keyword">this</span>.mvcProperties.getStaticPathPattern());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//配置喜欢的图标</span></span><br><span class="line">	<span class="meta">@Configuration</span></span><br><span class="line">	<span class="meta">@ConditionalOnProperty(value = &quot;spring.mvc.favicon.enabled&quot;, matchIfMissing = true)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">FaviconConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">final</span> ResourceProperties resourceProperties;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">FaviconConfiguration</span><span class="params">(ResourceProperties resourceProperties)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">this</span>.resourceProperties = resourceProperties;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Bean</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> SimpleUrlHandlerMapping <span class="title">faviconHandlerMapping</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			SimpleUrlHandlerMapping mapping = <span class="keyword">new</span> SimpleUrlHandlerMapping();</span><br><span class="line">			mapping.setOrder(Ordered.HIGHEST_PRECEDENCE + <span class="number">1</span>);</span><br><span class="line">             	<span class="comment">//所有  **/favicon.ico </span></span><br><span class="line">			mapping.setUrlMap(Collections.singletonMap(<span class="string">&quot;**/favicon.ico&quot;</span>,</span><br><span class="line">					faviconRequestHandler()));</span><br><span class="line">			<span class="keyword">return</span> mapping;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Bean</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> ResourceHttpRequestHandler <span class="title">faviconRequestHandler</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			ResourceHttpRequestHandler requestHandler = <span class="keyword">new</span> ResourceHttpRequestHandler();</span><br><span class="line">			requestHandler</span><br><span class="line">					.setLocations(<span class="keyword">this</span>.resourceProperties.getFaviconLocations());</span><br><span class="line">			<span class="keyword">return</span> requestHandler;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>==1）、所有 /webjars/** ，都去 classpath:/META-INF/resources/webjars/ 找资源；==</p>
<p>​    webjars：以jar包的方式引入静态资源；</p>
<p><a href="http://www.webjars.org/">http://www.webjars.org/</a></p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180203181751.png"></p>
<p>localhost:8080/webjars/jquery/3.3.1/jquery.js</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入jquery-webjar--&gt;</span>在访问的时候只需要写webjars下面资源的名称即可</span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.webjars<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jquery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>==2）、”/**” 访问当前项目的任何资源，都去（静态资源的文件夹）找映射==</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;classpath:/META-INF/resources/&quot;, </span><br><span class="line">&quot;classpath:/resources/&quot;,</span><br><span class="line">&quot;classpath:/static/&quot;, </span><br><span class="line">&quot;classpath:/public/&quot; </span><br><span class="line">&quot;/&quot;：当前项目的根路径</span><br></pre></td></tr></table></figure>

<p>localhost:8080/abc ===  去静态资源文件夹里面找abc</p>
<p>==3）、欢迎页； 静态资源文件夹下的所有index.html页面；被”/**”映射；==</p>
<p>​    localhost:8080/   找index页面</p>
<p>==4）、所有的 **/favicon.ico  都是在静态资源文件下找；==</p>
<h2 id="3、模板引擎"><a href="#3、模板引擎" class="headerlink" title="3、模板引擎"></a>3、模板引擎</h2><p>JSP、Velocity、Freemarker、Thymeleaf</p>
<p><img src="images/template-engine.png"></p>
<p>SpringBoot推荐的Thymeleaf；</p>
<p>语法更简单，功能更强大；</p>
<h3 id="1、引入thymeleaf；"><a href="#1、引入thymeleaf；" class="headerlink" title="1、引入thymeleaf；"></a>1、引入thymeleaf；</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          	2.1.6</span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">切换thymeleaf版本</span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">thymeleaf.version</span>&gt;</span>3.0.9.RELEASE<span class="tag">&lt;/<span class="name">thymeleaf.version</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 布局功能的支持程序  thymeleaf3主程序  layout2以上版本 --&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- thymeleaf2   layout1--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span>2.2.2<span class="tag">&lt;/<span class="name">thymeleaf-layout-dialect.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="2、Thymeleaf使用"><a href="#2、Thymeleaf使用" class="headerlink" title="2、Thymeleaf使用"></a>2、Thymeleaf使用</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;spring.thymeleaf&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThymeleafProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Charset DEFAULT_ENCODING = Charset.forName(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> MimeType DEFAULT_CONTENT_TYPE = MimeType.valueOf(<span class="string">&quot;text/html&quot;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_PREFIX = <span class="string">&quot;classpath:/templates/&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_SUFFIX = <span class="string">&quot;.html&quot;</span>;</span><br><span class="line">  	<span class="comment">//</span></span><br></pre></td></tr></table></figure>

<p>只要我们把HTML页面放在classpath:/templates/，thymeleaf就能自动渲染；</p>
<p>使用：</p>
<p>1、导入thymeleaf的名称空间</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2、使用thymeleaf语法；</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>成功！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--th:text 将div里面的文本内容设置为 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;hello&#125;&quot;</span>&gt;</span>这是显示欢迎信息<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="3、语法规则"><a href="#3、语法规则" class="headerlink" title="3、语法规则"></a>3、语法规则</h3><p>1）、th:text；改变当前元素里面的文本内容；</p>
<p>​    th：任意html属性；来替换原生属性的值</p>
<p><img src="images/2018-02-04_123955.png"></p>
<p>2）、表达式？</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">Simple</span> <span class="string">expressions:（表达式语法）</span></span><br><span class="line">    <span class="attr">Variable</span> <span class="string">Expressions: $&#123;...&#125;：获取变量值；OGNL；</span></span><br><span class="line">    		<span class="attr">1）、获取对象的属性、调用方法</span></span><br><span class="line">    		<span class="attr">2）、使用内置的基本对象：</span></span><br><span class="line"><span class="comment">    			#ctx : the context object.</span></span><br><span class="line"><span class="comment">    			#vars: the context variables.</span></span><br><span class="line"><span class="comment">                #locale : the context locale.</span></span><br><span class="line"><span class="comment">                #request : (only in Web Contexts) the HttpServletRequest object.</span></span><br><span class="line"><span class="comment">                #response : (only in Web Contexts) the HttpServletResponse object.</span></span><br><span class="line"><span class="comment">                #session : (only in Web Contexts) the HttpSession object.</span></span><br><span class="line"><span class="comment">                #servletContext : (only in Web Contexts) the ServletContext object.</span></span><br><span class="line">                </span><br><span class="line">                <span class="attr">$&#123;session.foo&#125;</span></span><br><span class="line">            <span class="attr">3）、内置的一些工具对象：</span></span><br><span class="line"><span class="comment">#execInfo : information about the template being processed.</span></span><br><span class="line"><span class="comment">#messages : methods for obtaining externalized messages inside variables expressions, in the same way as they would be obtained using #&#123;…&#125; syntax.</span></span><br><span class="line"><span class="comment">#uris : methods for escaping parts of URLs/URIs</span></span><br><span class="line"><span class="comment">#conversions : methods for executing the configured conversion service (if any).</span></span><br><span class="line"><span class="comment">#dates : methods for java.util.Date objects: formatting, component extraction, etc.</span></span><br><span class="line"><span class="comment">#calendars : analogous to #dates , but for java.util.Calendar objects.</span></span><br><span class="line"><span class="comment">#numbers : methods for formatting numeric objects.</span></span><br><span class="line"><span class="comment">#strings : methods for String objects: contains, startsWith, prepending/appending, etc.</span></span><br><span class="line"><span class="comment">#objects : methods for objects in general.</span></span><br><span class="line"><span class="comment">#bools : methods for boolean evaluation.</span></span><br><span class="line"><span class="comment">#arrays : methods for arrays.</span></span><br><span class="line"><span class="comment">#lists : methods for lists.</span></span><br><span class="line"><span class="comment">#sets : methods for sets.</span></span><br><span class="line"><span class="comment">#maps : methods for maps.</span></span><br><span class="line"><span class="comment">#aggregates : methods for creating aggregates on arrays or collections.</span></span><br><span class="line"><span class="comment">#ids : methods for dealing with id attributes that might be repeated (for example, as a result of an iteration).</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">Selection</span> <span class="string">Variable Expressions: *&#123;...&#125;：选择表达式：和$&#123;&#125;在功能上是一样；</span></span><br><span class="line">    	<span class="meta">补充：配合</span> <span class="string">th:object=&quot;$&#123;session.user&#125;：</span></span><br><span class="line">   <span class="meta">&lt;div</span> <span class="string">th:object=&quot;$&#123;session.user&#125;&quot;&gt;</span></span><br><span class="line">    <span class="meta">&lt;p&gt;Name</span>: <span class="string">&lt;span th:text=&quot;*&#123;firstName&#125;&quot;&gt;Sebastian&lt;/span&gt;.&lt;/p&gt;</span></span><br><span class="line">    <span class="meta">&lt;p&gt;Surname</span>: <span class="string">&lt;span th:text=&quot;*&#123;lastName&#125;&quot;&gt;Pepper&lt;/span&gt;.&lt;/p&gt;</span></span><br><span class="line">    <span class="meta">&lt;p&gt;Nationality</span>: <span class="string">&lt;span th:text=&quot;*&#123;nationality&#125;&quot;&gt;Saturn&lt;/span&gt;.&lt;/p&gt;</span></span><br><span class="line">    <span class="attr">&lt;/div&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="attr">Message</span> <span class="string">Expressions: #&#123;...&#125;：获取国际化内容</span></span><br><span class="line">    <span class="attr">Link</span> <span class="string">URL Expressions: @&#123;...&#125;：定义URL；</span></span><br><span class="line">    		<span class="meta">@&#123;/order/process(execId</span>=<span class="string">$&#123;execId&#125;,execType=&#x27;FAST&#x27;)&#125;</span></span><br><span class="line">    <span class="attr">Fragment</span> <span class="string">Expressions: ~&#123;...&#125;：片段引用表达式</span></span><br><span class="line">    		<span class="meta">&lt;div</span> <span class="string">th:insert=&quot;~&#123;commons :: main&#125;&quot;&gt;...&lt;/div&gt;</span></span><br><span class="line">    		</span><br><span class="line"><span class="attr">Literals（字面量）</span></span><br><span class="line">      <span class="attr">Text</span> <span class="string">literals: &#x27;one text&#x27; , &#x27;Another one!&#x27; ,…</span></span><br><span class="line">      <span class="attr">Number</span> <span class="string">literals: 0 , 34 , 3.0 , 12.3 ,…</span></span><br><span class="line">      <span class="attr">Boolean</span> <span class="string">literals: true , false</span></span><br><span class="line">      <span class="attr">Null</span> <span class="string">literal: null</span></span><br><span class="line">      <span class="attr">Literal</span> <span class="string">tokens: one , sometext , main ,…</span></span><br><span class="line"><span class="attr">Text</span> <span class="string">operations:（文本操作）</span></span><br><span class="line">    <span class="attr">String</span> <span class="string">concatenation: +</span></span><br><span class="line">    <span class="attr">Literal</span> <span class="string">substitutions: |The name is $&#123;name&#125;|</span></span><br><span class="line"><span class="attr">Arithmetic</span> <span class="string">operations:（数学运算）</span></span><br><span class="line">    <span class="attr">Binary</span> <span class="string">operators: + , - , * , / , %</span></span><br><span class="line">    <span class="attr">Minus</span> <span class="string">sign (unary operator): -</span></span><br><span class="line"><span class="attr">Boolean</span> <span class="string">operations:（布尔运算）</span></span><br><span class="line">    <span class="attr">Binary</span> <span class="string">operators: and , or</span></span><br><span class="line">    <span class="attr">Boolean</span> <span class="string">negation (unary operator): ! , not</span></span><br><span class="line"><span class="attr">Comparisons</span> <span class="string">and equality:（比较运算）</span></span><br><span class="line">    <span class="attr">Comparators</span>: <span class="string">&gt; , &lt; , &gt;= , &lt;= ( gt , lt , ge , le )</span></span><br><span class="line">    <span class="attr">Equality</span> <span class="string">operators: == , != ( eq , ne )</span></span><br><span class="line"><span class="attr">Conditional</span> <span class="string">operators:条件运算（三元运算符）</span></span><br><span class="line">    <span class="meta">If-then</span>: <span class="string">(if) ? (then)</span></span><br><span class="line">    <span class="meta">If-then-else</span>: <span class="string">(if) ? (then) : (else)</span></span><br><span class="line">    <span class="attr">Default</span>: <span class="string">(value) ?: (defaultvalue)</span></span><br><span class="line"><span class="attr">Special</span> <span class="string">tokens:</span></span><br><span class="line">    <span class="meta">No-Operation</span>: <span class="string">_ </span></span><br></pre></td></tr></table></figure>

<h2 id="4、SpringMVC自动配置"><a href="#4、SpringMVC自动配置" class="headerlink" title="4、SpringMVC自动配置"></a>4、SpringMVC自动配置</h2><p><a href="https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#boot-features-developing-web-applications">https://docs.spring.io/spring-boot/docs/1.5.10.RELEASE/reference/htmlsingle/#boot-features-developing-web-applications</a></p>
<h3 id="1-Spring-MVC-auto-configuration"><a href="#1-Spring-MVC-auto-configuration" class="headerlink" title="1. Spring MVC auto-configuration"></a>1. Spring MVC auto-configuration</h3><p>Spring Boot 自动配置好了SpringMVC</p>
<p>以下是SpringBoot对SpringMVC的默认配置:<strong>==（WebMvcAutoConfiguration）==</strong></p>
<ul>
<li><p>Inclusion of <code>ContentNegotiatingViewResolver</code> and <code>BeanNameViewResolver</code> beans.</p>
<ul>
<li>自动配置了ViewResolver（视图解析器：根据方法的返回值得到视图对象（View），视图对象决定如何渲染（转发？重定向？））</li>
<li>ContentNegotiatingViewResolver：组合所有的视图解析器的；</li>
<li>==如何定制：我们可以自己给容器中添加一个视图解析器；自动的将其组合进来；==</li>
</ul>
</li>
<li><p>Support for serving static resources, including support for WebJars (see below).静态资源文件夹路径,webjars</p>
</li>
<li><p>Static <code>index.html</code> support. 静态首页访问</p>
</li>
<li><p>Custom <code>Favicon</code> support (see below).  favicon.ico</p>
</li>
<li><p>自动注册了 of <code>Converter</code>, <code>GenericConverter</code>, <code>Formatter</code> beans.</p>
<ul>
<li>Converter：转换器；  public String hello(User user)：类型转换使用Converter</li>
<li><code>Formatter</code>  格式化器；  2017.12.17===Date；</li>
</ul>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(prefix = &quot;spring.mvc&quot;, name = &quot;date-format&quot;)</span><span class="comment">//在文件中配置日期格式化的规则</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Formatter&lt;Date&gt; <span class="title">dateFormatter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">new</span> DateFormatter(<span class="keyword">this</span>.mvcProperties.getDateFormat());<span class="comment">//日期格式化组件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>​    ==自己添加的格式化器转换器，我们只需要放在容器中即可==</p>
<ul>
<li><p>Support for <code>HttpMessageConverters</code> (see below).</p>
<ul>
<li><p>HttpMessageConverter：SpringMVC用来转换Http请求和响应的；User—Json；</p>
</li>
<li><p><code>HttpMessageConverters</code> 是从容器中确定；获取所有的HttpMessageConverter；</p>
<p>==自己给容器中添加HttpMessageConverter，只需要将自己的组件注册容器中（@Bean,@Component）==</p>
</li>
</ul>
</li>
<li><p>Automatic registration of <code>MessageCodesResolver</code> (see below).定义错误代码生成规则</p>
</li>
<li><p>Automatic use of a <code>ConfigurableWebBindingInitializer</code> bean (see below).</p>
<p>==我们可以配置一个ConfigurableWebBindingInitializer来替换默认的；（添加到容器）==</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">初始化WebDataBinder；</span><br><span class="line">请求数据=====JavaBean；</span><br></pre></td></tr></table></figure></li>
</ul>
<p><strong>org.springframework.boot.autoconfigure.web：web的所有自动场景；</strong></p>
<p>If you want to keep Spring Boot MVC features, and you just want to add additional <a href="https://docs.spring.io/spring/docs/4.3.14.RELEASE/spring-framework-reference/htmlsingle#mvc">MVC configuration</a> (interceptors, formatters, view controllers etc.) you can add your own <code>@Configuration</code> class of type <code>WebMvcConfigurerAdapter</code>, but <strong>without</strong> <code>@EnableWebMvc</code>. If you wish to provide custom instances of <code>RequestMappingHandlerMapping</code>, <code>RequestMappingHandlerAdapter</code> or <code>ExceptionHandlerExceptionResolver</code> you can declare a <code>WebMvcRegistrationsAdapter</code> instance providing such components.</p>
<p>If you want to take complete control of Spring MVC, you can add your own <code>@Configuration</code> annotated with <code>@EnableWebMvc</code>.</p>
<h3 id="2、扩展SpringMVC"><a href="#2、扩展SpringMVC" class="headerlink" title="2、扩展SpringMVC"></a>2、扩展SpringMVC</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/hello&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;success&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/hello&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>==编写一个配置类（@Configuration），是WebMvcConfigurerAdapter类型；不能标注@EnableWebMvc==</strong>;</p>
<p>既保留了所有的自动配置，也能用我们扩展的配置；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// super.addViewControllers(registry);</span></span><br><span class="line">        <span class="comment">//浏览器发送 /atguigu 请求来到 success</span></span><br><span class="line">        registry.addViewController(<span class="string">&quot;/atguigu&quot;</span>).setViewName(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>原理：</p>
<p>​    1）、WebMvcAutoConfiguration是SpringMVC的自动配置类</p>
<p>​    2）、在做其他自动配置时会导入；@Import(<strong>EnableWebMvcConfiguration</strong>.class)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">   <span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">EnableWebMvcConfiguration</span> <span class="keyword">extends</span> <span class="title">DelegatingWebMvcConfiguration</span> </span>&#123;</span><br><span class="line">     <span class="keyword">private</span> <span class="keyword">final</span> WebMvcConfigurerComposite configurers = <span class="keyword">new</span> WebMvcConfigurerComposite();</span><br><span class="line"></span><br><span class="line"> <span class="comment">//从容器中获取所有的WebMvcConfigurer</span></span><br><span class="line">     <span class="meta">@Autowired(required = false)</span></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setConfigurers</span><span class="params">(List&lt;WebMvcConfigurer&gt; configurers)</span> </span>&#123;</span><br><span class="line">         <span class="keyword">if</span> (!CollectionUtils.isEmpty(configurers)) &#123;</span><br><span class="line">             <span class="keyword">this</span>.configurers.addWebMvcConfigurers(configurers);</span><br><span class="line">           	<span class="comment">//一个参考实现；将所有的WebMvcConfigurer相关配置都来一起调用；  </span></span><br><span class="line">           	<span class="meta">@Override</span></span><br><span class="line">            <span class="comment">// public void addViewControllers(ViewControllerRegistry registry) &#123;</span></span><br><span class="line">             <span class="comment">//    for (WebMvcConfigurer delegate : this.delegates) &#123;</span></span><br><span class="line">              <span class="comment">//       delegate.addViewControllers(registry);</span></span><br><span class="line">              <span class="comment">//   &#125;</span></span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>​    3）、容器中所有的WebMvcConfigurer都会一起起作用；</p>
<p>​    4）、我们的配置类也会被调用；</p>
<p>​    效果：SpringMVC的自动配置和我们的扩展配置都会起作用；</p>
<h3 id="3、全面接管SpringMVC；"><a href="#3、全面接管SpringMVC；" class="headerlink" title="3、全面接管SpringMVC；"></a>3、全面接管SpringMVC；</h3><p>SpringBoot对SpringMVC的自动配置不需要了，所有都是我们自己配置；所有的SpringMVC的自动配置都失效了</p>
<p><strong>我们需要在配置类中添加@EnableWebMvc即可；</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// super.addViewControllers(registry);</span></span><br><span class="line">        <span class="comment">//浏览器发送 /atguigu 请求来到 success</span></span><br><span class="line">        registry.addViewController(<span class="string">&quot;/atguigu&quot;</span>).setViewName(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>原理：</p>
<p>为什么@EnableWebMvc自动配置就失效了；</p>
<p>1）@EnableWebMvc的核心</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Import(DelegatingWebMvcConfiguration.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> EnableWebMvc &#123;</span><br></pre></td></tr></table></figure>

<p>2）、</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DelegatingWebMvcConfiguration</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurationSupport</span> </span>&#123;</span><br></pre></td></tr></table></figure>

<p>3）、</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnWebApplication</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(&#123; Servlet.class, DispatcherServlet.class,</span></span><br><span class="line"><span class="meta">		WebMvcConfigurerAdapter.class &#125;)</span></span><br><span class="line"><span class="comment">//容器中没有这个组件的时候，这个自动配置类才生效</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(WebMvcConfigurationSupport.class)</span></span><br><span class="line"><span class="meta">@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE + 10)</span></span><br><span class="line"><span class="meta">@AutoConfigureAfter(&#123; DispatcherServletAutoConfiguration.class,</span></span><br><span class="line"><span class="meta">		ValidationAutoConfiguration.class &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebMvcAutoConfiguration</span> </span>&#123;</span><br></pre></td></tr></table></figure>

<p>4）、@EnableWebMvc将WebMvcConfigurationSupport组件导入进来；</p>
<p>5）、导入的WebMvcConfigurationSupport只是SpringMVC最基本的功能；</p>
<h2 id="5、如何修改SpringBoot的默认配置"><a href="#5、如何修改SpringBoot的默认配置" class="headerlink" title="5、如何修改SpringBoot的默认配置"></a>5、如何修改SpringBoot的默认配置</h2><p>模式：</p>
<p>​    1）、SpringBoot在自动配置很多组件的时候，先看容器中有没有用户自己配置的（@Bean、@Component）如果有就用用户配置的，如果没有，才自动配置；如果有些组件可以有多个（ViewResolver）将用户配置的和自己默认的组合起来；</p>
<p>​    2）、在SpringBoot中会有非常多的xxxConfigurer帮助我们进行扩展配置</p>
<p>​    3）、在SpringBoot中会有很多的xxxCustomizer帮助我们进行定制配置</p>
<h2 id="6、RestfulCRUD"><a href="#6、RestfulCRUD" class="headerlink" title="6、RestfulCRUD"></a>6、RestfulCRUD</h2><h3 id="1）、默认访问首页"><a href="#1）、默认访问首页" class="headerlink" title="1）、默认访问首页"></a>1）、默认访问首页</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//使用WebMvcConfigurerAdapter可以来扩展SpringMVC的功能</span></span><br><span class="line"><span class="comment">//@EnableWebMvc   不要接管SpringMVC</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMvcConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// super.addViewControllers(registry);</span></span><br><span class="line">        <span class="comment">//浏览器发送 /atguigu 请求来到 success</span></span><br><span class="line">        registry.addViewController(<span class="string">&quot;/atguigu&quot;</span>).setViewName(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//所有的WebMvcConfigurerAdapter组件都会一起起作用</span></span><br><span class="line">    <span class="meta">@Bean</span> <span class="comment">//将组件注册在容器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> WebMvcConfigurerAdapter <span class="title">webMvcConfigurerAdapter</span><span class="params">()</span></span>&#123;</span><br><span class="line">        WebMvcConfigurerAdapter adapter = <span class="keyword">new</span> WebMvcConfigurerAdapter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">                registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">                registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> adapter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2）、国际化"><a href="#2）、国际化" class="headerlink" title="2）、国际化"></a>2）、国际化</h3><p><strong>1）、编写国际化配置文件；</strong></p>
<p>2）、使用ResourceBundleMessageSource管理国际化资源文件</p>
<p>3）、在页面使用fmt:message取出国际化内容</p>
<p>步骤：</p>
<p>1）、编写国际化配置文件，抽取页面需要显示的国际化消息</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180211130721.png"></p>
<p>2）、SpringBoot自动配置好了管理国际化资源文件的组件；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;spring.messages&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MessageSourceAutoConfiguration</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Comma-separated list of basenames (essentially a fully-qualified classpath</span></span><br><span class="line"><span class="comment">	 * location), each following the ResourceBundle convention with relaxed support for</span></span><br><span class="line"><span class="comment">	 * slash based locations. If it doesn&#x27;t contain a package qualifier (such as</span></span><br><span class="line"><span class="comment">	 * &quot;org.mypackage&quot;), it will be resolved from the classpath root.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">private</span> String basename = <span class="string">&quot;messages&quot;</span>;  </span><br><span class="line">    <span class="comment">//我们的配置文件可以直接放在类路径下叫messages.properties；</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> MessageSource <span class="title">messageSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		ResourceBundleMessageSource messageSource = <span class="keyword">new</span> ResourceBundleMessageSource();</span><br><span class="line">		<span class="keyword">if</span> (StringUtils.hasText(<span class="keyword">this</span>.basename)) &#123;</span><br><span class="line">            <span class="comment">//设置国际化资源文件的基础名（去掉语言国家代码的）</span></span><br><span class="line">			messageSource.setBasenames(StringUtils.commaDelimitedListToStringArray(</span><br><span class="line">					StringUtils.trimAllWhitespace(<span class="keyword">this</span>.basename)));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>.encoding != <span class="keyword">null</span>) &#123;</span><br><span class="line">			messageSource.setDefaultEncoding(<span class="keyword">this</span>.encoding.name());</span><br><span class="line">		&#125;</span><br><span class="line">		messageSource.setFallbackToSystemLocale(<span class="keyword">this</span>.fallbackToSystemLocale);</span><br><span class="line">		messageSource.setCacheSeconds(<span class="keyword">this</span>.cacheSeconds);</span><br><span class="line">		messageSource.setAlwaysUseMessageFormat(<span class="keyword">this</span>.alwaysUseMessageFormat);</span><br><span class="line">		<span class="keyword">return</span> messageSource;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<p>3）、去页面获取国际化的值；</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180211134506.png"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>  <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">title</span>&gt;</span>Signin Template for Bootstrap<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- Bootstrap core CSS --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;asserts/css/bootstrap.min.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/webjars/bootstrap/4.0.0/css/bootstrap.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- Custom styles for this template --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;asserts/css/signin.css&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/asserts/css/signin.css&#125;&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;form-signin&quot;</span> <span class="attr">action</span>=<span class="string">&quot;dashboard.html&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;mb-4&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/asserts/img/bootstrap-solid.svg&#125;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;asserts/img/bootstrap-solid.svg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;72&quot;</span> <span class="attr">height</span>=<span class="string">&quot;72&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;h3 mb-3 font-weight-normal&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;login.tip&#125;&quot;</span>&gt;</span>Please sign in<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;login.username&#125;&quot;</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Username&quot;</span> <span class="attr">th:placeholder</span>=<span class="string">&quot;#&#123;login.username&#125;&quot;</span> <span class="attr">required</span>=<span class="string">&quot;&quot;</span> <span class="attr">autofocus</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;login.password&#125;&quot;</span>&gt;</span>Password<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;Password&quot;</span> <span class="attr">th:placeholder</span>=<span class="string">&quot;#&#123;login.password&#125;&quot;</span> <span class="attr">required</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;checkbox mb-3&quot;</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">          		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;remember-me&quot;</span>/&gt;</span> [[#&#123;login.remember&#125;]]</span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-lg btn-primary btn-block&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;#&#123;login.btn&#125;&quot;</span>&gt;</span>Sign in<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;mt-5 mb-3 text-muted&quot;</span>&gt;</span>© 2017-2018<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm&quot;</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>效果：根据浏览器语言设置的信息切换了国际化；</p>
<p>原理：</p>
<p>​    国际化Locale（区域信息对象）；LocaleResolver（获取区域信息对象）；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">		<span class="meta">@Bean</span></span><br><span class="line">		<span class="meta">@ConditionalOnMissingBean</span></span><br><span class="line">		<span class="meta">@ConditionalOnProperty(prefix = &quot;spring.mvc&quot;, name = &quot;locale&quot;)</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">if</span> (<span class="keyword">this</span>.mvcProperties</span><br><span class="line">					.getLocaleResolver() == WebMvcProperties.LocaleResolver.FIXED) &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">new</span> FixedLocaleResolver(<span class="keyword">this</span>.mvcProperties.getLocale());</span><br><span class="line">			&#125;</span><br><span class="line">			AcceptHeaderLocaleResolver localeResolver = <span class="keyword">new</span> AcceptHeaderLocaleResolver();</span><br><span class="line">			localeResolver.setDefaultLocale(<span class="keyword">this</span>.mvcProperties.getLocale());</span><br><span class="line">			<span class="keyword">return</span> localeResolver;</span><br><span class="line">		&#125;</span><br><span class="line">默认的就是根据请求头带来的区域信息获取Locale进行国际化</span><br></pre></td></tr></table></figure>

<p>4）、点击链接切换国际化</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可以在连接上携带区域信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLocaleResolver</span> <span class="keyword">implements</span> <span class="title">LocaleResolver</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Locale <span class="title">resolveLocale</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String l = request.getParameter(<span class="string">&quot;l&quot;</span>);</span><br><span class="line">        Locale locale = Locale.getDefault();</span><br><span class="line">        <span class="keyword">if</span>(!StringUtils.isEmpty(l))&#123;</span><br><span class="line">            String[] split = l.split(<span class="string">&quot;_&quot;</span>);</span><br><span class="line">            locale = <span class="keyword">new</span> Locale(split[<span class="number">0</span>],split[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> locale;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLocale</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Locale locale)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocaleResolver <span class="title">localeResolver</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyLocaleResolver();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3）、登陆"><a href="#3）、登陆" class="headerlink" title="3）、登陆"></a>3）、登陆</h3><p>开发期间模板引擎页面修改以后，要实时生效</p>
<p>1）、禁用模板引擎的缓存</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 禁用缓存</span><br><span class="line">spring.thymeleaf.cache=false </span><br></pre></td></tr></table></figure>

<p>2）、页面修改完成以后ctrl+f9：重新编译；</p>
<p>登陆错误消息的显示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;msg&#125;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;not #strings.isEmpty(msg)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="4）、拦截器进行登陆检查"><a href="#4）、拦截器进行登陆检查" class="headerlink" title="4）、拦截器进行登陆检查"></a>4）、拦截器进行登陆检查</h3><p>拦截器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登陆检查，</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginHandlerInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line">    <span class="comment">//目标方法执行之前</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Object user = request.getSession().getAttribute(<span class="string">&quot;loginUser&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//未登陆，返回登陆页面</span></span><br><span class="line">            request.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;没有权限请先登陆&quot;</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/index.html&quot;</span>).forward(request,response);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//已登陆，放行请求</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>注册拦截器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//所有的WebMvcConfigurerAdapter组件都会一起起作用</span></span><br><span class="line">  <span class="meta">@Bean</span> <span class="comment">//将组件注册在容器</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> WebMvcConfigurerAdapter <span class="title">webMvcConfigurerAdapter</span><span class="params">()</span></span>&#123;</span><br><span class="line">      WebMvcConfigurerAdapter adapter = <span class="keyword">new</span> WebMvcConfigurerAdapter() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addViewControllers</span><span class="params">(ViewControllerRegistry registry)</span> </span>&#123;</span><br><span class="line">              registry.addViewController(<span class="string">&quot;/&quot;</span>).setViewName(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">              registry.addViewController(<span class="string">&quot;/index.html&quot;</span>).setViewName(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">              registry.addViewController(<span class="string">&quot;/main.html&quot;</span>).setViewName(<span class="string">&quot;dashboard&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">//注册拦截器</span></span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">              <span class="comment">//super.addInterceptors(registry);</span></span><br><span class="line">              <span class="comment">//静态资源；  *.css , *.js</span></span><br><span class="line">              <span class="comment">//SpringBoot已经做好了静态资源映射</span></span><br><span class="line">              registry.addInterceptor(<span class="keyword">new</span> LoginHandlerInterceptor()).addPathPatterns(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                      .excludePathPatterns(<span class="string">&quot;/index.html&quot;</span>,<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/user/login&quot;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">return</span> adapter;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h3 id="5）、CRUD-员工列表"><a href="#5）、CRUD-员工列表" class="headerlink" title="5）、CRUD-员工列表"></a>5）、CRUD-员工列表</h3><p>实验要求：</p>
<p>1）、RestfulCRUD：CRUD满足Rest风格；</p>
<p>URI：  /资源名称/资源标识       HTTP请求方式区分对资源CRUD操作</p>
<table>
<thead>
<tr>
<th></th>
<th>普通CRUD（uri来区分操作）</th>
<th>RestfulCRUD</th>
</tr>
</thead>
<tbody><tr>
<td>查询</td>
<td>getEmp</td>
<td>emp—GET</td>
</tr>
<tr>
<td>添加</td>
<td>addEmp?xxx</td>
<td>emp—POST</td>
</tr>
<tr>
<td>修改</td>
<td>updateEmp?id=xxx&amp;xxx=xx</td>
<td>emp/{id}—PUT</td>
</tr>
<tr>
<td>删除</td>
<td>deleteEmp?id=1</td>
<td>emp/{id}—DELETE</td>
</tr>
</tbody></table>
<p>2）、实验的请求架构;</p>
<table>
<thead>
<tr>
<th>实验功能</th>
<th>请求URI</th>
<th>请求方式</th>
</tr>
</thead>
<tbody><tr>
<td>查询所有员工</td>
<td>emps</td>
<td>GET</td>
</tr>
<tr>
<td>查询某个员工(来到修改页面)</td>
<td>emp/1</td>
<td>GET</td>
</tr>
<tr>
<td>来到添加页面</td>
<td>emp</td>
<td>GET</td>
</tr>
<tr>
<td>添加员工</td>
<td>emp</td>
<td>POST</td>
</tr>
<tr>
<td>来到修改页面（查出员工进行信息回显）</td>
<td>emp/1</td>
<td>GET</td>
</tr>
<tr>
<td>修改员工</td>
<td>emp</td>
<td>PUT</td>
</tr>
<tr>
<td>删除员工</td>
<td>emp/1</td>
<td>DELETE</td>
</tr>
</tbody></table>
<p>3）、员工列表：</p>
<h4 id="thymeleaf公共页面元素抽取"><a href="#thymeleaf公共页面元素抽取" class="headerlink" title="thymeleaf公共页面元素抽取"></a>thymeleaf公共页面元素抽取</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">1、抽取公共片段</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:fragment</span>=<span class="string">&quot;copy&quot;</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">2、引入公共片段</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;~&#123;footer :: copy&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">~&#123;templatename::selector&#125;：模板名::选择器</span><br><span class="line">~&#123;templatename::fragmentname&#125;:模板名::片段名</span><br><span class="line"></span><br><span class="line">3、默认效果：</span><br><span class="line">insert的公共片段在div标签中</span><br><span class="line">如果使用th:insert等属性进行引入，可以不用写~&#123;&#125;：</span><br><span class="line">行内写法可以加上：[[~&#123;&#125;]];[(~&#123;&#125;)]；</span><br></pre></td></tr></table></figure>



<p>三种引入公共片段的th属性：</p>
<p><strong>th:insert</strong>：将公共片段整个插入到声明引入的元素中</p>
<p><strong>th:replace</strong>：将声明引入的元素替换为公共片段</p>
<p><strong>th:include</strong>：将被引入的片段的内容包含进这个标签中</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">th:fragment</span>=<span class="string">&quot;copy&quot;</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">引入方式</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:insert</span>=<span class="string">&quot;footer :: copy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;footer :: copy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:include</span>=<span class="string">&quot;footer :: copy&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">效果</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="symbol">&amp;copy;</span> 2011 The Good Thymes Virtual Grocery</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>引入片段的时候传入参数： </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;col-md-2 d-none d-md-block bg-light sidebar&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sidebar&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-sticky&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav flex-column&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;nav-link active&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">th:class</span>=<span class="string">&quot;$&#123;activeUri==&#x27;main.html&#x27;?&#x27;nav-link active&#x27;:&#x27;nav-link&#x27;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">                   <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/main.html&#125;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">svg</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;24&quot;</span> <span class="attr">height</span>=<span class="string">&quot;24&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 24 24&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;none&quot;</span> <span class="attr">stroke</span>=<span class="string">&quot;currentColor&quot;</span> <span class="attr">stroke-width</span>=<span class="string">&quot;2&quot;</span> <span class="attr">stroke-linecap</span>=<span class="string">&quot;round&quot;</span> <span class="attr">stroke-linejoin</span>=<span class="string">&quot;round&quot;</span> <span class="attr">class</span>=<span class="string">&quot;feather feather-home&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">path</span> <span class="attr">d</span>=<span class="string">&quot;M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">polyline</span> <span class="attr">points</span>=<span class="string">&quot;9 22 9 12 15 12 15 22&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">polyline</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">                    Dashboard <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入侧边栏;传入参数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:replace</span>=<span class="string">&quot;commons/bar::#sidebar(activeUri=&#x27;emps&#x27;)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="6）、CRUD-员工添加"><a href="#6）、CRUD-员工添加" class="headerlink" title="6）、CRUD-员工添加"></a>6）、CRUD-员工添加</h3><p>添加页面</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>LastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;zhangsan&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;zhangsan@atguigu.com&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;zhangsan&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>提交的数据格式不对：生日：日期；</p>
<p>2017-12-12；2017/12/12；2017.12.12；</p>
<p>日期的格式化；SpringMVC将页面提交的值需要转换为指定的类型;</p>
<p>2017-12-12—Date； 类型转换，格式化;</p>
<p>默认日期是按照/的方式；</p>
<h3 id="7）、CRUD-员工修改"><a href="#7）、CRUD-员工修改" class="headerlink" title="7）、CRUD-员工修改"></a>7）、CRUD-员工修改</h3><p>修改添加二合一表单</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--需要区分是员工修改还是添加；--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/emp&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--发送put请求修改员工数据--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">1、SpringMVC中配置HiddenHttpMethodFilter;（SpringBoot自动配置好的）</span></span><br><span class="line"><span class="comment">2、页面创建一个post表单</span></span><br><span class="line"><span class="comment">3、创建一个input项，name=&quot;_method&quot;;值就是我们指定的请求方式</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;_method&quot;</span> <span class="attr">value</span>=<span class="string">&quot;put&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;emp!=null&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;emp!=null&#125;&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp.id&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>LastName<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;lastName&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;zhangsan&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp!=null&#125;?$&#123;emp.lastName&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;zhangsan@atguigu.com&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp!=null&#125;?$&#123;emp.email&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Gender<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span> <span class="attr">th:checked</span>=<span class="string">&quot;$&#123;emp!=null&#125;?$&#123;emp.gender==1&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-check form-check-inline&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;form-check-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">th:checked</span>=<span class="string">&quot;$&#123;emp!=null&#125;?$&#123;emp.gender==0&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">&quot;form-check-label&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>department<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--提交的是部门的id--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;department.id&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">th:selected</span>=<span class="string">&quot;$&#123;emp!=null&#125;?$&#123;dept.id == emp.department.id&#125;&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;dept.id&#125;&quot;</span> <span class="attr">th:each</span>=<span class="string">&quot;dept:$&#123;depts&#125;&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;dept.departmentName&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span>Birth<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;birth&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;zhangsan&quot;</span> <span class="attr">th:value</span>=<span class="string">&quot;$&#123;emp!=null&#125;?$&#123;#dates.format(emp.birth, &#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp!=null&#125;?&#x27;修改&#x27;:&#x27;添加&#x27;&quot;</span>&gt;</span>添加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="8）、CRUD-员工删除"><a href="#8）、CRUD-员工删除" class="headerlink" title="8）、CRUD-员工删除"></a>8）、CRUD-员工删除</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">th:each</span>=<span class="string">&quot;emp:$&#123;emps&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.id&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>[[$&#123;emp.lastName&#125;]]<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.email&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.gender&#125;==0?&#x27;女&#x27;:&#x27;男&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;emp.department.departmentName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;#dates.format(emp.birth, &#x27;yyyy-MM-dd HH:mm&#x27;)&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-primary&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/emp/&#125;+$&#123;emp.id&#125;&quot;</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">th:attr</span>=<span class="string">&quot;del_uri=@&#123;/emp/&#125;+$&#123;emp.id&#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-sm btn-danger deleteBtn&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;.deleteBtn&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//删除当前员工的</span></span></span><br><span class="line"><span class="javascript">        $(<span class="string">&quot;#deleteEmpForm&quot;</span>).attr(<span class="string">&quot;action&quot;</span>,$(<span class="built_in">this</span>).attr(<span class="string">&quot;del_uri&quot;</span>)).submit();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h2 id="7、错误处理机制"><a href="#7、错误处理机制" class="headerlink" title="7、错误处理机制"></a>7、错误处理机制</h2><h3 id="1）、SpringBoot默认的错误处理机制"><a href="#1）、SpringBoot默认的错误处理机制" class="headerlink" title="1）、SpringBoot默认的错误处理机制"></a>1）、SpringBoot默认的错误处理机制</h3><p>默认效果：</p>
<p>​        1）、浏览器，返回一个默认的错误页面</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180226173408.png"></p>
<p>  浏览器发送请求的请求头：</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180226180347.png"></p>
<p>​        2）、如果是其他客户端，默认响应一个json数据</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180226173527.png"></p>
<p>​        <img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180226180504.png"></p>
<p>原理：</p>
<p>​    可以参照ErrorMvcAutoConfiguration；错误处理的自动配置；</p>
<pre><code>  给容器中添加了以下组件
</code></pre>
<p>​    1、DefaultErrorAttributes：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">帮我们在页面共享信息；</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getErrorAttributes</span><span class="params">(RequestAttributes requestAttributes,</span></span></span><br><span class="line"><span class="params"><span class="function">			<span class="keyword">boolean</span> includeStackTrace)</span> </span>&#123;</span><br><span class="line">		Map&lt;String, Object&gt; errorAttributes = <span class="keyword">new</span> LinkedHashMap&lt;String, Object&gt;();</span><br><span class="line">		errorAttributes.put(<span class="string">&quot;timestamp&quot;</span>, <span class="keyword">new</span> Date());</span><br><span class="line">		addStatus(errorAttributes, requestAttributes);</span><br><span class="line">		addErrorDetails(errorAttributes, requestAttributes, includeStackTrace);</span><br><span class="line">		addPath(errorAttributes, requestAttributes);</span><br><span class="line">		<span class="keyword">return</span> errorAttributes;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<p>​    2、BasicErrorController：处理默认/error请求</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;$&#123;server.error.path:$&#123;error.path:/error&#125;&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BasicErrorController</span> <span class="keyword">extends</span> <span class="title">AbstractErrorController</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping(produces = &quot;text/html&quot;)</span><span class="comment">//产生html类型的数据；浏览器发送的请求来到这个方法处理</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> ModelAndView <span class="title">errorHtml</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="params"><span class="function">			HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">		HttpStatus status = getStatus(request);</span><br><span class="line">		Map&lt;String, Object&gt; model = Collections.unmodifiableMap(getErrorAttributes(</span><br><span class="line">				request, isIncludeStackTrace(request, MediaType.TEXT_HTML)));</span><br><span class="line">		response.setStatus(status.value());</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//去哪个页面作为错误页面；包含页面地址和页面内容</span></span><br><span class="line">		ModelAndView modelAndView = resolveErrorView(request, response, status, model);</span><br><span class="line">		<span class="keyword">return</span> (modelAndView == <span class="keyword">null</span> ? <span class="keyword">new</span> ModelAndView(<span class="string">&quot;error&quot;</span>, model) : modelAndView);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@RequestMapping</span></span><br><span class="line">	<span class="meta">@ResponseBody</span>    <span class="comment">//产生json数据，其他客户端来到这个方法处理；</span></span><br><span class="line">	<span class="keyword">public</span> ResponseEntity&lt;Map&lt;String, Object&gt;&gt; error(HttpServletRequest request) &#123;</span><br><span class="line">		Map&lt;String, Object&gt; body = getErrorAttributes(request,</span><br><span class="line">				isIncludeStackTrace(request, MediaType.ALL));</span><br><span class="line">		HttpStatus status = getStatus(request);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> ResponseEntity&lt;Map&lt;String, Object&gt;&gt;(body, status);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<p>​    3、ErrorPageCustomizer：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Value(&quot;$&#123;error.path:/error&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String path = <span class="string">&quot;/error&quot;</span>;  系统出现错误以后来到error请求进行处理；（web.xml注册的错误页面规则）</span><br></pre></td></tr></table></figure>



<p>​    4、DefaultErrorViewResolver：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> ModelAndView <span class="title">resolveErrorView</span><span class="params">(HttpServletRequest request, HttpStatus status,</span></span></span><br><span class="line"><span class="params"><span class="function">			Map&lt;String, Object&gt; model)</span> </span>&#123;</span><br><span class="line">		ModelAndView modelAndView = resolve(String.valueOf(status), model);</span><br><span class="line">		<span class="keyword">if</span> (modelAndView == <span class="keyword">null</span> &amp;&amp; SERIES_VIEWS.containsKey(status.series())) &#123;</span><br><span class="line">			modelAndView = resolve(SERIES_VIEWS.get(status.series()), model);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> modelAndView;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">private</span> ModelAndView <span class="title">resolve</span><span class="params">(String viewName, Map&lt;String, Object&gt; model)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//默认SpringBoot可以去找到一个页面？  error/404</span></span><br><span class="line">		String errorViewName = <span class="string">&quot;error/&quot;</span> + viewName;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//模板引擎可以解析这个页面地址就用模板引擎解析</span></span><br><span class="line">		TemplateAvailabilityProvider provider = <span class="keyword">this</span>.templateAvailabilityProviders</span><br><span class="line">				.getProvider(errorViewName, <span class="keyword">this</span>.applicationContext);</span><br><span class="line">		<span class="keyword">if</span> (provider != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">//模板引擎可用的情况下返回到errorViewName指定的视图地址</span></span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> ModelAndView(errorViewName, model);</span><br><span class="line">		&#125;</span><br><span class="line">        <span class="comment">//模板引擎不可用，就在静态资源文件夹下找errorViewName对应的页面   error/404.html</span></span><br><span class="line">		<span class="keyword">return</span> resolveResource(errorViewName, model);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>



<p>​    步骤：</p>
<p>​        一但系统出现4xx或者5xx之类的错误；ErrorPageCustomizer就会生效（定制错误的响应规则）；就会来到/error请求；就会被<strong>BasicErrorController</strong>处理；</p>
<p>​        1）响应页面；去哪个页面是由<strong>DefaultErrorViewResolver</strong>解析得到的；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> ModelAndView <span class="title">resolveErrorView</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="params"><span class="function">      HttpServletResponse response, HttpStatus status, Map&lt;String, Object&gt; model)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//所有的ErrorViewResolver得到ModelAndView</span></span><br><span class="line">   <span class="keyword">for</span> (ErrorViewResolver resolver : <span class="keyword">this</span>.errorViewResolvers) &#123;</span><br><span class="line">      ModelAndView modelAndView = resolver.resolveErrorView(request, status, model);</span><br><span class="line">      <span class="keyword">if</span> (modelAndView != <span class="keyword">null</span>) &#123;</span><br><span class="line">         <span class="keyword">return</span> modelAndView;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2）、如果定制错误响应："><a href="#2）、如果定制错误响应：" class="headerlink" title="2）、如果定制错误响应："></a>2）、如果定制错误响应：</h3><h4 id="1）、如何定制错误的页面；"><a href="#1）、如何定制错误的页面；" class="headerlink" title="1）、如何定制错误的页面；"></a><strong>1）、如何定制错误的页面；</strong></h4><p>​            <strong>1）、有模板引擎的情况下；error/状态码;</strong> 【将错误页面命名为  错误状态码.html 放在模板引擎文件夹里面的 error文件夹下】，发生此状态码的错误就会来到  对应的页面；</p>
<p>​            我们可以使用4xx和5xx作为错误页面的文件名来匹配这种类型的所有错误，精确优先（优先寻找精确的状态码.html）；        </p>
<p>​            页面能获取的信息；</p>
<p>​                timestamp：时间戳</p>
<p>​                status：状态码</p>
<p>​                error：错误提示</p>
<p>​                exception：异常对象</p>
<p>​                message：异常消息</p>
<p>​                errors：JSR303数据校验的错误都在这里</p>
<p>​            2）、没有模板引擎（模板引擎找不到这个错误页面），静态资源文件夹下找；</p>
<p>​            3）、以上都没有错误页面，就是默认来到SpringBoot默认的错误提示页面；</p>
<h4 id="2）、如何定制错误的json数据；"><a href="#2）、如何定制错误的json数据；" class="headerlink" title="2）、如何定制错误的json数据；"></a>2）、如何定制错误的json数据；</h4><p>​        1）、自定义异常处理&amp;返回定制json数据；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyExceptionHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@ExceptionHandler(UserNotExistException.class)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String,Object&gt; <span class="title">handleException</span><span class="params">(Exception e)</span></span>&#123;</span><br><span class="line">        Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;code&quot;</span>,<span class="string">&quot;user.notexist&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;message&quot;</span>,e.getMessage());</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//没有自适应效果...</span></span><br></pre></td></tr></table></figure>



<p>​        2）、转发到/error进行自适应响应效果处理</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ExceptionHandler(UserNotExistException.class)</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">handleException</span><span class="params">(Exception e, HttpServletRequest request)</span></span>&#123;</span><br><span class="line">       Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">       <span class="comment">//传入我们自己的错误状态码  4xx 5xx，否则就不会进入定制错误页面的解析流程</span></span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * Integer statusCode = (Integer) request</span></span><br><span class="line"><span class="comment">        .getAttribute(&quot;javax.servlet.error.status_code&quot;);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       request.setAttribute(<span class="string">&quot;javax.servlet.error.status_code&quot;</span>,<span class="number">500</span>);</span><br><span class="line">       map.put(<span class="string">&quot;code&quot;</span>,<span class="string">&quot;user.notexist&quot;</span>);</span><br><span class="line">       map.put(<span class="string">&quot;message&quot;</span>,e.getMessage());</span><br><span class="line">       <span class="comment">//转发到/error</span></span><br><span class="line">       <span class="keyword">return</span> <span class="string">&quot;forward:/error&quot;</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h4 id="3）、将我们的定制数据携带出去；"><a href="#3）、将我们的定制数据携带出去；" class="headerlink" title="3）、将我们的定制数据携带出去；"></a>3）、将我们的定制数据携带出去；</h4><p>出现错误以后，会来到/error请求，会被BasicErrorController处理，响应出去可以获取的数据是由getErrorAttributes得到的（是AbstractErrorController（ErrorController）规定的方法）；</p>
<p>​    1、完全来编写一个ErrorController的实现类【或者是编写AbstractErrorController的子类】，放在容器中；</p>
<p>​    2、页面上能用的数据，或者是json返回能用的数据都是通过errorAttributes.getErrorAttributes得到；</p>
<p>​            容器中DefaultErrorAttributes.getErrorAttributes()；默认进行数据处理的；</p>
<p>自定义ErrorAttributes</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//给容器中加入我们自己定义的ErrorAttributes</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyErrorAttributes</span> <span class="keyword">extends</span> <span class="title">DefaultErrorAttributes</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getErrorAttributes</span><span class="params">(RequestAttributes requestAttributes, <span class="keyword">boolean</span> includeStackTrace)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">super</span>.getErrorAttributes(requestAttributes, includeStackTrace);</span><br><span class="line">        map.put(<span class="string">&quot;company&quot;</span>,<span class="string">&quot;atguigu&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最终的效果：响应是自适应的，可以通过定制ErrorAttributes改变需要返回的内容，</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180228135513.png"></p>
<h2 id="8、配置嵌入式Servlet容器"><a href="#8、配置嵌入式Servlet容器" class="headerlink" title="8、配置嵌入式Servlet容器"></a>8、配置嵌入式Servlet容器</h2><p>SpringBoot默认使用Tomcat作为嵌入式的Servlet容器；</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180301142915.png"></p>
<p>问题？</p>
<h3 id="1）、如何定制和修改Servlet容器的相关配置；"><a href="#1）、如何定制和修改Servlet容器的相关配置；" class="headerlink" title="1）、如何定制和修改Servlet容器的相关配置；"></a>1）、如何定制和修改Servlet容器的相关配置；</h3><p>1、修改和server有关的配置（ServerProperties【也是EmbeddedServletContainerCustomizer】）；</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">8081</span></span><br><span class="line"><span class="meta">server.context-path</span>=<span class="string">/crud</span></span><br><span class="line"></span><br><span class="line"><span class="meta">server.tomcat.uri-encoding</span>=<span class="string">UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">//通用的Servlet容器设置</span></span><br><span class="line"><span class="attr">server.xxx</span></span><br><span class="line"><span class="attr">//Tomcat的设置</span></span><br><span class="line"><span class="attr">server.tomcat.xxx</span></span><br></pre></td></tr></table></figure>

<p>2、编写一个<strong>EmbeddedServletContainerCustomizer</strong>：嵌入式的Servlet容器的定制器；来修改Servlet容器的配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span>  <span class="comment">//一定要将这个定制器加入到容器中</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> EmbeddedServletContainerCustomizer <span class="title">embeddedServletContainerCustomizer</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> EmbeddedServletContainerCustomizer() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定制嵌入式的Servlet容器相关的规则</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">customize</span><span class="params">(ConfigurableEmbeddedServletContainer container)</span> </span>&#123;</span><br><span class="line">            container.setPort(<span class="number">8083</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2）、注册Servlet三大组件【Servlet、Filter、Listener】"><a href="#2）、注册Servlet三大组件【Servlet、Filter、Listener】" class="headerlink" title="2）、注册Servlet三大组件【Servlet、Filter、Listener】"></a>2）、注册Servlet三大组件【Servlet、Filter、Listener】</h3><p>由于SpringBoot默认是以jar包的方式启动嵌入式的Servlet容器来启动SpringBoot的web应用，没有web.xml文件。</p>
<p>注册三大组件用以下方式</p>
<p>ServletRegistrationBean</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//注册三大组件</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">myServlet</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ServletRegistrationBean registrationBean = <span class="keyword">new</span> ServletRegistrationBean(<span class="keyword">new</span> MyServlet(),<span class="string">&quot;/myServlet&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> registrationBean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>FilterRegistrationBean</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">myFilter</span><span class="params">()</span></span>&#123;</span><br><span class="line">    FilterRegistrationBean registrationBean = <span class="keyword">new</span> FilterRegistrationBean();</span><br><span class="line">    registrationBean.setFilter(<span class="keyword">new</span> MyFilter());</span><br><span class="line">    registrationBean.setUrlPatterns(Arrays.asList(<span class="string">&quot;/hello&quot;</span>,<span class="string">&quot;/myServlet&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> registrationBean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ServletListenerRegistrationBean</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletListenerRegistrationBean <span class="title">myListener</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ServletListenerRegistrationBean&lt;MyListener&gt; registrationBean = <span class="keyword">new</span> ServletListenerRegistrationBean&lt;&gt;(<span class="keyword">new</span> MyListener());</span><br><span class="line">    <span class="keyword">return</span> registrationBean;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>SpringBoot帮我们自动SpringMVC的时候，自动的注册SpringMVC的前端控制器；DIspatcherServlet；</p>
<p>DispatcherServletAutoConfiguration中：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Bean(name = DEFAULT_DISPATCHER_SERVLET_REGISTRATION_BEAN_NAME)</span></span><br><span class="line"><span class="meta">@ConditionalOnBean(value = DispatcherServlet.class, name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">dispatcherServletRegistration</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">      DispatcherServlet dispatcherServlet)</span> </span>&#123;</span><br><span class="line">   ServletRegistrationBean registration = <span class="keyword">new</span> ServletRegistrationBean(</span><br><span class="line">         dispatcherServlet, <span class="keyword">this</span>.serverProperties.getServletMapping());</span><br><span class="line">    <span class="comment">//默认拦截： /  所有请求；包静态资源，但是不拦截jsp请求；   /*会拦截jsp</span></span><br><span class="line">    <span class="comment">//可以通过server.servletPath来修改SpringMVC前端控制器默认拦截的请求路径</span></span><br><span class="line">    </span><br><span class="line">   registration.setName(DEFAULT_DISPATCHER_SERVLET_BEAN_NAME);</span><br><span class="line">   registration.setLoadOnStartup(</span><br><span class="line">         <span class="keyword">this</span>.webMvcProperties.getServlet().getLoadOnStartup());</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.multipartConfig != <span class="keyword">null</span>) &#123;</span><br><span class="line">      registration.setMultipartConfig(<span class="keyword">this</span>.multipartConfig);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> registration;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>2）、SpringBoot能不能支持其他的Servlet容器；</p>
<h3 id="3）、替换为其他嵌入式Servlet容器"><a href="#3）、替换为其他嵌入式Servlet容器" class="headerlink" title="3）、替换为其他嵌入式Servlet容器"></a>3）、替换为其他嵌入式Servlet容器</h3><p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180302114401.png"></p>
<p>默认支持：</p>
<p>Tomcat（默认使用）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   引入web模块默认就是使用嵌入式的Tomcat作为Servlet容器；</span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Jetty</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入web模块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入其他的Servlet容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Undertow</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入web模块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--引入其他的Servlet容器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-undertow<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="4）、嵌入式Servlet容器自动配置原理；"><a href="#4）、嵌入式Servlet容器自动配置原理；" class="headerlink" title="4）、嵌入式Servlet容器自动配置原理；"></a>4）、嵌入式Servlet容器自动配置原理；</h3><p>EmbeddedServletContainerAutoConfiguration：嵌入式的Servlet容器自动配置？</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@AutoConfigureOrder(Ordered.HIGHEST_PRECEDENCE)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnWebApplication</span></span><br><span class="line"><span class="meta">@Import(BeanPostProcessorsRegistrar.class)</span></span><br><span class="line"><span class="comment">//导入BeanPostProcessorsRegistrar：Spring注解版；给容器中导入一些组件</span></span><br><span class="line"><span class="comment">//导入了EmbeddedServletContainerCustomizerBeanPostProcessor：</span></span><br><span class="line"><span class="comment">//后置处理器：bean初始化前后（创建完对象，还没赋值赋值）执行初始化工作</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmbeddedServletContainerAutoConfiguration</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">	<span class="meta">@ConditionalOnClass(&#123; Servlet.class, Tomcat.class &#125;)</span><span class="comment">//判断当前是否引入了Tomcat依赖；</span></span><br><span class="line">	<span class="meta">@ConditionalOnMissingBean(value = EmbeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)</span><span class="comment">//判断当前容器没有用户自己定义EmbeddedServletContainerFactory：嵌入式的Servlet容器工厂；作用：创建嵌入式的Servlet容器</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">EmbeddedTomcat</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Bean</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> TomcatEmbeddedServletContainerFactory <span class="title">tomcatEmbeddedServletContainerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> TomcatEmbeddedServletContainerFactory();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Nested configuration if Jetty is being used.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Configuration</span></span><br><span class="line">	<span class="meta">@ConditionalOnClass(&#123; Servlet.class, Server.class, Loader.class,</span></span><br><span class="line"><span class="meta">			WebAppContext.class &#125;)</span></span><br><span class="line">	<span class="meta">@ConditionalOnMissingBean(value = EmbeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">EmbeddedJetty</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Bean</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> JettyEmbeddedServletContainerFactory <span class="title">jettyEmbeddedServletContainerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> JettyEmbeddedServletContainerFactory();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * Nested configuration if Undertow is being used.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Configuration</span></span><br><span class="line">	<span class="meta">@ConditionalOnClass(&#123; Servlet.class, Undertow.class, SslClientAuthMode.class &#125;)</span></span><br><span class="line">	<span class="meta">@ConditionalOnMissingBean(value = EmbeddedServletContainerFactory.class, search = SearchStrategy.CURRENT)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">EmbeddedUndertow</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="meta">@Bean</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> UndertowEmbeddedServletContainerFactory <span class="title">undertowEmbeddedServletContainerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> UndertowEmbeddedServletContainerFactory();</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<p>1）、EmbeddedServletContainerFactory（嵌入式Servlet容器工厂）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmbeddedServletContainerFactory</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//获取嵌入式的Servlet容器</span></span><br><span class="line">   <span class="function">EmbeddedServletContainer <span class="title">getEmbeddedServletContainer</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">         ServletContextInitializer... initializers)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180302144835.png"></p>
<p>2）、EmbeddedServletContainer：（嵌入式的Servlet容器）</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180302144910.png"></p>
<p>3）、以<strong>TomcatEmbeddedServletContainerFactory</strong>为例</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> EmbeddedServletContainer <span class="title">getEmbeddedServletContainer</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">      ServletContextInitializer... initializers)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建一个Tomcat</span></span><br><span class="line">   Tomcat tomcat = <span class="keyword">new</span> Tomcat();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//配置Tomcat的基本环节</span></span><br><span class="line">   File baseDir = (<span class="keyword">this</span>.baseDirectory != <span class="keyword">null</span> ? <span class="keyword">this</span>.baseDirectory</span><br><span class="line">         : createTempDir(<span class="string">&quot;tomcat&quot;</span>));</span><br><span class="line">   tomcat.setBaseDir(baseDir.getAbsolutePath());</span><br><span class="line">   Connector connector = <span class="keyword">new</span> Connector(<span class="keyword">this</span>.protocol);</span><br><span class="line">   tomcat.getService().addConnector(connector);</span><br><span class="line">   customizeConnector(connector);</span><br><span class="line">   tomcat.setConnector(connector);</span><br><span class="line">   tomcat.getHost().setAutoDeploy(<span class="keyword">false</span>);</span><br><span class="line">   configureEngine(tomcat.getEngine());</span><br><span class="line">   <span class="keyword">for</span> (Connector additionalConnector : <span class="keyword">this</span>.additionalTomcatConnectors) &#123;</span><br><span class="line">      tomcat.getService().addConnector(additionalConnector);</span><br><span class="line">   &#125;</span><br><span class="line">   prepareContext(tomcat.getHost(), initializers);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//将配置好的Tomcat传入进去，返回一个EmbeddedServletContainer；并且启动Tomcat服务器</span></span><br><span class="line">   <span class="keyword">return</span> getTomcatEmbeddedServletContainer(tomcat);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4）、我们对嵌入式容器的配置修改是怎么生效？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ServerProperties、EmbeddedServletContainerCustomizer</span><br></pre></td></tr></table></figure>



<p><strong>EmbeddedServletContainerCustomizer</strong>：定制器帮我们修改了Servlet容器的配置？</p>
<p>怎么修改的原理？</p>
<p>5）、容器中导入了<strong>EmbeddedServletContainerCustomizerBeanPostProcessor</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//初始化之前</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">postProcessBeforeInitialization</span><span class="params">(Object bean, String beanName)</span></span></span><br><span class="line"><span class="function">      <span class="keyword">throws</span> BeansException </span>&#123;</span><br><span class="line">    <span class="comment">//如果当前初始化的是一个ConfigurableEmbeddedServletContainer类型的组件</span></span><br><span class="line">   <span class="keyword">if</span> (bean <span class="keyword">instanceof</span> ConfigurableEmbeddedServletContainer) &#123;</span><br><span class="line">       <span class="comment">//</span></span><br><span class="line">      postProcessBeforeInitialization((ConfigurableEmbeddedServletContainer) bean);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> bean;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">postProcessBeforeInitialization</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">			ConfigurableEmbeddedServletContainer bean)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取所有的定制器，调用每一个定制器的customize方法来给Servlet容器进行属性赋值；</span></span><br><span class="line">    <span class="keyword">for</span> (EmbeddedServletContainerCustomizer customizer : getCustomizers()) &#123;</span><br><span class="line">        customizer.customize(bean);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Collection&lt;EmbeddedServletContainerCustomizer&gt; <span class="title">getCustomizers</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.customizers == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// Look up does not include the parent context</span></span><br><span class="line">        <span class="keyword">this</span>.customizers = <span class="keyword">new</span> ArrayList&lt;EmbeddedServletContainerCustomizer&gt;(</span><br><span class="line">            <span class="keyword">this</span>.beanFactory</span><br><span class="line">            <span class="comment">//从容器中获取所有这葛类型的组件：EmbeddedServletContainerCustomizer</span></span><br><span class="line">            <span class="comment">//定制Servlet容器，给容器中可以添加一个EmbeddedServletContainerCustomizer类型的组件</span></span><br><span class="line">            .getBeansOfType(EmbeddedServletContainerCustomizer.class,</span><br><span class="line">                            <span class="keyword">false</span>, <span class="keyword">false</span>)</span><br><span class="line">            .values());</span><br><span class="line">        Collections.sort(<span class="keyword">this</span>.customizers, AnnotationAwareOrderComparator.INSTANCE);</span><br><span class="line">        <span class="keyword">this</span>.customizers = Collections.unmodifiableList(<span class="keyword">this</span>.customizers);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.customizers;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ServerProperties也是定制器</span><br></pre></td></tr></table></figure>

<p>步骤：</p>
<p>1）、SpringBoot根据导入的依赖情况，给容器中添加相应的EmbeddedServletContainerFactory【TomcatEmbeddedServletContainerFactory】</p>
<p>2）、容器中某个组件要创建对象就会惊动后置处理器；EmbeddedServletContainerCustomizerBeanPostProcessor；</p>
<p>只要是嵌入式的Servlet容器工厂，后置处理器就工作；</p>
<p>3）、后置处理器，从容器中获取所有的<strong>EmbeddedServletContainerCustomizer</strong>，调用定制器的定制方法</p>
<p>###5）、嵌入式Servlet容器启动原理；</p>
<p>什么时候创建嵌入式的Servlet容器工厂？什么时候获取嵌入式的Servlet容器并启动Tomcat；</p>
<p>获取嵌入式的Servlet容器工厂：</p>
<p>1）、SpringBoot应用启动运行run方法</p>
<p>2）、refreshContext(context);SpringBoot刷新IOC容器【创建IOC容器对象，并初始化容器，创建容器中的每一个组件】；如果是web应用创建<strong>AnnotationConfigEmbeddedWebApplicationContext</strong>，否则：<strong>AnnotationConfigApplicationContext</strong></p>
<p>3）、refresh(context);<strong>刷新刚才创建好的ioc容器；</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">refresh</span><span class="params">()</span> <span class="keyword">throws</span> BeansException, IllegalStateException </span>&#123;</span><br><span class="line">   <span class="keyword">synchronized</span> (<span class="keyword">this</span>.startupShutdownMonitor) &#123;</span><br><span class="line">      <span class="comment">// Prepare this context for refreshing.</span></span><br><span class="line">      prepareRefresh();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Tell the subclass to refresh the internal bean factory.</span></span><br><span class="line">      ConfigurableListableBeanFactory beanFactory = obtainFreshBeanFactory();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Prepare the bean factory for use in this context.</span></span><br><span class="line">      prepareBeanFactory(beanFactory);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="comment">// Allows post-processing of the bean factory in context subclasses.</span></span><br><span class="line">         postProcessBeanFactory(beanFactory);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Invoke factory processors registered as beans in the context.</span></span><br><span class="line">         invokeBeanFactoryPostProcessors(beanFactory);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Register bean processors that intercept bean creation.</span></span><br><span class="line">         registerBeanPostProcessors(beanFactory);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Initialize message source for this context.</span></span><br><span class="line">         initMessageSource();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Initialize event multicaster for this context.</span></span><br><span class="line">         initApplicationEventMulticaster();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Initialize other special beans in specific context subclasses.</span></span><br><span class="line">         onRefresh();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Check for listener beans and register them.</span></span><br><span class="line">         registerListeners();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Instantiate all remaining (non-lazy-init) singletons.</span></span><br><span class="line">         finishBeanFactoryInitialization(beanFactory);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Last step: publish corresponding event.</span></span><br><span class="line">         finishRefresh();</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">catch</span> (BeansException ex) &#123;</span><br><span class="line">         <span class="keyword">if</span> (logger.isWarnEnabled()) &#123;</span><br><span class="line">            logger.warn(<span class="string">&quot;Exception encountered during context initialization - &quot;</span> +</span><br><span class="line">                  <span class="string">&quot;cancelling refresh attempt: &quot;</span> + ex);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Destroy already created singletons to avoid dangling resources.</span></span><br><span class="line">         destroyBeans();</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Reset &#x27;active&#x27; flag.</span></span><br><span class="line">         cancelRefresh(ex);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// Propagate exception to caller.</span></span><br><span class="line">         <span class="keyword">throw</span> ex;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">finally</span> &#123;</span><br><span class="line">         <span class="comment">// Reset common introspection caches in Spring&#x27;s core, since we</span></span><br><span class="line">         <span class="comment">// might not ever need metadata for singleton beans anymore...</span></span><br><span class="line">         resetCommonCaches();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4）、  onRefresh(); web的ioc容器重写了onRefresh方法</p>
<p>5）、webioc容器会创建嵌入式的Servlet容器；<strong>createEmbeddedServletContainer</strong>();</p>
<p><strong>6）、获取嵌入式的Servlet容器工厂：</strong></p>
<p>EmbeddedServletContainerFactory containerFactory = getEmbeddedServletContainerFactory();</p>
<p>​    从ioc容器中获取EmbeddedServletContainerFactory 组件；<strong>TomcatEmbeddedServletContainerFactory</strong>创建对象，后置处理器一看是这个对象，就获取所有的定制器来先定制Servlet容器的相关配置；</p>
<p>7）、<strong>使用容器工厂获取嵌入式的Servlet容器</strong>：this.embeddedServletContainer = containerFactory      .getEmbeddedServletContainer(getSelfInitializer());</p>
<p>8）、嵌入式的Servlet容器创建对象并启动Servlet容器；</p>
<p><strong>先启动嵌入式的Servlet容器，再将ioc容器中剩下没有创建出的对象获取出来；</strong></p>
<p><strong>==IOC容器启动创建嵌入式的Servlet容器==</strong></p>
<h2 id="9、使用外置的Servlet容器"><a href="#9、使用外置的Servlet容器" class="headerlink" title="9、使用外置的Servlet容器"></a>9、使用外置的Servlet容器</h2><p>嵌入式Servlet容器：应用打成可执行的jar</p>
<p>​        优点：简单、便携；</p>
<p>​        缺点：默认不支持JSP、优化定制比较复杂（使用定制器【ServerProperties、自定义EmbeddedServletContainerCustomizer】，自己编写嵌入式Servlet容器的创建工厂【EmbeddedServletContainerFactory】）；</p>
<p>外置的Servlet容器：外面安装Tomcat—应用war包的方式打包；</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>1）、必须创建一个war项目；（利用idea创建好目录结构）</p>
<p>2）、将嵌入式的Tomcat指定为provided；</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>3）、必须编写一个<strong>SpringBootServletInitializer</strong>的子类，并调用configure方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletInitializer</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title">configure</span><span class="params">(SpringApplicationBuilder application)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//传入SpringBoot应用的主程序</span></span><br><span class="line">      <span class="keyword">return</span> application.sources(SpringBoot04WebJspApplication.class);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4）、启动服务器就可以使用；</p>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>jar包：执行SpringBoot主类的main方法，启动ioc容器，创建嵌入式的Servlet容器；</p>
<p>war包：启动服务器，<strong>服务器启动SpringBoot应用</strong>【SpringBootServletInitializer】，启动ioc容器；</p>
<p>servlet3.0（Spring注解版）：</p>
<p>8.2.4 Shared libraries / runtimes pluggability：</p>
<p>规则：</p>
<p>​    1）、服务器启动（web应用启动）会创建当前web应用里面每一个jar包里面ServletContainerInitializer实例：</p>
<p>​    2）、ServletContainerInitializer的实现放在jar包的META-INF/services文件夹下，有一个名为javax.servlet.ServletContainerInitializer的文件，内容就是ServletContainerInitializer的实现类的全类名</p>
<p>​    3）、还可以使用@HandlesTypes，在应用启动的时候加载我们感兴趣的类；</p>
<p>流程：</p>
<p>1）、启动Tomcat</p>
<p>2）、org\springframework\spring-web\4.3.14.RELEASE\spring-web-4.3.14.RELEASE.jar!\META-INF\services\javax.servlet.ServletContainerInitializer：</p>
<p>Spring的web模块里面有这个文件：<strong>org.springframework.web.SpringServletContainerInitializer</strong></p>
<p>3）、SpringServletContainerInitializer将@HandlesTypes(WebApplicationInitializer.class)标注的所有这个类型的类都传入到onStartup方法的Set&lt;Class&lt;?&gt;&gt;；为这些WebApplicationInitializer类型的类创建实例；</p>
<p>4）、每一个WebApplicationInitializer都调用自己的onStartup；</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180302221835.png"></p>
<p>5）、相当于我们的SpringBootServletInitializer的类会被创建对象，并执行onStartup方法</p>
<p>6）、SpringBootServletInitializer实例执行onStartup的时候会createRootApplicationContext；创建容器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> WebApplicationContext <span class="title">createRootApplicationContext</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">      ServletContext servletContext)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//1、创建SpringApplicationBuilder</span></span><br><span class="line">   SpringApplicationBuilder builder = createSpringApplicationBuilder();</span><br><span class="line">   StandardServletEnvironment environment = <span class="keyword">new</span> StandardServletEnvironment();</span><br><span class="line">   environment.initPropertySources(servletContext, <span class="keyword">null</span>);</span><br><span class="line">   builder.environment(environment);</span><br><span class="line">   builder.main(getClass());</span><br><span class="line">   ApplicationContext parent = getExistingRootWebApplicationContext(servletContext);</span><br><span class="line">   <span class="keyword">if</span> (parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">this</span>.logger.info(<span class="string">&quot;Root context already created (using as parent).&quot;</span>);</span><br><span class="line">      servletContext.setAttribute(</span><br><span class="line">            WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, <span class="keyword">null</span>);</span><br><span class="line">      builder.initializers(<span class="keyword">new</span> ParentContextApplicationContextInitializer(parent));</span><br><span class="line">   &#125;</span><br><span class="line">   builder.initializers(</span><br><span class="line">         <span class="keyword">new</span> ServletContextApplicationContextInitializer(servletContext));</span><br><span class="line">   builder.contextClass(AnnotationConfigEmbeddedWebApplicationContext.class);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//调用configure方法，子类重写了这个方法，将SpringBoot的主程序类传入了进来</span></span><br><span class="line">   builder = configure(builder);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//使用builder创建一个Spring应用</span></span><br><span class="line">   SpringApplication application = builder.build();</span><br><span class="line">   <span class="keyword">if</span> (application.getSources().isEmpty() &amp;&amp; AnnotationUtils</span><br><span class="line">         .findAnnotation(getClass(), Configuration.class) != <span class="keyword">null</span>) &#123;</span><br><span class="line">      application.getSources().add(getClass());</span><br><span class="line">   &#125;</span><br><span class="line">   Assert.state(!application.getSources().isEmpty(),</span><br><span class="line">         <span class="string">&quot;No SpringApplication sources have been defined. Either override the &quot;</span></span><br><span class="line">               + <span class="string">&quot;configure method or add an @Configuration annotation&quot;</span>);</span><br><span class="line">   <span class="comment">// Ensure error pages are registered</span></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.registerErrorPageFilter) &#123;</span><br><span class="line">      application.getSources().add(ErrorPageFilterConfiguration.class);</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="comment">//启动Spring应用</span></span><br><span class="line">   <span class="keyword">return</span> run(application);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>7）、Spring的应用就启动并且创建IOC容器</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(String... args)</span> </span>&#123;</span><br><span class="line">   StopWatch stopWatch = <span class="keyword">new</span> StopWatch();</span><br><span class="line">   stopWatch.start();</span><br><span class="line">   ConfigurableApplicationContext context = <span class="keyword">null</span>;</span><br><span class="line">   FailureAnalyzers analyzers = <span class="keyword">null</span>;</span><br><span class="line">   configureHeadlessProperty();</span><br><span class="line">   SpringApplicationRunListeners listeners = getRunListeners(args);</span><br><span class="line">   listeners.starting();</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">      ApplicationArguments applicationArguments = <span class="keyword">new</span> DefaultApplicationArguments(</span><br><span class="line">            args);</span><br><span class="line">      ConfigurableEnvironment environment = prepareEnvironment(listeners,</span><br><span class="line">            applicationArguments);</span><br><span class="line">      Banner printedBanner = printBanner(environment);</span><br><span class="line">      context = createApplicationContext();</span><br><span class="line">      analyzers = <span class="keyword">new</span> FailureAnalyzers(context);</span><br><span class="line">      prepareContext(context, environment, listeners, applicationArguments,</span><br><span class="line">            printedBanner);</span><br><span class="line">       </span><br><span class="line">       <span class="comment">//刷新IOC容器</span></span><br><span class="line">      refreshContext(context);</span><br><span class="line">      afterRefresh(context, applicationArguments);</span><br><span class="line">      listeners.finished(context, <span class="keyword">null</span>);</span><br><span class="line">      stopWatch.stop();</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.logStartupInfo) &#123;</span><br><span class="line">         <span class="keyword">new</span> StartupInfoLogger(<span class="keyword">this</span>.mainApplicationClass)</span><br><span class="line">               .logStarted(getApplicationLog(), stopWatch);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> context;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">      handleRunFailure(context, listeners, analyzers, ex);</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(ex);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>==启动Servlet容器，再启动SpringBoot应用==</strong></p>
<h1 id="五、Docker"><a href="#五、Docker" class="headerlink" title="五、Docker"></a>五、Docker</h1><h2 id="1、简介-1"><a href="#1、简介-1" class="headerlink" title="1、简介"></a>1、简介</h2><p><strong>Docker</strong>是一个开源的应用容器引擎；是一个轻量级容器技术；</p>
<p>Docker支持将软件编译成一个镜像；然后在镜像中各种软件做好配置，将镜像发布出去，其他使用者可以直接使用这个镜像；</p>
<p>运行中的这个镜像称为容器，容器启动是非常快速的。</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180303145450.png"></p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180303145531.png"></p>
<h2 id="2、核心概念"><a href="#2、核心概念" class="headerlink" title="2、核心概念"></a>2、核心概念</h2><p>docker主机(Host)：安装了Docker程序的机器（Docker直接安装在操作系统之上）；</p>
<p>docker客户端(Client)：连接docker主机进行操作；</p>
<p>docker仓库(Registry)：用来保存各种打包好的软件镜像；</p>
<p>docker镜像(Images)：软件打包好的镜像；放在docker仓库中；</p>
<p>docker容器(Container)：镜像启动后的实例称为一个容器；容器是独立运行的一个或一组应用</p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180303165113.png"></p>
<p>使用Docker的步骤：</p>
<p>1）、安装Docker</p>
<p>2）、去Docker仓库找到这个软件对应的镜像；</p>
<p>3）、使用Docker运行这个镜像，这个镜像就会生成一个Docker容器；</p>
<p>4）、对容器的启动停止就是对软件的启动停止；</p>
<h2 id="3、安装Docker"><a href="#3、安装Docker" class="headerlink" title="3、安装Docker"></a>3、安装Docker</h2><h4 id="1）、安装linux虚拟机"><a href="#1）、安装linux虚拟机" class="headerlink" title="1）、安装linux虚拟机"></a>1）、安装linux虚拟机</h4><p>​    1）、VMWare、VirtualBox（安装）；</p>
<p>​    2）、导入虚拟机文件centos7-atguigu.ova；</p>
<p>​    3）、双击启动linux虚拟机;使用  root/ 123456登陆</p>
<p>​    4）、使用客户端连接linux服务器进行命令操作；</p>
<p>​    5）、设置虚拟机网络；</p>
<p>​        桥接网络===选好网卡====接入网线；</p>
<p>​    6）、设置好网络以后使用命令重启虚拟机的网络</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">service network restart</span><br></pre></td></tr></table></figure>

<p>​    7）、查看linux的ip地址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure>

<p>​    8）、使用客户端连接linux；</p>
<h4 id="2）、在linux虚拟机上安装docker"><a href="#2）、在linux虚拟机上安装docker" class="headerlink" title="2）、在linux虚拟机上安装docker"></a>2）、在linux虚拟机上安装docker</h4><p>步骤：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1、检查内核版本，必须是3.10及以上</span><br><span class="line">uname -r</span><br><span class="line">2、安装docker</span><br><span class="line">yum install docker</span><br><span class="line">3、输入y确认安装</span><br><span class="line">4、启动docker</span><br><span class="line">[root@localhost ~]# systemctl start docker</span><br><span class="line">[root@localhost ~]# docker -v</span><br><span class="line">Docker version 1.12.6, build 3e8e77d/1.12.6</span><br><span class="line">5、开机启动docker</span><br><span class="line">[root@localhost ~]# systemctl enable docker</span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br><span class="line">6、停止docker</span><br><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure>

<h2 id="4、Docker常用命令-amp-操作"><a href="#4、Docker常用命令-amp-操作" class="headerlink" title="4、Docker常用命令&amp;操作"></a>4、Docker常用命令&amp;操作</h2><h3 id="1）、镜像操作"><a href="#1）、镜像操作" class="headerlink" title="1）、镜像操作"></a>1）、镜像操作</h3><table>
<thead>
<tr>
<th>操作</th>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>检索</td>
<td>docker  search 关键字  eg：docker  search redis</td>
<td>我们经常去docker  hub上检索镜像的详细信息，如镜像的TAG。</td>
</tr>
<tr>
<td>拉取</td>
<td>docker pull 镜像名:tag</td>
<td>:tag是可选的，tag表示标签，多为软件的版本，默认是latest</td>
</tr>
<tr>
<td>列表</td>
<td>docker images</td>
<td>查看所有本地镜像</td>
</tr>
<tr>
<td>删除</td>
<td>docker rmi image-id</td>
<td>删除指定的本地镜像</td>
</tr>
</tbody></table>
<p><a href="https://hub.docker.com/">https://hub.docker.com/</a></p>
<h3 id="2）、容器操作"><a href="#2）、容器操作" class="headerlink" title="2）、容器操作"></a>2）、容器操作</h3><p>软件镜像（QQ安装程序）—-运行镜像—-产生一个容器（正在运行的软件，运行的QQ）；</p>
<p>步骤：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1、搜索镜像</span><br><span class="line">[root@localhost ~]# docker search tomcat</span><br><span class="line">2、拉取镜像</span><br><span class="line">[root@localhost ~]# docker pull tomcat</span><br><span class="line">3、根据镜像启动容器</span><br><span class="line">docker run --name mytomcat -d tomcat:latest</span><br><span class="line">4、docker ps  </span><br><span class="line">查看运行中的容器</span><br><span class="line">5、 停止运行中的容器</span><br><span class="line">docker stop  容器的id</span><br><span class="line">6、查看所有的容器</span><br><span class="line">docker ps -a</span><br><span class="line">7、启动容器</span><br><span class="line">docker start 容器id</span><br><span class="line">8、删除一个容器</span><br><span class="line"> docker rm 容器id</span><br><span class="line">9、启动一个做了端口映射的tomcat</span><br><span class="line">[root@localhost ~]# docker run -d -p 8888:8080 tomcat</span><br><span class="line">-d：后台运行</span><br><span class="line">-p: 将主机的端口映射到容器的一个端口    主机端口:容器内部的端口</span><br><span class="line"></span><br><span class="line">10、为了演示简单关闭了linux的防火墙</span><br><span class="line">service firewalld status ；查看防火墙状态</span><br><span class="line">service firewalld stop：关闭防火墙</span><br><span class="line">11、查看容器的日志</span><br><span class="line">docker logs container-name/container-id</span><br><span class="line"></span><br><span class="line">更多命令参看</span><br><span class="line">https://docs.docker.com/engine/reference/commandline/docker/</span><br><span class="line">可以参考每一个镜像的文档</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="3）、安装MySQL示例"><a href="#3）、安装MySQL示例" class="headerlink" title="3）、安装MySQL示例"></a>3）、安装MySQL示例</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull mysql</span><br></pre></td></tr></table></figure>



<p>错误的启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker run --name mysql01 -d mysql</span><br><span class="line">42f09819908bb72dd99ae19e792e0a5d03c48638421fa64cce5f8ba0f40f5846</span><br><span class="line"></span><br><span class="line">mysql退出了</span><br><span class="line">[root@localhost ~]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                           PORTS               NAMES</span><br><span class="line">42f09819908b        mysql               &quot;docker-entrypoint.sh&quot;   34 seconds ago      Exited (1) 33 seconds ago                            mysql01</span><br><span class="line">538bde63e500        tomcat              &quot;catalina.sh run&quot;        About an hour ago   Exited (143) About an hour ago                       compassionate_</span><br><span class="line">goldstine</span><br><span class="line">c4f1ac60b3fc        tomcat              &quot;catalina.sh run&quot;        About an hour ago   Exited (143) About an hour ago                       lonely_fermi</span><br><span class="line">81ec743a5271        tomcat              &quot;catalina.sh run&quot;        About an hour ago   Exited (143) About an hour ago                       sick_ramanujan</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//错误日志</span><br><span class="line">[root@localhost ~]# docker logs 42f09819908b</span><br><span class="line">error: database is uninitialized and password option is not specified </span><br><span class="line">  You need to specify one of MYSQL_ROOT_PASSWORD, MYSQL_ALLOW_EMPTY_PASSWORD and MYSQL_RANDOM_ROOT_PASSWORD；这个三个参数必须指定一个</span><br></pre></td></tr></table></figure>

<p>正确的启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker run --name mysql01 -e MYSQL_ROOT_PASSWORD=123456 -d mysql</span><br><span class="line">b874c56bec49fb43024b3805ab51e9097da779f2f572c22c695305dedd684c5f</span><br><span class="line">[root@localhost ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">b874c56bec49        mysql               &quot;docker-entrypoint.sh&quot;   4 seconds ago       Up 3 seconds        3306/tcp            mysql01</span><br></pre></td></tr></table></figure>

<p>做了端口映射</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# docker run -p 3306:3306 --name mysql02 -e MYSQL_ROOT_PASSWORD=123456 -d mysql</span><br><span class="line">ad10e4bc5c6a0f61cbad43898de71d366117d120e39db651844c0e73863b9434</span><br><span class="line">[root@localhost ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">ad10e4bc5c6a        mysql               &quot;docker-entrypoint.sh&quot;   4 seconds ago       Up 2 seconds        0.0.0.0:3306-&gt;3306/tcp   mysql02</span><br></pre></td></tr></table></figure>



<p>几个其他的高级操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --name mysql03 -v /conf/mysql:/etc/mysql/conf.d -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag</span><br><span class="line">把主机的/conf/mysql文件夹挂载到 mysqldocker容器的/etc/mysql/conf.d文件夹里面</span><br><span class="line">改mysql的配置文件就只需要把mysql配置文件放在自定义的文件夹下（/conf/mysql）</span><br><span class="line"></span><br><span class="line">docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci</span><br><span class="line">指定mysql的一些配置参数</span><br></pre></td></tr></table></figure>



<h1 id="六、SpringBoot与数据访问"><a href="#六、SpringBoot与数据访问" class="headerlink" title="六、SpringBoot与数据访问"></a>六、SpringBoot与数据访问</h1><h2 id="1、JDBC"><a href="#1、JDBC" class="headerlink" title="1、JDBC"></a>1、JDBC</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>



<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.15.22:3306/jdbc</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></table></figure>

<p>效果：</p>
<p>​    默认是用org.apache.tomcat.jdbc.pool.DataSource作为数据源；</p>
<p>​    数据源的相关配置都在DataSourceProperties里面；</p>
<p>自动配置原理：</p>
<p>org.springframework.boot.autoconfigure.jdbc：</p>
<p>1、参考DataSourceConfiguration，根据配置创建数据源，默认使用Tomcat连接池；可以使用spring.datasource.type指定自定义的数据源类型；</p>
<p>2、SpringBoot默认可以支持；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">org.apache.tomcat.jdbc.pool.DataSource、HikariDataSource、BasicDataSource、</span><br></pre></td></tr></table></figure>

<p>3、自定义数据源类型</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Generic DataSource configuration.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(DataSource.class)</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(name = &quot;spring.datasource.type&quot;)</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Generic</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Bean</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">(DataSourceProperties properties)</span> </span>&#123;</span><br><span class="line">       <span class="comment">//使用DataSourceBuilder创建数据源，利用反射创建响应type的数据源，并且绑定相关属性</span></span><br><span class="line">      <span class="keyword">return</span> properties.initializeDataSourceBuilder().build();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>4、<strong>DataSourceInitializer：ApplicationListener</strong>；</p>
<p>​    作用：</p>
<p>​        1）、runSchemaScripts();运行建表语句；</p>
<p>​        2）、runDataScripts();运行插入数据的sql语句；</p>
<p>默认只需要将文件命名为：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">schema-*.sql、data-*.sql</span></span><br><span class="line"><span class="attr">默认规则：schema.sql，schema-all.sql；</span></span><br><span class="line"><span class="meta">可以使用</span>   <span class="string"></span></span><br><span class="line">	<span class="attr">schema</span>:<span class="string"></span></span><br><span class="line">      <span class="meta">-</span> <span class="string">classpath:department.sql</span></span><br><span class="line">      <span class="attr">指定位置</span></span><br></pre></td></tr></table></figure>

<p>5、操作数据库：自动配置了JdbcTemplate操作数据库</p>
<h2 id="2、整合Druid数据源"><a href="#2、整合Druid数据源" class="headerlink" title="2、整合Druid数据源"></a>2、整合Druid数据源</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">导入druid数据源</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DruidConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">druid</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span>  <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置Druid的监控</span></span><br><span class="line">    <span class="comment">//1、配置一个管理后台的Servlet</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ServletRegistrationBean <span class="title">statViewServlet</span><span class="params">()</span></span>&#123;</span><br><span class="line">        ServletRegistrationBean bean = <span class="keyword">new</span> ServletRegistrationBean(<span class="keyword">new</span> StatViewServlet(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line">        Map&lt;String,String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        initParams.put(<span class="string">&quot;loginUsername&quot;</span>,<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        initParams.put(<span class="string">&quot;loginPassword&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        initParams.put(<span class="string">&quot;allow&quot;</span>,<span class="string">&quot;&quot;</span>);<span class="comment">//默认就是允许所有访问</span></span><br><span class="line">        initParams.put(<span class="string">&quot;deny&quot;</span>,<span class="string">&quot;192.168.15.21&quot;</span>);</span><br><span class="line"></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、配置一个web监控的filter</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FilterRegistrationBean <span class="title">webStatFilter</span><span class="params">()</span></span>&#123;</span><br><span class="line">        FilterRegistrationBean bean = <span class="keyword">new</span> FilterRegistrationBean();</span><br><span class="line">        bean.setFilter(<span class="keyword">new</span> WebStatFilter());</span><br><span class="line"></span><br><span class="line">        Map&lt;String,String&gt; initParams = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        initParams.put(<span class="string">&quot;exclusions&quot;</span>,<span class="string">&quot;*.js,*.css,/druid/*&quot;</span>);</span><br><span class="line"></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line"></span><br><span class="line">        bean.setUrlPatterns(Arrays.asList(<span class="string">&quot;/*&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>  bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3、整合MyBatis"><a href="#3、整合MyBatis" class="headerlink" title="3、整合MyBatis"></a>3、整合MyBatis</h2><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180305194443.png"></p>
<p>步骤：</p>
<p>​    1）、配置数据源相关属性（见上一节Druid）</p>
<p>​    2）、给数据库建表</p>
<p>​    3）、创建JavaBean</p>
<h3 id="4）、注解版"><a href="#4）、注解版" class="headerlink" title="4）、注解版"></a>4）、注解版</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//指定这是一个操作数据库的mapper</span></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DepartmentMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from department where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Department <span class="title">getDeptById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from department where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">deleteDeptById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Options(useGeneratedKeys = true,keyProperty = &quot;id&quot;)</span></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into department(departmentName) values(#&#123;departmentName&#125;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insertDept</span><span class="params">(Department department)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update(&quot;update department set departmentName=#&#123;departmentName&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">updateDept</span><span class="params">(Department department)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>问题：</p>
<p>自定义MyBatis的配置规则；给容器中添加一个ConfigurationCustomizer；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@org</span>.springframework.context.annotation.Configuration</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ConfigurationCustomizer <span class="title">configurationCustomizer</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ConfigurationCustomizer()&#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">customize</span><span class="params">(Configuration configuration)</span> </span>&#123;</span><br><span class="line">                configuration.setMapUnderscoreToCamelCase(<span class="keyword">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">使用MapperScan批量扫描所有的Mapper接口；</span><br><span class="line"><span class="meta">@MapperScan(value = &quot;com.atguigu.springboot.mapper&quot;)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringBoot06DataMybatisApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SpringApplication.run(SpringBoot06DataMybatisApplication.class, args);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="5）、配置文件版"><a href="#5）、配置文件版" class="headerlink" title="5）、配置文件版"></a>5）、配置文件版</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">config-location:</span> <span class="string">classpath:mybatis/mybatis-config.xml</span> <span class="string">指定全局配置文件的位置</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mybatis/mapper/*.xml</span>  <span class="string">指定sql映射文件的位置</span></span><br></pre></td></tr></table></figure>

<p>更多使用参照</p>
<p><a href="http://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/">http://www.mybatis.org/spring-boot-starter/mybatis-spring-boot-autoconfigure/</a></p>
<h2 id="4、整合SpringData-JPA"><a href="#4、整合SpringData-JPA" class="headerlink" title="4、整合SpringData JPA"></a>4、整合SpringData JPA</h2><h3 id="1）、SpringData简介"><a href="#1）、SpringData简介" class="headerlink" title="1）、SpringData简介"></a>1）、SpringData简介</h3><p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180306105412.png"></p>
<h3 id="2）、整合SpringData-JPA"><a href="#2）、整合SpringData-JPA" class="headerlink" title="2）、整合SpringData JPA"></a>2）、整合SpringData JPA</h3><p>JPA:ORM（Object Relational Mapping）；</p>
<p>1）、编写一个实体类（bean）和数据表进行映射，并且配置好映射关系；</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用JPA注解配置映射关系</span></span><br><span class="line"><span class="meta">@Entity</span> <span class="comment">//告诉JPA这是一个实体类（和数据表映射的类）</span></span><br><span class="line"><span class="meta">@Table(name = &quot;tbl_user&quot;)</span> <span class="comment">//@Table来指定和哪个数据表对应;如果省略默认表名就是user；</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Id</span> <span class="comment">//这是一个主键</span></span><br><span class="line">    <span class="meta">@GeneratedValue(strategy = GenerationType.IDENTITY)</span><span class="comment">//自增主键</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Column(name = &quot;last_name&quot;,length = 50)</span> <span class="comment">//这是和数据表对应的一个列</span></span><br><span class="line">    <span class="keyword">private</span> String lastName;</span><br><span class="line">    <span class="meta">@Column</span> <span class="comment">//省略默认列名就是属性名</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br></pre></td></tr></table></figure>

<p>2）、编写一个Dao接口来操作实体类对应的数据表（Repository）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//继承JpaRepository来完成对数据库的操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">User</span>,<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>3）、基本的配置JpaProperties</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span>  </span><br><span class="line"> <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line"><span class="comment">#     更新或者创建数据表结构</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line"><span class="comment">#    控制台显示SQL</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h1 id="七、启动配置原理"><a href="#七、启动配置原理" class="headerlink" title="七、启动配置原理"></a>七、启动配置原理</h1><p>几个重要的事件回调机制</p>
<p>配置在META-INF/spring.factories</p>
<p><strong>ApplicationContextInitializer</strong></p>
<p><strong>SpringApplicationRunListener</strong></p>
<p>只需要放在ioc容器中</p>
<p><strong>ApplicationRunner</strong></p>
<p><strong>CommandLineRunner</strong></p>
<p>启动流程：</p>
<h2 id="1、创建SpringApplication对象"><a href="#1、创建SpringApplication对象" class="headerlink" title="1、创建SpringApplication对象"></a><strong>1、创建SpringApplication对象</strong></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">initialize(sources);</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(Object[] sources)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//保存主配置类</span></span><br><span class="line">    <span class="keyword">if</span> (sources != <span class="keyword">null</span> &amp;&amp; sources.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.sources.addAll(Arrays.asList(sources));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断当前是否一个web应用</span></span><br><span class="line">    <span class="keyword">this</span>.webEnvironment = deduceWebEnvironment();</span><br><span class="line">    <span class="comment">//从类路径下找到META-INF/spring.factories配置的所有ApplicationContextInitializer；然后保存起来</span></span><br><span class="line">    setInitializers((Collection) getSpringFactoriesInstances(</span><br><span class="line">        ApplicationContextInitializer.class));</span><br><span class="line">    <span class="comment">//从类路径下找到ETA-INF/spring.factories配置的所有ApplicationListener</span></span><br><span class="line">    setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class));</span><br><span class="line">    <span class="comment">//从多个配置类中找到有main方法的主配置类</span></span><br><span class="line">    <span class="keyword">this</span>.mainApplicationClass = deduceMainApplicationClass();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180306145727.png"></p>
<p><img src="images/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20180306145855.png"></p>
<h2 id="2、运行run方法"><a href="#2、运行run方法" class="headerlink" title="2、运行run方法"></a>2、运行run方法</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ConfigurableApplicationContext <span class="title">run</span><span class="params">(String... args)</span> </span>&#123;</span><br><span class="line">   StopWatch stopWatch = <span class="keyword">new</span> StopWatch();</span><br><span class="line">   stopWatch.start();</span><br><span class="line">   ConfigurableApplicationContext context = <span class="keyword">null</span>;</span><br><span class="line">   FailureAnalyzers analyzers = <span class="keyword">null</span>;</span><br><span class="line">   configureHeadlessProperty();</span><br><span class="line">    </span><br><span class="line">   <span class="comment">//获取SpringApplicationRunListeners；从类路径下META-INF/spring.factories</span></span><br><span class="line">   SpringApplicationRunListeners listeners = getRunListeners(args);</span><br><span class="line">    <span class="comment">//回调所有的获取SpringApplicationRunListener.starting()方法</span></span><br><span class="line">   listeners.starting();</span><br><span class="line">   <span class="keyword">try</span> &#123;</span><br><span class="line">       <span class="comment">//封装命令行参数</span></span><br><span class="line">      ApplicationArguments applicationArguments = <span class="keyword">new</span> DefaultApplicationArguments(</span><br><span class="line">            args);</span><br><span class="line">      <span class="comment">//准备环境</span></span><br><span class="line">      ConfigurableEnvironment environment = prepareEnvironment(listeners,</span><br><span class="line">            applicationArguments);</span><br><span class="line">       		<span class="comment">//创建环境完成后回调SpringApplicationRunListener.environmentPrepared()；表示环境准备完成</span></span><br><span class="line">       </span><br><span class="line">      Banner printedBanner = printBanner(environment);</span><br><span class="line">       </span><br><span class="line">       <span class="comment">//创建ApplicationContext；决定创建web的ioc还是普通的ioc</span></span><br><span class="line">      context = createApplicationContext();</span><br><span class="line">       </span><br><span class="line">      analyzers = <span class="keyword">new</span> FailureAnalyzers(context);</span><br><span class="line">       <span class="comment">//准备上下文环境;将environment保存到ioc中；而且applyInitializers()；</span></span><br><span class="line">       <span class="comment">//applyInitializers()：回调之前保存的所有的ApplicationContextInitializer的initialize方法</span></span><br><span class="line">       <span class="comment">//回调所有的SpringApplicationRunListener的contextPrepared()；</span></span><br><span class="line">       <span class="comment">//</span></span><br><span class="line">      prepareContext(context, environment, listeners, applicationArguments,</span><br><span class="line">            printedBanner);</span><br><span class="line">       <span class="comment">//prepareContext运行完成以后回调所有的SpringApplicationRunListener的contextLoaded（）；</span></span><br><span class="line">       </span><br><span class="line">       <span class="comment">//s刷新容器；ioc容器初始化（如果是web应用还会创建嵌入式的Tomcat）；Spring注解版</span></span><br><span class="line">       <span class="comment">//扫描，创建，加载所有组件的地方；（配置类，组件，自动配置）</span></span><br><span class="line">      refreshContext(context);</span><br><span class="line">       <span class="comment">//从ioc容器中获取所有的ApplicationRunner和CommandLineRunner进行回调</span></span><br><span class="line">       <span class="comment">//ApplicationRunner先回调，CommandLineRunner再回调</span></span><br><span class="line">      afterRefresh(context, applicationArguments);</span><br><span class="line">       <span class="comment">//所有的SpringApplicationRunListener回调finished方法</span></span><br><span class="line">      listeners.finished(context, <span class="keyword">null</span>);</span><br><span class="line">      stopWatch.stop();</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.logStartupInfo) &#123;</span><br><span class="line">         <span class="keyword">new</span> StartupInfoLogger(<span class="keyword">this</span>.mainApplicationClass)</span><br><span class="line">               .logStarted(getApplicationLog(), stopWatch);</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="comment">//整个SpringBoot应用启动完成以后返回启动的ioc容器；</span></span><br><span class="line">      <span class="keyword">return</span> context;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">catch</span> (Throwable ex) &#123;</span><br><span class="line">      handleRunFailure(context, listeners, analyzers, ex);</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(ex);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3、事件监听机制"><a href="#3、事件监听机制" class="headerlink" title="3、事件监听机制"></a>3、事件监听机制</h2><p>配置在META-INF/spring.factories</p>
<p><strong>ApplicationContextInitializer</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloApplicationContextInitializer</span> <span class="keyword">implements</span> <span class="title">ApplicationContextInitializer</span>&lt;<span class="title">ConfigurableApplicationContext</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(ConfigurableApplicationContext applicationContext)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ApplicationContextInitializer...initialize...&quot;</span>+applicationContext);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>SpringApplicationRunListener</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloSpringApplicationRunListener</span> <span class="keyword">implements</span> <span class="title">SpringApplicationRunListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//必须有的构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloSpringApplicationRunListener</span><span class="params">(SpringApplication application, String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">starting</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SpringApplicationRunListener...starting...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">environmentPrepared</span><span class="params">(ConfigurableEnvironment environment)</span> </span>&#123;</span><br><span class="line">        Object o = environment.getSystemProperties().get(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;SpringApplicationRunListener...environmentPrepared..&quot;</span>+o);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextPrepared</span><span class="params">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SpringApplicationRunListener...contextPrepared...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">contextLoaded</span><span class="params">(ConfigurableApplicationContext context)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SpringApplicationRunListener...contextLoaded...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">finished</span><span class="params">(ConfigurableApplicationContext context, Throwable exception)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SpringApplicationRunListener...finished...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>配置（META-INF/spring.factories）</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="meta">org.springframework.context.ApplicationContextInitializer</span>=<span class="string">\</span></span><br><span class="line"><span class="string">com.atguigu.springboot.listener.HelloApplicationContextInitializer</span></span><br><span class="line"></span><br><span class="line"><span class="meta">org.springframework.boot.SpringApplicationRunListener</span>=<span class="string">\</span></span><br><span class="line"><span class="string">com.atguigu.springboot.listener.HelloSpringApplicationRunListener</span></span><br></pre></td></tr></table></figure>





<p>只需要放在ioc容器中</p>
<p><strong>ApplicationRunner</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloApplicationRunner</span> <span class="keyword">implements</span> <span class="title">ApplicationRunner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(ApplicationArguments args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;ApplicationRunner...run....&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><strong>CommandLineRunner</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloCommandLineRunner</span> <span class="keyword">implements</span> <span class="title">CommandLineRunner</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(String... args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;CommandLineRunner...run...&quot;</span>+ Arrays.asList(args));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="八、自定义starter"><a href="#八、自定义starter" class="headerlink" title="八、自定义starter"></a>八、自定义starter</h1><p>starter：</p>
<p>​    1、这个场景需要使用到的依赖是什么？</p>
<p>​    2、如何编写自动配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span>  <span class="comment">//指定这个类是一个配置类</span></span><br><span class="line"><span class="meta">@ConditionalOnXXX</span>  <span class="comment">//在指定条件成立的情况下自动配置类生效</span></span><br><span class="line"><span class="meta">@AutoConfigureAfter</span>  <span class="comment">//指定自动配置类的顺序</span></span><br><span class="line"><span class="meta">@Bean</span>  <span class="comment">//给容器中添加组件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@ConfigurationPropertie</span>结合相关xxxProperties类来绑定相关的配置</span><br><span class="line"><span class="meta">@EnableConfigurationProperties</span> <span class="comment">//让xxxProperties生效加入到容器中</span></span><br><span class="line"></span><br><span class="line">自动配置类要能加载</span><br><span class="line">将需要启动就加载的自动配置类，配置在META-INF/spring.factories</span><br><span class="line">org.springframework.boot.autoconfigure.EnableAutoConfiguration=\</span><br><span class="line">org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration,\</span><br><span class="line">org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,\</span><br></pre></td></tr></table></figure>

<p>​    3、模式：</p>
<p>启动器只用来做依赖导入；</p>
<p>专门来写一个自动配置模块；</p>
<p>启动器依赖自动配置；别人只需要引入启动器（starter）</p>
<p>mybatis-spring-boot-starter；自定义启动器名-spring-boot-starter</p>
<p>步骤：</p>
<p>1）、启动器模块</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.starter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>atguigu-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--启动器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--引入自动配置模块--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.starter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>atguigu-spring-boot-starter-autoconfigurer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>2）、自动配置模块</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atguigu.starter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>atguigu-spring-boot-starter-autoconfigurer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>atguigu-spring-boot-starter-autoconfigurer<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.10.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--引入spring-boot-starter；所有starter的基本配置--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.starter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;atguigu.hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String prefix;</span><br><span class="line">    <span class="keyword">private</span> String suffix;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPrefix</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> prefix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPrefix</span><span class="params">(String prefix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.prefix = prefix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSuffix</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> suffix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSuffix</span><span class="params">(String suffix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.suffix = suffix;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.starter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    HelloProperties helloProperties;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HelloProperties <span class="title">getHelloProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloProperties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHelloProperties</span><span class="params">(HelloProperties helloProperties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.helloProperties = helloProperties;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHellAtguigu</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloProperties.getPrefix()+<span class="string">&quot;-&quot;</span> +name + helloProperties.getSuffix();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.atguigu.starter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnWebApplication</span> <span class="comment">//web应用才生效</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(HelloProperties.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceAutoConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    HelloProperties helloProperties;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HelloService <span class="title">helloService</span><span class="params">()</span></span>&#123;</span><br><span class="line">        HelloService service = <span class="keyword">new</span> HelloService();</span><br><span class="line">        service.setHelloProperties(helloProperties);</span><br><span class="line">        <span class="keyword">return</span> service;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="更多SpringBoot整合示例"><a href="#更多SpringBoot整合示例" class="headerlink" title="更多SpringBoot整合示例"></a>更多SpringBoot整合示例</h1><p><a href="https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples">https://github.com/spring-projects/spring-boot/tree/master/spring-boot-samples</a></p>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>spring</tag>
      </tags>
  </entry>
  <entry>
    <title>4.1 以太坊账户</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/4.1%E4%BB%A5%E5%A4%AA%E5%9D%8A%E8%B4%A6%E6%88%B7/</url>
    <content><![CDATA[<h1 id="从UTXO谈起"><a href="#从UTXO谈起" class="headerlink" title="从UTXO谈起"></a>从UTXO谈起</h1><ul>
<li>比特币在基于UTXO的结构中存储有关用户余额的数据：系统的整个状态就是一组UTXO的集合，每个UTXO都有一个所有者和一个面值（就像不同的硬币），而交易会花费若干个输入的UTXO，并根据规则创建若干个新的UTXO：</li>
<li>每个引用的输入必须有效且尚未花费；对于一个交易，必须包含有与每个输入的所有者匹配的签名；总输入必须大于等于总输出值</li>
<li>所以，系统中用户的余额（balance）是用户具有私钥的UTXO 的总值</li>
</ul>
<span id="more"></span>

<h1 id="以太坊的做法"><a href="#以太坊的做法" class="headerlink" title="以太坊的做法"></a>以太坊的做法</h1><ul>
<li><p>以太坊的“状态”，就是系统中所有帐户的列表</p>
</li>
<li><p>每个账户都包括了一个余额（balance），和以太坊特殊定义的数据（代码和内部存储）</p>
</li>
<li><p>如果发送帐户有足够的余额来支付，则交易有效；在这种情况下发送帐户先扣款，而收款帐户将记入这笔收入</p>
</li>
<li><p>如果接收帐户有相关代码，则代码会自动运行，并且它的内部存储也可能被更改，或者代码还可能向其他帐户发送额外的消息，这就会导致进一步的借贷资金关系</p>
</li>
</ul>
<h1 id="优缺点比较"><a href="#优缺点比较" class="headerlink" title="优缺点比较"></a>优缺点比较</h1><p>比特币UTXO 模式优点：</p>
<ul>
<li><p>更高程度的隐私：如果用户为他们收到的每笔交易使用新地址，那么通常很难将帐户相互链接。这很大程度上适用于货币，但不太适用于任意dapps，因为dapps通常涉及跟踪和用户绑定的复杂状态，可能不存在像货币那样简单的用户状态划分方案。</p>
</li>
<li><p>潜在的可扩展性：UTXO在理论上更符合可扩展性要求。因为我们只需要依赖拥有UTXO 的那些人去维护基于Merkle树的所有权证明就够了，即使包括所有者在内的每个人都决定忘记该数据，那么也只有所有者受到对应UTXO的损失，不影响接下来的交易。而在帐户模式中，如果每个人都丢失了与帐户相对应的Merkle树的部分，那将会使得和该帐户有关的消息完全无法处理，包括发币给它。</p>
</li>
</ul>
<p>以太坊账户模式优点：</p>
<ul>
<li><p>可以节省大量空间：不将UTXOs 分开存储，而是合为一个账户；每个交易只需要一个输入、一个签名并产生一个输出。</p>
</li>
<li><p>更好的可替代性：货币本质上都是同质化、可替代的；UTXO的设计使得货币从来源分成了“可花费”和“不可花费”两类，这在实际应用中很难有对应的模型。</p>
</li>
<li><p>更加简单：更容易编码和理解，特别是设计复杂脚本的时候。UTXO在脚本逻辑复杂时更令人费解。</p>
</li>
<li><p>便于维护持久轻节点：只要沿着特定方向扫描状态树，轻节点可以很容易地随时访问账户相关的所有数据。而UTXO的每个交易都会使得状态引用发生改变，这对轻节点来说长时间运行Dapp会有很大压力。</p>
</li>
</ul>
<p>比特币和以太坊的对比</p>
<table>
<thead>
<tr>
<th></th>
<th>BitCoin</th>
<th>Ethereum</th>
</tr>
</thead>
<tbody><tr>
<td>设计定位</td>
<td>现金系统</td>
<td>去中心化应用平台</td>
</tr>
<tr>
<td>数据组成</td>
<td>交易列表(账本)</td>
<td>交易和账户状态</td>
</tr>
<tr>
<td>交易对象</td>
<td>UTXO</td>
<td>Accouts</td>
</tr>
<tr>
<td>代码控制</td>
<td>脚本</td>
<td>智能合约</td>
</tr>
</tbody></table>
<h1 id="以太坊账户类型"><a href="#以太坊账户类型" class="headerlink" title="以太坊账户类型"></a>以太坊账户类型</h1><ul>
<li><p>外部账户(Externally owned account, EOA )</p>
</li>
<li><p>合约账户(Contract accounts)</p>
</li>
</ul>
<h1 id="EOA"><a href="#EOA" class="headerlink" title="EOA"></a>EOA</h1><p>外部账户（用户账户/普通账户）</p>
<ul>
<li><p>有对应的以太币余额</p>
</li>
<li><p>可发送交易（转币或触发合约代码）</p>
</li>
<li><p>由用户私钥控制</p>
</li>
<li><p>没有关联代码</p>
</li>
</ul>
<h1 id="合约账户"><a href="#合约账户" class="headerlink" title="合约账户"></a>合约账户</h1><p>外部账户</p>
<ul>
<li><p>有对应的以太币余额</p>
</li>
<li><p>有关联代码</p>
</li>
<li><p>由代码控制</p>
</li>
<li><p>可通过交易或来自其它合约的调用消息来触发代码执行</p>
</li>
<li><p>执行代码时可以操作自己的存储空间，也可以调用其它合约</p>
</li>
</ul>
<h1 id="以太坊交易（Transaction）"><a href="#以太坊交易（Transaction）" class="headerlink" title="以太坊交易（Transaction）"></a>以太坊交易（Transaction）</h1><p>签名的数据包，由EOA发送到另一个账户</p>
<ul>
<li><p>消息的接收方地址</p>
</li>
<li><p>发送方签名</p>
</li>
<li><p>金额（VALUE）</p>
</li>
<li><p>数据（DATA，可选）</p>
</li>
<li><p>START GAS </p>
</li>
<li><p>GAS PRICE</p>
</li>
</ul>
<h1 id="消息（Message）"><a href="#消息（Message）" class="headerlink" title="消息（Message）"></a>消息（Message）</h1><ol>
<li><p>合约可以向其它合约发送“消息”</p>
</li>
<li><p>消息是不会被序列化的虚拟对象，只存在于以太坊执行环境（EVM）中</p>
</li>
<li><p>可以看作函数调用</p>
</li>
</ol>
<ul>
<li><p>消息发送方</p>
</li>
<li><p>消息接收方</p>
</li>
<li><p>金额（VALUE）</p>
</li>
<li><p>数据（DATA，可选）</p>
</li>
<li><p>START GAS</p>
</li>
</ul>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>3.3 ERC20 代币合约</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/5.3ERC20%20%E4%BB%A3%E5%B8%81%E5%90%88%E7%BA%A6/</url>
    <content><![CDATA[<p>经常混迹币圈，一般都听说过ERC20，今天讲讲什么是ERC20.</p>
<p>首先ERC代表“Etuereum Request for Comment”</p>
<p>以太坊社区为了创建一个以太坊平台的标准， 开发人员提交了一个以太坊改进方案（EIP）， 改进方案中包括协议规范和合约标准。 最终确定的EIP为以太坊开发者提供了一套可实施的标准。 这使得智能合约可以遵循这些通用的接口标准来构建。</p>
<p>ERC-20标准中定义了一些函数接口，这里不做讨论。大部分空投玩家，也不需要深入研究，有兴趣的朋友可以百度一下。</p>
<p>ERC20标准规定了各个代币的基本功能，它可以快速发币，而且使用又方便，因此空投币和大部分基于以太坊合约的代币基本上就是利用ERC-20标准开发的；</p>
<p>除了ERC20之外，还有ERC20，ERC721，ERC223，ERC621，ERC827， 具体不做累述，但是对ERC721顺便说一下， ERC721是主要用于区块链游戏的协议，大家经常看到的区块链游戏基本上是基于ERC721。</p>
<span id="more"></span>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.16</span>; </span><br><span class="line">interface tokenRecipient &#123; </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">receiveApproval</span>(<span class="params">address _from, uint256 _value, address _token, bytes _extraData</span>) <span class="title">external</span></span>; </span><br><span class="line">&#125; </span><br><span class="line">contract TokenERC20 &#123; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">// Public variables of the token </span></span><br><span class="line">  string public name; </span><br><span class="line">  string public symbol; </span><br><span class="line">  uint8 public decimals = <span class="number">18</span>;  <span class="comment">// 代币精度</span></span><br><span class="line">  public totalSupply; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">// This creates an array with all balances </span></span><br><span class="line">  mapping (<span class="function"><span class="params">address</span> =&gt;</span> uint256) public balanceOf; </span><br><span class="line">  mapping (<span class="function"><span class="params">address</span> =&gt;</span> mapping (<span class="function"><span class="params">address</span> =&gt;</span> uint256)) public allowance; <span class="comment">//授权他人可以使用自己的名义转账的额度</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// This generates a public event on the blockchain that will notify clients </span></span><br><span class="line">  event Transfer(address indexed <span class="keyword">from</span>, address indexed to, uint256 value); </span><br><span class="line">  </span><br><span class="line">  <span class="comment">// This generates a public event on the blockchain that will notify clients </span></span><br><span class="line">  event Approval(address indexed _owner, address indexed _spender, uint256 _value); </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">// This notifies clients about the amount burnt(销毁代币) </span></span><br><span class="line">  event Burn(address indexed <span class="keyword">from</span>, uint256 value); </span><br><span class="line"></span><br><span class="line">  <span class="comment">/** </span></span><br><span class="line"><span class="comment">  * Constructor function  </span></span><br><span class="line"><span class="comment">  * Initializes contract with initial supply tokens to the creator of the contract </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">TokenERC20</span>(<span class="params"> uint256 initialSupply, string tokenName, string tokenSymbol </span>) <span class="title">public</span></span>&#123; </span><br><span class="line">    totalSupply = initialSupply * <span class="number">10</span> ** uint256(decimals);  <span class="comment">/*Update total supply with the decimal amount*/</span></span><br><span class="line">    balanceOf[msg.sender] = totalSupply; <span class="comment">// Give the creator all initial tokens </span></span><br><span class="line">    name = tokenName; <span class="comment">// Set the name for display purposes </span></span><br><span class="line">    symbol = tokenSymbol; <span class="comment">// Set the symbol for display purposes </span></span><br><span class="line">  &#125; </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">    * Internal transfer, only can be called by this contract </span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">_transfer</span>(<span class="params">address _from, address _to, uint _value</span>) <span class="title">internal</span> </span>&#123; </span><br><span class="line">    <span class="comment">// Prevent transfer to 0x0 address. Use burn() instead </span></span><br><span class="line">    <span class="built_in">require</span>(_to != <span class="number">0x0</span>); </span><br><span class="line">    <span class="comment">// Check if the sender has enough </span></span><br><span class="line">    <span class="built_in">require</span>(balanceOf[_from] &gt;= _value); </span><br><span class="line">    <span class="comment">// Check for overflows </span></span><br><span class="line">    <span class="built_in">require</span>(balanceOf[_to] + _value &gt;= balanceOf[_to]); </span><br><span class="line">    <span class="comment">// Save this for an assertion in the future </span></span><br><span class="line">    uint previousBalances = balanceOf[_from] + balanceOf[_to]; </span><br><span class="line">    <span class="comment">// Subtract from the sender </span></span><br><span class="line">    balanceOf[_from] --= _value; </span><br><span class="line">    <span class="comment">// Add the same to the </span></span><br><span class="line">    recipient balanceOf[_to] += _value; emit Transfer(_from, _to, _value); </span><br><span class="line">    <span class="comment">// Asserts are used to use static analysis to find bugs in your code. They should never fail </span></span><br><span class="line">    assert(balanceOf[_from] + balanceOf[_to] == previousBalances); </span><br><span class="line">  &#125; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/** </span></span><br><span class="line"><span class="comment">  * Transfer tokens </span></span><br><span class="line"><span class="comment">  * Send `_value` tokens to `_to` from your account </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_to The address of the recipient </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_value the amount to send </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">transfer</span>(<span class="params">address _to, uint256 _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>) </span>&#123;</span><br><span class="line">    _transfer(msg.sender, _to, _value); </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">  &#125; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/** </span></span><br><span class="line"><span class="comment">  * Transfer tokens from other address </span></span><br><span class="line"><span class="comment">  * Send `_value` tokens to `_to` on behalf of `_from` </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_from The address of the sender </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_to The address of the recipient </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_value the amount to send </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">transferFrom</span>(<span class="params">address _from, address _to, uint256 _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(_value &lt;= allowance[_from][msg.sender]); </span><br><span class="line">    <span class="comment">// Check allowance </span></span><br><span class="line">    allowance[_from][msg.sender] -= _value;</span><br><span class="line">    _transfer(_from, _to, _value); </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">  &#125; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/** </span></span><br><span class="line"><span class="comment">  * Set allowance for other address </span></span><br><span class="line"><span class="comment">  * Allows `_spender` to spend no more than `_value` tokens on your behalf </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_spender The address authorized to spend </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_value the max amount they can spend </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">approve</span>(<span class="params">address _spender, uint256 _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>) </span>&#123; </span><br><span class="line">    allowance[msg.sender][_spender] = _value; </span><br><span class="line">    emit Approval(msg.sender, _spender, _value); </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">  &#125; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/** </span></span><br><span class="line"><span class="comment">  * Set allowance for other address and notify </span></span><br><span class="line"><span class="comment">  * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_spender The address authorized to spend </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_value the max amount they can spend </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_extraData some extra information to send to the approved contract </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">approveAndCall</span>(<span class="params">address _spender, uint256 _value, bytes _extraData</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>) </span>&#123; </span><br><span class="line">    tokenRecipient spender = tokenRecipient(_spender);</span><br><span class="line">    <span class="keyword">if</span> (approve(_spender, _value)) &#123; </span><br><span class="line">      spender.receiveApproval(msg.sender, _value, <span class="built_in">this</span>, _extraData); </span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">    &#125; </span><br><span class="line">  &#125; </span><br><span class="line"> </span><br><span class="line">  <span class="comment">/** </span></span><br><span class="line"><span class="comment">  * Destroy tokens </span></span><br><span class="line"><span class="comment">  * Remove `_value` tokens from the system irreversibly </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_value the amount of money to burn </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">burn</span>(<span class="params">uint256 _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(balanceOf[msg.sender] &gt;= _value); <span class="comment">// Check if the sender has enough </span></span><br><span class="line">    balanceOf[msg.sender] -= _value; <span class="comment">// Subtract from the sender </span></span><br><span class="line">    totalSupply --= _value; <span class="comment">// Updates totalSupply </span></span><br><span class="line">    emit Burn(msg.sender, _value); </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">  &#125; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">/** </span></span><br><span class="line"><span class="comment">  * Destroy tokens from other account </span></span><br><span class="line"><span class="comment">  * Remove `_value` tokens from the system irreversibly on behalf of `_from`. </span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param </span>_from the address of the sender * <span class="doctag">@param </span>_value the amount of money to burn </span></span><br><span class="line"><span class="comment">  */</span> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">burnFrom</span>(<span class="params">address _from, uint256 _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(balanceOf[_from] &gt;= _value); <span class="comment">// Check if the targeted balance is enough</span></span><br><span class="line">    <span class="built_in">require</span>(_value &lt;= allowance[_from][msg.sender]); <span class="comment">// Check allowance </span></span><br><span class="line">    balanceOf[_from] --= _value; <span class="comment">// Subtract from the targeted balance </span></span><br><span class="line">    allowance[_from][msg.sender] --= _value; <span class="comment">// Subtract from the sender&#x27;s allowance </span></span><br><span class="line">    totalSupply --= _value; <span class="comment">// Update totalSupply </span></span><br><span class="line">    emit Burn(_from, _value); </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>6.2 简单投票Dapp</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/6.2%E7%AE%80%E5%8D%95%E6%8A%95%E7%A5%A8DApp/</url>
    <content><![CDATA[<p>接下来我们要开始真正做一个 DApp，尽管它这是很简单的一个投票应用， 但会包含完整的工作流程和交互页面。构建这个应用的主要步骤如下： </p>
<ol>
<li>我们首先安装一个叫做 ganache 的模拟区块链，能够让我们的程序在开发环境中 运行。 </li>
<li>写一个合约并部署到 ganache 上。</li>
<li>然后我们会通过命令行和网页与 ganache 进行交互。 </li>
</ol>
<p>我们与区块链进行通信的方式是通过 RPC（Remote Procedure Call）。 web3js 是一个 JavaScript 库，它抽象出了所有的 RPC 调用，以便于你可以 通过 JavaScript 与区块链进行交互。另一个好处是，web3js 能够让你使用你 最喜欢的 JavaScript 框架构建非常棒的 web 应用。 </p>
<h2 id="开发准备-Linux"><a href="#开发准备-Linux" class="headerlink" title="开发准备-Linux"></a>开发准备-Linux</h2><p>下面是基于 Linux 的安装指南。</p>
<p>这要求我们预先安装 nodejs 和 npm，再用 npm 安装 ganache-cli、web3 和 solc，就可以继续项目的下一步了。 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir simple_voting_dapp </span><br><span class="line">cd simple_voting_dapp </span><br><span class="line">npm init </span><br><span class="line">npm install ganache-cli web3@0.20.1 solc </span><br><span class="line">node_modules/.bin/ganache-cli </span><br></pre></td></tr></table></figure>

<p>如果安装成功，运行命令 node_modules/.bin/ganache-cli，应该能够看到对应输出。</p>
<p>为了便于测试，ganache 默认会创建 10 个账户，每个账户有 100 个以 太。。你需要用其中一个账户创建交易，发送、接收以太。 当然，你也可以安装 GUI 版本的 ganache 而不是命令行版本，在这里下 载 GUI 版本：<a href="http://truffleframework.com/ganache/">http://truffleframework.com/ganache/</a></p>
<h2 id="Solidity-合约"><a href="#Solidity-合约" class="headerlink" title="Solidity 合约"></a>Solidity 合约</h2><p>我们会写一个叫做 Voting 的合约，这个合约有以下内容： </p>
<ul>
<li>一个构造函数，用来初始化一些候选者。</li>
<li>一个用来投票的方法（对投票数加 1） 简单投票 DApp </li>
<li>一个返回候选者所获得的总票数的方法</li>
</ul>
<p>当你把合约部署到区块链的时候，就会调用构造函数，并只调用一次。与 web 世界里每次部署代码都会覆盖旧代码不同，在区块链上部署的合约是不可改变的，也就是说，如果你更新合约并再次部署，旧的合约仍然会在区块链上存 在，并且数据仍在。新的部署将会创建合约的一个新的实例。</p>
<h2 id="代码和解释"><a href="#代码和解释" class="headerlink" title="代码和解释"></a>代码和解释</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.22</span>;</span><br><span class="line">contract Voting &#123;</span><br><span class="line">		mapping (<span class="function"><span class="params">bytes32</span> =&gt;</span> uint8) public votesReceived;</span><br><span class="line">		bytes32[] public candidateList;</span><br><span class="line">		<span class="title">constructor</span>(<span class="params">bytes32[] candidateNames</span>) <span class="title">public</span> &#123;</span><br><span class="line">    		candidateList = candidateNames;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">totalVotesFor</span>(<span class="params">bytes32 candidate</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">uint8</span>) </span>&#123;</span><br><span class="line">    		<span class="built_in">require</span>(validCandidate(candidate));</span><br><span class="line"> 				<span class="keyword">return</span> votesReceived[candidate];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">voteForCandidate</span>(<span class="params">bytes32 candidate</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">				<span class="built_in">require</span>(validCandidate(candidate)); votesReceived[candidate] += <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">validCandidate</span>(<span class="params">bytes32 candidate</span>) <span class="title">view</span> <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">				<span class="keyword">for</span>(uint i = <span class="number">0</span>; i &lt; candidateList.length; i++) &#123;</span><br><span class="line">    				<span class="keyword">if</span> (candidateList[i] == candidate) &#123;</span><br><span class="line">								<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">						&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">return</span> fales;</span><br><span class="line">		&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Line 1. 我们必须指定代码将会哪个版本的编译器进行编译 </p>
<p>Line 3. mapping 相当于一个关联数组或者是字典，是一个键值对。mapping votesReceived 的键是候选者的名字，类型为 bytes32。mapping 的值是一个 未赋值的整型，存储的是投票数。 </p>
<p>Line 4. 在很多编程语言中（例如 java、python 中的字典），仅仅通过 votesReceived.keys 就可以获取所有的候选者姓名。但 是，但是在 solidity 中没有这样的方法，所以我们必须单独管理一个候选者数组 candidateList。 </p>
<p>Line 14. 注意到 votesReceived[key] 有一个默认值 0，所以你不需要将其 初始化为 0，直接加 1 即可。 </p>
<p>你也会注意到每个函数有个可见性说明符（visibility specifier）（比如本例 中的 public）。这意味着，函数可以从合约外调用。如果你不想要其他任何人 调用这个函数，你可以把它设置为私有（private）函数。如果你不指定可见性， 编译器会抛出一个警告。最近 solidity 编译器进行了一些改进，如果用户忘记了 对私有函数进行标记导致了外部可以调用私有函数，编译器会捕获这个问题。 </p>
<p>你也会在一些函数上看到一个修饰符 view。它通常用来告诉编译器函数是 只读的（也就是说，调用该函数，区块链状态并不会更新）。</p>
<p>接下来，我们将会使用上一节安装的 solc 库来编译代码。如果你还记得的 话，之前我们提到过 web3js 是一个库，它能够让你通过 RPC 与区块链进行 交互。我们将会在 node 控制台里用这个库部署合约，并与区块链进行交互。</p>
<h2 id="编译合约"><a href="#编译合约" class="headerlink" title="编译合约"></a>编译合约</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">In the node <span class="built_in">console</span></span><br><span class="line">&gt; Web3 = <span class="built_in">require</span>(<span class="string">&#x27;web3&#x27;</span>)</span><br><span class="line">&gt; web3 = <span class="keyword">new</span> Web3(<span class="keyword">new</span> Web3.providers.HttpProvider(<span class="string">&quot;http://localhost:8545&quot;</span>));</span><br><span class="line">&gt; web3.eth.accounts</span><br><span class="line">[<span class="string">&#x27;0x5c252a0c0475f9711b56ab160a1999729eccce97&#x27;</span>,<span class="string">&#x27;0x353d310bed379b2d1df3b727645e200997016ba3&#x27;</span>]</span><br><span class="line">&gt; code = fs.readFileSync(<span class="string">&#x27;Voting.sol&#x27;</span>).toString()</span><br><span class="line">&gt; solc = <span class="built_in">require</span>(<span class="string">&#x27;solc&#x27;</span>)</span><br><span class="line">&gt; compiledCode = solc.compile(code)</span><br></pre></td></tr></table></figure>

<p>首先，在终端中运行 node 进入 node 控制台，初始化 web3 对象，并向区块链查询获取所有的账户。</p>
<p> 确保与此同时 ganache 已经在另一个窗口中运行 </p>
<p>为了编译合约，先从 Voting.sol 中加载代码并绑定到一个 string 类型的变量，然后像右边这样对合约进行编译。 </p>
<p>当你成功地编译好合约，打印 compiledCode 对象（直接在 node 控制台 输入 compiledCode 就可以看到内容），你会注意到有两个重要的字段，它们 很重要，你必须要理解： </p>
<pre><code>1. compiledCode.contracts[&#39;:Voting&#39;].bytecode: 这就是 Voting.sol 编 译好后的字节码。也是要部署到区块链上的代码。
 2. compiledCode.contracts[&#39;:Voting&#39;].interface: 这是一个合约的接口或 者说模板（叫做 abi 定义），它告诉了用户在这个合约里有哪些方法。在未来无论 何时你想要跟任意一个合约进行交互，你都会需要这个 abi 定义。你可以在这里 看 到 ABI 的更多内容。
</code></pre>
<p> 在以后的项目中，我们将会使用 truffle 框架来管理编译和与区块链的交互。 但是，在使用任何框架之前，深入了解它的工作方式还是大有裨益的，因为框架 会将这些内容抽象出去。</p>
<h2 id="部署合约"><a href="#部署合约" class="headerlink" title="部署合约"></a>部署合约</h2><p>现在将合约部署到区块链上。为此，你必须先通过传入 abi 定义来创建一个合约对象 VotingContract。然后用这个对象在链上部署并初始 化合约。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Execute <span class="built_in">this</span> <span class="keyword">in</span> your node <span class="built_in">console</span>:</span><br><span class="line">&gt; abiDefinition = <span class="built_in">JSON</span>.parse(compiledCode.contracts[<span class="string">&#x27;:Voting&#x27;</span>].interface)</span><br><span class="line">&gt; VotingContract = web3.eth.contract(abiDefinition)</span><br><span class="line">&gt; byteCode = compiledCode.contracts[<span class="string">&#x27;:Voting&#x27;</span>].bytecode</span><br><span class="line">&gt; deployedContract =VotingContract.new([<span class="string">&#x27;Alice&#x27;</span>,<span class="string">&#x27;Bob&#x27;</span>,<span class="string">&#x27;Cary&#x27;</span>],&#123;<span class="attr">data</span>: byteCode, <span class="attr">from</span>:</span><br><span class="line">web3.eth.accounts[<span class="number">0</span>], <span class="attr">gas</span>: <span class="number">4700000</span>&#125;)</span><br><span class="line">&gt; deployedContract.address</span><br><span class="line"><span class="string">&#x27;0x0396d2b97871144f75ba9a9c8ae12bf6c019f610&#x27;</span></span><br><span class="line"><span class="comment">// Your address will be different</span></span><br><span class="line">&gt; contractInstance = VotingContract.at(deployedContract.address)</span><br></pre></td></tr></table></figure>

<p>VotingContract.new 将合约部署到区块链。</p>
<p> 第一个参数是一个候选者数组，候选者们会竞争选举，这很容易理解。让我 们来看一下第二个参数里面都是些什么： </p>
<ol>
<li>data: 这是我们编译后部署到区块链上的字节码。</li>
<li> from: 区块链必须跟踪是谁部署了这个合约。在这种情况下，我们仅仅是 从调用 web3.eth.accounts 返回的第一个账户，作为部署这个合约的账 户。记住，web3.eth.accounts 返回一个 ganache 所创建 10 个测试账 号的数组。在交易之前，你必须拥有这个账户，并对其解锁。创建一个账 户时，你会被要求输入一个密码，这就是你用来证明你对账户所有权的东 西。在下一节，我们将会进行详细介绍。为了方便起见，ganache 默认 会解锁 10 个账户。 </li>
<li> gas: 与区块链进行交互需要花费金钱。这笔钱用来付给矿工，因为他们 帮你把代码包含了在区块链里面。你必须指定你愿意花费多少钱让你的代 码包含在区块链中，也就是设定 “gas” 的值。你的 “from” 账户里面的 ETH 余额将会被用来购买 gas。gas 的价格由网络设定。 </li>
</ol>
<p>我们已经部署了合约，并有了一个合约实例（变量 contractInstance），我 们可以用这个实例与合约进行交互。 </p>
<p>在区块链上有上千个合约。那么，如何识别你的合约已经上链了呢？ </p>
<p>​    答案是找到已部署合约的地址：deployedContract.address. 当你需要跟合 约进行交互时，就需要这个部署地址和我们之前谈到的 abi 定义。</p>
<h2 id="控制台交互"><a href="#控制台交互" class="headerlink" title="控制台交互"></a>控制台交互</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">In your node <span class="built_in">console</span>:</span><br><span class="line">&gt; contractInstance.totalVotesFor.call(<span class="string">&#x27;Rama&#x27;</span>)</span><br><span class="line">&#123; [<span class="built_in">String</span>: <span class="string">&#x27;0&#x27;</span>] s: <span class="number">1</span>, <span class="attr">e</span>: <span class="number">0</span>, <span class="attr">c</span>: [ <span class="number">0</span> ] &#125;</span><br><span class="line">&gt; contractInstance.voteForCandidate(<span class="string">&#x27;Rama&#x27;</span>, &#123;<span class="attr">from</span>:web3.eth.accounts[<span class="number">0</span>]&#125;)</span><br><span class="line"><span class="string">&#x27;0xdedc7ae544c3dde74ab5a0b07422c5a51b5240603d31074f5b75c0ebc786bf53&#x27;</span></span><br><span class="line">&gt; contractInstance.voteForCandidate(<span class="string">&#x27;Rama&#x27;</span>, &#123;<span class="attr">from</span>:web3.eth.accounts[<span class="number">0</span>]&#125;)</span><br><span class="line"><span class="string">&#x27;0x02c054d238038d68b65d55770fabfca592a5cf6590229ab91bbe7cd72da46de9&#x27;</span></span><br><span class="line">&gt; contractInstance.voteForCandidate(<span class="string">&#x27;Rama&#x27;</span>, &#123;<span class="attr">from</span>:web3.eth.accounts[<span class="number">0</span>]&#125;)</span><br><span class="line"><span class="string">&#x27;0x3da069a09577514f2baaa11bc3015a16edf26aad28dffbcd126bde2e71f2b76f&#x27;</span></span><br><span class="line">&gt;contractInstance.totalVotesFor.call(<span class="string">&#x27;Rama&#x27;</span>).toLocaleString()</span><br><span class="line"><span class="string">&#x27;3&#x27;</span></span><br></pre></td></tr></table></figure>

<p>{ [String: ‘0’] s: 1, e: 0, c: [ 0 ] } 是数字 0 的科学计数法表示. 这里返回的 值是一个 bigNumber 对象，可以用它的的.toNumber()方法来显示数字：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">contractInstance.totalVotesFor.call(<span class="string">&#x27;Alice&#x27;</span>).toNumber() web3.fromWei(web3.eth.getBalance(web3.eth.accounts[<span class="number">1</span>]).toNumber(),<span class="string">&#x27;ether&#x27;</span> ) </span><br></pre></td></tr></table></figure>

<p>BigNumber 的值以符号，指数和系数的形式,以十进制浮点格式进行存储。 </p>
<p>​    s 是 sign 符号，也就是正负； </p>
<p>​    e 是 exponent 指数，表示最高位后有几个零； </p>
<p>​    c 是 coefficient 系数，也就是实际的有效数字；</p>
<p>bignumber 构造函数的入 参位数限制为14位，所以系数表示是从后向前截取的一个数组，14位截取一次。 为候选者投票并查看投票数 继续课程，在你的 node 控制台里调用 voteForCandidate 和 totalVotesFor 方法并查看结果。 </p>
<p>每为一位候选者投一次票，你就会得到一个交易 id: </p>
<p>​    比如： ‘<code>0xdedc7ae544c3dde74ab5a0b07422c5a51b5240603d31074f5b75c0ebc 786bf53</code>’。</p>
<p>​    这个交易 id 就是交易发生的凭据，你可以在将来的任何时候引用这 笔交易。</p>
<p>这笔交易是不可改变的。 对于以太坊这样的区块链，不可改变是其主要特性之一。</p>
<p>在接下来的章节， 我们将会利用这一特性构建应用。</p>
<h2 id="网页交互"><a href="#网页交互" class="headerlink" title="网页交互"></a>网页交互</h2><p>至此，大部分的工作都已完成，我们还需要做的事情就是创建一个简单的 html，里面有候选者姓名并调用投票命令（我们已经在 nodejs 控制台里试过）。 你可以在右侧找到 html 代码和 js 代码。将它们放到 chapter1 目录，并在浏 览器中打开 index.html。</p>
<p>index.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Voting DApp<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag"><span class="attr">href</span>=<span class="string">&#x27;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/boot</span></span></span><br><span class="line"><span class="string"><span class="tag">strap.min.css&#x27;</span> <span class="attr">rel</span>=<span class="string">&#x27;stylesheet&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;text/css&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>A Simple Voting Application<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;table-responsive&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">th</span>&gt;</span>Candidate<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">th</span>&gt;</span>Votes<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>Alice<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">&quot;candidate-1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bob<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">&quot;candidate-2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span>&gt;</span>Cary<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">td</span> <span class="attr">id</span>=<span class="string">&quot;candidate-3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;candidate&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;voteForCandidate()&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn</span></span></span><br><span class="line"><span class="string"><span class="tag">btn-primary&quot;</span>&gt;</span>Vote<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag"><span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/ethereum/web3.js/dist/web3.mi</span></span></span><br><span class="line"><span class="string"><span class="tag">n.js&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.1.1.slim.min.js&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Tips： </p>
<pre><code>1. 中用 link 形式引入 bootstrap 的 css 类型库，以下 container、 table-responsive 等 class 均来自 bootstrap 
 2.  表头单元格，表单元格，候选人名字后的单元格为得票数，用 id 区 分以方便写入，之后 js 中写死了对应关系 
 3. 一个输入框，定义 id 方便在 js 中取值
 4. 超链接形式的按键 btn，href=“#”为跳转至本页，即不跳转；onclick 指向 js 中方法 
</code></pre>
<p>为了简化项目，我们已经硬编码了候选者姓名。如果你喜欢的话，可以调整 代码使其动态选择候选者。</p>
<p>index.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">web3 = <span class="keyword">new</span> Web3(<span class="keyword">new</span></span><br><span class="line">Web3.providers.HttpProvider(<span class="string">&quot;http://localhost:8545&quot;</span>));</span><br><span class="line">abi = <span class="built_in">JSON</span>.parse(<span class="string">&#x27;[&#123;&quot;constant&quot;:false,…&#125;]&#x27;</span>)</span><br><span class="line">VotingContract = web3.eth.contract(abi);</span><br><span class="line">contractInstance =</span><br><span class="line">VotingContract.at(<span class="string">&#x27;0x329f5c190380ebcf640a90d06eb1db2d68503a53&#x27;</span>);</span><br><span class="line">candidates = &#123;<span class="string">&quot;Alice&quot;</span>: <span class="string">&quot;candidate-1&quot;</span>, <span class="string">&quot;Bob&quot;</span>: <span class="string">&quot;candidate-2&quot;</span>,<span class="string">&quot;Cary&quot;</span>: <span class="string">&quot;candidate-3&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">voteForCandidate</span>(<span class="params">candidate</span>) </span>&#123;</span><br><span class="line">		candidateName = $(<span class="string">&quot;#candidate&quot;</span>).val();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">				contractInstance.voteForCandidate(candidateName,&#123;<span class="attr">from</span>:web3.eth.accounts[<span class="number">0</span>]&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">						<span class="keyword">let</span> div_id = candidates[candidateName];</span><br><span class="line">						$(<span class="string">&quot;#&quot;</span>+div_id).html(</span><br><span class="line">						contractInstance.totalVotesFor.call(candidateName).toString());</span><br><span class="line">					&#125;);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		candidateNames = <span class="built_in">Object</span>.keys(candidates);</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; candidateNames.length; i++) &#123;</span><br><span class="line">				<span class="keyword">let</span> name = candidateNames[i];</span><br><span class="line">				<span class="keyword">let</span> val = contractInstance.totalVotesFor.call(name).toString()</span><br><span class="line">				$(<span class="string">&quot;#&quot;</span>+candidates[name]).html(val);</span><br><span class="line">		&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>在第 4 行，用你自己的合约地址替换代码中的合约地址。合约地址是之前 的 deployedContract.address</p>
<p>如果一切顺利的话，你应该能够在文本框中输入候选者姓名，然后投票数应 该加 1 。 </p>
<p>注意：由于网络原因，web3.js 可能无法获取，可自行下载到本地导入。 </p>
<p>如果你可以看到页面，为候选者投票，然后看到投票数增加，那就已经成功 创建了第一个合约，恭喜！所有投票都会保存到区块链上，并且是不可改变的。 任何人都可以独立验证每个候选者获得了多少投票。当然，我们所有的事情都是 在一个模拟的区块链上（ganache）完成，在接下来的课程中，我们会将这个合 约部署到真正的公链上。在 Part 2，我们会把合约部署到叫做 Ropsten testnet 的公链，同时也会学习如何使用 truffle 框架构建合约，管理 dapp。 总结一下，下面是你到目前为止已经完成的事情： </p>
<ol>
<li>通过安装 node, npm 和 ganache，你已经配置好了开发环境。</li>
<li>你编码了一个简单的投票合约，编译并部署到区块链上。 </li>
<li> 你通过 nodejs 控制台与网页与合约进行了交互。</li>
</ol>
]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>7.1 编写合约的编译脚本</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/7.1%E7%BC%96%E5%86%99%E5%90%88%E7%BA%A6%E7%9A%84%E7%BC%96%E8%AF%91%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<pre><code>编译是对合约进行部署和 测试的前置步骤，编译步骤的目标是把源代码转成 ABI 和 Bytecode，并且能 够处理编译时抛出的错误，确保不会在包含错误的源代码上进行编译。 
</code></pre>
<p>​    开始我们的编译方式是用 solc 工具做命令行编译，这个过程中牵涉到大段 内容的复制粘贴，很容易出错；之后在项目中引入 solc 模块，可以在 node 命令 行中自动编译并读取结果内容。于是我们自然会想到，能不能将这个过程写成脚 本，自动完成这些过程呢？</p>
<h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>首先新建一个项目目录，可以叫做 contract_workflow。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir contract_workflow</span><br><span class="line">cd contract_workflow</span><br></pre></td></tr></table></figure>

<p>为了存放不同目的不同类型的文件，我们先在项目根目录下新建 4 个子目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir contracts</span><br><span class="line">mkdir scripts</span><br><span class="line">mkdir compiled</span><br><span class="line">mkdir tests</span><br></pre></td></tr></table></figure>

<p> contracts 目录存放合约源代码，</p>
<p>​    scripts 目录存放编译脚本，</p>
<p>​    complied目录存放编译结果，</p>
<p>​    tests 目录存放测试文件。</p>
<h2 id="准备合约源码"><a href="#准备合约源码" class="headerlink" title="准备合约源码"></a>准备合约源码</h2><p>为了简化工作，我们可以直接复制以前的 solidity 代码，也可以自己写一个 简单的合约。比如，这里用到了我们最初写的简单合约 Car.sol：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.22</span>;</span><br><span class="line">contract Car &#123;</span><br><span class="line">	string public brand;</span><br><span class="line">	<span class="title">constructor</span>(<span class="params">string initialBrand</span>) <span class="title">public</span> &#123;</span><br><span class="line">		brand = initialBrand;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">setBrand</span>(<span class="params">string newBrand</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		brand = newBrand;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>将它放到 contracts 目录下。</p>
<h2 id="准备编译工具"><a href="#准备编译工具" class="headerlink" title="准备编译工具"></a>准备编译工具</h2><p>我们用 solc 作为编译的基础工具。用 npm 将 solc 安装到本地目录中：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install solc</span><br></pre></td></tr></table></figure>

<h2 id="开发编译脚本"><a href="#开发编译脚本" class="headerlink" title="开发编译脚本"></a>开发编译脚本</h2><p>我们已经熟悉了命令行编译的流程，现在我们试图将它脚本中。在 scripts 目录下新建文件 compile.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> solc = <span class="built_in">require</span>(<span class="string">&#x27;solc&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> contractPath = path.resolve(__dirname, <span class="string">&#x27;../contracts&#x27;</span>,<span class="string">&#x27;Car.sol&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> contractSource = fs.readFileSync(contractPath, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> result = solc.compile(contractSource, <span class="number">1</span>); </span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure>

<p>​    我们把合约源码从文件中读出来，然后传给 solc 编译器，等待同步编译完 成之后，把编译结果输出到控制台。 </p>
<p>​    其中 solc.compile() 的第二个参数给 1，表示启用 solc 的编译优化器。 </p>
<p>​    编译结果是一个嵌套的 js 对象，其中可以看到 contracts 属性包含了所有找 到的合约（当然，我们的源码中只有一个 Car）。每个合约下面包含了 assembly、 bytecode、interface、metadata、opcodes 等字段，我们最关心的当然是这两 个： </p>
<ul>
<li><p>bytecode：字节码，部署合约到以太坊区块链上时需要使用； </p>
</li>
<li><p>interface： 二进制应用接口（ABI），使用 web3 初始化智能合约交互 实例的时候需要使用。</p>
<p> 其中 interface 是被 JSON.stringify 过的字符串，我们用 JSON.parse 反 解出来并格式化，就可以拿到合约的 abi 对象。</p>
</li>
</ul>
<h2 id="保存编译结果"><a href="#保存编译结果" class="headerlink" title="保存编译结果"></a>保存编译结果</h2><p>让我们继续课程，现在将合约部署到区块链上。为此，你必须先通过传入 abi 定义来创建一个合约对象 VotingContract。然后用这个对象在链上部署并初始 化合约。为了方便后续的部署和测试过程直接使用编译结果，需要把编译结果保 存到文件系统中，在做改动之前，我们引入一个非常好用的小工具 fs-extra，在 脚本中使用 fs-extra 直接替换到 fs，然后在脚本中加入以下代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Object</span>.keys(result.contracts).forEach( <span class="function"><span class="params">name</span> =&gt;</span> &#123;</span><br><span class="line">	<span class="keyword">const</span> contractName = name.replace(<span class="regexp">/^:/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">	<span class="keyword">const</span> filePath = path.resolve(__dirname, <span class="string">&#x27;../compiled&#x27;</span>,<span class="string">`<span class="subst">$&#123;contractName&#125;</span>.json`</span>);</span><br><span class="line">	fs.outputJsonSync(filePath, result.contracts[name]);</span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">`save compiled contract <span class="subst">$&#123;contractName&#125;</span> to <span class="subst">$&#123;filePath&#125;</span>`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>然后重新运行编译脚本，确保 complied 目录下包含了新生成的 Car.json。 </p>
<p>类似于前端构建流程中的编译步骤，我们编译前通常需要把之前的结果清空， 然后把最新的编译结果保存下来，这对保障一致性非常重要。所以继续对编译脚 本做如下改动： </p>
<p>在脚本执行的开始加入清除编译结果的代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// cleanup</span></span><br><span class="line"><span class="keyword">const</span> compiledDir = path.resolve(__dirname, <span class="string">&#x27;../compiled&#x27;</span>);</span><br><span class="line">fs.removeSync(compiledDir);</span><br><span class="line">fs.ensureDirSync(compiledDir);</span><br></pre></td></tr></table></figure>

<p>这里专门定义了 compiledDir，所以后面的 filePath 也可以改为：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> filePath = path.resolve(compiledDir, <span class="string">`<span class="subst">$&#123;contractName&#125;</span>.json`</span>);</span><br></pre></td></tr></table></figure>

<p>新增的 cleanup 代码段的作用就是准备全新的目录，修改完之后，需要重 新运行编译脚本，确保一切正常。</p>
<h2 id="处理编译错误"><a href="#处理编译错误" class="headerlink" title="处理编译错误"></a>处理编译错误</h2><p>现在的编译脚本只处理了最常见的情况，即 Solidity 源代码没问题，这个 假设其实是不成立的。如果源代码有问题，我们在编译阶段就应该报出来，而不 应该把错误的结果写入到文件系统，因为这样会导致后续步骤失败。 为了搞清 楚编译器 solc 遇到错误时的行为，我们人为在源代码中引入错误（例如把 function 关键字写成 functio），看看脚本的表现如何。 </p>
<p>重新运行编译脚本，发现它并没有报错，而是把错误作为输出内容打印出来， 其中错误的可读性比较差。</p>
<p>所以我们对编译脚本稍作改动，在编译完成之后就检查 error，让它能够在 出错时直接抛出错误：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// check errors</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(result.errors) &amp;&amp; result.errors.length) &#123;</span><br><span class="line">	<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(result.errors[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>重新运行编译脚本，可以看到我们得到了可读性更好的错误提示。</p>
<h2 id="最终版编译脚本"><a href="#最终版编译脚本" class="headerlink" title="最终版编译脚本"></a>最终版编译脚本</h2><p>编译脚本的最终版如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs-extra&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> solc = <span class="built_in">require</span>(<span class="string">&#x27;solc&#x27;</span>);</span><br><span class="line"><span class="comment">// cleanup</span></span><br><span class="line"><span class="keyword">const</span> compiledDir = path.resolve(__dirname, <span class="string">&#x27;../compiled&#x27;</span>);</span><br><span class="line">fs.removeSync(compiledDir);</span><br><span class="line">fs.ensureDirSync(compiledDir); </span><br><span class="line"><span class="comment">// compile const contractPath = path.resolve(__dirname,&#x27;../contracts&#x27;, &#x27;Car.sol&#x27;);</span></span><br><span class="line"><span class="keyword">const</span> contractSource = fs.readFileSync(contractPath, <span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> result = solc.compile(contractSource, <span class="number">1</span>);</span><br><span class="line"><span class="comment">// check errors</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(result.errors) &amp;&amp; result.errors.length) &#123;</span><br><span class="line">		<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(result.errors[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// save to disk</span></span><br><span class="line"><span class="built_in">Object</span>.keys(result.contracts).forEach(<span class="function"><span class="params">name</span> =&gt;</span> &#123;</span><br><span class="line">		<span class="keyword">const</span> contractName = name.replace(<span class="regexp">/^:/</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">		<span class="keyword">const</span> filePath = path.resolve(compiledDir,<span class="string">`<span class="subst">$&#123;contractName&#125;</span>.json`</span>);</span><br><span class="line">		fs.outputJsonSync(filePath, result.contracts[name]);</span><br><span class="line">		<span class="built_in">console</span>.log(<span class="string">`save compiled contract <span class="subst">$&#123;contractName&#125;</span> to <span class="subst">$&#123;filePath&#125;</span>`</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>5.2 Solidity 深入理解</title>
    <url>/2020/03/03/golang/%E4%BB%A5%E5%A4%AA%E5%9D%8A/5.2Solidity%20%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="Solidity源文件布局"><a href="#Solidity源文件布局" class="headerlink" title="Solidity源文件布局"></a>Solidity源文件布局</h1><p>pragma （版本杂注）</p>
<ul>
<li><p>源文件可以被版本杂注pragma所注解，表明要求的编译器版本</p>
</li>
<li><p>例如：<strong>pragma</strong>solidity ^0.4.0;</p>
</li>
<li><p>源文件将既不允许低于0.4.0 版本的编译器编译，也不允许高于（包含）0.5.0版本的编译器编译（第二个条件因使用^被添加）</p>
</li>
</ul>
<p>import（导入其它源文件）</p>
<ul>
<li>Solidity 所支持的导入语句import，语法同JavaScript（从ES6 起）非常类似</li>
</ul>
<span id="more"></span>

<h1 id="Solidity源文件布局–import"><a href="#Solidity源文件布局–import" class="headerlink" title="Solidity源文件布局–import"></a>Solidity源文件布局–import</h1><p>**import ** “filename”;</p>
<ul>
<li>从“filename”中导入所有的全局符号到当前全局作用域中</li>
</ul>
<p><strong>import</strong>  <strong>as</strong>  symbolName from “filename”;</p>
<ul>
<li>创建一个新的全局符号symbolName，其成员均来自“filename”中全局符号</li>
</ul>
<p><strong>import</strong>{symbol1 <strong>as</strong> alias, symbol2} from “filename”;</p>
<ul>
<li>创建新的全局符号alias和symbol2，分别从”filename”引用symbol1和symbol2</li>
</ul>
<p><strong>import</strong>“filename”  <strong>as</strong> symbolName;</p>
<ul>
<li>这条语句等同于import*assymbolNamefrom”filename”;</li>
</ul>
<h1 id="Solidity值类型"><a href="#Solidity值类型" class="headerlink" title="Solidity值类型"></a>Solidity值类型</h1><ul>
<li><p>布尔（bool）：可能的取值为字符常量值true 或false</p>
</li>
<li><p>整型（int/uint）：分别表示有符号和无符号的不同位数的整型变量；支持关键字uint8到uint256（无符号，从8 位到256 位）以及int8到int256，以8位为步长递增</p>
</li>
<li><p>定长浮点型（fixed/ufixed）：表示各种大小的有符号和无符号的定长浮点型；在关键字ufixedMxN和fixedMxN中，M表示该类型占用的位数，N表示可用的小数位数</p>
</li>
<li><p>地址（address）：存储一个20 字节的值（以太坊地址大小）</p>
</li>
<li><p>定长字节数组：关键字有bytes1，bytes2，bytes3，…，bytes32</p>
</li>
<li><p>枚举（enum）：一种用户可以定义类型的方法，与C语言类似，默认从0开始递增，一般用来模拟合约的状态</p>
</li>
<li><p>函数（function）：一种表示函数的类型</p>
</li>
</ul>
<h1 id="Solidity引用类型"><a href="#Solidity引用类型" class="headerlink" title="Solidity引用类型"></a>Solidity引用类型</h1><p>数组（Array）</p>
<ul>
<li><p>数组可以在声明时指定长度（定长数组），也可以动态调整大小（变长数组、动态数组）</p>
</li>
<li><p>对于存储型（storage）的数组来说，元素类型可以是任意的（即元素也可以是数组类型，映射类型或者结构体）；对于内存型（memory）的数组来说，元素类型不能是映射（mapping）类型</p>
</li>
</ul>
<p>结构（Struct）</p>
<ul>
<li>Solidity 支持通过构造结构体的形式定义新的类型</li>
</ul>
<p>映射（Mapping）</p>
<ul>
<li>映射可以视作哈希表，在实际的初始化过程中创建每个可能的key，并将其映射到字节形式全是零的值（类型默认值）</li>
</ul>
<h1 id="Solidity地址类型"><a href="#Solidity地址类型" class="headerlink" title="Solidity地址类型"></a>Solidity地址类型</h1><p><strong>address</strong></p>
<ul>
<li>地址类型存储一个20 字节的值（以太坊地址的大小）；地址类型也有成员变量，并作为所有合约的基础</li>
</ul>
<p><strong>address payable</strong>（<em>v0.5.0</em>引入）</p>
<ul>
<li>与地址类型基本相同，不过多出了transfer和send 两个成员变量</li>
</ul>
<p><strong>两者区别和转换</strong></p>
<ul>
<li><p>Payable 地址是可以发送ether 的地址，而普通address 不能</p>
</li>
<li><p>允许从payable address 到address 的隐式转换，而反过来的直接转换是不可能的（唯一方法是通过uint160来进行中间转换）</p>
</li>
<li><p>从0.5.0版本起，合约不再是从地址类型派生而来，但如果它有payable的回退函数，那同样可以显式转换为address 或者address payable 类型</p>
</li>
</ul>
<h1 id="地址类型成员变量"><a href="#地址类型成员变量" class="headerlink" title="地址类型成员变量"></a>地址类型成员变量</h1><p>/<address>.balance(uint256)</p>
<ul>
<li>该地址的ether 余额，以Wei为单位</li>
</ul>
<p>/<addresspayable>.transfer(uint256amount)</p>
<ul>
<li>向指定地址发送数量为amount 的ether（以Wei为单位），失败时抛出异常，发送2300 gas 的矿工费，不可调节</li>
</ul>
<p>/<addresspayable>.send(uint256amount)returns(bool)</p>
<ul>
<li> 向指定地址发送数量为amount的ether（以Wei为单位），失败时返回false，发送2300 gas 的矿工费用，不可调节</li>
</ul>
<p>/<address>.call(bytesmemory)returns(bool,bytesmemory)</p>
<ul>
<li>发出底层函数CALL，失败时返回false，发送所有可用gas，可调节</li>
</ul>
<p>/<address>.delegatecall(bytesmemory)returns(bool,bytesmemory)</p>
<ul>
<li> 发出底层函数DELEGATECALL，失败时返回false，发送所有可用gas，可调节</li>
</ul>
<p>/<address>.staticcall(bytesmemory)returns(bool,bytesmemory)</p>
<ul>
<li>发出底层函数STATICCALL ，失败时返回false，发送所有可用gas，可调节</li>
</ul>
<h1 id="地址成员变量用法"><a href="#地址成员变量用法" class="headerlink" title="地址成员变量用法"></a>地址成员变量用法</h1><p><strong>balance</strong> <strong>和transfer</strong></p>
<ul>
<li><p>可以使用balance属性来查询一个地址的余额，可以使用transfer函数向一个payable地址发送以太币Ether（以wei 为单位）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">address  payable x = address(<span class="number">0x123</span>);</span><br><span class="line">  address myAddress = address(<span class="built_in">this</span>);</span><br><span class="line"><span class="keyword">if</span>(x.balance &lt; <span class="number">10</span> &amp;&amp; myAddress.balance &gt;= <span class="number">10</span>)</span><br><span class="line">  x.transfer(<span class="number">10</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">**send**</span><br><span class="line"></span><br><span class="line">- send是transfer的低级版本。如果执行失败，当前的合约不会因为异常而终止，但send会返回false</span><br><span class="line"></span><br><span class="line">**call**</span><br><span class="line"></span><br><span class="line">- 也可以用call来实现转币的操作，通过添加.gas()和.value()修饰器：</span><br><span class="line"></span><br><span class="line">  ```javascript</span><br><span class="line">  nameReg.call.gas(1000000).value(1 ether)(abi.encodeWithSignature(&quot;register(string)&quot;, &quot;MyName&quot;));</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="字符数组"><a href="#字符数组" class="headerlink" title="字符数组"></a>字符数组</h1><p>定长字符数组</p>
<ul>
<li>属于值类型:bytes1,bytes2,bytes3…bytes32分别代表了长度为1-32的字节序列</li>
<li>有一个.length属性,返回数组长度(只读)</li>
</ul>
<p>变长字符数组</p>
<ul>
<li>属于引用类型,包括bytes和string,不同的是bytes是Hex字符串,而string是UTF-8编码的字符串</li>
</ul>
<h1 id="枚举（Enum）"><a href="#枚举（Enum）" class="headerlink" title="枚举（Enum）"></a>枚举（Enum）</h1><ul>
<li><p>枚举类型用来用户自定义一组常量值</p>
</li>
<li><p>与C语言的枚举类型非常相似，对应整型值</p>
</li>
<li><p>不能在函数里面定义</p>
</li>
<li><p>定义时至少有一个成员</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;=<span class="number">0.4</span><span class="number">.0</span> &lt;<span class="number">0.6</span><span class="number">.0</span>; </span><br><span class="line">contract Purchase &#123; </span><br><span class="line">	enum State &#123; Created, Locked, Inactive &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="数组（Array）"><a href="#数组（Array）" class="headerlink" title="数组（Array）"></a>数组（Array）</h1><ul>
<li><p>固定大小k和元素类型T的数组被写为T [k]，动态大小的数组为T []。例如，一个由5个uint动态数组组成的数组是uint [] [5]</p>
</li>
<li><p>要访问第三个动态数组中的第二个uint，可以使用x [2] [1]</p>
</li>
<li><p>越界访问数组，会导致调用失败回退</p>
</li>
<li><p>如果要添加新元素，则必须使用.push（）或将.length增大</p>
</li>
<li><p>变长的storage数组和bytes（不包括string）有一个push()方法。可以将一个新元素附加到数组末端，返回值为当前长度</p>
</li>
</ul>
<p>数组示例</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;=<span class="number">0.4</span><span class="number">.16</span> &lt;<span class="number">0.6</span><span class="number">.0</span>;</span><br><span class="line">contract C &#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">uint len</span>) <span class="title">public</span> <span class="title">pure</span> </span>&#123;</span><br><span class="line">		uint[] memory a = <span class="keyword">new</span> uint[](<span class="number">7</span>);</span><br><span class="line">		bytes memory b = <span class="keyword">new</span> bytes(len);</span><br><span class="line">		assert(a.length == <span class="number">7</span>);</span><br><span class="line">		assert(b.length == len);</span><br><span class="line">		a[<span class="number">6</span>] = <span class="number">8</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="结构（Struct）"><a href="#结构（Struct）" class="headerlink" title="结构（Struct）"></a>结构（Struct）</h1><ul>
<li><p>结构类型可以在映射和数组中使用，它们本身可以包含映射和数组。</p>
</li>
<li><p>结构不能包含自己类型的成员，但可以作为自己数组成员的类型，也可以作为自己映射成员的值类型</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;=<span class="number">0.4</span><span class="number">.0</span> &lt;<span class="number">0.6</span><span class="number">.0</span>;</span><br><span class="line">contract Ballot &#123;</span><br><span class="line">  struct Voter &#123;</span><br><span class="line">		uint weight;</span><br><span class="line">		bool voted;</span><br><span class="line">		uint vote;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="映射（Mapping）"><a href="#映射（Mapping）" class="headerlink" title="映射（Mapping）"></a>映射（Mapping）</h1><ul>
<li><p>声明一个映射：mapping（_KeyType =&gt; _ValueType）</p>
</li>
<li><p>_KeyType可以是任何基本类型。这意味着它可以是任何内置值类型加上字节和字符串。不允许使用用户定义的或复杂的类型，如枚举，映射，结构以及除bytes和string之外的任何数组类型。</p>
</li>
<li><p>_ValueType可以是任何类型，包括映射。</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;=<span class="number">0.4</span><span class="number">.0</span> &lt;<span class="number">0.6</span><span class="number">.0</span>;</span><br><span class="line">contract MappingExample &#123;</span><br><span class="line">	mapping (<span class="function"><span class="params">address</span> =&gt;</span> uint) public balances;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params">uint newBalance</span>) <span class="title">public</span></span>&#123;</span><br><span class="line">   balances[msg.sender] = newBalance;</span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br><span class="line">contract MappingUser &#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123;</span><br><span class="line">		MappingExample m = <span class="keyword">new</span> MappingExample();</span><br><span class="line">		m.update(<span class="number">100</span>);</span><br><span class="line">		<span class="keyword">return</span> m.balances(address(<span class="built_in">this</span>));</span><br><span class="line">	&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="数据位置总结"><a href="#数据位置总结" class="headerlink" title="数据位置总结"></a>数据位置总结</h1><p>强制指定的数据位置</p>
<ul>
<li><p>外部函数的参数（不包括返回参数）：calldata；</p>
</li>
<li><p>状态变量：storage</p>
</li>
</ul>
<p>默认数据位置</p>
<ul>
<li><p>函数参数（包括返回参数）：memory；</p>
</li>
<li><p>引用类型的局部变量：storage</p>
</li>
<li><p>值类型的局部变量：栈（stack）</p>
</li>
</ul>
<p>特别要求</p>
<ul>
<li>公开可见（publicly visible）的函数参数一定是memory 类型，如果要求是storage 类型则必须是private 或者internal 函数，这是为了防止随意的公开调用占用资源</li>
</ul>
<p>一个简单的 例子</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.0</span>;</span><br><span class="line">contract C &#123;</span><br><span class="line">	uint[] data1;</span><br><span class="line">	uint[] data2;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">appendOne</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		append(data1);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">appendTwo</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		append(data2);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"> uint [] storage d</span>) <span class="title">internal</span> </span>&#123;</span><br><span class="line">		d.push(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//下面代码包含一个错误</span></span><br><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.0</span>;</span><br><span class="line">contract C &#123;</span><br><span class="line">	uint someVariable;</span><br><span class="line">	uint[] data;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		uint[] x;</span><br><span class="line">		x.push(<span class="number">2</span>);</span><br><span class="line">		data = x;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//下面代码编译错误</span></span><br><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.0</span>;</span><br><span class="line">contract C &#123;</span><br><span class="line">	uint[] x;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"> uint [] memoryArray</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		x = memoryArray;</span><br><span class="line">		uint[] y = x;</span><br><span class="line">		y[<span class="number">7</span>];</span><br><span class="line">		y.length = <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">delete</span> x;</span><br><span class="line">		y = memoryArray;</span><br><span class="line">		<span class="keyword">delete</span> y;</span><br><span class="line">		g(x);</span><br><span class="line">		h(x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params"> uint [] storage storageArray</span>) <span class="title">internal</span> </span>&#123;&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">h</span>(<span class="params"> uint [] memoryArray</span>) <span class="title">public</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//下面我们一起来玩一个猜数字游戏</span></span><br><span class="line">pragma solidity &gt;<span class="number">0.4</span><span class="number">.22</span>;</span><br><span class="line">contract Honeypot&#123;</span><br><span class="line">	uint luckyNum = uint public last;</span><br><span class="line">	struct Guess&#123; address player; uint number; &#125;</span><br><span class="line">	Guess[] public guessHistory</span><br><span class="line">	address owner = msg.sender</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">guess</span>(<span class="params"> uint num </span>) <span class="title">public</span> <span class="title">payable</span></span></span><br><span class="line"><span class="function">		<span class="title">Guess</span> <span class="title">newGuess</span></span></span><br><span class="line"><span class="function">		<span class="title">newGuess</span>.<span class="title">player</span> = <span class="title">msg</span>.<span class="title">sender</span></span></span><br><span class="line"><span class="function">		<span class="title">newGuess</span>.<span class="title">number</span> = <span class="title">num</span></span></span><br><span class="line"><span class="function">		<span class="title">guessHistory</span>.<span class="title">push</span>(<span class="params"> newGuess</span>)</span>;</span><br><span class="line">		<span class="keyword">if</span>( _num == luckyNum)</span><br><span class="line">			msg.sender.transfer( msg.value * <span class="number">2</span>);</span><br><span class="line">		last = now;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Solidity函数声明和类型"><a href="#Solidity函数声明和类型" class="headerlink" title="Solidity函数声明和类型"></a>Solidity函数声明和类型</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//       |-函数名-|  |--函数类型--| |----返回类型----| </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getBrand</span>(<span class="params"></span>) <span class="title">public</span>  <span class="title">view</span>  <span class="title">retyrns</span> (<span class="params">string</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> barand();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>函数的值类型有两类：-内部（<em>internal</em>）函数和外部（<em>external</em>）函数</p>
<ul>
<li><p>内部函数只能在当前合约内被调用（更具体来说，在当前代码块内，包括内部库函数和继承的函数中），因为它们不能在当前合约上下文的外部被执行。调用一个内部函数是通过跳转到它的入口标签来实现的，就像在当前合约的内部调用一个函数。</p>
</li>
<li><p>外部函数由一个地址和一个函数签名组成，可以通过外部函数调用传递或者返回</p>
</li>
<li><p>调用内部函数：直接使用名字f</p>
</li>
<li><p>调用外部函数：this.f（当前合约），a.f（外部合约）</p>
</li>
</ul>
<h1 id="Solidity函数可见性"><a href="#Solidity函数可见性" class="headerlink" title="Solidity函数可见性"></a>Solidity函数可见性</h1><p>函数的可见性可以指定为external，public，internal或者private；对于状态变量，不能设置为external，默认是internal。</p>
<ul>
<li>external：外部函数作为合约接口的一部分，意味着我们可以从其他合约和交易中调用。一个外部函数f不能从内部调用（即f不起作用，但this.f()可以）。当收到大量数据的时候，外部函数有时候会更有效率。</li>
<li>public：public 函数是合约接口的一部分，可以在内部或通过消息调用。对于public 状态变量，会自动生成一个getter 函数。</li>
<li>internal：这些函数和状态变量只能是内部访问（即从当前合约内部或从它派生的合约访问），不使用this调用。</li>
<li>private：private 函数和状态变量仅在当前定义它们的合约中使用，并且不能被派生合约使用。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//以下代码编译错误</span></span><br><span class="line">pragma solidity &gt;=<span class="number">0.4</span><span class="number">.0</span> &lt;<span class="number">0.6</span><span class="number">.0</span>;</span><br><span class="line">contract C &#123;</span><br><span class="line">	uint private data;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">uint a</span>) <span class="title">private</span> <span class="title">pure</span> <span class="title">returns</span> (<span class="params">uint b</span>) </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> a + <span class="number">1</span>; </span><br><span class="line">  &#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">setData</span>(<span class="params">uint a</span>) <span class="title">public</span> </span>&#123; </span><br><span class="line">    data = a; </span><br><span class="line">  &#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> data; </span><br><span class="line">  &#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">compute</span>(<span class="params">uint a, uint b</span>) <span class="title">internal</span> <span class="title">pure</span> <span class="title">returns</span> (<span class="params">uint</span>) </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> a + b; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">contract D &#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">readData</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		C c = <span class="keyword">new</span> C();</span><br><span class="line">		uint local = c.f(<span class="number">7</span>);</span><br><span class="line">		c.setData(<span class="number">3</span>);</span><br><span class="line">		local = c.getData();</span><br><span class="line">		local = c.compute(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">contract E is C &#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">g</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		C c = <span class="keyword">new</span> C();</span><br><span class="line">		uint val = compute(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>函数可见性示例</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;=<span class="number">0.4</span><span class="number">.16</span> &lt;<span class="number">0.6</span><span class="number">.0</span>;</span><br><span class="line">contract C &#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"> uint a</span>) <span class="title">private</span> <span class="title">pure</span> <span class="title">returns</span> <span class="title">uint</span> <span class="title">b</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> a + <span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">setData</span>(<span class="params"> uint a</span>) <span class="title">internal</span> </span>&#123;</span><br><span class="line">		data = a;</span><br><span class="line">	&#125;</span><br><span class="line">	uint public data;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		data = <span class="number">3</span>;</span><br><span class="line">		<span class="comment">// 内部访问</span></span><br><span class="line">		uint val = <span class="built_in">this</span> .data(); <span class="comment">// 外部访问</span></span><br><span class="line">		uint val2 = f(data);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.0</span>;</span><br><span class="line">contract C &#123;</span><br><span class="line">uint private data;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"> uint a</span>) <span class="title">private</span> <span class="title">returns</span> <span class="title">uint</span> <span class="title">b</span>) </span>&#123; <span class="keyword">return</span> a + <span class="number">1</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setData</span>(<span class="params"> uint a</span>) <span class="title">public</span> </span>&#123; data = a; &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">returns</span> <span class="title">uint</span> ) </span>&#123; <span class="keyword">return</span> data; &#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">compute</span>(<span class="params"> uint a, uint b</span>) <span class="title">internal</span> <span class="title">returns</span> <span class="title">uint</span> ) </span>&#123; <span class="keyword">return</span> a+b; &#125;</span><br><span class="line">&#125;</span><br><span class="line">contract D &#123;</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">readData</span>(<span class="params"></span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">		C c = <span class="keyword">new</span> C();</span><br><span class="line">		uint local = c.f(<span class="number">7</span>); <span class="comment">// 错误：成员 `f` 不可见</span></span><br><span class="line">		c.setData(<span class="number">3</span>);</span><br><span class="line">		local = c.getData();</span><br><span class="line">		local = c.compute(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line">		<span class="comment">// 错误：成员 `compute` 不可见</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="Solidity函数状态可变性"><a href="#Solidity函数状态可变性" class="headerlink" title="Solidity函数状态可变性"></a>Solidity函数状态可变性</h1><ul>
<li><p>pure：纯函数，不允许修改或访问状态</p>
</li>
<li><p>view：不允许修改状态</p>
</li>
<li><p>payable：允许从消息调用中接收以太币Ether。</p>
</li>
<li><p>constant：与view相同，一般只修饰状态变量，不允许赋值（除初始化以外）</p>
</li>
</ul>
<h1 id="Solidity函数状态可变性-1"><a href="#Solidity函数状态可变性-1" class="headerlink" title="Solidity函数状态可变性"></a>Solidity函数状态可变性</h1><p>以下情况被认为是修改状态：</p>
<ul>
<li><p>修改状态变量。</p>
</li>
<li><p>产生事件。</p>
</li>
<li><p>创建其它合约。</p>
</li>
<li><p>使用selfdestruct。</p>
</li>
<li><p>通过调用发送以太币。</p>
</li>
<li><p>调用任何没有标记为view或者pure的函数。</p>
</li>
<li><p>使用低级调用。</p>
</li>
<li><p>使用包含特定操作码的内联汇编。</p>
</li>
</ul>
<h1 id="函数修饰器（modifier）"><a href="#函数修饰器（modifier）" class="headerlink" title="函数修饰器（modifier）"></a>函数修饰器（modifier）</h1><ul>
<li><p>使用修饰器modifier可以轻松改变函数的行为。例如，它们可以在执行函数之前自动检查某个条件。修饰器modifier是合约的可继承属性，并可能被派生合约覆盖</p>
</li>
<li><p>如果同一个函数有多个修饰器modifier，它们之间以空格隔开，修饰器modifier会依次检查执行。</p>
</li>
</ul>
<h1 id="Modifier示例"><a href="#Modifier示例" class="headerlink" title="Modifier示例"></a>Modifier示例</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma solidity &gt;=<span class="number">0.4</span><span class="number">.22</span> &lt;<span class="number">0.6</span><span class="number">.0</span>;</span><br><span class="line">contract Purchase &#123;</span><br><span class="line">address public seller;</span><br><span class="line">modifier <span class="function"><span class="title">onlySeller</span>(<span class="params"></span>)</span> &#123; <span class="comment">// Modifier</span></span><br><span class="line"><span class="built_in">require</span> ( msg.sender == seller, <span class="string">&quot;Only seller can call.&quot;</span> );</span><br><span class="line">_</span><br><span class="line">_;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abort</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span> <span class="title">onlySeller</span> </span>&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">Modifier usage</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="回退函数（fallback）"><a href="#回退函数（fallback）" class="headerlink" title="回退函数（fallback）"></a>回退函数（fallback）</h1><p>•回退函数（fallback function）是合约中的特殊函数；没有名字，不能有参数也不能有返回值</p>
<p>•如果在一个到合约的调用中，没有其他函数与给定的函数标识符匹配（或没有提供调用数据），那么这个函数（fallback 函数）会被执行</p>
<p>•每当合约收到以太币（没有任何数据），回退函数就会执行。此外，为了接收以太币，fallback 函数必须标记为payable。如果不存在这样的函数，则合约不能通过常规交易接收以太币</p>
<p>•在上下文中通常只有很少的gas 可以用来完成回退函数的调用，所以使fallback 函数的调用尽量廉价很重要</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pragma</span><br><span class="line">solidity &gt;<span class="number">0.4</span><span class="number">.99</span> &lt;<span class="number">0.6</span><span class="number">.0</span>;</span><br><span class="line">contract</span><br><span class="line">Sink &#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span></span></span><br><span class="line"><span class="function">(<span class="params"></span>) <span class="title">external</span> <span class="title">payable</span> </span>&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line">contract</span><br><span class="line">Test &#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span></span></span><br><span class="line"><span class="function">(<span class="params"></span>) <span class="title">external</span> </span>&#123; x = <span class="number">1</span>; &#125;</span><br><span class="line">uint</span><br><span class="line">x;</span><br><span class="line">&#125;</span><br><span class="line">contract</span><br><span class="line">Caller &#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span></span></span><br><span class="line"><span class="function"><span class="title">callTest</span>(<span class="params">Test test</span>) <span class="title">public</span> <span class="title">returns</span> <span class="title">bool</span> ) </span>&#123;</span><br><span class="line">(</span><br><span class="line">bool success,) =</span><br><span class="line">address(test).call(abi.encodeWithSignature(“nonExistingFunction()”));</span><br><span class="line"><span class="built_in">require</span>(success);</span><br><span class="line">address</span><br><span class="line">payable testPayable = address(uint160(address(test)));</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">testPayable.send(<span class="number">2</span> ether</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="事件（event）"><a href="#事件（event）" class="headerlink" title="事件（event）"></a>事件（event）</h1><p>•事件是以太坊EVM提供的一种日志基础设施。事件可以用来做操作记录，存储为日志。也可以用来实现一些交互功能，比如通知UI，返回函数调用结果等</p>
<p>•当定义的事件触发时，我们可以将事件存储到EVM的交易日志中，日志是区块链中的一种特殊数据结构；日志与合约关联，与合约的存储合并存入区块链中；只要某个区块可以访问，其相关的日志就可以访问；但在合约中，我们不能直接访问日志和事件数据</p>
<p>•可以通过日志实现简单支付验证SPV（Simplified Payment Verification），如果一个外部实体提供了一个带有这种证明的合约，它可以检查日志是否真实存在于区块链中</p>
<h1 id="Solidity异常处理"><a href="#Solidity异常处理" class="headerlink" title="Solidity异常处理"></a>Solidity异常处理</h1><p>•Solidity使用“状态恢复异常”来处理异常。这样的异常将撤消对当前调用（及其所有子调用）中的状态所做的所有更改，并且向调用者返回错误。</p>
<p>•函数assert和require可用于判断条件，并在不满足条件时抛出异常</p>
<p>•assert() 一般只应用于测试内部错误，并检查常量</p>
<p>•require() 应用于确保满足有效条件（如输入或合约状态变量），或验证调用外部合约的返回值</p>
<p>•revert() 用于抛出异常，它可以标记一个错误并将当前调用回退</p>
<h1 id="Solidity中的单位"><a href="#Solidity中的单位" class="headerlink" title="Solidity中的单位"></a>Solidity中的单位</h1><p>以太币（ether）</p>
<p>•以太币Ether单位之间的换算就是在数字后边加上wei、finney、szabo或ether来实现的，如果后面没有单位，缺省为Wei。例如2ether==2000finney的逻辑判断值为true</p>
<table>
<thead>
<tr>
<th><strong>Unit</strong></th>
<th><strong>Wei Value</strong></th>
<th><strong>Wei</strong></th>
</tr>
</thead>
<tbody><tr>
<td>wei</td>
<td>1</td>
<td>1 wei</td>
</tr>
<tr>
<td>Kwei (babbage)</td>
<td>1e3 wei</td>
<td>1,000</td>
</tr>
<tr>
<td>Mwei (lovelace)</td>
<td>1e6 wei</td>
<td>1,000,000</td>
</tr>
<tr>
<td>Gwei (shannon)</td>
<td>1e9 wei</td>
<td>1,000,000,000</td>
</tr>
<tr>
<td>microether (szabo)</td>
<td>1e12 wei</td>
<td>1,000,000,000,000</td>
</tr>
<tr>
<td>milliether (finney)</td>
<td>1e15 wei</td>
<td>1,000,000,000,000,000</td>
</tr>
<tr>
<td>ether</td>
<td>1e18 wei</td>
<td>1,000,000,000,000,000,000</td>
</tr>
</tbody></table>
<h1 id="Solidity中的单位-1"><a href="#Solidity中的单位-1" class="headerlink" title="Solidity中的单位"></a>Solidity中的单位</h1><p>时间</p>
<p>秒是缺省时间单位，在时间单位之间，数字后面带有seconds、minutes、hours、days、weeks和years的可以进行换算，基本换算关系如下：</p>
<p>•1days==24hours</p>
<p>•1weeks==7days</p>
<p>•1years==365days</p>
<p>•1==1seconds</p>
<p>•1minutes==60seconds</p>
<p>•1hours==60minutes</p>
<p>这些后缀不能直接用在变量后边。如果想用时间单位（例如<em>days</em>）来将输入变量换算为时间，你可以用如下方式来完成：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"> uint start, uint daysAfter</span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> now &gt;= start + daysAfter * <span class="number">1</span> days) &#123; </span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="number">4444444444</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>golang</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 搭建个人博客</title>
    <url>/2020/03/03/linux/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>使用github pages服务搭建博客的好处有：</p>
<ol>
<li>全是静态文件，访问速度快；</li>
<li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li>
<li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li>
<li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li>
<li>博客内容可以轻松打包、转移、发布到其它平台；</li>
<li>等等；</li>
</ol>
<h2 id="1-1-准备工作"><a href="#1-1-准备工作" class="headerlink" title="1.1. 准备工作"></a>1.1. 准备工作</h2><p>在开始一切之前，你必须已经：</p>
<ul>
<li>有一个github账号，没有的话去注册一个；</li>
<li>安装了node.js、npm，并了解相关基础知识；</li>
<li>安装了git for windows（或者其它git客户端）</li>
</ul>
<p>本文所使用的环境：</p>
<ul>
<li>Windows8.1</li>
<li><a href="mailto:&#110;&#x6f;&#100;&#x65;&#46;&#106;&#115;&#x40;&#x35;&#x2e;&#53;&#x2e;&#48;">&#110;&#x6f;&#100;&#x65;&#46;&#106;&#115;&#x40;&#x35;&#x2e;&#53;&#x2e;&#48;</a></li>
<li><a href="mailto:&#x67;&#105;&#116;&#x40;&#49;&#46;&#x39;&#x2e;&#x32;">&#x67;&#105;&#116;&#x40;&#49;&#46;&#x39;&#x2e;&#x32;</a></li>
<li><a href="mailto:&#104;&#101;&#x78;&#111;&#x40;&#x33;&#x2e;&#50;&#x2e;&#x32;">&#104;&#101;&#x78;&#111;&#x40;&#x33;&#x2e;&#50;&#x2e;&#x32;</a></li>
</ul>
<h1 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h1><h2 id="2-1-创建仓库"><a href="#2-1-创建仓库" class="headerlink" title="2.1. 创建仓库"></a>2.1. 创建仓库</h2><p>新建一个名为<code>你的用户名.github.io</code>的仓库，比如说，如果你的github用户名是test，那么你就新建<code>test.github.io</code>的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io/">http://test.github.io</a> 了，是不是很方便？</p>
<p>由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。</p>
<p>几个注意的地方：</p>
<ol>
<li>注册的邮箱一定要验证，否则不会成功；</li>
<li>仓库名字必须是：<code>username.github.io</code>，其中<code>username</code>是你的用户名；</li>
<li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；</li>
</ol>
<p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p>
<h2 id="2-2-绑定域名"><a href="#2-2-绑定域名" class="headerlink" title="2.2. 绑定域名"></a>2.2. 绑定域名</h2><p>当然，你不绑定域名肯定也是可以的，就用默认的 <code>xxx.github.io</code> 来访问，如果你想更个性一点，想拥有一个属于自己的域名，那也是OK的。</p>
<p>首先你要注册一个域名，域名注册以前总是推荐去<code>godaddy</code>，现在觉得其实国内的阿里云也挺不错的，价格也不贵，毕竟是大公司，放心！</p>
<p>绑定域名分2种情况：带www和不带www的。</p>
<p>域名配置最常见有2种方式，CNAME和A记录，CNAME填写域名，A记录填写IP，由于不带www方式只能采用A记录，所以必须先ping一下<code>你的用户名.github.io</code>的IP，然后到你的域名DNS设置页，将A记录指向你ping出来的IP，将CNAME指向<code>你的用户名.github.io</code>，这样可以保证无论是否添加www都可以访问，</p>
<p>然后到你的github项目根目录新建一个名为CNAME的文件（无后缀），里面填写你的域名，加不加www看你自己喜好，因为经测试：</p>
<ul>
<li>如果你填写的是没有www的，比如 mygit.me，那么无论是访问 <a href="http://www.mygit.me/">http://www.mygit.me</a> 还是 <a href="http://mygit.me/">http://mygit.me</a> ，都会自动跳转到 <a href="http://mygit.me/">http://mygit.me</a></li>
<li>如果你填写的是带www的，比如 <a href="http://www.mygit.me/">www.mygit.me</a> ，那么无论是访问 <a href="http://www.mygit.me/">http://www.mygit.me</a> 还是 <a href="http://mygit.me/">http://mygit.me</a> ，都会自动跳转到 <a href="http://www.mygit.me/">http://www.mygit.me</a></li>
<li>如果你填写的是其它子域名，比如 abc.mygit.me，那么访问 <a href="http://abc.mygit.me/">http://abc.mygit.me</a> 没问题，但是访问 <a href="http://mygit.me/">http://mygit.me</a> ，不会自动跳转到 <a href="http://abc.mygit.me/">http://abc.mygit.me</a></li>
</ul>
<p>另外说一句，在你绑定了新域名之后，原来的<code>你的用户名.github.io</code>并没有失效，而是会自动跳转到你的新域名。</p>
<h1 id="配置SSH-key"><a href="#配置SSH-key" class="headerlink" title="配置SSH key"></a>配置SSH key</h1><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/. ssh <span class="comment">#检查本机已存在的ssh密钥</span></span><br></pre></td></tr></table></figure>

<p>如果提示：No such file or directory 说明你是第一次使用git。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;</span><br></pre></td></tr></table></figure>

<p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<code>.ssh\id_rsa.pub</code>文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p>
<p>将刚复制的内容粘贴到key那里，title随便填，保存。</p>
<h2 id="3-1-测试是否成功"><a href="#3-1-测试是否成功" class="headerlink" title="3.1. 测试是否成功"></a>3.1. 测试是否成功</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com # 注意邮箱地址不用改</span><br></pre></td></tr></table></figure>

<p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p>
<blockquote>
<p>Hi   , You’ve successfully authenticated, but GitHub does not provide shell access.</p>
</blockquote>
<p>看到这个信息说明SSH已配置成功！</p>
<p>此时你还需要配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;liuxianan&quot;// 你的github用户名，非昵称</span><br><span class="line">$ git config --global user.email  &quot;xxx@qq.com&quot;// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure>

<p>具体这个配置是干嘛的我没仔细深究。</p>
<h1 id="使用hexo写博客"><a href="#使用hexo写博客" class="headerlink" title="使用hexo写博客"></a>使用hexo写博客</h1><h2 id="4-1-hexo简介"><a href="#4-1-hexo简介" class="headerlink" title="4.1. hexo简介"></a>4.1. hexo简介</h2><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p>
<p>官网： <a href="http://hexo.io/">http://hexo.io</a><br>github: <a href="https://github.com/hexojs/hexo">https://github.com/hexojs/hexo</a></p>
<h2 id="4-2-原理"><a href="#4-2-原理" class="headerlink" title="4.2. 原理"></a>4.2. 原理</h2><p>由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p>
<h2 id="4-3-注意事项"><a href="#4-3-注意事项" class="headerlink" title="4.3. 注意事项"></a>4.3. 注意事项</h2><p>安装之前先来说几个注意事项：</p>
<ol>
<li>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</li>
<li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li>
<li>hexo有2种<code>_config.yml</code>文件，一个是根目录下的全局的<code>_config.yml</code>，一个是各个<code>theme</code>下的；</li>
</ol>
<h2 id="4-4-安装"><a href="#4-4-安装" class="headerlink" title="4.4. 安装"></a>4.4. 安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure>

<h2 id="4-5-初始化"><a href="#4-5-初始化" class="headerlink" title="4.5. 初始化"></a>4.5. 初始化</h2><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是<code>F:\Workspaces\hexo</code>，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /f/Workspaces/hexo/</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure>

<p>hexo会自动下载一些文件到这个目录，包括node_modules，目录结构如下图：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_115922_773_1148.png" alt="img"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g <span class="comment"># 生成</span></span><br><span class="line">$ hexo s <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure>

<p>执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_120700_028_2426.png" alt="img"></p>
<p><code>hexo s</code>是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考这篇文章：</p>
<p><a href="http://blog.liuxianan.com/windows-port-bind.html">http://blog.liuxianan.com/windows-port-bind.html</a></p>
<p>第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑，打开时就是这个样子：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_132443_202_6848.png" alt="img"></p>
<h2 id="4-6-修改主题"><a href="#4-6-修改主题" class="headerlink" title="4.6. 修改主题"></a>4.6. 修改主题</h2><p>既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。这是 <a href="https://hexo.io/themes/">官方主题</a>。</p>
<p>个人比较喜欢的2个主题：<a href="https://github.com/pinggod/hexo-theme-jekyll">hexo-theme-jekyll</a> 和 <a href="https://github.com/litten/hexo-theme-yilia">hexo-theme-yilia</a>。</p>
<p>首先下载这个主题：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /f/Workspaces/hexo/</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>

<p>下载后的主题都在这里：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_134500_245_0912.png" alt="img"></p>
<p>修改<code>_config.yml</code>中的<code>theme: landscape</code>改为<code>theme: yilia</code>，然后重新执行<code>hexo g</code>来重新生成。</p>
<p>如果出现一些莫名其妙的问题，可以先执行<code>hexo clean</code>来清理一下public的内容，然后再来重新生成和发布。</p>
<h2 id="4-7-上传之前"><a href="#4-7-上传之前" class="headerlink" title="4.7. 上传之前"></a>4.7. 上传之前</h2><p>在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p>
<h2 id="4-8-上传到github"><a href="#4-8-上传到github" class="headerlink" title="4.8. 上传到github"></a>4.8. 上传到github</h2><p>如果你一切都配置好了，发布上传很容易，一句<code>hexo d</code>就搞定，当然关键还是你要把所有东西配置好。</p>
<p>首先，<code>ssh key</code>肯定要配置好。</p>
<p>其次，配置<code>_config.yml</code>中有关deploy的部分：</p>
<p>正确写法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:liuxianan/liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>错误写法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: github</span><br><span class="line">  repository: https://github.com/liuxianan/liuxianan.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>

<p>后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行<code>hexo d</code>的话一般会报如下错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Deployer not found: github 或者 Deployer not found: git</span><br></pre></td></tr></table></figure>

<p>原因是还需要安装一个插件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>其它命令不确定，部署这个命令一定要用git bash，否则会提示<code>Permission denied (publickey).</code></p>
<p>打开你的git bash，输入<code>hexo d</code>就会将本次有改动的代码全部提交，没有改动的不会：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_140441_769_5024.png" alt="img"></p>
<h2 id="4-9-保留CNAME、README-md等文件"><a href="#4-9-保留CNAME、README-md等文件" class="headerlink" title="4.9. 保留CNAME、README.md等文件"></a>4.9. 保留CNAME、README.md等文件</h2><p>提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的：</p>
<p><img src="http://image.liuxianan.com/201608/20160818_141037_580_8035.png" alt="img"></p>
<p>由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。</p>
<h2 id="4-10-常用hexo命令"><a href="#4-10-常用hexo命令" class="headerlink" title="4.10. 常用hexo命令"></a>4.10. 常用hexo命令</h2><p>常见命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br><span class="line">hexo help  # 查看帮助</span><br><span class="line">hexo version  #查看Hexo的版本</span><br></pre></td></tr></table></figure>

<p>缩写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure>

<p>组合命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s -g #生成并本地预览</span><br><span class="line">hexo d -g #生成并上传</span><br></pre></td></tr></table></figure>

<h2 id="4-11-config-yml"><a href="#4-11-config-yml" class="headerlink" title="4.11. _config.yml"></a>4.11. _config.yml</h2><p>这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。</p>
<p>需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。</p>
<h2 id="4-12-写博客"><a href="#4-12-写博客" class="headerlink" title="4.12. 写博客"></a>4.12. 写博客</h2><p>定位到我们的hexo根目录，执行命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &#x27;my-first-blog&#x27;</span><br></pre></td></tr></table></figure>

<p>hexo会帮我们在<code>_posts</code>下生成相关md文件：</p>
<p><img src="http://image.liuxianan.com/201608/20160823_183047_352_1475.png" alt="img"></p>
<p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p>
<p><img src="http://image.liuxianan.com/201608/20160823_183325_470_9306.png" alt="img"></p>
<p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p>
<p>一般完整格式如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: postName #文章页面上的显示名称，一般是中文</span><br><span class="line">date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改</span><br><span class="line">categories: 默认分类 #分类</span><br><span class="line">tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格</span><br><span class="line"><span class="section">description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">以下是正文</span><br></pre></td></tr></table></figure>

<p>那么<code>hexo new page &#39;postName&#39;</code>命令和<code>hexo new &#39;postName&#39;</code>有什么区别呢？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;my-second-blog&quot;</span><br></pre></td></tr></table></figure>

<p>生成如下：</p>
<p><img src="http://image.liuxianan.com/201608/20160823_184852_854_6502.png" alt="img"></p>
<p>最终部署时生成：<code>hexo\public\my-second-blog\index.html</code>，但是它不会作为文章出现在博文目录。</p>
<h3 id="4-12-1-写博客工具"><a href="#4-12-1-写博客工具" class="headerlink" title="4.12.1. 写博客工具"></a>4.12.1. 写博客工具</h3><p>那么用什么工具写博客呢？这个我还没去找，以前自己使用editor.md简单弄了个，大家有好用的hexo写博客工具可以推荐个。</p>
<h3 id="4-12-2-如何让博文列表不显示全部内容"><a href="#4-12-2-如何让博文列表不显示全部内容" class="headerlink" title="4.12.2. 如何让博文列表不显示全部内容"></a>4.12.2. 如何让博文列表不显示全部内容</h3><p>默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？</p>
<p>答案是在合适的位置加上<code>&lt;!--more--&gt;</code>即可，例如：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 前言</span></span><br><span class="line"></span><br><span class="line">使用github pages服务搭建博客的好处有：</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全是静态文件，访问速度快；</span><br><span class="line"><span class="bullet">2.</span> 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</span><br><span class="line"><span class="bullet">3.</span> 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</span><br><span class="line"></span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">4.</span> 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</span><br><span class="line"><span class="bullet">5.</span> 博客内容可以轻松打包、转移、发布到其它平台；</span><br><span class="line"><span class="bullet">6.</span> 等等；</span><br></pre></td></tr></table></figure>

<p>最终效果：</p>
<p><img src="http://image.liuxianan.com/201608/20160823_184633_653_1893.png" alt="img"></p>
<h1 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h1><p>可以访问我的git博客来查看效果： <a href="http://mygit.me/">http://mygit.me</a></p>
<p>不过呢，其实这个博客我只是拿来玩一玩的，没打算真的把它当博客，因为我已经有一个自己的博客了，哈哈！正因如此，本文仅限入门学习，关于hexo搭建个人博客的更高级玩法大家可以另找教程。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
